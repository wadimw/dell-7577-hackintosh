{
    External (_GPE.AL6F, MethodObj)    // 0 Arguments (from opcode)
    External (_GPE.HLVT, MethodObj)    // 0 Arguments (from opcode)
    External (_GPE.P0L6, MethodObj)    // 0 Arguments (from opcode)
    External (_GPE.P1L6, MethodObj)    // 0 Arguments (from opcode)
    External (_GPE.P2L6, MethodObj)    // 0 Arguments (from opcode)
    External (_PR_.BGIA, UnknownObj)    // (from opcode)
    External (_PR_.BGMA, UnknownObj)    // (from opcode)
    External (_PR_.BGMS, UnknownObj)    // (from opcode)
    External (_PR_.CFGD, UnknownObj)    // (from opcode)
    External (_PR_.CPPC, IntObj)    // (from opcode)
    External (_PR_.DSAE, UnknownObj)    // (from opcode)
    External (_PR_.DTS1, UnknownObj)    // (from opcode)
    External (_PR_.DTS2, UnknownObj)    // (from opcode)
    External (_PR_.DTS3, UnknownObj)    // (from opcode)
    External (_PR_.DTS4, UnknownObj)    // (from opcode)
    External (_PR_.DTSE, UnknownObj)    // (from opcode)
    External (_PR_.DTSF, UnknownObj)    // (from opcode)
    External (_PR_.DTSI, IntObj)    // (from opcode)
    External (_PR_.ELNG, UnknownObj)    // (from opcode)
    External (_PR_.EMNA, UnknownObj)    // (from opcode)
    External (_PR_.EPCS, UnknownObj)    // (from opcode)
    External (_PR_.HWPI, IntObj)    // (from opcode)
    External (_PR_.PDTS, UnknownObj)    // (from opcode)
    External (_PR_.PKGA, UnknownObj)    // (from opcode)
    External (_PR_.POWS, UnknownObj)    // (from opcode)
    External (_PR_.PR00, DeviceObj)    // (from opcode)
    External (_PR_.PR00.LPSS, PkgObj)    // (from opcode)
    External (_PR_.PR00.TPSS, PkgObj)    // (from opcode)
    External (_PR_.TRPD, UnknownObj)    // (from opcode)
    External (_PR_.TRPF, UnknownObj)    // (from opcode)
    External (_SB_.AMW0.BCLR, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.AMW0.BDWR, MethodObj)    // 3 Arguments (from opcode)
    External (_SB_.IETM, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.ALSI, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.CBLV, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.CDCK, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.CLID, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD01, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD02, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD03, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD04, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD05, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD06, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD07, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD08, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.DD1F, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.ECGB, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.GDCK, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.GLID, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.GSCI, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.GSSE, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.IUEH, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.LCD_, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.LCD_.BBRD, MethodObj)    // 2 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.LCD_.OIDE, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.GFX0.STAT, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.GFX0.TCHE, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.HDAS.PPMS, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.HDAS.PS0X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.HDAS.PS3X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.HIDW, MethodObj)    // 4 Arguments (from opcode)
    External (_SB_.PCI0.HIWC, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.ISP0, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.DPRT, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.DSRQ, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.DSSQ, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.ECS2, MethodObj)    // 2 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.ECS3, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.ECS6, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.NEVT, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.SEN1, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.SEN2, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.SEN3, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.VGBI, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.ECDV.VGBI.VBDS, IntObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.H_EC.CHRG, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.H_EC.XDAT, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.PAUD.PUAM, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.PEG0.HPME, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.PEG0.NVID, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.PEG0.PEGP.LCD_, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.PEG0.PEGP.MLTF, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.PEG0.PEGP.NHDA, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.PEG0.PEGP.PLMT, IntObj)    // (from opcode)
    External (_SB_.PCI0.PEG1.HPME, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.PEG2.HPME, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.RP01.PXSX.WGST, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.RP05.PWRG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP05.PXSX.WGST, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.RP05.RSTG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP05.SCLK, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP09.PWRG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP09.PXSX.WGST, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.RP09.RSTG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP09.SCLK, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP13.PWRG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP13.RSTG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP13.SCLK, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP17.PWRG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP17.RSTG, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.RP17.SCLK, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.SAT0.SDSM, MethodObj)    // 4 Arguments (from opcode)
    External (_SB_.PCI0.SAT0.TFGF, UnknownObj)    // (from opcode)
    External (_SB_.PCI0.TMEM, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.XHC_.DUAM, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.XHC_.PS0X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.XHC_.PS3X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.XHC_.RHUB.INIR, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.XHC_.RHUB.PS0X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.XHC_.RHUB.PS2X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.PCI0.XHC_.RHUB.PS3X, MethodObj)    // 0 Arguments (from opcode)
    External (_SB_.TPM_.PTS_, MethodObj)    // 1 Arguments (from opcode)
    External (_SB_.TPWR, DeviceObj)    // (from opcode)
    External (_TZ_.ETMD, IntObj)    // (from opcode)
    External (_TZ_.TZ00, DeviceObj)    // (from opcode)
    External (_TZ_.TZ01, DeviceObj)    // (from opcode)
    External (ACOS, DeviceObj)    // (from opcode)
    External (ACSE, DeviceObj)    // (from opcode)
    External (ALSE, UnknownObj)    // (from opcode)
    External (APRE, UnknownObj)    // (from opcode)    // Conflicts with a later declaration
    External (BNUM, UnknownObj)    // (from opcode)    // Conflicts with a later declaration
    External (BRTL, UnknownObj)    // (from opcode)
    External (CRBI, UnknownObj)    // (from opcode)
    External (DLPN, UnknownObj)    // (from opcode)    // Conflicts with a later declaration
    External (FFTB, MethodObj)    // 1 Arguments (from opcode)
    External (GSMI, UnknownObj)    // (from opcode)
    External (IDMN, UnknownObj)    // (from opcode)    // Conflicts with a later declaration
    External (IDPC, UnknownObj)    // (from opcode)    // Conflicts with a later declaration
    External (IGDS, UnknownObj)    // (from opcode)
    External (IPFI, UnknownObj)    // (from opcode)    // Conflicts with a later declaration
    External (LHIH, UnknownObj)    // (from opcode)
    External (LIDS, UnknownObj)    // (from opcode)
    External (LLOW, UnknownObj)    // (from opcode)
    External (M32B, UnknownObj)    // (from opcode)
    External (M32L, UnknownObj)    // (from opcode)
    External (M64B, UnknownObj)    // (from opcode)
    External (M64L, UnknownObj)    // (from opcode)
    External (MDBG, MethodObj)    // 1 Arguments (from opcode)
    External (MMRP, MethodObj)    // 1 Arguments (from opcode)
    External (MMTB, MethodObj)    // 1 Arguments (from opcode)
    External (NHDA, UnknownObj)    // (from opcode)
    External (P0WK, UnknownObj)    // (from opcode)
    External (P1GP, UnknownObj)    // (from opcode)
    External (P1WK, UnknownObj)    // (from opcode)
    External (P2GP, UnknownObj)    // (from opcode)
    External (P2WK, UnknownObj)    // (from opcode)
    External (PC00, IntObj)    // (from opcode)
    External (PC01, UnknownObj)    // (from opcode)
    External (PC02, UnknownObj)    // (from opcode)
    External (PC03, UnknownObj)    // (from opcode)
    External (PC04, UnknownObj)    // (from opcode)
    External (PC05, UnknownObj)    // (from opcode)
    External (PC06, UnknownObj)    // (from opcode)
    External (PC07, UnknownObj)    // (from opcode)
    External (PC08, UnknownObj)    // (from opcode)
    External (PC09, UnknownObj)    // (from opcode)
    External (PC10, UnknownObj)    // (from opcode)
    External (PC11, UnknownObj)    // (from opcode)
    External (PC12, UnknownObj)    // (from opcode)
    External (PC13, UnknownObj)    // (from opcode)
    External (PC14, UnknownObj)    // (from opcode)
    External (PC15, UnknownObj)    // (from opcode)
    External (RP05.PWRG, UnknownObj)    // (from opcode)
    External (RP05.RSTG, UnknownObj)    // (from opcode)
    External (RP05.SCLK, UnknownObj)    // (from opcode)
    External (RP09.PWRG, UnknownObj)    // (from opcode)
    External (RP09.RSTG, UnknownObj)    // (from opcode)
    External (RP09.SCLK, UnknownObj)    // (from opcode)
    External (RP13.PWRG, UnknownObj)    // (from opcode)
    External (RP13.RSTG, UnknownObj)    // (from opcode)
    External (RP13.SCLK, UnknownObj)    // (from opcode)
    External (RP17.PWRG, UnknownObj)    // (from opcode)
    External (RP17.RSTG, UnknownObj)    // (from opcode)
    External (RP17.SCLK, UnknownObj)    // (from opcode)
    External (SAT0.NVM1.VLPM, UnknownObj)    // (from opcode)
    External (SAT0.NVM2.VLPM, UnknownObj)    // (from opcode)
    External (SAT0.NVM3.VLPM, UnknownObj)    // (from opcode)
    External (SGGP, UnknownObj)    // (from opcode)
    External (SGMD, UnknownObj)    // (from opcode)
    External (TBTD, MethodObj)    // 1 Arguments (from opcode)
    External (TBTF, MethodObj)    // 1 Arguments (from opcode)
    External (UP1D, UnknownObj)    // (from opcode)


  0024: A0 46 A7 00 15 4C 48 49 48 00 00 15 4C 4C 4F 57  // .F...LHIH...LLOW
  0034: 00 00 15 49 47 44 53 00 00 15 4C 49 44 53 00 00  // ...IGDS...LIDS..
  0044: 15 42 52 54 4C 00 00 15 41 4C 53 45 00 00 15 47  // .BRTL...ALSE...G
  0054: 53 4D 49 00 00 15 5C 2F 04 5F 53 42 5F 50 43 49  // SMI...\/._SB_PCI
  0064: 30 47 46 58 30 41 4C 53 49 00 00 15 5C 2F 04 5F  // 0GFX0ALSI...\/._
  0074: 53 42 5F 50 43 49 30 47 46 58 30 43 44 43 4B 00  // SB_PCI0GFX0CDCK.
  0084: 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // ..\/._SB_PCI0GFX
  0094: 30 43 42 4C 56 00 00 15 5C 2F 04 5F 53 42 5F 50  // 0CBLV...\/._SB_P
  00A4: 43 49 30 47 46 58 30 47 53 53 45 00 00 15 5C 2F  // CI0GFX0GSSE...\/
  00B4: 03 5F 53 42 5F 50 43 49 30 49 53 50 30 06 00 15  // ._SB_PCI0ISP0...
  00C4: 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30 44  // \/._SB_PCI0GFX0D
  00D4: 44 30 31 06 00 15 5C 2F 04 5F 53 42 5F 50 43 49  // D01...\/._SB_PCI
  00E4: 30 47 46 58 30 44 44 30 32 06 00 15 5C 2F 04 5F  // 0GFX0DD02...\/._
  00F4: 53 42 5F 50 43 49 30 47 46 58 30 44 44 30 33 06  // SB_PCI0GFX0DD03.
  0104: 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // ..\/._SB_PCI0GFX
  0114: 30 44 44 30 34 06 00 15 5C 2F 04 5F 53 42 5F 50  // 0DD04...\/._SB_P
  0124: 43 49 30 47 46 58 30 44 44 30 35 06 00 15 5C 2F  // CI0GFX0DD05...\/
  0134: 04 5F 53 42 5F 50 43 49 30 47 46 58 30 44 44 30  // ._SB_PCI0GFX0DD0
  0144: 36 06 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30 47  // 6...\/._SB_PCI0G
  0154: 46 58 30 44 44 30 37 06 00 15 5C 2F 04 5F 53 42  // FX0DD07...\/._SB
  0164: 5F 50 43 49 30 47 46 58 30 44 44 30 38 06 00 15  // _PCI0GFX0DD08...
  0174: 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30 44  // \/._SB_PCI0GFX0D
  0184: 44 31 46 06 00 15 5C 2F 04 5F 53 42 5F 50 43 49  // D1F...\/._SB_PCI
  0194: 30 47 46 58 30 47 44 43 4B 08 01 15 5C 2F 04 5F  // 0GFX0GDCK...\/._
  01A4: 53 42 5F 50 43 49 30 47 46 58 30 47 4C 49 44 08  // SB_PCI0GFX0GLID.
  01B4: 01 15 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58  // ..\/._SB_PCI0GFX
  01C4: 30 47 53 43 49 08 00 15 5C 2E 5F 50 52 5F 50 52  // 0GSCI...\._PR_PR
  01D4: 30 30 06 00 15 5C 2F 03 5F 50 52 5F 50 52 30 30  // 00...\/._PR_PR00
  01E4: 4C 50 53 53 04 00 15 5C 2F 03 5F 50 52 5F 50 52  // LPSS...\/._PR_PR
  01F4: 30 30 54 50 53 53 04 00 15 5C 2E 5F 50 52 5F 43  // 00TPSS...\._PR_C
  0204: 50 50 43 01 00 15 5C 2E 5F 54 5A 5F 54 5A 30 30  // PPC...\._TZ_TZ00
  0214: 06 00 15 5C 2E 5F 54 5A 5F 54 5A 30 31 06 00 15  // ...\._TZ_TZ01...
  0224: 5C 2E 5F 54 5A 5F 45 54 4D 44 01 00 15 5C 2F 04  // \._TZ_ETMD...\/.
  0234: 5F 53 42 5F 50 43 49 30 47 46 58 30 43 4C 49 44  // _SB_PCI0GFX0CLID
  0244: 00 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // ...\/._SB_PCI0GF
  0254: 58 30 49 55 45 48 08 01 15 5C 2E 5F 53 42 5F 49  // X0IUEH...\._SB_I
  0264: 45 54 4D 06 00 15 4D 36 34 42 00 00 15 4D 36 34  // ETM...M64B...M64
  0274: 4C 00 00 15 4D 33 32 42 00 00 15 4D 33 32 4C 00  // L...M32B...M32L.
  0284: 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // ..\/._SB_PCI0XHC
  0294: 5F 50 53 30 58 08 00 15 5C 2F 04 5F 53 42 5F 50  // _PS0X...\/._SB_P
  02A4: 43 49 30 58 48 43 5F 50 53 33 58 08 00 15 5C 2F  // CI0XHC_PS3X...\/
  02B4: 05 5F 53 42 5F 50 43 49 30 58 48 43 5F 52 48 55  // ._SB_PCI0XHC_RHU
  02C4: 42 50 53 30 58 08 00 15 5C 2F 05 5F 53 42 5F 50  // BPS0X...\/._SB_P
  02D4: 43 49 30 58 48 43 5F 52 48 55 42 50 53 32 58 08  // CI0XHC_RHUBPS2X.
  02E4: 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // ..\/._SB_PCI0XHC
  02F4: 5F 52 48 55 42 50 53 33 58 08 00 15 5C 2F 05 5F  // _RHUBPS3X...\/._
  0304: 53 42 5F 50 43 49 30 58 48 43 5F 52 48 55 42 49  // SB_PCI0XHC_RHUBI
  0314: 4E 49 52 08 00 15 5C 2F 05 5F 53 42 5F 50 43 49  // NIR...\/._SB_PCI
  0324: 30 4C 50 43 42 48 5F 45 43 58 44 41 54 08 00 15  // 0LPCBH_ECXDAT...
  0334: 5C 2F 04 5F 53 42 5F 50 43 49 30 48 44 41 53 50  // \/._SB_PCI0HDASP
  0344: 53 30 58 08 00 15 5C 2F 04 5F 53 42 5F 50 43 49  // S0X...\/._SB_PCI
  0354: 30 48 44 41 53 50 53 33 58 08 00 15 5C 2F 04 5F  // 0HDASPS3X...\/._
  0364: 53 42 5F 50 43 49 30 48 44 41 53 50 50 4D 53 08  // SB_PCI0HDASPPMS.
  0374: 01 15 5C 2F 03 5F 53 42 5F 50 43 49 30 48 49 44  // ..\/._SB_PCI0HID
  0384: 57 08 04 15 5C 2F 03 5F 53 42 5F 50 43 49 30 48  // W...\/._SB_PCI0H
  0394: 49 57 43 08 01 15 2F 03 53 41 54 30 4E 56 4D 31  // IWC.../.SAT0NVM1
  03A4: 56 4C 50 4D 00 00 15 2F 03 53 41 54 30 4E 56 4D  // VLPM.../.SAT0NVM
  03B4: 32 56 4C 50 4D 00 00 15 2F 03 53 41 54 30 4E 56  // 2VLPM.../.SAT0NV
  03C4: 4D 33 56 4C 50 4D 00 00 15 5C 2F 04 5F 53 42 5F  // M3VLPM...\/._SB_
  03D4: 50 43 49 30 53 41 54 30 53 44 53 4D 08 04 15 2E  // PCI0SAT0SDSM....
  03E4: 52 50 30 35 50 57 52 47 00 00 15 2E 52 50 30 35  // RP05PWRG....RP05
  03F4: 52 53 54 47 00 00 15 2E 52 50 30 35 53 43 4C 4B  // RSTG....RP05SCLK
  0404: 00 00 15 2E 52 50 30 39 50 57 52 47 00 00 15 2E  // ....RP09PWRG....
  0414: 52 50 30 39 52 53 54 47 00 00 15 2E 52 50 30 39  // RP09RSTG....RP09
  0424: 53 43 4C 4B 00 00 15 2E 52 50 31 33 50 57 52 47  // SCLK....RP13PWRG
  0434: 00 00 15 2E 52 50 31 33 52 53 54 47 00 00 15 2E  // ....RP13RSTG....
  0444: 52 50 31 33 53 43 4C 4B 00 00 15 2E 52 50 31 37  // RP13SCLK....RP17
  0454: 50 57 52 47 00 00 15 2E 52 50 31 37 52 53 54 47  // PWRG....RP17RSTG
  0464: 00 00 15 2E 52 50 31 37 53 43 4C 4B 00 00 15 49  // ....RP17SCLK...I
  0474: 50 46 49 00 00 15 50 43 30 30 01 00 15 50 43 30  // PFI...PC00...PC0
  0484: 31 00 00 15 50 43 30 32 00 00 15 50 43 30 33 00  // 1...PC02...PC03.
  0494: 00 15 50 43 30 34 00 00 15 50 43 30 35 00 00 15  // ..PC04...PC05...
  04A4: 50 43 30 36 00 00 15 50 43 30 37 00 00 15 50 43  // PC06...PC07...PC
  04B4: 30 38 00 00 15 50 43 30 39 00 00 15 50 43 31 30  // 08...PC09...PC10
  04C4: 00 00 15 50 43 31 31 00 00 15 50 43 31 32 00 00  // ...PC11...PC12..
  04D4: 15 50 43 31 33 00 00 15 50 43 31 34 00 00 15 50  // .PC13...PC14...P
  04E4: 43 31 35 00 00 15 5C 2E 5F 50 52 5F 43 46 47 44  // C15...\._PR_CFGD
  04F4: 00 00 15 53 47 4D 44 00 00 15 49 50 46 49 00 00  // ...SGMD...IPFI..
  0504: 15 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
  0514: 4E 56 49 44 00 00 15 5C 2F 05 5F 53 42 5F 50 43  // NVID...\/._SB_PC
  0524: 49 30 50 45 47 30 50 45 47 50 4E 48 44 41 00 00  // I0PEG0PEGPNHDA..
  0534: 15 42 4E 55 4D 00 00 15 5C 2E 5F 50 52 5F 44 54  // .BNUM...\._PR_DT
  0544: 53 46 00 00 15 5C 2E 5F 50 52 5F 44 54 53 45 00  // SF...\._PR_DTSE.
  0554: 00 15 5C 2E 5F 50 52 5F 44 54 53 31 00 00 15 5C  // ..\._PR_DTS1...\
  0564: 2E 5F 50 52 5F 44 54 53 32 00 00 15 5C 2E 5F 50  // ._PR_DTS2...\._P
  0574: 52 5F 50 44 54 53 00 00 15 5C 2E 5F 50 52 5F 50  // R_PDTS...\._PR_P
  0584: 4B 47 41 00 00 15 5C 2E 5F 50 52 5F 44 54 53 33  // KGA...\._PR_DTS3
  0594: 00 00 15 5C 2E 5F 50 52 5F 44 54 53 34 00 00 15  // ...\._PR_DTS4...
  05A4: 5C 2E 5F 50 52 5F 54 52 50 44 00 00 15 5C 2E 5F  // \._PR_TRPD...\._
  05B4: 50 52 5F 54 52 50 46 00 00 15 5C 2E 5F 50 52 5F  // PR_TRPF...\._PR_
  05C4: 44 53 41 45 00 00 15 5C 2E 5F 50 52 5F 42 47 4D  // DSAE...\._PR_BGM
  05D4: 41 00 00 15 5C 2E 5F 50 52 5F 42 47 4D 53 00 00  // A...\._PR_BGMS..
  05E4: 15 5C 2E 5F 50 52 5F 42 47 49 41 00 00 15 5C 2F  // .\._PR_BGIA...\/
  05F4: 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 48 5F 45  // ._SB_PCI0LPCBH_E
  0604: 43 43 48 52 47 06 00 15 5C 2E 5F 50 52 5F 45 50  // CCHRG...\._PR_EP
  0614: 43 53 00 00 15 5C 2E 5F 50 52 5F 45 4D 4E 41 00  // CS...\._PR_EMNA.
  0624: 00 15 5C 2E 5F 50 52 5F 45 4C 4E 47 00 00 15 5C  // ..\._PR_ELNG...\
  0634: 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30 54 43  // /._SB_PCI0GFX0TC
  0644: 48 45 00 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30  // HE...\/._SB_PCI0
  0654: 47 46 58 30 53 54 41 54 00 00 15 5C 2F 03 5F 53  // GFX0STAT...\/._S
  0664: 42 5F 54 50 4D 5F 50 54 53 5F 08 01 15 5C 2F 04  // B_TPM_PTS_...\/.
  0674: 5F 53 42 5F 50 43 49 30 50 41 55 44 50 55 41 4D  // _SB_PCI0PAUDPUAM
  0684: 08 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30 58 48  // ...\/._SB_PCI0XH
  0694: 43 5F 44 55 41 4D 08 00 15 5C 2F 04 5F 53 42 5F  // C_DUAM...\/._SB_
  06A4: 50 43 49 30 47 46 58 30 49 55 45 48 08 01 15 5C  // PCI0GFX0IUEH...\
  06B4: 4D 44 42 47 08 01 15 5C 2E 5F 50 52 5F 50 4F 57  // MDBG...\._PR_POW
  06C4: 53 00 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30 50  // S...\/._SB_PCI0P
  06D4: 45 47 30 50 45 47 50 4D 4C 54 46 00 00 15 4E 48  // EG0PEGPMLTF...NH
  06E4: 44 41 00 00 15 5C 2F 04 5F 53 42 5F 50 43 49 30  // DA...\/._SB_PCI0
  06F4: 53 41 54 30 54 46 47 46 00 00 15 5C 54 42 54 44  // SAT0TFGF...\TBTD
  0704: 08 01 15 5C 54 42 54 46 08 01 15 5C 4D 4D 52 50  // ...\TBTF...\MMRP
  0714: 08 01 15 5C 4D 4D 54 42 08 01 15 5C 46 46 54 42  // ...\MMTB...\FFTB
  0724: 08 01 15 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45  // ...\/._SB_PCI0PE
  0734: 47 30 48 50 4D 45 08 00 15 5C 2F 04 5F 53 42 5F  // G0HPME...\/._SB_
  0744: 50 43 49 30 50 45 47 31 48 50 4D 45 08 00 15 5C  // PCI0PEG1HPME...\
  0754: 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 32 48 50  // /._SB_PCI0PEG2HP
  0764: 4D 45 08 00 15 5C 2E 5F 47 50 45 41 4C 36 46 08  // ME...\._GPEAL6F.
  0774: 00 15 5C 2E 5F 47 50 45 50 30 4C 36 08 00 15 5C  // ..\._GPEP0L6...\
  0784: 2E 5F 47 50 45 50 31 4C 36 08 00 15 5C 2E 5F 47  // ._GPEP1L6...\._G
  0794: 50 45 50 32 4C 36 08 00 15 53 47 47 50 00 00 15  // PEP2L6...SGGP...
  07A4: 50 31 47 50 00 00 15 50 32 47 50 00 00 15 50 30  // P1GP...P2GP...P0
  07B4: 57 4B 00 00 15 50 31 57 4B 00 00 15 50 32 57 4B  // WK...P1WK...P2WK
  07C4: 00 00 15 5C 2E 5F 50 52 5F 48 57 50 49 01 00 15  // ...\._PR_HWPI...
  07D4: 5C 2E 5F 50 52 5F 44 54 53 49 01 00 15 5C 2E 5F  // \._PR_DTSI...\._
  07E4: 47 50 45 48 4C 56 54 08 00 15 5C 2F 05 5F 53 42  // GPEHLVT...\/._SB
  07F4: 5F 50 43 49 30 52 50 30 31 50 58 53 58 57 47 53  // _PCI0RP01PXSXWGS
  0804: 54 08 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30 52  // T...\/._SB_PCI0R
  0814: 50 30 35 50 58 53 58 57 47 53 54 08 00 15 5C 2F  // P05PXSXWGST...\/
  0824: 05 5F 53 42 5F 50 43 49 30 52 50 30 39 50 58 53  // ._SB_PCI0RP09PXS
  0834: 58 57 47 53 54 08 00 15 43 52 42 49 00 00 15 5C  // XWGST...CRBI...\
  0844: 2F 03 5F 53 42 5F 41 4D 57 30 42 43 4C 52 08 01  // /._SB_AMW0BCLR..
  0854: 15 5C 2F 03 5F 53 42 5F 41 4D 57 30 42 44 57 52  // .\/._SB_AMW0BDWR
  0864: 08 03 15 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // ...\/._SB_PCI0GF
  0874: 58 30 45 43 47 42 08 00 15 5C 2F 05 5F 53 42 5F  // X0ECGB...\/._SB_
  0884: 50 43 49 30 47 46 58 30 4C 43 44 5F 4F 49 44 45  // PCI0GFX0LCD_OIDE
  0894: 08 00 15 42 52 54 4C 05 00 15 5C 2F 05 5F 53 42  // ...BRTL...\/._SB
  08A4: 5F 50 43 49 30 47 46 58 30 4C 43 44 5F 42 42 52  // _PCI0GFX0LCD_BBR
  08B4: 44 08 02 15 5C 2F 05 5F 53 42 5F 50 43 49 30 50  // D...\/._SB_PCI0P
  08C4: 45 47 30 50 45 47 50 4C 43 44 5F 06 00 15 5C 2F  // EG0PEGPLCD_...\/
  08D4: 05 5F 53 42 5F 50 43 49 30 50 45 47 30 50 45 47  // ._SB_PCI0PEG0PEG
  08E4: 50 50 4C 4D 54 01 00 15 5C 2F 05 5F 53 42 5F 50  // PPLMT...\/._SB_P
  08F4: 43 49 30 4C 50 43 42 45 43 44 56 45 43 53 33 08  // CI0LPCBECDVECS3.
  0904: 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
  0914: 42 45 43 44 56 45 43 53 32 08 02 15 41 43 4F 53  // BECDVECS2...ACOS
  0924: 06 00 15 41 43 53 45 06 00 15 5C 2F 05 5F 53 42  // ...ACSE...\/._SB
  0934: 5F 50 43 49 30 4C 50 43 42 45 43 44 56 45 43 53  // _PCI0LPCBECDVECS
  0944: 36 08 01 15 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // 6...\/._SB_PCI0L
  0954: 50 43 42 45 43 44 56 4E 45 56 54 08 00 15 5C 2F  // PCBECDVNEVT...\/
  0964: 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 44  // ._SB_PCI0LPCBECD
  0974: 56 56 47 42 49 06 00 15 5C 2F 06 5F 53 42 5F 50  // VVGBI...\/._SB_P
  0984: 43 49 30 4C 50 43 42 45 43 44 56 56 47 42 49 56  // CI0LPCBECDVVGBIV
  0994: 42 44 53 01 00 15 5C 2F 04 5F 53 42 5F 50 43 49  // BDS...\/._SB_PCI
  09A4: 30 47 46 58 30 4C 43 44 5F 06 00 15 41 50 52 45  // 0GFX0LCD_...APRE
  09B4: 00 00 15 55 50 31 44 00 00 15 5C 2E 5F 53 42 5F  // ...UP1D...\._SB_
  09C4: 54 50 57 52 06 00 15 49 50 46 49 00 00 15 49 50  // TPWR...IPFI...IP
  09D4: 46 49 00 00 15 49 44 4D 4E 00 00 15 49 44 50 43  // FI...IDMN...IDPC
  09E4: 00 00 15 44 4C 50 4E 00 00 15 5C 2F 05 5F 53 42  // ...DLPN...\/._SB
  09F4: 5F 50 43 49 30 4C 50 43 42 45 43 44 56 44 50 52  // _PCI0LPCBECDVDPR
  0A04: 54 08 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // T...\/._SB_PCI0L
  0A14: 50 43 42 45 43 44 56 44 53 52 51 08 00 15 5C 2F  // PCBECDVDSRQ...\/
  0A24: 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 44  // ._SB_PCI0LPCBECD
  0A34: 56 44 53 53 51 08 01 15 5C 2F 03 5F 53 42 5F 50  // VDSSQ...\/._SB_P
  0A44: 43 49 30 54 4D 45 4D 06 00 15 5C 2F 05 5F 53 42  // CI0TMEM...\/._SB
  0A54: 5F 50 43 49 30 4C 50 43 42 45 43 44 56 53 45 4E  // _PCI0LPCBECDVSEN
  0A64: 31 06 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // 1...\/._SB_PCI0L
  0A74: 50 43 42 45 43 44 56 53 45 4E 32 06 00 15 5C 2F  // PCBECDVSEN2...\/
  0A84: 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 44  // ._SB_PCI0LPCBECD
  0A94: 56 53 45 4E 33 06 00                             // VSEN3..

    Name (PEBS, 0xE0000000)

  0A9B: 08 50 45 42 53 0C 00 00 00 E0                    // .PEBS.....

    Name (PELN, 0x10000000)

  0AA5: 08 50 45 4C 4E 0C 00 00 00 10                    // .PELN.....

    Name (MCHB, 0xFED10000)

  0AAF: 08 4D 43 48 42 0C 00 00 D1 FE                    // .MCHB.....

    Name (MCHL, 0x8000)

  0AB9: 08 4D 43 48 4C 0B 00 80                          // .MCHL...

    Name (EGPB, 0xFED19000)

  0AC1: 08 45 47 50 42 0C 00 90 D1 FE                    // .EGPB.....

    Name (EGPL, 0x1000)

  0ACB: 08 45 47 50 4C 0B 00 10                          // .EGPL...

    Name (DMIB, 0xFED18000)

  0AD3: 08 44 4D 49 42 0C 00 80 D1 FE                    // .DMIB.....

    Name (DMIL, 0x1000)

  0ADD: 08 44 4D 49 4C 0B 00 10                          // .DMIL...

    Name (VTBS, 0xFED90000)

  0AE5: 08 56 54 42 53 0C 00 00 D9 FE                    // .VTBS.....

    Name (VTLN, 0x4000)

  0AEF: 08 56 54 4C 4E 0B 00 40                          // .VTLN..@

    Name (CPVD, Zero)

  0AF7: 08 43 50 56 44 00                                // .CPVD.

    Name (SMIP, 0xB2)

  0AFD: 08 53 4D 49 50 0A B2                             // .SMIP..

    Name (PMBA, 0x1800)

  0B04: 08 50 4D 42 41 0B 00 18                          // .PMBA...

    Name (SMCR, 0x1830)

  0B0C: 08 53 4D 43 52 0B 30 18                          // .SMCR.0.

    Name (TCBR, 0xFED08000)

  0B14: 08 54 43 42 52 0C 00 80 D0 FE                    // .TCBR.....

    Name (TCLT, 0x1000)

  0B1E: 08 54 43 4C 54 0B 00 10                          // .TCLT...

    Name (SMBL, 0x20)

  0B26: 08 53 4D 42 4C 0A 20                             // .SMBL. 

    Name (APCB, 0xFEC00000)

  0B2D: 08 41 50 43 42 0C 00 00 C0 FE                    // .APCB.....

    Name (APCL, 0x1000)

  0B37: 08 41 50 43 4C 0B 00 10                          // .APCL...

    Name (HPTC, 0x60)

  0B3F: 08 48 50 54 43 0A 60                             // .HPTC.`

    Name (GPBA, 0x1C00)

  0B46: 08 47 50 42 41 0B 00 1C                          // .GPBA...

    Name (GPLN, 0x0400)

  0B4E: 08 47 50 4C 4E 0B 00 04                          // .GPLN...

    Name (FMBL, One)

  0B56: 08 46 4D 42 4C 01                                // .FMBL.

    Name (FDTP, 0x02)

  0B5C: 08 46 44 54 50 0A 02                             // .FDTP..

    Name (FUPS, 0x04)

  0B63: 08 46 55 50 53 0A 04                             // .FUPS..

    Name (FUWS, 0x03)

  0B6A: 08 46 55 57 53 0A 03                             // .FUWS..

    Name (FEMD, 0x04)

  0B71: 08 46 45 4D 44 0A 04                             // .FEMD..

    Name (PFTU, 0xB2)

  0B78: 08 50 46 54 55 0A B2                             // .PFTU..

    Name (TBUS, 0x02)

  0B7F: 08 54 42 55 53 0A 02                             // .TBUS..

    Name (TBSW, 0xBC)

  0B86: 08 54 42 53 57 0A BC                             // .TBSW..

    Name (TBEF, 0x15)

  0B8D: 08 54 42 45 46 0A 15                             // .TBEF..

    Name (TBDB, 0x16)

  0B94: 08 54 42 44 42 0A 16                             // .TBDB..

    Name (TBDM, 0x17)

  0B9B: 08 54 42 44 4D 0A 17                             // .TBDM..

    Name (TEF1, 0x18)

  0BA2: 08 54 45 46 31 0A 18                             // .TEF1..

    Name (TDB1, 0x19)

  0BA9: 08 54 44 42 31 0A 19                             // .TDB1..

    Name (TEC0, 0x1A)

  0BB0: 08 54 45 43 30 0A 1A                             // .TEC0..

    Name (TEC1, 0x1B)

  0BB7: 08 54 45 43 31 0A 1B                             // .TEC1..

    Name (ASSB, Zero)

  0BBE: 08 41 53 53 42 00                                // .ASSB.

    Name (AOTB, Zero)

  0BC4: 08 41 4F 54 42 00                                // .AOTB.

    Name (AAXB, Zero)

  0BCA: 08 41 41 58 42 00                                // .AAXB.

    Name (PEHP, Zero)

  0BD0: 08 50 45 48 50 00                                // .PEHP.

    Name (SHPC, One)

  0BD6: 08 53 48 50 43 01                                // .SHPC.

    Name (PEPM, Zero)

  0BDC: 08 50 45 50 4D 00                                // .PEPM.

    Name (PEER, Zero)

  0BE2: 08 50 45 45 52 00                                // .PEER.

    Name (PECS, Zero)

  0BE8: 08 50 45 43 53 00                                // .PECS.

    Name (ITKE, Zero)

  0BEE: 08 49 54 4B 45 00                                // .ITKE.

    Name (MBEC, 0xFFFF)

  0BF4: 08 4D 42 45 43 0B FF FF                          // .MBEC...

    Name (SRSI, 0xB2)

  0BFC: 08 53 52 53 49 0A B2                             // .SRSI..

    Name (CSMI, 0x61)

  0C03: 08 43 53 4D 49 0A 61                             // .CSMI.a

    Name (SMIA, 0xB2)

  0C0A: 08 53 4D 49 41 0A B2                             // .SMIA..

    Name (SMIB, 0xB3)

  0C11: 08 53 4D 49 42 0A B3                             // .SMIB..

    Name (OFST, 0x35)

  0C18: 08 4F 46 53 54 0A 35                             // .OFST.5

    Name (TRST, 0x02)

  0C1F: 08 54 52 53 54 0A 02                             // .TRST..

    Name (TCMF, Zero)

  0C26: 08 54 43 4D 46 00                                // .TCMF.

    Name (TMF1, Zero)

  0C2C: 08 54 4D 46 31 00                                // .TMF1.

    Name (TMF2, Zero)

  0C32: 08 54 4D 46 32 00                                // .TMF2.

    Name (TMF3, Zero)

  0C38: 08 54 4D 46 33 00                                // .TMF3.

    Name (TTPF, One)

  0C3E: 08 54 54 50 46 01                                // .TTPF.

    Name (DTPT, Zero)

  0C44: 08 44 54 50 54 00                                // .DTPT.

    Name (TTDP, Zero)

  0C4A: 08 54 54 44 50 00                                // .TTDP.

    Name (TPMB, 0xFFFFFFFF)

  0C50: 08 54 50 4D 42 0C FF FF FF FF                    // .TPMB.....

    Name (TPMC, 0xFFFFFFFF)

  0C5A: 08 54 50 4D 43 0C FF FF FF FF                    // .TPMC.....

    Name (TPMM, 0xFED40000)

  0C64: 08 54 50 4D 4D 0C 00 00 D4 FE                    // .TPMM.....

    Name (FTPM, 0xFFFFFFFF)

  0C6E: 08 46 54 50 4D 0C FF FF FF FF                    // .FTPM.....

    Name (PPIM, 0xFFFF0000)

  0C78: 08 50 50 49 4D 0C 00 00 FF FF                    // .PPIM.....

    Name (PPIL, 0xF0)

  0C82: 08 50 50 49 4C 0A F0                             // .PPIL..

    Name (AMDT, Zero)

  0C89: 08 41 4D 44 54 00                                // .AMDT.

    Name (TPMF, Zero)

  0C8F: 08 54 50 4D 46 00                                // .TPMF.

    Name (PPIV, Zero)

  0C95: 08 50 50 49 56 00                                // .PPIV.

    Name (SP1O, 0x094E)

  0C9B: 08 53 50 31 4F 0B 4E 09                          // .SP1O.N.

    Name (IOPB, 0x094E)

  0CA3: 08 49 4F 50 42 0B 4E 09                          // .IOPB.N.

    Name (DSSP, Zero)

  0CAB: 08 44 53 53 50 00                                // .DSSP.

    Name (FHPP, Zero)

  0CB1: 08 46 48 50 50 00                                // .FHPP.

    Name (SS1, One)

  0CB7: 08 53 53 31 5F 01                                // .SS1_.

    Name (SS2, Zero)

  0CBD: 08 53 53 32 5F 00                                // .SS2_.

    Name (SS3, One)

  0CC3: 08 53 53 33 5F 01                                // .SS3_.

    Name (SS4, One)

  0CC9: 08 53 53 34 5F 01                                // .SS4_.

    Name (IOST, 0xFFFF)

  0CCF: 08 49 4F 53 54 0B FF FF                          // .IOST...

    Name (TOPM, 0x00000000)

  0CD7: 08 54 4F 50 4D 0C 00 00 00 00                    // .TOPM.....

    Name (ROMS, 0xFFE00000)

  0CE1: 08 52 4F 4D 53 0C 00 00 E0 FF                    // .ROMS.....

    Name (VGAF, One)

  0CEB: 08 56 47 41 46 01                                // .VGAF.

    OperationRegion (GNVS, SystemMemory, 0x68EFE000, 0x0745)

  0CF1: 5B 80 47 4E 56 53 00 0C 00 E0 EF 68 0B 45 07     // [.GNVS.....h.E.

    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x1E), 
        BNUM,   8, 
        Offset (0x20), 
        Offset (0x21), 
        Offset (0x22), 
        Offset (0x23), 
        Offset (0x24), 
        Offset (0x25), 
        REVN,   8, 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        MEFE,   8, 
        DSTS,   8, 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        IDEM,   8, 
        PLID,   8, 
        BTYP,   8, 
        OSCC,   8, 
        NEXP,   8, 
        SBV1,   8, 
        SBV2,   8, 
        ECON,   8, 
        DSEN,   8, 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        VFN2,   8, 
        VFN3,   8, 
        VFN4,   8, 
        VFN5,   8, 
        VFN6,   8, 
        VFN7,   8, 
        VFN8,   8, 
        VFN9,   8, 
        ATMC,   8, 
        PTMC,   8, 
        PNHM,   32, 
        TBAL,   32, 
        TBAH,   32, 
        RTIP,   8, 
        TSOD,   8, 
        PFLV,   8, 
        BREV,   8, 
        PDTS,   8, 
        PKGA,   8, 
        PAMT,   8, 
        AC0F,   8, 
        AC1F,   8, 
        DTS3,   8, 
        DTS4,   8, 
        LTR1,   8, 
        LTR2,   8, 
        LTR3,   8, 
        LTR4,   8, 
        LTR5,   8, 
        LTR6,   8, 
        LTR7,   8, 
        LTR8,   8, 
        LTR9,   8, 
        LTRA,   8, 
        LTRB,   8, 
        LTRC,   8, 
        LTRD,   8, 
        LTRE,   8, 
        LTRF,   8, 
        LTRG,   8, 
        LTRH,   8, 
        LTRI,   8, 
        LTRJ,   8, 
        LTRK,   8, 
        LTRL,   8, 
        LTRM,   8, 
        LTRN,   8, 
        LTRO,   8, 
        OBF1,   8, 
        OBF2,   8, 
        OBF3,   8, 
        OBF4,   8, 
        OBF5,   8, 
        OBF6,   8, 
        OBF7,   8, 
        OBF8,   8, 
        OBF9,   8, 
        OBFA,   8, 
        OBFB,   8, 
        OBFC,   8, 
        OBFD,   8, 
        OBFE,   8, 
        OBFF,   8, 
        OBFG,   8, 
        OBFH,   8, 
        OBFI,   8, 
        OBFJ,   8, 
        OBFK,   8, 
        OBFL,   8, 
        OBFM,   8, 
        OBFN,   8, 
        OBFO,   8, 
        XTUB,   32, 
        XTUS,   32, 
        XMPB,   32, 
        DDRF,   8, 
        RTD3,   8, 
        PEP0,   8, 
        PEP3,   8, 
        DPTF,   8, 
        DCFE,   16, 
        SADE,   8, 
        SACR,   8, 
        SAHT,   8, 
        CPUS,   8, 
        CTDP,   8, 
        LPMP,   8, 
        LPMV,   8, 
        ECEU,   8, 
        TGFG,   16, 
        MEMD,   8, 
        ATRA,   8, 
        PTRA,   8, 
        MEMC,   8, 
        MEMH,   8, 
        FND1,   8, 
        FND2,   8, 
        AMBD,   8, 
        AMAT,   8, 
        AMPT,   8, 
        AMCT,   8, 
        AMHT,   8, 
        SKDE,   8, 
        SKAT,   8, 
        SKPT,   8, 
        SKCT,   8, 
        SKHT,   8, 
        EFDE,   8, 
        EFAT,   8, 
        EFPT,   8, 
        EFCT,   8, 
        EFHT,   8, 
        VRDE,   8, 
        VRAT,   8, 
        VRPT,   8, 
        VRCT,   8, 
        VRHT,   8, 
        DPAP,   8, 
        DPPP,   8, 
        DPCP,   8, 
        DCMP,   8, 
        TRTV,   8, 
        LPOE,   8, 
        LPOP,   8, 
        LPOS,   8, 
        LPOW,   8, 
        LPER,   8, 
        PPSZ,   32, 
        DISE,   8, 
        BGMA,   64, 
        BGMS,   8, 
        BGIA,   16, 
        IRMC,   8, 
        NFCE,   8, 
        CHEN,   8, 
        S0ID,   8, 
        CTDB,   8, 
        DKSM,   8, 
        SIO1,   16, 
        SIO2,   16, 
        SPBA,   16, 
        SEC0,   32, 
        SEC1,   32, 
        SEC2,   32, 
        SEC3,   32, 
        SEC4,   32, 
        SEC5,   32, 
        SEC6,   32, 
        SEC7,   32, 
        SEC8,   32, 
        Offset (0x1F4), 
        WIFD,   8, 
        WFAT,   8, 
        WFPT,   8, 
        WFCT,   8, 
        WFHT,   8, 
        PWRE,   8, 
        Offset (0x1FC), 
        PPPR,   16, 
        PBPE,   8, 
        VSPE,   8, 
        Offset (0x203), 
        XHPR,   8, 
        RIC0,   8, 
        GBSX,   8, 
        IUBE,   8, 
        IUCE,   8, 
        IUDE,   8, 
        ECNO,   8, 
        AUDD,   16, 
        IC0D,   16, 
        IC1D,   16, 
        IC1S,   16, 
        VRRD,   16, 
        PSCP,   8, 
        I20D,   16, 
        I21D,   16, 
        RCG0,   16, 
        RCG1,   16, 
        ECDB,   8, 
        P2ME,   8, 
        P2MK,   8, 
        SSH0,   16, 
        SSL0,   16, 
        SSD0,   16, 
        FMH0,   16, 
        FML0,   16, 
        FMD0,   16, 
        FPH0,   16, 
        FPL0,   16, 
        FPD0,   16, 
        SSH1,   16, 
        SSL1,   16, 
        SSD1,   16, 
        FMH1,   16, 
        FML1,   16, 
        FMD1,   16, 
        FPH1,   16, 
        FPL1,   16, 
        FPD1,   16, 
        M0C0,   16, 
        M1C0,   16, 
        M2C0,   16, 
        M0C1,   16, 
        M1C1,   16, 
        M2C1,   16, 
        M0C2,   16, 
        M1C2,   16, 
        M0C3,   16, 
        M1C3,   16, 
        M0C4,   16, 
        M1C4,   16, 
        M0C5,   16, 
        M1C5,   16, 
        TBSF,   8, 
        GIRQ,   32, 
        DMTP,   8, 
        DMTD,   8, 
        DMSH,   8, 
        SHSB,   8, 
        PLCS,   8, 
        PLVL,   16, 
        GN1E,   8, 
        G1AT,   8, 
        G1PT,   8, 
        G1CT,   8, 
        G1HT,   8, 
        GN2E,   8, 
        G2AT,   8, 
        G2PT,   8, 
        G2CT,   8, 
        G2HT,   8, 
        WWSD,   8, 
        CVSD,   8, 
        SSDD,   8, 
        INLD,   8, 
        IFAT,   8, 
        IFPT,   8, 
        IFCT,   8, 
        IFHT,   8, 
        SDWE,   8, 
        USBH,   8, 
        BCV4,   8, 
        WTV0,   8, 
        WTV1,   8, 
        APFU,   8, 
        SOHP,   8, 
        GP5F,   8, 
        NOHP,   8, 
        TBSE,   8, 
        WKFN,   8, 
        PEPC,   32, 
        VRSD,   16, 
        PB1E,   8, 
        GNID,   8, 
        WAND,   8, 
        WWAT,   8, 
        WWPT,   8, 
        WWCT,   8, 
        WWHT,   8, 
        Offset (0x2A3), 
        MPL0,   16, 
        CHGE,   8, 
        SAC3,   8, 
        MEM3,   8, 
        AMC3,   8, 
        SKC3,   8, 
        EFC3,   8, 
        VRC3,   8, 
        WFC3,   8, 
        G1C3,   8, 
        G2C3,   8, 
        IFC3,   8, 
        WWC3,   8, 
        WGC3,   8, 
        SPST,   8, 
        PERE,   8, 
        PEAT,   8, 
        PEPV,   8, 
        PECR,   8, 
        PEC3,   8, 
        PEHT,   8, 
        GN3E,   8, 
        G3AT,   8, 
        G3PT,   8, 
        G3CT,   8, 
        G3HT,   8, 
        GN4E,   8, 
        G4AT,   8, 
        G4PT,   8, 
        G4CT,   8, 
        G4HT,   8, 
        GN5E,   8, 
        G5AT,   8, 
        G5PT,   8, 
        G5CT,   8, 
        G5HT,   8, 
        GN6E,   8, 
        G6AT,   8, 
        G6PT,   8, 
        G6CT,   8, 
        G6HT,   8, 
        ECLP,   8, 
        G3C3,   8, 
        G4C3,   8, 
        G5C3,   8, 
        G6C3,   8, 
        TSP1,   8, 
        TSP2,   8, 
        TSP3,   8, 
        TSP4,   8, 
        TSP5,   8, 
        TSP6,   8, 
        TSP7,   8, 
        TSP8,   8, 
        SSP1,   8, 
        SSP2,   8, 
        SSP3,   8, 
        SSP4,   8, 
        SSP5,   8, 
        SSP6,   8, 
        SSP7,   8, 
        SSP8,   8, 
        MEMS,   8, 
        STGE,   8, 
        STAT,   8, 
        STPT,   8, 
        STCT,   8, 
        STC3,   8, 
        STHT,   8, 
        VSP1,   8, 
        V1AT,   8, 
        V1PV,   8, 
        V1CR,   8, 
        V1C3,   8, 
        V1HT,   8, 
        VSP2,   8, 
        V2AT,   8, 
        V2PV,   8, 
        V2CR,   8, 
        V2C3,   8, 
        V2HT,   8, 
        S1DE,   8, 
        S1AT,   8, 
        S1PT,   8, 
        S1CT,   8, 
        S1HT,   8, 
        S2DE,   8, 
        S2AT,   8, 
        S2PT,   8, 
        S2CT,   8, 
        S2HT,   8, 
        S3DE,   8, 
        S3AT,   8, 
        S3PT,   8, 
        S3CT,   8, 
        S3HT,   8, 
        S4DE,   8, 
        S4AT,   8, 
        S4PT,   8, 
        S4CT,   8, 
        S4HT,   8, 
        S5DE,   8, 
        S5AT,   8, 
        S5PT,   8, 
        S5CT,   8, 
        S5HT,   8, 
        S6DE,   8, 
        S6AT,   8, 
        S6PT,   8, 
        S6CT,   8, 
        S6HT,   8, 
        S7DE,   8, 
        S7AT,   8, 
        S7PT,   8, 
        S7CT,   8, 
        S7HT,   8, 
        S1S3,   8, 
        S2S3,   8, 
        S3S3,   8, 
        S4S3,   8, 
        S5S3,   8, 
        S6S3,   8, 
        S7S3,   8, 
        ICAE,   8, 
        PSME,   8, 
        PDT1,   8, 
        PLM1,   32, 
        PTW1,   32, 
        PDT2,   8, 
        PLM2,   32, 
        PTW2,   32, 
        DDT1,   8, 
        DDP1,   8, 
        DLI1,   16, 
        DPL1,   16, 
        DTW1,   32, 
        DMI1,   16, 
        DMA1,   16, 
        DMT1,   16, 
        DDT2,   8, 
        DDP2,   8, 
        DLI2,   16, 
        DPL2,   16, 
        DTW2,   32, 
        DMI2,   16, 
        DMA2,   16, 
        DMT2,   16, 
        WIFE,   8, 
        DOM1,   8, 
        LIM1,   16, 
        TIM1,   32, 
        DOM2,   8, 
        LIM2,   16, 
        TIM2,   32, 
        DOM3,   8, 
        LIM3,   16, 
        TIM3,   32, 
        TRD0,   8, 
        TRL0,   8, 
        TRD1,   8, 
        TRL1,   8, 
        WDM1,   8, 
        CID1,   16, 
        WDM2,   8, 
        CID2,   16, 
        Offset (0x378), 
        APPE,   8, 
        MPL1,   16, 
        MPL2,   16, 
        SDS0,   8, 
        SDS1,   8, 
        SDS2,   8, 
        SDS3,   8, 
        SDS4,   8, 
        SDS5,   8, 
        SDS6,   8, 
        SDS7,   8, 
        SDS8,   8, 
        SDS9,   8, 
        SDSA,   8, 
        TPLB,   8, 
        TPLH,   16, 
        WTVX,   8, 
        WITX,   8, 
        GPTD,   8, 
        GDBT,   16, 
        UTKX,   8, 
        SPTD,   8, 
        GEXN,   8, 
        TBTS,   8, 
        TBWS,   8, 
        AICS,   8, 
        TARS,   8, 
        FPAT,   8, 
        FPEN,   8, 
        FPGN,   32, 
        FPLV,   8, 
        CPAD,   16, 
        CPAB,   8, 
        TNAT,   8, 
        CPGN,   32, 
        CF2T,   8, 
        TDGS,   8, 
        DCSC,   8, 
        DCKE,   8, 
        UDCK,   8, 
        SUDK,   8, 
        OHPN,   8, 
        GHPN,   8, 
        EGPC,   32, 
        EGPV,   8, 
        TBDT,   32, 
        ATLB,   32, 
        SDM0,   8, 
        SDM1,   8, 
        SDM2,   8, 
        SDM3,   8, 
        SDM4,   8, 
        SDM5,   8, 
        SDM6,   8, 
        SDM7,   8, 
        SDM8,   8, 
        SDM9,   8, 
        SDMA,   8, 
        USTP,   8, 
        SSHI,   16, 
        SSLI,   16, 
        SSDI,   16, 
        FMHI,   16, 
        FMLI,   16, 
        FMDI,   16, 
        FPHI,   16, 
        FPLI,   16, 
        FPDI,   16, 
        M0CI,   16, 
        M1CI,   16, 
        M0CS,   16, 
        M1CS,   16, 
        M0CU,   16, 
        M1CU,   16, 
        CAMT,   8, 
        IVDF,   8, 
        IFWG,   64, 
        IVWS,   8, 
        IVPR,   8, 
        DIVO,   16, 
        DIVF,   16, 
        IVAD,   8, 
        IVRS,   8, 
        IVDG,   64, 
        DSPR,   8, 
        DDSO,   16, 
        DDSF,   16, 
        DSAD,   8, 
        DSRS,   8, 
        DVDG,   64, 
        EIDF,   8, 
        GFPS,   32, 
        GFPI,   32, 
        GNSM,   8, 
        GNSC,   8, 
        GGNR,   32, 
        GBTW,   32, 
        GBTK,   32, 
        GBTI,   32, 
        GPDI,   32, 
        GPLI,   32, 
        CL00,   8, 
        CL01,   8, 
        CL02,   8, 
        CL03,   8, 
        L0EN,   8, 
        L1EN,   8, 
        L2EN,   8, 
        L3EN,   8, 
        CDIV,   8, 
        C0TP,   8, 
        C0CV,   8, 
        C0GP,   8, 
        C0IB,   8, 
        C0IA,   16, 
        C0P0,   8, 
        C0P1,   8, 
        C0P2,   8, 
        C0P3,   8, 
        C0G0,   8, 
        C0G1,   8, 
        C0G2,   8, 
        C0G3,   8, 
        C0F0,   8, 
        C0F1,   8, 
        C0F2,   8, 
        C0F3,   8, 
        C0A0,   8, 
        C0A1,   8, 
        C0A2,   8, 
        C0A3,   8, 
        C0I0,   8, 
        C0I1,   8, 
        C0I2,   8, 
        C0I3,   8, 
        C0PL,   8, 
        C1TP,   8, 
        C1CV,   8, 
        C1GP,   8, 
        C1IB,   8, 
        C1IA,   16, 
        C1P0,   8, 
        C1P1,   8, 
        C1P2,   8, 
        C1P3,   8, 
        C1G0,   8, 
        C1G1,   8, 
        C1G2,   8, 
        C1G3,   8, 
        C1F0,   8, 
        C1F1,   8, 
        C1F2,   8, 
        C1F3,   8, 
        C1A0,   8, 
        C1A1,   8, 
        C1A2,   8, 
        C1A3,   8, 
        C1I0,   8, 
        C1I1,   8, 
        C1I2,   8, 
        C1I3,   8, 
        C1PL,   8, 
        C2TP,   8, 
        C2CV,   8, 
        C2GP,   8, 
        C2IB,   8, 
        C2IA,   16, 
        C2P0,   8, 
        C2P1,   8, 
        C2P2,   8, 
        C2P3,   8, 
        C2G0,   8, 
        C2G1,   8, 
        C2G2,   8, 
        C2G3,   8, 
        C2F0,   8, 
        C2F1,   8, 
        C2F2,   8, 
        C2F3,   8, 
        C2A0,   8, 
        C2A1,   8, 
        C2A2,   8, 
        C2A3,   8, 
        C2I0,   8, 
        C2I1,   8, 
        C2I2,   8, 
        C2I3,   8, 
        C2PL,   8, 
        C3TP,   8, 
        C3CV,   8, 
        C3GP,   8, 
        C3IB,   8, 
        C3IA,   16, 
        C3P0,   8, 
        C3P1,   8, 
        C3P2,   8, 
        C3P3,   8, 
        C3G0,   8, 
        C3G1,   8, 
        C3G2,   8, 
        C3G3,   8, 
        C3F0,   8, 
        C3F1,   8, 
        C3F2,   8, 
        C3F3,   8, 
        C3A0,   8, 
        C3A1,   8, 
        C3A2,   8, 
        C3A3,   8, 
        C3I0,   8, 
        C3I1,   8, 
        C3I2,   8, 
        C3I3,   8, 
        C3PL,   8, 
        L0SM,   8, 
        L0H0,   8, 
        L0H1,   8, 
        L0H2,   8, 
        L0H3,   8, 
        L0H4,   8, 
        L0H5,   8, 
        L0H6,   8, 
        L0H7,   8, 
        L0H8,   8, 
        L0PL,   8, 
        L0M0,   8, 
        L0M1,   8, 
        L0M2,   8, 
        L0M3,   8, 
        L0M4,   8, 
        L0M5,   8, 
        L0M6,   8, 
        L0M7,   8, 
        L0M8,   8, 
        L0M9,   8, 
        L0MA,   8, 
        L0MB,   8, 
        L0MC,   8, 
        L0MD,   8, 
        L0ME,   8, 
        L0MF,   8, 
        L0DI,   8, 
        L0BS,   8, 
        L0A0,   16, 
        L0A1,   16, 
        L0A2,   16, 
        L0A3,   16, 
        L0A4,   16, 
        L0A5,   16, 
        L0A6,   16, 
        L0A7,   16, 
        L0A8,   16, 
        L0A9,   16, 
        L0AA,   16, 
        L0AB,   16, 
        L0D0,   8, 
        L0D1,   8, 
        L0D2,   8, 
        L0D3,   8, 
        L0D4,   8, 
        L0D5,   8, 
        L0D6,   8, 
        L0D7,   8, 
        L0D8,   8, 
        L0D9,   8, 
        L0DA,   8, 
        L0DB,   8, 
        L0DV,   8, 
        L0CV,   8, 
        L0LU,   8, 
        L0NL,   8, 
        L0EE,   8, 
        L0VC,   8, 
        L0FS,   8, 
        L0DG,   8, 
        L0C0,   8, 
        L0C1,   8, 
        L0C2,   8, 
        L0C3,   8, 
        L0CK,   32, 
        L0CL,   8, 
        L1SM,   8, 
        L1H0,   8, 
        L1H1,   8, 
        L1H2,   8, 
        L1H3,   8, 
        L1H4,   8, 
        L1H5,   8, 
        L1H6,   8, 
        L1H7,   8, 
        L1H8,   8, 
        L1PL,   8, 
        L1M0,   8, 
        L1M1,   8, 
        L1M2,   8, 
        L1M3,   8, 
        L1M4,   8, 
        L1M5,   8, 
        L1M6,   8, 
        L1M7,   8, 
        L1M8,   8, 
        L1M9,   8, 
        L1MA,   8, 
        L1MB,   8, 
        L1MC,   8, 
        L1MD,   8, 
        L1ME,   8, 
        L1MF,   8, 
        L1DI,   8, 
        L1BS,   8, 
        L1A0,   16, 
        L1A1,   16, 
        L1A2,   16, 
        L1A3,   16, 
        L1A4,   16, 
        L1A5,   16, 
        L1A6,   16, 
        L1A7,   16, 
        L1A8,   16, 
        L1A9,   16, 
        L1AA,   16, 
        L1AB,   16, 
        L1D0,   8, 
        L1D1,   8, 
        L1D2,   8, 
        L1D3,   8, 
        L1D4,   8, 
        L1D5,   8, 
        L1D6,   8, 
        L1D7,   8, 
        L1D8,   8, 
        L1D9,   8, 
        L1DA,   8, 
        L1DB,   8, 
        L1DV,   8, 
        L1CV,   8, 
        L1LU,   8, 
        L1NL,   8, 
        L1EE,   8, 
        L1VC,   8, 
        L1FS,   8, 
        L1DG,   8, 
        L1C0,   8, 
        L1C1,   8, 
        L1C2,   8, 
        L1C3,   8, 
        L1CK,   32, 
        L1CL,   8, 
        L2SM,   8, 
        L2H0,   8, 
        L2H1,   8, 
        L2H2,   8, 
        L2H3,   8, 
        L2H4,   8, 
        L2H5,   8, 
        L2H6,   8, 
        L2H7,   8, 
        L2H8,   8, 
        L2PL,   8, 
        L2M0,   8, 
        L2M1,   8, 
        L2M2,   8, 
        L2M3,   8, 
        L2M4,   8, 
        L2M5,   8, 
        L2M6,   8, 
        L2M7,   8, 
        L2M8,   8, 
        L2M9,   8, 
        L2MA,   8, 
        L2MB,   8, 
        L2MC,   8, 
        L2MD,   8, 
        L2ME,   8, 
        L2MF,   8, 
        L2DI,   8, 
        L2BS,   8, 
        L2A0,   16, 
        L2A1,   16, 
        L2A2,   16, 
        L2A3,   16, 
        L2A4,   16, 
        L2A5,   16, 
        L2A6,   16, 
        L2A7,   16, 
        L2A8,   16, 
        L2A9,   16, 
        L2AA,   16, 
        L2AB,   16, 
        L2D0,   8, 
        L2D1,   8, 
        L2D2,   8, 
        L2D3,   8, 
        L2D4,   8, 
        L2D5,   8, 
        L2D6,   8, 
        L2D7,   8, 
        L2D8,   8, 
        L2D9,   8, 
        L2DA,   8, 
        L2DB,   8, 
        L2DV,   8, 
        L2CV,   8, 
        L2LU,   8, 
        L2NL,   8, 
        L2EE,   8, 
        L2VC,   8, 
        L2FS,   8, 
        L2DG,   8, 
        L2C0,   8, 
        L2C1,   8, 
        L2C2,   8, 
        L2C3,   8, 
        L2CK,   32, 
        L2CL,   8, 
        L3SM,   8, 
        L3H0,   8, 
        L3H1,   8, 
        L3H2,   8, 
        L3H3,   8, 
        L3H4,   8, 
        L3H5,   8, 
        L3H6,   8, 
        L3H7,   8, 
        L3H8,   8, 
        L3PL,   8, 
        L3M0,   8, 
        L3M1,   8, 
        L3M2,   8, 
        L3M3,   8, 
        L3M4,   8, 
        L3M5,   8, 
        L3M6,   8, 
        L3M7,   8, 
        L3M8,   8, 
        L3M9,   8, 
        L3MA,   8, 
        L3MB,   8, 
        L3MC,   8, 
        L3MD,   8, 
        L3ME,   8, 
        L3MF,   8, 
        L3DI,   8, 
        L3BS,   8, 
        L3A0,   16, 
        L3A1,   16, 
        L3A2,   16, 
        L3A3,   16, 
        L3A4,   16, 
        L3A5,   16, 
        L3A6,   16, 
        L3A7,   16, 
        L3A8,   16, 
        L3A9,   16, 
        L3AA,   16, 
        L3AB,   16, 
        L3D0,   8, 
        L3D1,   8, 
        L3D2,   8, 
        L3D3,   8, 
        L3D4,   8, 
        L3D5,   8, 
        L3D6,   8, 
        L3D7,   8, 
        L3D8,   8, 
        L3D9,   8, 
        L3DA,   8, 
        L3DB,   8, 
        L3DV,   8, 
        L3CV,   8, 
        L3LU,   8, 
        L3NL,   8, 
        L3EE,   8, 
        L3VC,   8, 
        L3FS,   8, 
        L3DG,   8, 
        L3C0,   8, 
        L3C1,   8, 
        L3C2,   8, 
        L3C3,   8, 
        L3CK,   32, 
        L3CL,   8, 
        ECR1,   8, 
        Offset (0x60E), 
        I2SC,   8, 
        ODV0,   8, 
        ODV1,   8, 
        ODV2,   8, 
        ODV3,   8, 
        ODV4,   8, 
        ODV5,   8, 
        UBCB,   32, 
        EMOD,   8, 
        WIFC,   8, 
        Offset (0x622), 
        TPLS,   8, 
        TPDB,   8, 
        TPDH,   16, 
        TPDS,   8, 
        ADPM,   32, 
        AG1L,   64, 
        AG1H,   64, 
        AG2L,   64, 
        AG2H,   64, 
        AG3L,   64, 
        AG3H,   64, 
        HEFE,   8, 
        XDCE,   8, 
        STXE,   8, 
        STX0,   8, 
        STX1,   8, 
        STX2,   8, 
        STX3,   8, 
        STX4,   8, 
        STX5,   8, 
        STX6,   8, 
        STX7,   8, 
        STX8,   8, 
        STX9,   8, 
        RTVM,   8, 
        USTC,   8, 
        BATP,   8, 
        TSDB,   8, 
        DEPC,   8, 
        PDFC,   8, 
        IVCM,   8, 
        HEB1,   32, 
        RBY1,   8, 
        RBY2,   8, 
        SCSS,   8, 
        HAID,   8, 
        NCTC,   8, 
        NCTI,   8, 
        NCTH,   8, 
        HSIO,   8, 
        TPPT,   8, 
        SHAP,   8, 
        EIAP,   8, 
        ZPOD,   8, 
        SRSP,   32, 
        CEDS,   8, 
        EHK3,   8, 
        EHK4,   8, 
        EHK5,   8, 
        EHK6,   8, 
        EHK7,   8, 
        EHK8,   8, 
        VBVP,   8, 
        VBVD,   8, 
        VBHB,   8, 
        VBRL,   8, 
        SMSS,   8, 
        VBST,   8, 
        ADAS,   8, 
        PPBG,   32, 
        AEAB,   8, 
        AHDB,   8, 
        PBSD,   8, 
        DPLL,   8, 
        DPHL,   8, 
        PWIG,   8, 
        MESE,   8, 
        ICAT,   8, 
        ICPV,   8, 
        ICCR,   8, 
        ICC3,   8, 
        ICHT,   8, 
        XSMI,   32, 
        PAPE,   32, 
        PSTW,   32, 
        MWLR,   32, 
        UP8P,   32, 
        MS2R,   32, 
        MS2P,   32, 
        UCSI,   8, 
        UCG1,   32, 
        UCG2,   32, 
        WGUR,   32, 
        WRFE,   8, 
        WRC1,   8, 
        WRC2,   8, 
        WRC3,   8, 
        WRC4,   8, 
        AWVI,   32, 
        Offset (0x6E0), 
        WTSP,   8, 
        WGWS,   8, 
        PIDE,   8, 
        C0VE,   8, 
        C0W0,   8, 
        C0W1,   8, 
        C0W2,   8, 
        C0W3,   8, 
        C0W4,   8, 
        C0W5,   8, 
        C1VE,   8, 
        C1W0,   8, 
        C1W1,   8, 
        C1W2,   8, 
        C1W3,   8, 
        C1W4,   8, 
        C1W5,   8, 
        C2VE,   8, 
        C2W0,   8, 
        C2W1,   8, 
        C2W2,   8, 
        C2W3,   8, 
        C2W4,   8, 
        C2W5,   8, 
        C3VE,   8, 
        C3W0,   8, 
        C3W1,   8, 
        C3W2,   8, 
        C3W3,   8, 
        C3W4,   8, 
        C3W5,   8, 
        L0LE,   8, 
        L0PP,   8, 
        L0VR,   8, 
        L1LE,   8, 
        L1PP,   8, 
        L1VR,   8, 
        L2LE,   8, 
        L2PP,   8, 
        L2VR,   8, 
        L3LE,   8, 
        L3PP,   8, 
        L3VR,   8, 
        WLRP,   8, 
        SSRP,   8, 
        WIPR,   8, 
        Offset (0x71E), 
        UTCM,   8, 
        USME,   8, 
        UPT1,   8, 
        UPT2,   8, 
        TWIN,   8, 
        TRWA,   8, 
        PEWE,   8, 
        Offset (0x744), 
        AES3,   8
    }


  0D00: 5B 81 88 63 01 47 4E 56 53 10 4F 53 59 53 10 53  // [..c.GNVS.OSYS.S
  0D10: 4D 49 46 08 50 52 4D 30 08 50 52 4D 31 08 53 43  // MIF.PRM0.PRM1.SC
  0D20: 49 46 08 50 52 4D 32 08 50 52 4D 33 08 4C 43 4B  // IF.PRM2.PRM3.LCK
  0D30: 46 08 50 52 4D 34 08 50 52 4D 35 08 50 38 30 44  // F.PRM4.PRM5.P80D
  0D40: 20 50 57 52 53 08 44 42 47 53 08 54 48 4F 46 08  //  PWRS.DBGS.THOF.
  0D50: 41 43 54 31 08 41 43 54 54 08 50 53 56 54 08 54  // ACT1.ACTT.PSVT.T
  0D60: 43 31 56 08 54 43 32 56 08 54 53 50 56 08 43 52  // C1V.TC2V.TSPV.CR
  0D70: 54 54 08 44 54 53 45 08 44 54 53 31 08 44 54 53  // TT.DTSE.DTS1.DTS
  0D80: 32 08 44 54 53 46 08 00 08 42 4E 55 4D 08 00 08  // 2.DTSF...BNUM...
  0D90: 00 08 00 08 00 08 00 08 00 08 52 45 56 4E 08 41  // ..........REVN.A
  0DA0: 50 49 43 08 54 43 4E 54 08 50 43 50 30 08 50 43  // PIC.TCNT.PCP0.PC
  0DB0: 50 31 08 50 50 43 4D 08 50 50 4D 46 20 43 36 37  // P1.PPCM.PPMF C67
  0DC0: 4C 08 4E 41 54 50 08 43 4D 41 50 08 43 4D 42 50  // L.NATP.CMAP.CMBP
  0DD0: 08 4C 50 54 50 08 46 44 43 50 08 43 4D 43 50 08  // .LPTP.FDCP.CMCP.
  0DE0: 43 49 52 50 08 53 4D 53 43 08 57 33 38 31 08 53  // CIRP.SMSC.W381.S
  0DF0: 4D 43 31 08 45 4D 41 45 08 45 4D 41 50 10 45 4D  // MC1.EMAE.EMAP.EM
  0E00: 41 4C 10 4D 45 46 45 08 44 53 54 53 08 4D 4F 52  // AL.MEFE.DSTS.MOR
  0E10: 44 08 54 43 47 50 08 50 50 52 50 20 50 50 52 51  // D.TCGP.PPRP PPRQ
  0E20: 08 4C 50 50 52 08 49 44 45 4D 08 50 4C 49 44 08  // .LPPR.IDEM.PLID.
  0E30: 42 54 59 50 08 4F 53 43 43 08 4E 45 58 50 08 53  // BTYP.OSCC.NEXP.S
  0E40: 42 56 31 08 53 42 56 32 08 45 43 4F 4E 08 44 53  // BV1.SBV2.ECON.DS
  0E50: 45 4E 08 47 50 49 43 08 43 54 59 50 08 4C 30 31  // EN.GPIC.CTYP.L01
  0E60: 43 08 56 46 4E 30 08 56 46 4E 31 08 56 46 4E 32  // C.VFN0.VFN1.VFN2
  0E70: 08 56 46 4E 33 08 56 46 4E 34 08 56 46 4E 35 08  // .VFN3.VFN4.VFN5.
  0E80: 56 46 4E 36 08 56 46 4E 37 08 56 46 4E 38 08 56  // VFN6.VFN7.VFN8.V
  0E90: 46 4E 39 08 41 54 4D 43 08 50 54 4D 43 08 50 4E  // FN9.ATMC.PTMC.PN
  0EA0: 48 4D 20 54 42 41 4C 20 54 42 41 48 20 52 54 49  // HM TBAL TBAH RTI
  0EB0: 50 08 54 53 4F 44 08 50 46 4C 56 08 42 52 45 56  // P.TSOD.PFLV.BREV
  0EC0: 08 50 44 54 53 08 50 4B 47 41 08 50 41 4D 54 08  // .PDTS.PKGA.PAMT.
  0ED0: 41 43 30 46 08 41 43 31 46 08 44 54 53 33 08 44  // AC0F.AC1F.DTS3.D
  0EE0: 54 53 34 08 4C 54 52 31 08 4C 54 52 32 08 4C 54  // TS4.LTR1.LTR2.LT
  0EF0: 52 33 08 4C 54 52 34 08 4C 54 52 35 08 4C 54 52  // R3.LTR4.LTR5.LTR
  0F00: 36 08 4C 54 52 37 08 4C 54 52 38 08 4C 54 52 39  // 6.LTR7.LTR8.LTR9
  0F10: 08 4C 54 52 41 08 4C 54 52 42 08 4C 54 52 43 08  // .LTRA.LTRB.LTRC.
  0F20: 4C 54 52 44 08 4C 54 52 45 08 4C 54 52 46 08 4C  // LTRD.LTRE.LTRF.L
  0F30: 54 52 47 08 4C 54 52 48 08 4C 54 52 49 08 4C 54  // TRG.LTRH.LTRI.LT
  0F40: 52 4A 08 4C 54 52 4B 08 4C 54 52 4C 08 4C 54 52  // RJ.LTRK.LTRL.LTR
  0F50: 4D 08 4C 54 52 4E 08 4C 54 52 4F 08 4F 42 46 31  // M.LTRN.LTRO.OBF1
  0F60: 08 4F 42 46 32 08 4F 42 46 33 08 4F 42 46 34 08  // .OBF2.OBF3.OBF4.
  0F70: 4F 42 46 35 08 4F 42 46 36 08 4F 42 46 37 08 4F  // OBF5.OBF6.OBF7.O
  0F80: 42 46 38 08 4F 42 46 39 08 4F 42 46 41 08 4F 42  // BF8.OBF9.OBFA.OB
  0F90: 46 42 08 4F 42 46 43 08 4F 42 46 44 08 4F 42 46  // FB.OBFC.OBFD.OBF
  0FA0: 45 08 4F 42 46 46 08 4F 42 46 47 08 4F 42 46 48  // E.OBFF.OBFG.OBFH
  0FB0: 08 4F 42 46 49 08 4F 42 46 4A 08 4F 42 46 4B 08  // .OBFI.OBFJ.OBFK.
  0FC0: 4F 42 46 4C 08 4F 42 46 4D 08 4F 42 46 4E 08 4F  // OBFL.OBFM.OBFN.O
  0FD0: 42 46 4F 08 58 54 55 42 20 58 54 55 53 20 58 4D  // BFO.XTUB XTUS XM
  0FE0: 50 42 20 44 44 52 46 08 52 54 44 33 08 50 45 50  // PB DDRF.RTD3.PEP
  0FF0: 30 08 50 45 50 33 08 44 50 54 46 08 44 43 46 45  // 0.PEP3.DPTF.DCFE
  1000: 10 53 41 44 45 08 53 41 43 52 08 53 41 48 54 08  // .SADE.SACR.SAHT.
  1010: 43 50 55 53 08 43 54 44 50 08 4C 50 4D 50 08 4C  // CPUS.CTDP.LPMP.L
  1020: 50 4D 56 08 45 43 45 55 08 54 47 46 47 10 4D 45  // PMV.ECEU.TGFG.ME
  1030: 4D 44 08 41 54 52 41 08 50 54 52 41 08 4D 45 4D  // MD.ATRA.PTRA.MEM
  1040: 43 08 4D 45 4D 48 08 46 4E 44 31 08 46 4E 44 32  // C.MEMH.FND1.FND2
  1050: 08 41 4D 42 44 08 41 4D 41 54 08 41 4D 50 54 08  // .AMBD.AMAT.AMPT.
  1060: 41 4D 43 54 08 41 4D 48 54 08 53 4B 44 45 08 53  // AMCT.AMHT.SKDE.S
  1070: 4B 41 54 08 53 4B 50 54 08 53 4B 43 54 08 53 4B  // KAT.SKPT.SKCT.SK
  1080: 48 54 08 45 46 44 45 08 45 46 41 54 08 45 46 50  // HT.EFDE.EFAT.EFP
  1090: 54 08 45 46 43 54 08 45 46 48 54 08 56 52 44 45  // T.EFCT.EFHT.VRDE
  10A0: 08 56 52 41 54 08 56 52 50 54 08 56 52 43 54 08  // .VRAT.VRPT.VRCT.
  10B0: 56 52 48 54 08 44 50 41 50 08 44 50 50 50 08 44  // VRHT.DPAP.DPPP.D
  10C0: 50 43 50 08 44 43 4D 50 08 54 52 54 56 08 4C 50  // PCP.DCMP.TRTV.LP
  10D0: 4F 45 08 4C 50 4F 50 08 4C 50 4F 53 08 4C 50 4F  // OE.LPOP.LPOS.LPO
  10E0: 57 08 4C 50 45 52 08 50 50 53 5A 20 44 49 53 45  // W.LPER.PPSZ DISE
  10F0: 08 42 47 4D 41 40 04 42 47 4D 53 08 42 47 49 41  // .BGMA@.BGMS.BGIA
  1100: 10 49 52 4D 43 08 4E 46 43 45 08 43 48 45 4E 08  // .IRMC.NFCE.CHEN.
  1110: 53 30 49 44 08 43 54 44 42 08 44 4B 53 4D 08 53  // S0ID.CTDB.DKSM.S
  1120: 49 4F 31 10 53 49 4F 32 10 53 50 42 41 10 53 45  // IO1.SIO2.SPBA.SE
  1130: 43 30 20 53 45 43 31 20 53 45 43 32 20 53 45 43  // C0 SEC1 SEC2 SEC
  1140: 33 20 53 45 43 34 20 53 45 43 35 20 53 45 43 36  // 3 SEC4 SEC5 SEC6
  1150: 20 53 45 43 37 20 53 45 43 38 20 00 40 65 57 49  //  SEC7 SEC8 .@eWI
  1160: 46 44 08 57 46 41 54 08 57 46 50 54 08 57 46 43  // FD.WFAT.WFPT.WFC
  1170: 54 08 57 46 48 54 08 50 57 52 45 08 00 10 50 50  // T.WFHT.PWRE...PP
  1180: 50 52 10 50 42 50 45 08 56 53 50 45 08 00 18 58  // PR.PBPE.VSPE...X
  1190: 48 50 52 08 52 49 43 30 08 47 42 53 58 08 49 55  // HPR.RIC0.GBSX.IU
  11A0: 42 45 08 49 55 43 45 08 49 55 44 45 08 45 43 4E  // BE.IUCE.IUDE.ECN
  11B0: 4F 08 41 55 44 44 10 49 43 30 44 10 49 43 31 44  // O.AUDD.IC0D.IC1D
  11C0: 10 49 43 31 53 10 56 52 52 44 10 50 53 43 50 08  // .IC1S.VRRD.PSCP.
  11D0: 49 32 30 44 10 49 32 31 44 10 52 43 47 30 10 52  // I20D.I21D.RCG0.R
  11E0: 43 47 31 10 45 43 44 42 08 50 32 4D 45 08 50 32  // CG1.ECDB.P2ME.P2
  11F0: 4D 4B 08 53 53 48 30 10 53 53 4C 30 10 53 53 44  // MK.SSH0.SSL0.SSD
  1200: 30 10 46 4D 48 30 10 46 4D 4C 30 10 46 4D 44 30  // 0.FMH0.FML0.FMD0
  1210: 10 46 50 48 30 10 46 50 4C 30 10 46 50 44 30 10  // .FPH0.FPL0.FPD0.
  1220: 53 53 48 31 10 53 53 4C 31 10 53 53 44 31 10 46  // SSH1.SSL1.SSD1.F
  1230: 4D 48 31 10 46 4D 4C 31 10 46 4D 44 31 10 46 50  // MH1.FML1.FMD1.FP
  1240: 48 31 10 46 50 4C 31 10 46 50 44 31 10 4D 30 43  // H1.FPL1.FPD1.M0C
  1250: 30 10 4D 31 43 30 10 4D 32 43 30 10 4D 30 43 31  // 0.M1C0.M2C0.M0C1
  1260: 10 4D 31 43 31 10 4D 32 43 31 10 4D 30 43 32 10  // .M1C1.M2C1.M0C2.
  1270: 4D 31 43 32 10 4D 30 43 33 10 4D 31 43 33 10 4D  // M1C2.M0C3.M1C3.M
  1280: 30 43 34 10 4D 31 43 34 10 4D 30 43 35 10 4D 31  // 0C4.M1C4.M0C5.M1
  1290: 43 35 10 54 42 53 46 08 47 49 52 51 20 44 4D 54  // C5.TBSF.GIRQ DMT
  12A0: 50 08 44 4D 54 44 08 44 4D 53 48 08 53 48 53 42  // P.DMTD.DMSH.SHSB
  12B0: 08 50 4C 43 53 08 50 4C 56 4C 10 47 4E 31 45 08  // .PLCS.PLVL.GN1E.
  12C0: 47 31 41 54 08 47 31 50 54 08 47 31 43 54 08 47  // G1AT.G1PT.G1CT.G
  12D0: 31 48 54 08 47 4E 32 45 08 47 32 41 54 08 47 32  // 1HT.GN2E.G2AT.G2
  12E0: 50 54 08 47 32 43 54 08 47 32 48 54 08 57 57 53  // PT.G2CT.G2HT.WWS
  12F0: 44 08 43 56 53 44 08 53 53 44 44 08 49 4E 4C 44  // D.CVSD.SSDD.INLD
  1300: 08 49 46 41 54 08 49 46 50 54 08 49 46 43 54 08  // .IFAT.IFPT.IFCT.
  1310: 49 46 48 54 08 53 44 57 45 08 55 53 42 48 08 42  // IFHT.SDWE.USBH.B
  1320: 43 56 34 08 57 54 56 30 08 57 54 56 31 08 41 50  // CV4.WTV0.WTV1.AP
  1330: 46 55 08 53 4F 48 50 08 47 50 35 46 08 4E 4F 48  // FU.SOHP.GP5F.NOH
  1340: 50 08 54 42 53 45 08 57 4B 46 4E 08 50 45 50 43  // P.TBSE.WKFN.PEPC
  1350: 20 56 52 53 44 10 50 42 31 45 08 47 4E 49 44 08  //  VRSD.PB1E.GNID.
  1360: 57 41 4E 44 08 57 57 41 54 08 57 57 50 54 08 57  // WAND.WWAT.WWPT.W
  1370: 57 43 54 08 57 57 48 54 08 00 48 06 4D 50 4C 30  // WCT.WWHT..H.MPL0
  1380: 10 43 48 47 45 08 53 41 43 33 08 4D 45 4D 33 08  // .CHGE.SAC3.MEM3.
  1390: 41 4D 43 33 08 53 4B 43 33 08 45 46 43 33 08 56  // AMC3.SKC3.EFC3.V
  13A0: 52 43 33 08 57 46 43 33 08 47 31 43 33 08 47 32  // RC3.WFC3.G1C3.G2
  13B0: 43 33 08 49 46 43 33 08 57 57 43 33 08 57 47 43  // C3.IFC3.WWC3.WGC
  13C0: 33 08 53 50 53 54 08 50 45 52 45 08 50 45 41 54  // 3.SPST.PERE.PEAT
  13D0: 08 50 45 50 56 08 50 45 43 52 08 50 45 43 33 08  // .PEPV.PECR.PEC3.
  13E0: 50 45 48 54 08 47 4E 33 45 08 47 33 41 54 08 47  // PEHT.GN3E.G3AT.G
  13F0: 33 50 54 08 47 33 43 54 08 47 33 48 54 08 47 4E  // 3PT.G3CT.G3HT.GN
  1400: 34 45 08 47 34 41 54 08 47 34 50 54 08 47 34 43  // 4E.G4AT.G4PT.G4C
  1410: 54 08 47 34 48 54 08 47 4E 35 45 08 47 35 41 54  // T.G4HT.GN5E.G5AT
  1420: 08 47 35 50 54 08 47 35 43 54 08 47 35 48 54 08  // .G5PT.G5CT.G5HT.
  1430: 47 4E 36 45 08 47 36 41 54 08 47 36 50 54 08 47  // GN6E.G6AT.G6PT.G
  1440: 36 43 54 08 47 36 48 54 08 45 43 4C 50 08 47 33  // 6CT.G6HT.ECLP.G3
  1450: 43 33 08 47 34 43 33 08 47 35 43 33 08 47 36 43  // C3.G4C3.G5C3.G6C
  1460: 33 08 54 53 50 31 08 54 53 50 32 08 54 53 50 33  // 3.TSP1.TSP2.TSP3
  1470: 08 54 53 50 34 08 54 53 50 35 08 54 53 50 36 08  // .TSP4.TSP5.TSP6.
  1480: 54 53 50 37 08 54 53 50 38 08 53 53 50 31 08 53  // TSP7.TSP8.SSP1.S
  1490: 53 50 32 08 53 53 50 33 08 53 53 50 34 08 53 53  // SP2.SSP3.SSP4.SS
  14A0: 50 35 08 53 53 50 36 08 53 53 50 37 08 53 53 50  // P5.SSP6.SSP7.SSP
  14B0: 38 08 4D 45 4D 53 08 53 54 47 45 08 53 54 41 54  // 8.MEMS.STGE.STAT
  14C0: 08 53 54 50 54 08 53 54 43 54 08 53 54 43 33 08  // .STPT.STCT.STC3.
  14D0: 53 54 48 54 08 56 53 50 31 08 56 31 41 54 08 56  // STHT.VSP1.V1AT.V
  14E0: 31 50 56 08 56 31 43 52 08 56 31 43 33 08 56 31  // 1PV.V1CR.V1C3.V1
  14F0: 48 54 08 56 53 50 32 08 56 32 41 54 08 56 32 50  // HT.VSP2.V2AT.V2P
  1500: 56 08 56 32 43 52 08 56 32 43 33 08 56 32 48 54  // V.V2CR.V2C3.V2HT
  1510: 08 53 31 44 45 08 53 31 41 54 08 53 31 50 54 08  // .S1DE.S1AT.S1PT.
  1520: 53 31 43 54 08 53 31 48 54 08 53 32 44 45 08 53  // S1CT.S1HT.S2DE.S
  1530: 32 41 54 08 53 32 50 54 08 53 32 43 54 08 53 32  // 2AT.S2PT.S2CT.S2
  1540: 48 54 08 53 33 44 45 08 53 33 41 54 08 53 33 50  // HT.S3DE.S3AT.S3P
  1550: 54 08 53 33 43 54 08 53 33 48 54 08 53 34 44 45  // T.S3CT.S3HT.S4DE
  1560: 08 53 34 41 54 08 53 34 50 54 08 53 34 43 54 08  // .S4AT.S4PT.S4CT.
  1570: 53 34 48 54 08 53 35 44 45 08 53 35 41 54 08 53  // S4HT.S5DE.S5AT.S
  1580: 35 50 54 08 53 35 43 54 08 53 35 48 54 08 53 36  // 5PT.S5CT.S5HT.S6
  1590: 44 45 08 53 36 41 54 08 53 36 50 54 08 53 36 43  // DE.S6AT.S6PT.S6C
  15A0: 54 08 53 36 48 54 08 53 37 44 45 08 53 37 41 54  // T.S6HT.S7DE.S7AT
  15B0: 08 53 37 50 54 08 53 37 43 54 08 53 37 48 54 08  // .S7PT.S7CT.S7HT.
  15C0: 53 31 53 33 08 53 32 53 33 08 53 33 53 33 08 53  // S1S3.S2S3.S3S3.S
  15D0: 34 53 33 08 53 35 53 33 08 53 36 53 33 08 53 37  // 4S3.S5S3.S6S3.S7
  15E0: 53 33 08 49 43 41 45 08 50 53 4D 45 08 50 44 54  // S3.ICAE.PSME.PDT
  15F0: 31 08 50 4C 4D 31 20 50 54 57 31 20 50 44 54 32  // 1.PLM1 PTW1 PDT2
  1600: 08 50 4C 4D 32 20 50 54 57 32 20 44 44 54 31 08  // .PLM2 PTW2 DDT1.
  1610: 44 44 50 31 08 44 4C 49 31 10 44 50 4C 31 10 44  // DDP1.DLI1.DPL1.D
  1620: 54 57 31 20 44 4D 49 31 10 44 4D 41 31 10 44 4D  // TW1 DMI1.DMA1.DM
  1630: 54 31 10 44 44 54 32 08 44 44 50 32 08 44 4C 49  // T1.DDT2.DDP2.DLI
  1640: 32 10 44 50 4C 32 10 44 54 57 32 20 44 4D 49 32  // 2.DPL2.DTW2 DMI2
  1650: 10 44 4D 41 32 10 44 4D 54 32 10 57 49 46 45 08  // .DMA2.DMT2.WIFE.
  1660: 44 4F 4D 31 08 4C 49 4D 31 10 54 49 4D 31 20 44  // DOM1.LIM1.TIM1 D
  1670: 4F 4D 32 08 4C 49 4D 32 10 54 49 4D 32 20 44 4F  // OM2.LIM2.TIM2 DO
  1680: 4D 33 08 4C 49 4D 33 10 54 49 4D 33 20 54 52 44  // M3.LIM3.TIM3 TRD
  1690: 30 08 54 52 4C 30 08 54 52 44 31 08 54 52 4C 31  // 0.TRL0.TRD1.TRL1
  16A0: 08 57 44 4D 31 08 43 49 44 31 10 57 44 4D 32 08  // .WDM1.CID1.WDM2.
  16B0: 43 49 44 32 10 00 28 41 50 50 45 08 4D 50 4C 31  // CID2..(APPE.MPL1
  16C0: 10 4D 50 4C 32 10 53 44 53 30 08 53 44 53 31 08  // .MPL2.SDS0.SDS1.
  16D0: 53 44 53 32 08 53 44 53 33 08 53 44 53 34 08 53  // SDS2.SDS3.SDS4.S
  16E0: 44 53 35 08 53 44 53 36 08 53 44 53 37 08 53 44  // DS5.SDS6.SDS7.SD
  16F0: 53 38 08 53 44 53 39 08 53 44 53 41 08 54 50 4C  // S8.SDS9.SDSA.TPL
  1700: 42 08 54 50 4C 48 10 57 54 56 58 08 57 49 54 58  // B.TPLH.WTVX.WITX
  1710: 08 47 50 54 44 08 47 44 42 54 10 55 54 4B 58 08  // .GPTD.GDBT.UTKX.
  1720: 53 50 54 44 08 47 45 58 4E 08 54 42 54 53 08 54  // SPTD.GEXN.TBTS.T
  1730: 42 57 53 08 41 49 43 53 08 54 41 52 53 08 46 50  // BWS.AICS.TARS.FP
  1740: 41 54 08 46 50 45 4E 08 46 50 47 4E 20 46 50 4C  // AT.FPEN.FPGN FPL
  1750: 56 08 43 50 41 44 10 43 50 41 42 08 54 4E 41 54  // V.CPAD.CPAB.TNAT
  1760: 08 43 50 47 4E 20 43 46 32 54 08 54 44 47 53 08  // .CPGN CF2T.TDGS.
  1770: 44 43 53 43 08 44 43 4B 45 08 55 44 43 4B 08 53  // DCSC.DCKE.UDCK.S
  1780: 55 44 4B 08 4F 48 50 4E 08 47 48 50 4E 08 45 47  // UDK.OHPN.GHPN.EG
  1790: 50 43 20 45 47 50 56 08 54 42 44 54 20 41 54 4C  // PC EGPV.TBDT ATL
  17A0: 42 20 53 44 4D 30 08 53 44 4D 31 08 53 44 4D 32  // B SDM0.SDM1.SDM2
  17B0: 08 53 44 4D 33 08 53 44 4D 34 08 53 44 4D 35 08  // .SDM3.SDM4.SDM5.
  17C0: 53 44 4D 36 08 53 44 4D 37 08 53 44 4D 38 08 53  // SDM6.SDM7.SDM8.S
  17D0: 44 4D 39 08 53 44 4D 41 08 55 53 54 50 08 53 53  // DM9.SDMA.USTP.SS
  17E0: 48 49 10 53 53 4C 49 10 53 53 44 49 10 46 4D 48  // HI.SSLI.SSDI.FMH
  17F0: 49 10 46 4D 4C 49 10 46 4D 44 49 10 46 50 48 49  // I.FMLI.FMDI.FPHI
  1800: 10 46 50 4C 49 10 46 50 44 49 10 4D 30 43 49 10  // .FPLI.FPDI.M0CI.
  1810: 4D 31 43 49 10 4D 30 43 53 10 4D 31 43 53 10 4D  // M1CI.M0CS.M1CS.M
  1820: 30 43 55 10 4D 31 43 55 10 43 41 4D 54 08 49 56  // 0CU.M1CU.CAMT.IV
  1830: 44 46 08 49 46 57 47 40 04 49 56 57 53 08 49 56  // DF.IFWG@.IVWS.IV
  1840: 50 52 08 44 49 56 4F 10 44 49 56 46 10 49 56 41  // PR.DIVO.DIVF.IVA
  1850: 44 08 49 56 52 53 08 49 56 44 47 40 04 44 53 50  // D.IVRS.IVDG@.DSP
  1860: 52 08 44 44 53 4F 10 44 44 53 46 10 44 53 41 44  // R.DDSO.DDSF.DSAD
  1870: 08 44 53 52 53 08 44 56 44 47 40 04 45 49 44 46  // .DSRS.DVDG@.EIDF
  1880: 08 47 46 50 53 20 47 46 50 49 20 47 4E 53 4D 08  // .GFPS GFPI GNSM.
  1890: 47 4E 53 43 08 47 47 4E 52 20 47 42 54 57 20 47  // GNSC.GGNR GBTW G
  18A0: 42 54 4B 20 47 42 54 49 20 47 50 44 49 20 47 50  // BTK GBTI GPDI GP
  18B0: 4C 49 20 43 4C 30 30 08 43 4C 30 31 08 43 4C 30  // LI CL00.CL01.CL0
  18C0: 32 08 43 4C 30 33 08 4C 30 45 4E 08 4C 31 45 4E  // 2.CL03.L0EN.L1EN
  18D0: 08 4C 32 45 4E 08 4C 33 45 4E 08 43 44 49 56 08  // .L2EN.L3EN.CDIV.
  18E0: 43 30 54 50 08 43 30 43 56 08 43 30 47 50 08 43  // C0TP.C0CV.C0GP.C
  18F0: 30 49 42 08 43 30 49 41 10 43 30 50 30 08 43 30  // 0IB.C0IA.C0P0.C0
  1900: 50 31 08 43 30 50 32 08 43 30 50 33 08 43 30 47  // P1.C0P2.C0P3.C0G
  1910: 30 08 43 30 47 31 08 43 30 47 32 08 43 30 47 33  // 0.C0G1.C0G2.C0G3
  1920: 08 43 30 46 30 08 43 30 46 31 08 43 30 46 32 08  // .C0F0.C0F1.C0F2.
  1930: 43 30 46 33 08 43 30 41 30 08 43 30 41 31 08 43  // C0F3.C0A0.C0A1.C
  1940: 30 41 32 08 43 30 41 33 08 43 30 49 30 08 43 30  // 0A2.C0A3.C0I0.C0
  1950: 49 31 08 43 30 49 32 08 43 30 49 33 08 43 30 50  // I1.C0I2.C0I3.C0P
  1960: 4C 08 43 31 54 50 08 43 31 43 56 08 43 31 47 50  // L.C1TP.C1CV.C1GP
  1970: 08 43 31 49 42 08 43 31 49 41 10 43 31 50 30 08  // .C1IB.C1IA.C1P0.
  1980: 43 31 50 31 08 43 31 50 32 08 43 31 50 33 08 43  // C1P1.C1P2.C1P3.C
  1990: 31 47 30 08 43 31 47 31 08 43 31 47 32 08 43 31  // 1G0.C1G1.C1G2.C1
  19A0: 47 33 08 43 31 46 30 08 43 31 46 31 08 43 31 46  // G3.C1F0.C1F1.C1F
  19B0: 32 08 43 31 46 33 08 43 31 41 30 08 43 31 41 31  // 2.C1F3.C1A0.C1A1
  19C0: 08 43 31 41 32 08 43 31 41 33 08 43 31 49 30 08  // .C1A2.C1A3.C1I0.
  19D0: 43 31 49 31 08 43 31 49 32 08 43 31 49 33 08 43  // C1I1.C1I2.C1I3.C
  19E0: 31 50 4C 08 43 32 54 50 08 43 32 43 56 08 43 32  // 1PL.C2TP.C2CV.C2
  19F0: 47 50 08 43 32 49 42 08 43 32 49 41 10 43 32 50  // GP.C2IB.C2IA.C2P
  1A00: 30 08 43 32 50 31 08 43 32 50 32 08 43 32 50 33  // 0.C2P1.C2P2.C2P3
  1A10: 08 43 32 47 30 08 43 32 47 31 08 43 32 47 32 08  // .C2G0.C2G1.C2G2.
  1A20: 43 32 47 33 08 43 32 46 30 08 43 32 46 31 08 43  // C2G3.C2F0.C2F1.C
  1A30: 32 46 32 08 43 32 46 33 08 43 32 41 30 08 43 32  // 2F2.C2F3.C2A0.C2
  1A40: 41 31 08 43 32 41 32 08 43 32 41 33 08 43 32 49  // A1.C2A2.C2A3.C2I
  1A50: 30 08 43 32 49 31 08 43 32 49 32 08 43 32 49 33  // 0.C2I1.C2I2.C2I3
  1A60: 08 43 32 50 4C 08 43 33 54 50 08 43 33 43 56 08  // .C2PL.C3TP.C3CV.
  1A70: 43 33 47 50 08 43 33 49 42 08 43 33 49 41 10 43  // C3GP.C3IB.C3IA.C
  1A80: 33 50 30 08 43 33 50 31 08 43 33 50 32 08 43 33  // 3P0.C3P1.C3P2.C3
  1A90: 50 33 08 43 33 47 30 08 43 33 47 31 08 43 33 47  // P3.C3G0.C3G1.C3G
  1AA0: 32 08 43 33 47 33 08 43 33 46 30 08 43 33 46 31  // 2.C3G3.C3F0.C3F1
  1AB0: 08 43 33 46 32 08 43 33 46 33 08 43 33 41 30 08  // .C3F2.C3F3.C3A0.
  1AC0: 43 33 41 31 08 43 33 41 32 08 43 33 41 33 08 43  // C3A1.C3A2.C3A3.C
  1AD0: 33 49 30 08 43 33 49 31 08 43 33 49 32 08 43 33  // 3I0.C3I1.C3I2.C3
  1AE0: 49 33 08 43 33 50 4C 08 4C 30 53 4D 08 4C 30 48  // I3.C3PL.L0SM.L0H
  1AF0: 30 08 4C 30 48 31 08 4C 30 48 32 08 4C 30 48 33  // 0.L0H1.L0H2.L0H3
  1B00: 08 4C 30 48 34 08 4C 30 48 35 08 4C 30 48 36 08  // .L0H4.L0H5.L0H6.
  1B10: 4C 30 48 37 08 4C 30 48 38 08 4C 30 50 4C 08 4C  // L0H7.L0H8.L0PL.L
  1B20: 30 4D 30 08 4C 30 4D 31 08 4C 30 4D 32 08 4C 30  // 0M0.L0M1.L0M2.L0
  1B30: 4D 33 08 4C 30 4D 34 08 4C 30 4D 35 08 4C 30 4D  // M3.L0M4.L0M5.L0M
  1B40: 36 08 4C 30 4D 37 08 4C 30 4D 38 08 4C 30 4D 39  // 6.L0M7.L0M8.L0M9
  1B50: 08 4C 30 4D 41 08 4C 30 4D 42 08 4C 30 4D 43 08  // .L0MA.L0MB.L0MC.
  1B60: 4C 30 4D 44 08 4C 30 4D 45 08 4C 30 4D 46 08 4C  // L0MD.L0ME.L0MF.L
  1B70: 30 44 49 08 4C 30 42 53 08 4C 30 41 30 10 4C 30  // 0DI.L0BS.L0A0.L0
  1B80: 41 31 10 4C 30 41 32 10 4C 30 41 33 10 4C 30 41  // A1.L0A2.L0A3.L0A
  1B90: 34 10 4C 30 41 35 10 4C 30 41 36 10 4C 30 41 37  // 4.L0A5.L0A6.L0A7
  1BA0: 10 4C 30 41 38 10 4C 30 41 39 10 4C 30 41 41 10  // .L0A8.L0A9.L0AA.
  1BB0: 4C 30 41 42 10 4C 30 44 30 08 4C 30 44 31 08 4C  // L0AB.L0D0.L0D1.L
  1BC0: 30 44 32 08 4C 30 44 33 08 4C 30 44 34 08 4C 30  // 0D2.L0D3.L0D4.L0
  1BD0: 44 35 08 4C 30 44 36 08 4C 30 44 37 08 4C 30 44  // D5.L0D6.L0D7.L0D
  1BE0: 38 08 4C 30 44 39 08 4C 30 44 41 08 4C 30 44 42  // 8.L0D9.L0DA.L0DB
  1BF0: 08 4C 30 44 56 08 4C 30 43 56 08 4C 30 4C 55 08  // .L0DV.L0CV.L0LU.
  1C00: 4C 30 4E 4C 08 4C 30 45 45 08 4C 30 56 43 08 4C  // L0NL.L0EE.L0VC.L
  1C10: 30 46 53 08 4C 30 44 47 08 4C 30 43 30 08 4C 30  // 0FS.L0DG.L0C0.L0
  1C20: 43 31 08 4C 30 43 32 08 4C 30 43 33 08 4C 30 43  // C1.L0C2.L0C3.L0C
  1C30: 4B 20 4C 30 43 4C 08 4C 31 53 4D 08 4C 31 48 30  // K L0CL.L1SM.L1H0
  1C40: 08 4C 31 48 31 08 4C 31 48 32 08 4C 31 48 33 08  // .L1H1.L1H2.L1H3.
  1C50: 4C 31 48 34 08 4C 31 48 35 08 4C 31 48 36 08 4C  // L1H4.L1H5.L1H6.L
  1C60: 31 48 37 08 4C 31 48 38 08 4C 31 50 4C 08 4C 31  // 1H7.L1H8.L1PL.L1
  1C70: 4D 30 08 4C 31 4D 31 08 4C 31 4D 32 08 4C 31 4D  // M0.L1M1.L1M2.L1M
  1C80: 33 08 4C 31 4D 34 08 4C 31 4D 35 08 4C 31 4D 36  // 3.L1M4.L1M5.L1M6
  1C90: 08 4C 31 4D 37 08 4C 31 4D 38 08 4C 31 4D 39 08  // .L1M7.L1M8.L1M9.
  1CA0: 4C 31 4D 41 08 4C 31 4D 42 08 4C 31 4D 43 08 4C  // L1MA.L1MB.L1MC.L
  1CB0: 31 4D 44 08 4C 31 4D 45 08 4C 31 4D 46 08 4C 31  // 1MD.L1ME.L1MF.L1
  1CC0: 44 49 08 4C 31 42 53 08 4C 31 41 30 10 4C 31 41  // DI.L1BS.L1A0.L1A
  1CD0: 31 10 4C 31 41 32 10 4C 31 41 33 10 4C 31 41 34  // 1.L1A2.L1A3.L1A4
  1CE0: 10 4C 31 41 35 10 4C 31 41 36 10 4C 31 41 37 10  // .L1A5.L1A6.L1A7.
  1CF0: 4C 31 41 38 10 4C 31 41 39 10 4C 31 41 41 10 4C  // L1A8.L1A9.L1AA.L
  1D00: 31 41 42 10 4C 31 44 30 08 4C 31 44 31 08 4C 31  // 1AB.L1D0.L1D1.L1
  1D10: 44 32 08 4C 31 44 33 08 4C 31 44 34 08 4C 31 44  // D2.L1D3.L1D4.L1D
  1D20: 35 08 4C 31 44 36 08 4C 31 44 37 08 4C 31 44 38  // 5.L1D6.L1D7.L1D8
  1D30: 08 4C 31 44 39 08 4C 31 44 41 08 4C 31 44 42 08  // .L1D9.L1DA.L1DB.
  1D40: 4C 31 44 56 08 4C 31 43 56 08 4C 31 4C 55 08 4C  // L1DV.L1CV.L1LU.L
  1D50: 31 4E 4C 08 4C 31 45 45 08 4C 31 56 43 08 4C 31  // 1NL.L1EE.L1VC.L1
  1D60: 46 53 08 4C 31 44 47 08 4C 31 43 30 08 4C 31 43  // FS.L1DG.L1C0.L1C
  1D70: 31 08 4C 31 43 32 08 4C 31 43 33 08 4C 31 43 4B  // 1.L1C2.L1C3.L1CK
  1D80: 20 4C 31 43 4C 08 4C 32 53 4D 08 4C 32 48 30 08  //  L1CL.L2SM.L2H0.
  1D90: 4C 32 48 31 08 4C 32 48 32 08 4C 32 48 33 08 4C  // L2H1.L2H2.L2H3.L
  1DA0: 32 48 34 08 4C 32 48 35 08 4C 32 48 36 08 4C 32  // 2H4.L2H5.L2H6.L2
  1DB0: 48 37 08 4C 32 48 38 08 4C 32 50 4C 08 4C 32 4D  // H7.L2H8.L2PL.L2M
  1DC0: 30 08 4C 32 4D 31 08 4C 32 4D 32 08 4C 32 4D 33  // 0.L2M1.L2M2.L2M3
  1DD0: 08 4C 32 4D 34 08 4C 32 4D 35 08 4C 32 4D 36 08  // .L2M4.L2M5.L2M6.
  1DE0: 4C 32 4D 37 08 4C 32 4D 38 08 4C 32 4D 39 08 4C  // L2M7.L2M8.L2M9.L
  1DF0: 32 4D 41 08 4C 32 4D 42 08 4C 32 4D 43 08 4C 32  // 2MA.L2MB.L2MC.L2
  1E00: 4D 44 08 4C 32 4D 45 08 4C 32 4D 46 08 4C 32 44  // MD.L2ME.L2MF.L2D
  1E10: 49 08 4C 32 42 53 08 4C 32 41 30 10 4C 32 41 31  // I.L2BS.L2A0.L2A1
  1E20: 10 4C 32 41 32 10 4C 32 41 33 10 4C 32 41 34 10  // .L2A2.L2A3.L2A4.
  1E30: 4C 32 41 35 10 4C 32 41 36 10 4C 32 41 37 10 4C  // L2A5.L2A6.L2A7.L
  1E40: 32 41 38 10 4C 32 41 39 10 4C 32 41 41 10 4C 32  // 2A8.L2A9.L2AA.L2
  1E50: 41 42 10 4C 32 44 30 08 4C 32 44 31 08 4C 32 44  // AB.L2D0.L2D1.L2D
  1E60: 32 08 4C 32 44 33 08 4C 32 44 34 08 4C 32 44 35  // 2.L2D3.L2D4.L2D5
  1E70: 08 4C 32 44 36 08 4C 32 44 37 08 4C 32 44 38 08  // .L2D6.L2D7.L2D8.
  1E80: 4C 32 44 39 08 4C 32 44 41 08 4C 32 44 42 08 4C  // L2D9.L2DA.L2DB.L
  1E90: 32 44 56 08 4C 32 43 56 08 4C 32 4C 55 08 4C 32  // 2DV.L2CV.L2LU.L2
  1EA0: 4E 4C 08 4C 32 45 45 08 4C 32 56 43 08 4C 32 46  // NL.L2EE.L2VC.L2F
  1EB0: 53 08 4C 32 44 47 08 4C 32 43 30 08 4C 32 43 31  // S.L2DG.L2C0.L2C1
  1EC0: 08 4C 32 43 32 08 4C 32 43 33 08 4C 32 43 4B 20  // .L2C2.L2C3.L2CK 
  1ED0: 4C 32 43 4C 08 4C 33 53 4D 08 4C 33 48 30 08 4C  // L2CL.L3SM.L3H0.L
  1EE0: 33 48 31 08 4C 33 48 32 08 4C 33 48 33 08 4C 33  // 3H1.L3H2.L3H3.L3
  1EF0: 48 34 08 4C 33 48 35 08 4C 33 48 36 08 4C 33 48  // H4.L3H5.L3H6.L3H
  1F00: 37 08 4C 33 48 38 08 4C 33 50 4C 08 4C 33 4D 30  // 7.L3H8.L3PL.L3M0
  1F10: 08 4C 33 4D 31 08 4C 33 4D 32 08 4C 33 4D 33 08  // .L3M1.L3M2.L3M3.
  1F20: 4C 33 4D 34 08 4C 33 4D 35 08 4C 33 4D 36 08 4C  // L3M4.L3M5.L3M6.L
  1F30: 33 4D 37 08 4C 33 4D 38 08 4C 33 4D 39 08 4C 33  // 3M7.L3M8.L3M9.L3
  1F40: 4D 41 08 4C 33 4D 42 08 4C 33 4D 43 08 4C 33 4D  // MA.L3MB.L3MC.L3M
  1F50: 44 08 4C 33 4D 45 08 4C 33 4D 46 08 4C 33 44 49  // D.L3ME.L3MF.L3DI
  1F60: 08 4C 33 42 53 08 4C 33 41 30 10 4C 33 41 31 10  // .L3BS.L3A0.L3A1.
  1F70: 4C 33 41 32 10 4C 33 41 33 10 4C 33 41 34 10 4C  // L3A2.L3A3.L3A4.L
  1F80: 33 41 35 10 4C 33 41 36 10 4C 33 41 37 10 4C 33  // 3A5.L3A6.L3A7.L3
  1F90: 41 38 10 4C 33 41 39 10 4C 33 41 41 10 4C 33 41  // A8.L3A9.L3AA.L3A
  1FA0: 42 10 4C 33 44 30 08 4C 33 44 31 08 4C 33 44 32  // B.L3D0.L3D1.L3D2
  1FB0: 08 4C 33 44 33 08 4C 33 44 34 08 4C 33 44 35 08  // .L3D3.L3D4.L3D5.
  1FC0: 4C 33 44 36 08 4C 33 44 37 08 4C 33 44 38 08 4C  // L3D6.L3D7.L3D8.L
  1FD0: 33 44 39 08 4C 33 44 41 08 4C 33 44 42 08 4C 33  // 3D9.L3DA.L3DB.L3
  1FE0: 44 56 08 4C 33 43 56 08 4C 33 4C 55 08 4C 33 4E  // DV.L3CV.L3LU.L3N
  1FF0: 4C 08 4C 33 45 45 08 4C 33 56 43 08 4C 33 46 53  // L.L3EE.L3VC.L3FS
  2000: 08 4C 33 44 47 08 4C 33 43 30 08 4C 33 43 31 08  // .L3DG.L3C0.L3C1.
  2010: 4C 33 43 32 08 4C 33 43 33 08 4C 33 43 4B 20 4C  // L3C2.L3C3.L3CK L
  2020: 33 43 4C 08 45 43 52 31 08 00 48 0F 49 32 53 43  // 3CL.ECR1..H.I2SC
  2030: 08 4F 44 56 30 08 4F 44 56 31 08 4F 44 56 32 08  // .ODV0.ODV1.ODV2.
  2040: 4F 44 56 33 08 4F 44 56 34 08 4F 44 56 35 08 55  // ODV3.ODV4.ODV5.U
  2050: 42 43 42 20 45 4D 4F 44 08 57 49 46 43 08 00 38  // BCB EMOD.WIFC..8
  2060: 54 50 4C 53 08 54 50 44 42 08 54 50 44 48 10 54  // TPLS.TPDB.TPDH.T
  2070: 50 44 53 08 41 44 50 4D 20 41 47 31 4C 40 04 41  // PDS.ADPM AG1L@.A
  2080: 47 31 48 40 04 41 47 32 4C 40 04 41 47 32 48 40  // G1H@.AG2L@.AG2H@
  2090: 04 41 47 33 4C 40 04 41 47 33 48 40 04 48 45 46  // .AG3L@.AG3H@.HEF
  20A0: 45 08 58 44 43 45 08 53 54 58 45 08 53 54 58 30  // E.XDCE.STXE.STX0
  20B0: 08 53 54 58 31 08 53 54 58 32 08 53 54 58 33 08  // .STX1.STX2.STX3.
  20C0: 53 54 58 34 08 53 54 58 35 08 53 54 58 36 08 53  // STX4.STX5.STX6.S
  20D0: 54 58 37 08 53 54 58 38 08 53 54 58 39 08 52 54  // TX7.STX8.STX9.RT
  20E0: 56 4D 08 55 53 54 43 08 42 41 54 50 08 54 53 44  // VM.USTC.BATP.TSD
  20F0: 42 08 44 45 50 43 08 50 44 46 43 08 49 56 43 4D  // B.DEPC.PDFC.IVCM
  2100: 08 48 45 42 31 20 52 42 59 31 08 52 42 59 32 08  // .HEB1 RBY1.RBY2.
  2110: 53 43 53 53 08 48 41 49 44 08 4E 43 54 43 08 4E  // SCSS.HAID.NCTC.N
  2120: 43 54 49 08 4E 43 54 48 08 48 53 49 4F 08 54 50  // CTI.NCTH.HSIO.TP
  2130: 50 54 08 53 48 41 50 08 45 49 41 50 08 5A 50 4F  // PT.SHAP.EIAP.ZPO
  2140: 44 08 53 52 53 50 20 43 45 44 53 08 45 48 4B 33  // D.SRSP CEDS.EHK3
  2150: 08 45 48 4B 34 08 45 48 4B 35 08 45 48 4B 36 08  // .EHK4.EHK5.EHK6.
  2160: 45 48 4B 37 08 45 48 4B 38 08 56 42 56 50 08 56  // EHK7.EHK8.VBVP.V
  2170: 42 56 44 08 56 42 48 42 08 56 42 52 4C 08 53 4D  // BVD.VBHB.VBRL.SM
  2180: 53 53 08 56 42 53 54 08 41 44 41 53 08 50 50 42  // SS.VBST.ADAS.PPB
  2190: 47 20 41 45 41 42 08 41 48 44 42 08 50 42 53 44  // G AEAB.AHDB.PBSD
  21A0: 08 44 50 4C 4C 08 44 50 48 4C 08 50 57 49 47 08  // .DPLL.DPHL.PWIG.
  21B0: 4D 45 53 45 08 49 43 41 54 08 49 43 50 56 08 49  // MESE.ICAT.ICPV.I
  21C0: 43 43 52 08 49 43 43 33 08 49 43 48 54 08 58 53  // CCR.ICC3.ICHT.XS
  21D0: 4D 49 20 50 41 50 45 20 50 53 54 57 20 4D 57 4C  // MI PAPE PSTW MWL
  21E0: 52 20 55 50 38 50 20 4D 53 32 52 20 4D 53 32 50  // R UP8P MS2R MS2P
  21F0: 20 55 43 53 49 08 55 43 47 31 20 55 43 47 32 20  //  UCSI.UCG1 UCG2 
  2200: 57 47 55 52 20 57 52 46 45 08 57 52 43 31 08 57  // WGUR WRFE.WRC1.W
  2210: 52 43 32 08 57 52 43 33 08 57 52 43 34 08 41 57  // RC2.WRC3.WRC4.AW
  2220: 56 49 20 00 48 06 57 54 53 50 08 57 47 57 53 08  // VI .H.WTSP.WGWS.
  2230: 50 49 44 45 08 43 30 56 45 08 43 30 57 30 08 43  // PIDE.C0VE.C0W0.C
  2240: 30 57 31 08 43 30 57 32 08 43 30 57 33 08 43 30  // 0W1.C0W2.C0W3.C0
  2250: 57 34 08 43 30 57 35 08 43 31 56 45 08 43 31 57  // W4.C0W5.C1VE.C1W
  2260: 30 08 43 31 57 31 08 43 31 57 32 08 43 31 57 33  // 0.C1W1.C1W2.C1W3
  2270: 08 43 31 57 34 08 43 31 57 35 08 43 32 56 45 08  // .C1W4.C1W5.C2VE.
  2280: 43 32 57 30 08 43 32 57 31 08 43 32 57 32 08 43  // C2W0.C2W1.C2W2.C
  2290: 32 57 33 08 43 32 57 34 08 43 32 57 35 08 43 33  // 2W3.C2W4.C2W5.C3
  22A0: 56 45 08 43 33 57 30 08 43 33 57 31 08 43 33 57  // VE.C3W0.C3W1.C3W
  22B0: 32 08 43 33 57 33 08 43 33 57 34 08 43 33 57 35  // 2.C3W3.C3W4.C3W5
  22C0: 08 4C 30 4C 45 08 4C 30 50 50 08 4C 30 56 52 08  // .L0LE.L0PP.L0VR.
  22D0: 4C 31 4C 45 08 4C 31 50 50 08 4C 31 56 52 08 4C  // L1LE.L1PP.L1VR.L
  22E0: 32 4C 45 08 4C 32 50 50 08 4C 32 56 52 08 4C 33  // 2LE.L2PP.L2VR.L3
  22F0: 4C 45 08 4C 33 50 50 08 4C 33 56 52 08 57 4C 52  // LE.L3PP.L3VR.WLR
  2300: 50 08 53 53 52 50 08 57 49 50 52 08 00 40 08 55  // P.SSRP.WIPR..@.U
  2310: 54 43 4D 08 55 53 4D 45 08 55 50 54 31 08 55 50  // TCM.USME.UPT1.UP
  2320: 54 32 08 54 57 49 4E 08 54 52 57 41 08 50 45 57  // T2.TWIN.TRWA.PEW
  2330: 45 08 00 48 0F 41 45 53 33 08                    // E..H.AES3.

    OperationRegion (EXBU, SystemMemory, 0x68F0B000, 0x0012)

  233A: 5B 80 45 58 42 55 00 0C 00 B0 F0 68 0B 12 00     // [.EXBU.....h...

    Field (EXBU, AnyAcc, Lock, Preserve)
    {
        DAT0,   8, 
        TPMD,   8, 
        TCMD,   8, 
        IDMN,   16, 
        IDPC,   16, 
        DLPN,   40, 
        PMFG,   8, 
        CAMD,   8, 
        ECSW,   8, 
        HFSE,   8, 
        CBID,   16
    }


  2349: 5B 81 3D 45 58 42 55 10 44 41 54 30 08 54 50 4D  // [.=EXBU.DAT0.TPM
  2359: 44 08 54 43 4D 44 08 49 44 4D 4E 10 49 44 50 43  // D.TCMD.IDMN.IDPC
  2369: 10 44 4C 50 4E 28 50 4D 46 47 08 43 41 4D 44 08  // .DLPN(PMFG.CAMD.
  2379: 45 43 53 57 08 48 46 53 45 08 43 42 49 44 10     // ECSW.HFSE.CBID.

    OperationRegion (OGNV, SystemMemory, 0x68F02000, 0x0011)

  2388: 5B 80 4F 47 4E 56 00 0C 00 20 F0 68 0B 11 00     // [.OGNV... .h...

    Field (OGNV, AnyAcc, Lock, Preserve)
    {
        ISSD,   8, 
        FSS0,   8, 
        SLM,    8, 
        SLP,    8, 
        SLV,    16, 
        NSLM,   8, 
        NSLP,   8, 
        NSLV,   16, 
        HUBP,   8, 
        IPFI,   8, 
        TMP0,   8, 
        TMP1,   8, 
        TMP2,   8, 
        GPL1,   8, 
        GPL2,   8
    }


  2397: 5B 81 42 05 4F 47 4E 56 10 49 53 53 44 08 46 53  // [.B.OGNV.ISSD.FS
  23A7: 53 30 08 53 4C 4D 5F 08 53 4C 50 5F 08 53 4C 56  // S0.SLM_.SLP_.SLV
  23B7: 5F 10 4E 53 4C 4D 08 4E 53 4C 50 08 4E 53 4C 56  // _.NSLM.NSLP.NSLV
  23C7: 10 48 55 42 50 08 49 50 46 49 08 54 4D 50 30 08  // .HUBP.IPFI.TMP0.
  23D7: 54 4D 50 31 08 54 4D 50 32 08 47 50 4C 31 08 47  // TMP1.TMP2.GPL1.G
  23E7: 50 4C 32 08                                      // PL2.

    OperationRegion (DEGA, SystemMemory, 0x68F03000, 0x0011)

  23EB: 5B 80 44 45 47 41 00 0C 00 30 F0 68 0B 11 00     // [.DEGA...0.h...

    Field (DEGA, AnyAcc, Lock, Preserve)
    {
        DDDR,   8, 
        BIFO,   8, 
        NGFE,   8, 
        NGAT,   8, 
        NGPT,   8, 
        NGCT,   8, 
        NGHT,   8, 
        NGC3,   8, 
        NGFS,   8, 
        DSCE,   8, 
        DSAT,   8, 
        DSPT,   8, 
        DSCT,   8, 
        DSHT,   8, 
        DSC3,   8, 
        DSCS,   8, 
        SKDS,   8
    }


  23FA: 5B 81 4C 05 44 45 47 41 10 44 44 44 52 08 42 49  // [.L.DEGA.DDDR.BI
  240A: 46 4F 08 4E 47 46 45 08 4E 47 41 54 08 4E 47 50  // FO.NGFE.NGAT.NGP
  241A: 54 08 4E 47 43 54 08 4E 47 48 54 08 4E 47 43 33  // T.NGCT.NGHT.NGC3
  242A: 08 4E 47 46 53 08 44 53 43 45 08 44 53 41 54 08  // .NGFS.DSCE.DSAT.
  243A: 44 53 50 54 08 44 53 43 54 08 44 53 48 54 08 44  // DSPT.DSCT.DSHT.D
  244A: 53 43 33 08 44 53 43 53 08 53 4B 44 53 08        // SC3.DSCS.SKDS.

    Scope (_SB)
    {

  2458: 10 83 03 01 5F 53 42 5F                          // ...._SB_

        Name (PRSA, 
  2460: 08 50 52 53 41                                   // .PRSA

ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,10,11,12,14,15}
        })

  2465: 11 09 0A 06 23 78 DC 18 79 00                    // ....#x..y.

        Alias (PRSA, PRSB)

  246F: 06 50 52 53 41 50 52 53 42                       // .PRSAPRSB

        Alias (PRSA, PRSC)

  2478: 06 50 52 53 41 50 52 53 43                       // .PRSAPRSC

        Alias (PRSA, PRSD)

  2481: 06 50 52 53 41 50 52 53 44                       // .PRSAPRSD

        Alias (PRSA, PRSE)

  248A: 06 50 52 53 41 50 52 53 45                       // .PRSAPRSE

        Alias (PRSA, PRSF)

  2493: 06 50 52 53 41 50 52 53 46                       // .PRSAPRSF

        Alias (PRSA, PRSG)

  249C: 06 50 52 53 41 50 52 53 47                       // .PRSAPRSG

        Alias (PRSA, PRSH)

  24A5: 06 50 52 53 41 50 52 53 48                       // .PRSAPRSH

        Name (PR00, 
  24AE: 08 50 52 30 30                                   // .PR00

Package (0x2A)
        {

  24B3: 12 41 26 2A                                      // .A&*

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  24B7: 12 0D 04 0C FF FF 01 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  24C5: 12 0D 04 0C FF FF 01 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  24D3: 12 0E 04 0C FF FF 01 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  24E2: 12 0E 04 0C FF FF 01 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  24F1: 12 0D 04 0C FF FF 04 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  24FF: 12 0D 04 0C FF FF 05 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  250D: 12 0D 04 0C FF FF 08 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  251B: 12 0D 04 0C FF FF 1F 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2529: 12 0D 04 0C FF FF 1F 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2537: 12 0E 04 0C FF FF 1F 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  2546: 12 0E 04 0C FF FF 1F 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2555: 12 0D 04 0C FF FF 1E 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2563: 12 0D 04 0C FF FF 1E 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2571: 12 0E 04 0C FF FF 1E 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  2580: 12 0E 04 0C FF FF 1E 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  258F: 12 0D 04 0C FF FF 1D 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  259D: 12 0D 04 0C FF FF 1D 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  25AB: 12 0E 04 0C FF FF 1D 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  25BA: 12 0E 04 0C FF FF 1D 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  25C9: 12 0D 04 0C FF FF 1C 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  25D7: 12 0D 04 0C FF FF 1C 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  25E5: 12 0E 04 0C FF FF 1C 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  25F4: 12 0E 04 0C FF FF 1C 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2603: 12 0D 04 0C FF FF 1B 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2611: 12 0D 04 0C FF FF 1B 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  261F: 12 0E 04 0C FF FF 1B 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  262E: 12 0E 04 0C FF FF 1B 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  263D: 12 0D 04 0C FF FF 16 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  264B: 12 0D 04 0C FF FF 16 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2659: 12 0E 04 0C FF FF 16 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  2668: 12 0E 04 0C FF FF 16 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2677: 12 0D 04 0C FF FF 15 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2685: 12 0D 04 0C FF FF 15 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2693: 12 0E 04 0C FF FF 15 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  26A2: 12 0E 04 0C FF FF 15 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  26B1: 12 0D 04 0C FF FF 14 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  26BF: 12 0E 04 0C FF FF 14 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  26CE: 12 0D 04 0C FF FF 14 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  26DC: 12 0E 04 0C FF FF 14 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  26EB: 12 0D 04 0C FF FF 13 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  26F9: 12 0D 04 0C FF FF 02 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })

  2707: 12 0D 04 0C FF FF 17 00 00 4C 4E 4B 41 00        // .........LNKA.

        Name (AR00, 
  2715: 08 41 52 30 30                                   // .AR00

Package (0x2A)
        {

  271A: 12 4D 20 2A                                      // .M *

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  271E: 12 0B 04 0C FF FF 01 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 


  272A: 12 0B 04 0C FF FF 01 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2736: 12 0C 04 0C FF FF 01 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  2743: 12 0C 04 0C FF FF 01 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2750: 12 0B 04 0C FF FF 04 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0005FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  275C: 12 0B 04 0C FF FF 05 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0008FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2768: 12 0B 04 0C FF FF 08 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2774: 12 0B 04 0C FF FF 1F 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2780: 12 0B 04 0C FF FF 1F 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  278C: 12 0C 04 0C FF FF 1F 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  2799: 12 0C 04 0C FF FF 1F 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001EFFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


  27A6: 12 0B 04 0C FF FF 1E 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x001EFFFF, 
                One, 
                Zero, 
                0x15
            }, 


  27B2: 12 0B 04 0C FF FF 1E 00 01 00 0A 15              // ............

            Package (0x04)
            {
                0x001EFFFF, 
                0x02, 
                Zero, 
                0x16
            }, 


  27BE: 12 0C 04 0C FF FF 1E 00 0A 02 00 0A 16           // .............

            Package (0x04)
            {
                0x001EFFFF, 
                0x03, 
                Zero, 
                0x17
            }, 


  27CB: 12 0C 04 0C FF FF 1E 00 0A 03 00 0A 17           // .............

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  27D8: 12 0B 04 0C FF FF 1D 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001DFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  27E4: 12 0B 04 0C FF FF 1D 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001DFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  27F0: 12 0C 04 0C FF FF 1D 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001DFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  27FD: 12 0C 04 0C FF FF 1D 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  280A: 12 0B 04 0C FF FF 1C 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2816: 12 0B 04 0C FF FF 1C 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2822: 12 0C 04 0C FF FF 1C 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  282F: 12 0C 04 0C FF FF 1C 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  283C: 12 0B 04 0C FF FF 1B 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001BFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2848: 12 0B 04 0C FF FF 1B 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001BFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2854: 12 0C 04 0C FF FF 1B 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001BFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  2861: 12 0C 04 0C FF FF 1B 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  286E: 12 0B 04 0C FF FF 16 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x11
            }, 


  287A: 12 0B 04 0C FF FF 16 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2886: 12 0C 04 0C FF FF 16 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  2893: 12 0C 04 0C FF FF 16 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  28A0: 12 0B 04 0C FF FF 15 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x11
            }, 


  28AC: 12 0B 04 0C FF FF 15 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  28B8: 12 0C 04 0C FF FF 15 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  28C5: 12 0C 04 0C FF FF 15 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  28D2: 12 0B 04 0C FF FF 14 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0014FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  28DE: 12 0C 04 0C FF FF 14 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0014FFFF, 
                One, 
                Zero, 
                0x11
            }, 


  28EB: 12 0B 04 0C FF FF 14 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0014FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  28F7: 12 0C 04 0C FF FF 14 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


  2904: 12 0B 04 0C FF FF 13 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2910: 12 0B 04 0C FF FF 02 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })

  291C: 12 0B 04 0C FF FF 17 00 00 00 0A 10              // ............

        Name (PR01, 
  2928: 08 50 52 30 31                                   // .PR01

Package (0x04)
        {

  292D: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2930: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  293C: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2948: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  2955: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR01, 
  2962: 08 41 52 30 31                                   // .AR01

Package (0x04)
        {

  2967: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  296A: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2974: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  297E: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  2989: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR02, 
  2994: 08 50 52 30 32                                   // .PR02

Package (0x04)
        {

  2999: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  299C: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  29A8: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  29B4: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  29C1: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR02, 
  29CE: 08 41 52 30 32                                   // .AR02

Package (0x04)
        {

  29D3: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  29D6: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  29E0: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  29EA: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  29F5: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR03, 
  2A00: 08 50 52 30 33                                   // .PR03

Package (0x04)
        {

  2A05: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  2A08: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  2A14: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  2A20: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  2A2D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR03, 
  2A3A: 08 41 52 30 33                                   // .AR03

Package (0x04)
        {

  2A3F: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  2A42: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  2A4C: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  2A56: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  2A61: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0C, 
  2A6C: 08 50 52 30 43                                   // .PR0C

Package (0x04)
        {

  2A71: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2A74: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2A80: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2A8C: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  2A99: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR0C, 
  2AA6: 08 41 52 30 43                                   // .AR0C

Package (0x04)
        {

  2AAB: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2AAE: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2AB8: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2AC2: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  2ACD: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR0D, 
  2AD8: 08 50 52 30 44                                   // .PR0D

Package (0x04)
        {

  2ADD: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  2AE0: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  2AEC: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  2AF8: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  2B05: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR0D, 
  2B12: 08 41 52 30 44                                   // .AR0D

Package (0x04)
        {

  2B17: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  2B1A: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  2B24: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  2B2E: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  2B39: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0E, 
  2B44: 08 50 52 30 45                                   // .PR0E

Package (0x04)
        {

  2B49: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  2B4C: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  2B58: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  2B64: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  2B71: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0E, 
  2B7E: 08 41 52 30 45                                   // .AR0E

Package (0x04)
        {

  2B83: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  2B86: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  2B90: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  2B9A: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  2BA5: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0F, 
  2BB0: 08 50 52 30 46                                   // .PR0F

Package (0x04)
        {

  2BB5: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  2BB8: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  2BC4: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  2BD0: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  2BDD: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR0F, 
  2BEA: 08 41 52 30 46                                   // .AR0F

Package (0x04)
        {

  2BEF: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  2BF2: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  2BFC: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  2C06: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  2C11: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR10, 
  2C1C: 08 50 52 31 30                                   // .PR10

Package (0x04)
        {

  2C21: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2C24: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2C30: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2C3C: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  2C49: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR10, 
  2C56: 08 41 52 31 30                                   // .AR10

Package (0x04)
        {

  2C5B: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2C5E: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2C68: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2C72: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  2C7D: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR04, 
  2C88: 08 50 52 30 34                                   // .PR04

Package (0x04)
        {

  2C8D: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2C90: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2C9C: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2CA8: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  2CB5: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR04, 
  2CC2: 08 41 52 30 34                                   // .AR04

Package (0x04)
        {

  2CC7: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2CCA: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2CD4: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2CDE: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  2CE9: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR05, 
  2CF4: 08 50 52 30 35                                   // .PR05

Package (0x04)
        {

  2CF9: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  2CFC: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  2D08: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  2D14: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  2D21: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR05, 
  2D2E: 08 41 52 30 35                                   // .AR05

Package (0x04)
        {

  2D33: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  2D36: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  2D40: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  2D4A: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  2D55: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR06, 
  2D60: 08 50 52 30 36                                   // .PR06

Package (0x04)
        {

  2D65: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  2D68: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  2D74: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  2D80: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  2D8D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR06, 
  2D9A: 08 41 52 30 36                                   // .AR06

Package (0x04)
        {

  2D9F: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  2DA2: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  2DAC: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  2DB6: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  2DC1: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR07, 
  2DCC: 08 50 52 30 37                                   // .PR07

Package (0x04)
        {

  2DD1: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  2DD4: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  2DE0: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  2DEC: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  2DF9: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR07, 
  2E06: 08 41 52 30 37                                   // .AR07

Package (0x04)
        {

  2E0B: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  2E0E: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  2E18: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  2E22: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  2E2D: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR08, 
  2E38: 08 50 52 30 38                                   // .PR08

Package (0x04)
        {

  2E3D: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2E40: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2E4C: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  2E58: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  2E65: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR08, 
  2E72: 08 41 52 30 38                                   // .AR08

Package (0x04)
        {

  2E77: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  2E7A: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  2E84: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  2E8E: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  2E99: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR09, 
  2EA4: 08 50 52 30 39                                   // .PR09

Package (0x04)
        {

  2EA9: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  2EAC: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  2EB8: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  2EC4: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  2ED1: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR09, 
  2EDE: 08 41 52 30 39                                   // .AR09

Package (0x04)
        {

  2EE3: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  2EE6: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  2EF0: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  2EFA: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  2F05: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0A, 
  2F10: 08 50 52 30 41                                   // .PR0A

Package (0x04)
        {

  2F15: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  2F18: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  2F24: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  2F30: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  2F3D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0A, 
  2F4A: 08 41 52 30 41                                   // .AR0A

Package (0x04)
        {

  2F4F: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  2F52: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  2F5C: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  2F66: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  2F71: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0B, 
  2F7C: 08 50 52 30 42                                   // .PR0B

Package (0x04)
        {

  2F81: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  2F84: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  2F90: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  2F9C: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  2FA9: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR0B, 
  2FB6: 08 41 52 30 42                                   // .AR0B

Package (0x04)
        {

  2FBB: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  2FBE: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  2FC8: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  2FD2: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  2FDD: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR14, 
  2FE8: 08 50 52 31 34                                   // .PR14

Package (0x04)
        {

  2FED: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  2FF0: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  2FFC: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  3008: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  3015: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR14, 
  3022: 08 41 52 31 34                                   // .AR14

Package (0x04)
        {

  3027: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  302A: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  3034: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  303E: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  3049: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR15, 
  3054: 08 50 52 31 35                                   // .PR15

Package (0x04)
        {

  3059: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  305C: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  3068: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  3074: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  3081: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR15, 
  308E: 08 41 52 31 35                                   // .AR15

Package (0x04)
        {

  3093: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  3096: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  30A0: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  30AA: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  30B5: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR16, 
  30C0: 08 50 52 31 36                                   // .PR16

Package (0x04)
        {

  30C5: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  30C8: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  30D4: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  30E0: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  30ED: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR16, 
  30FA: 08 41 52 31 36                                   // .AR16

Package (0x04)
        {

  30FF: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  3102: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  310C: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  3116: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  3121: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR17, 
  312C: 08 50 52 31 37                                   // .PR17

Package (0x04)
        {

  3131: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  3134: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  3140: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  314C: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  3159: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR17, 
  3166: 08 41 52 31 37                                   // .AR17

Package (0x04)
        {

  316B: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  316E: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  3178: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  3182: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  318D: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR18, 
  3198: 08 50 52 31 38                                   // .PR18

Package (0x04)
        {

  319D: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  31A0: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  31AC: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  31B8: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  31C5: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR18, 
  31D2: 08 41 52 31 38                                   // .AR18

Package (0x04)
        {

  31D7: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  31DA: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  31E4: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  31EE: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  31F9: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR19, 
  3204: 08 50 52 31 39                                   // .PR19

Package (0x04)
        {

  3209: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  320C: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  3218: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  3224: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  3231: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR19, 
  323E: 08 41 52 31 39                                   // .AR19

Package (0x04)
        {

  3243: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  3246: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  3250: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  325A: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  3265: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR1A, 
  3270: 08 50 52 31 41                                   // .PR1A

Package (0x04)
        {

  3275: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  3278: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  3284: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  3290: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  329D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR1A, 
  32AA: 08 41 52 31 41                                   // .AR1A

Package (0x04)
        {

  32AF: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  32B2: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  32BC: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  32C6: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  32D1: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR1B, 
  32DC: 08 50 52 31 42                                   // .PR1B

Package (0x04)
        {

  32E1: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  32E4: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  32F0: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  32FC: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  3309: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR1B, 
  3316: 08 41 52 31 42                                   // .AR1B

Package (0x04)
        {

  331B: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  331E: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  3328: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  3332: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  333D: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR11, 
  3348: 08 50 52 31 31                                   // .PR11

Package (0x04)
        {

  334D: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  3350: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  335C: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  3368: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  3375: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR11, 
  3382: 08 41 52 31 31                                   // .AR11

Package (0x04)
        {

  3387: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  338A: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  3394: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  339E: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  33A9: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR12, 
  33B4: 08 50 52 31 32                                   // .PR12

Package (0x04)
        {

  33B9: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  33BC: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  33C8: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  33D4: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  33E1: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR12, 
  33EE: 08 41 52 31 32                                   // .AR12

Package (0x04)
        {

  33F3: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  33F6: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  3400: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  340A: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  3415: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR13, 
  3420: 08 50 52 31 33                                   // .PR13

Package (0x04)
        {

  3425: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  3428: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  3434: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  3440: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  344D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR13, 
  345A: 08 41 52 31 33                                   // .AR13

Package (0x04)
        {

  345F: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  3462: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  346C: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  3476: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })
    }


  3481: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

    Scope (_SB)
    {

  348C: 10 8F 63 06 5F 53 42 5F                          // ..c._SB_

        Device (PCI0)
        {

  3494: 5B 82 86 63 06 50 43 49 30                       // [..c.PCI0

            Name (_HID, EisaId ("PNP0A08"))  // _HID: Hardware ID

  349D: 08 5F 48 49 44 0C 41 D0 0A 08                    // ._HID.A...

            Name (_CID, EisaId ("PNP0A03"))  // _CID: Compatible ID

  34A7: 08 5F 43 49 44 0C 41 D0 0A 03                    // ._CID.A...

            Name (_ADR, Zero)  // _ADR: Address

  34B1: 08 5F 41 44 52 00                                // ._ADR.

            Method (^BN00, 0, NotSerialized)
            {

  34B7: 14 09 5E 42 4E 30 30 00                          // ..^BN00.

                Return (Zero)
            }


  34BF: A4 00                                            // ..

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {

  34C1: 14 0B 5F 42 42 4E 00                             // .._BBN.

                Return (BN00 ())
            }


  34C8: A4 42 4E 30 30                                   // .BN00

            Name (_UID, Zero)  // _UID: Unique ID

  34CD: 08 5F 55 49 44 00                                // ._UID.

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

  34D3: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

  34DA: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR00)
                }


  34E0: A4 41 52 30 30                                   // .AR00

                Return (PR00)
            }


  34E5: A4 50 52 30 30                                   // .PR00

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)

  34EA: 5B 80 48 42 55 53 02 00 0B 00 01                 // [.HBUS.....

            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                D1F2,   1, 
                D1F1,   1, 
                D1F0,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                PMLK,   1, 
                    ,   3, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }


  34F5: 5B 81 4F 0E 48 42 55 53 03 00 40 20 45 50 45 4E  // [.O.HBUS..@ EPEN
  3505: 01 00 0B 45 50 42 52 14 00 20 4D 48 45 4E 01 00  // ...EPBR.. MHEN..
  3515: 0E 4D 48 42 52 11 00 20 47 43 4C 4B 01 00 1F 44  // .MHBR.. GCLK...D
  3525: 30 45 4E 01 44 31 46 32 01 44 31 46 31 01 44 31  // 0EN.D1F2.D1F1.D1
  3535: 46 30 01 00 4C 05 50 58 45 4E 01 50 58 53 5A 02  // F0..L.PXEN.PXSZ.
  3545: 00 17 50 58 42 52 06 00 20 44 49 45 4E 01 00 0B  // ..PXBR.. DIEN...
  3555: 44 49 42 52 14 00 20 00 14 4D 45 42 52 0C 00 40  // DIBR.. ..MEBR..@
  3565: 06 50 4D 4C 4B 01 00 03 50 4D 30 48 02 00 02 50  // .PMLK...PM0H...P
  3575: 4D 31 4C 02 00 02 50 4D 31 48 02 00 02 50 4D 32  // M1L...PM1H...PM2
  3585: 4C 02 00 02 50 4D 32 48 02 00 02 50 4D 33 4C 02  // L...PM2H...PM3L.
  3595: 00 02 50 4D 33 48 02 00 02 50 4D 34 4C 02 00 02  // ..PM3H...PM4L...
  35A5: 50 4D 34 48 02 00 02 50 4D 35 4C 02 00 02 50 4D  // PM4H...PM5L...PM
  35B5: 35 48 02 00 02 50 4D 36 4C 02 00 02 50 4D 36 48  // 5H...PM6L...PM6H
  35C5: 02 00 02 00 48 10 00 14 54 55 55 44 13 00 49 07  // ....H...TUUD..I.
  35D5: 00 14 54 4C 55 44 0C 00 40 04 00 07 48 54 53 45  // ..TLUD..@...HTSE
  35E5: 01                                               // .

            Name (BUF0, 
  35E6: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, _Y00)
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xDFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xE0000000,         // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000010000, // Range Minimum
                    0x000000000001FFFF, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000010000, // Length
                    ,, _Y0F, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFD000000,         // Range Minimum
                    0xFE7FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x01800000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
            })

  35EB: 11 41 22 0B 1C 02 88 0D 00 02 0C 00 00 00 00 00  // .A".............
  35FB: FF 00 00 00 00 01 87 17 00 01 0C 03 00 00 00 00  // ................
  360B: 00 00 00 00 F7 0C 00 00 00 00 00 00 F8 0C 00 00  // ................
  361B: 47 01 F8 0C F8 0C 01 08 87 17 00 01 0C 03 00 00  // G...............
  362B: 00 00 00 0D 00 00 FF FF 00 00 00 00 00 00 00 F3  // ................
  363B: 00 00 87 17 00 00 0C 03 00 00 00 00 00 00 0A 00  // ................
  364B: FF FF 0B 00 00 00 00 00 00 00 02 00 87 17 00 00  // ................
  365B: 0C 03 00 00 00 00 00 00 0C 00 FF 3F 0C 00 00 00  // ...........?....
  366B: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
  367B: 00 40 0C 00 FF 7F 0C 00 00 00 00 00 00 40 00 00  // .@...........@..
  368B: 87 17 00 00 0C 03 00 00 00 00 00 80 0C 00 FF BF  // ................
  369B: 0C 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
  36AB: 00 00 00 00 00 C0 0C 00 FF FF 0C 00 00 00 00 00  // ................
  36BB: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
  36CB: 0D 00 FF 3F 0D 00 00 00 00 00 00 40 00 00 87 17  // ...?.......@....
  36DB: 00 00 0C 03 00 00 00 00 00 40 0D 00 FF 7F 0D 00  // .........@......
  36EB: 00 00 00 00 00 40 00 00 87 17 00 00 0C 03 00 00  // .....@..........
  36FB: 00 00 00 80 0D 00 FF BF 0D 00 00 00 00 00 00 40  // ...............@
  370B: 00 00 87 17 00 00 0C 03 00 00 00 00 00 C0 0D 00  // ................
  371B: FF FF 0D 00 00 00 00 00 00 40 00 00 87 17 00 00  // .........@......
  372B: 0C 03 00 00 00 00 00 00 0E 00 FF 3F 0E 00 00 00  // ...........?....
  373B: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
  374B: 00 40 0E 00 FF 7F 0E 00 00 00 00 00 00 40 00 00  // .@...........@..
  375B: 87 17 00 00 0C 03 00 00 00 00 00 80 0E 00 FF BF  // ................
  376B: 0E 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
  377B: 00 00 00 00 00 C0 0E 00 FF FF 0E 00 00 00 00 00  // ................
  378B: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
  379B: 0F 00 FF FF 0F 00 00 00 00 00 00 00 01 00 87 17  // ................
  37AB: 00 00 0C 01 00 00 00 00 00 00 00 00 FF FF FF DF  // ................
  37BB: 00 00 00 00 00 00 00 E0 8A 2B 00 00 0C 01 00 00  // .........+......
  37CB: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 FF FF  // ................
  37DB: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  37EB: 01 00 00 00 00 00 87 17 00 00 0C 01 00 00 00 00  // ................
  37FB: 00 00 00 FD FF FF 7F FE 00 00 00 00 00 00 80 01  // ................
  380B: 79 00                                            // y.

            Name (EP_B, Zero)

  380D: 08 45 50 5F 42 00                                // .EP_B.

            Name (MH_B, Zero)

  3813: 08 4D 48 5F 42 00                                // .MH_B.

            Name (PC_B, Zero)

  3819: 08 50 43 5F 42 00                                // .PC_B.

            Name (PC_L, Zero)

  381F: 08 50 43 5F 4C 00                                // .PC_L.

            Name (DM_B, Zero)

  3825: 08 44 4D 5F 42 00                                // .DM_B.

            Method (GEPB, 0, Serialized)
            {

  382B: 14 1E 47 45 50 42 08                             // ..GEPB.

                If (LEqual (EP_B, Zero))
                {

  3832: A0 12 93 45 50 5F 42 00                          // ...EP_B.

                    ShiftLeft (EPBR, 0x0C, EP_B)
                }


  383A: 79 45 50 42 52 0A 0C 45 50 5F 42                 // yEPBR..EP_B

                Return (EP_B)
            }


  3845: A4 45 50 5F 42                                   // .EP_B

            Method (GMHB, 0, Serialized)
            {

  384A: 14 1E 47 4D 48 42 08                             // ..GMHB.

                If (LEqual (MH_B, Zero))
                {

  3851: A0 12 93 4D 48 5F 42 00                          // ...MH_B.

                    ShiftLeft (MHBR, 0x0F, MH_B)
                }


  3859: 79 4D 48 42 52 0A 0F 4D 48 5F 42                 // yMHBR..MH_B

                Return (MH_B)
            }


  3864: A4 4D 48 5F 42                                   // .MH_B

            Method (GPCB, 0, Serialized)
            {

  3869: 14 1E 47 50 43 42 08                             // ..GPCB.

                If (LEqual (PC_B, Zero))
                {

  3870: A0 12 93 50 43 5F 42 00                          // ...PC_B.

                    ShiftLeft (PXBR, 0x1A, PC_B)
                }


  3878: 79 50 58 42 52 0A 1A 50 43 5F 42                 // yPXBR..PC_B

                Return (PC_B)
            }


  3883: A4 50 43 5F 42                                   // .PC_B

            Method (GPCL, 0, Serialized)
            {

  3888: 14 21 47 50 43 4C 08                             // .!GPCL.

                If (LEqual (PC_L, Zero))
                {

  388F: A0 15 93 50 43 5F 4C 00                          // ...PC_L.

                    ShiftRight (0x10000000, PXSZ, PC_L)
                }


  3897: 7A 0C 00 00 00 10 50 58 53 5A 50 43 5F 4C        // z.....PXSZPC_L

                Return (PC_L)
            }


  38A5: A4 50 43 5F 4C                                   // .PC_L

            Method (GDMB, 0, Serialized)
            {

  38AA: 14 1E 47 44 4D 42 08                             // ..GDMB.

                If (LEqual (DM_B, Zero))
                {

  38B1: A0 12 93 44 4D 5F 42 00                          // ...DM_B.

                    ShiftLeft (DIBR, 0x0C, DM_B)
                }


  38B9: 79 44 49 42 52 0A 0C 44 4D 5F 42                 // yDIBR..DM_B

                Return (DM_B)
            }


  38C4: A4 44 4D 5F 42                                   // .DM_B

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (GPCL (), Local0)

  38C9: 14 40 37 5F 43 52 53 08 70 47 50 43 4C 60        // .@7_CRS.pGPCL`

                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)  // _MAX: Maximum Base Address
                Store (Subtract (ShiftRight (Local0, 0x14), 0x02), PBMX)

  38D7: 8B 42 55 46 30 0A 0A 50 42 4D 58 70 74 7A 60 0A  // .BUF0..PBMXptz`.
  38E7: 14 00 0A 02 00 50 42 4D 58                       // .....PBMX

                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)  // _LEN: Length
                Store (Subtract (ShiftRight (Local0, 0x14), One), PBLN)

  38F0: 8B 42 55 46 30 0A 0E 50 42 4C 4E 70 74 7A 60 0A  // .BUF0..PBLNptz`.
  3900: 14 00 01 00 50 42 4C 4E                          // ....PBLN

                If (PM1L)
                {

  3908: A0 16 50 4D 31 4C                                // ..PM1L

                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)  // _LEN: Length

  390E: 8A 42 55 46 30 0A 7C 43 30 4C 4E                 // .BUF0.|C0LN

                    Store (Zero, C0LN)
                }


  3919: 70 00 43 30 4C 4E                                // p.C0LN

                If (LEqual (PM1L, One))
                {

  391F: A0 19 93 50 4D 31 4C 01                          // ...PM1L.

                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)  // _RW_: Read-Write Status

  3927: 8D 42 55 46 30 0B 58 03 43 30 52 57              // .BUF0.X.C0RW

                    Store (Zero, C0RW)
                }


  3933: 70 00 43 30 52 57                                // p.C0RW

                If (PM1H)
                {

  3939: A0 16 50 4D 31 48                                // ..PM1H

                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length

  393F: 8A 42 55 46 30 0A 96 43 34 4C 4E                 // .BUF0..C4LN

                    Store (Zero, C4LN)
                }


  394A: 70 00 43 34 4C 4E                                // p.C4LN

                If (LEqual (PM1H, One))
                {

  3950: A0 19 93 50 4D 31 48 01                          // ...PM1H.

                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status

  3958: 8D 42 55 46 30 0B 28 04 43 34 52 57              // .BUF0.(.C4RW

                    Store (Zero, C4RW)
                }


  3964: 70 00 43 34 52 57                                // p.C4RW

                If (PM2L)
                {

  396A: A0 16 50 4D 32 4C                                // ..PM2L

                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)  // _LEN: Length

  3970: 8A 42 55 46 30 0A B0 43 38 4C 4E                 // .BUF0..C8LN

                    Store (Zero, C8LN)
                }


  397B: 70 00 43 38 4C 4E                                // p.C8LN

                If (LEqual (PM2L, One))
                {

  3981: A0 19 93 50 4D 32 4C 01                          // ...PM2L.

                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)  // _RW_: Read-Write Status

  3989: 8D 42 55 46 30 0B F8 04 43 38 52 57              // .BUF0...C8RW

                    Store (Zero, C8RW)
                }


  3995: 70 00 43 38 52 57                                // p.C8RW

                If (PM2H)
                {

  399B: A0 16 50 4D 32 48                                // ..PM2H

                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)  // _LEN: Length

  39A1: 8A 42 55 46 30 0A CA 43 43 4C 4E                 // .BUF0..CCLN

                    Store (Zero, CCLN)
                }


  39AC: 70 00 43 43 4C 4E                                // p.CCLN

                If (LEqual (PM2H, One))
                {

  39B2: A0 19 93 50 4D 32 48 01                          // ...PM2H.

                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)  // _RW_: Read-Write Status

  39BA: 8D 42 55 46 30 0B C8 05 43 43 52 57              // .BUF0...CCRW

                    Store (Zero, CCRW)
                }


  39C6: 70 00 43 43 52 57                                // p.CCRW

                If (PM3L)
                {

  39CC: A0 16 50 4D 33 4C                                // ..PM3L

                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)  // _LEN: Length

  39D2: 8A 42 55 46 30 0A E4 44 30 4C 4E                 // .BUF0..D0LN

                    Store (Zero, D0LN)
                }


  39DD: 70 00 44 30 4C 4E                                // p.D0LN

                If (LEqual (PM3L, One))
                {

  39E3: A0 19 93 50 4D 33 4C 01                          // ...PM3L.

                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)  // _RW_: Read-Write Status

  39EB: 8D 42 55 46 30 0B 98 06 44 30 52 57              // .BUF0...D0RW

                    Store (Zero, D0RW)
                }


  39F7: 70 00 44 30 52 57                                // p.D0RW

                If (PM3H)
                {

  39FD: A0 16 50 4D 33 48                                // ..PM3H

                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)  // _LEN: Length

  3A03: 8A 42 55 46 30 0A FE 44 34 4C 4E                 // .BUF0..D4LN

                    Store (Zero, D4LN)
                }


  3A0E: 70 00 44 34 4C 4E                                // p.D4LN

                If (LEqual (PM3H, One))
                {

  3A14: A0 19 93 50 4D 33 48 01                          // ...PM3H.

                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)  // _RW_: Read-Write Status

  3A1C: 8D 42 55 46 30 0B 68 07 44 34 52 57              // .BUF0.h.D4RW

                    Store (Zero, D4RW)
                }


  3A28: 70 00 44 34 52 57                                // p.D4RW

                If (PM4L)
                {

  3A2E: A0 17 50 4D 34 4C                                // ..PM4L

                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)  // _LEN: Length

  3A34: 8A 42 55 46 30 0B 18 01 44 38 4C 4E              // .BUF0...D8LN

                    Store (Zero, D8LN)
                }


  3A40: 70 00 44 38 4C 4E                                // p.D8LN

                If (LEqual (PM4L, One))
                {

  3A46: A0 19 93 50 4D 34 4C 01                          // ...PM4L.

                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)  // _RW_: Read-Write Status

  3A4E: 8D 42 55 46 30 0B 38 08 44 38 52 57              // .BUF0.8.D8RW

                    Store (Zero, D8RW)
                }


  3A5A: 70 00 44 38 52 57                                // p.D8RW

                If (PM4H)
                {

  3A60: A0 17 50 4D 34 48                                // ..PM4H

                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)  // _LEN: Length

  3A66: 8A 42 55 46 30 0B 32 01 44 43 4C 4E              // .BUF0.2.DCLN

                    Store (Zero, DCLN)
                }


  3A72: 70 00 44 43 4C 4E                                // p.DCLN

                If (LEqual (PM4H, One))
                {

  3A78: A0 19 93 50 4D 34 48 01                          // ...PM4H.

                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)  // _RW_: Read-Write Status

  3A80: 8D 42 55 46 30 0B 08 09 44 43 52 57              // .BUF0...DCRW

                    Store (Zero, DCRW)
                }


  3A8C: 70 00 44 43 52 57                                // p.DCRW

                If (PM5L)
                {

  3A92: A0 17 50 4D 35 4C                                // ..PM5L

                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)  // _LEN: Length

  3A98: 8A 42 55 46 30 0B 4C 01 45 30 4C 4E              // .BUF0.L.E0LN

                    Store (Zero, E0LN)
                }


  3AA4: 70 00 45 30 4C 4E                                // p.E0LN

                If (LEqual (PM5L, One))
                {

  3AAA: A0 19 93 50 4D 35 4C 01                          // ...PM5L.

                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)  // _RW_: Read-Write Status

  3AB2: 8D 42 55 46 30 0B D8 09 45 30 52 57              // .BUF0...E0RW

                    Store (Zero, E0RW)
                }


  3ABE: 70 00 45 30 52 57                                // p.E0RW

                If (PM5H)
                {

  3AC4: A0 17 50 4D 35 48                                // ..PM5H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)  // _LEN: Length

  3ACA: 8A 42 55 46 30 0B 66 01 45 34 4C 4E              // .BUF0.f.E4LN

                    Store (Zero, E4LN)
                }


  3AD6: 70 00 45 34 4C 4E                                // p.E4LN

                If (LEqual (PM5H, One))
                {

  3ADC: A0 19 93 50 4D 35 48 01                          // ...PM5H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)  // _RW_: Read-Write Status

  3AE4: 8D 42 55 46 30 0B A8 0A 45 34 52 57              // .BUF0...E4RW

                    Store (Zero, E4RW)
                }


  3AF0: 70 00 45 34 52 57                                // p.E4RW

                If (PM6L)
                {

  3AF6: A0 17 50 4D 36 4C                                // ..PM6L

                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)  // _LEN: Length

  3AFC: 8A 42 55 46 30 0B 80 01 45 38 4C 4E              // .BUF0...E8LN

                    Store (Zero, E8LN)
                }


  3B08: 70 00 45 38 4C 4E                                // p.E8LN

                If (LEqual (PM6L, One))
                {

  3B0E: A0 19 93 50 4D 36 4C 01                          // ...PM6L.

                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)  // _RW_: Read-Write Status

  3B16: 8D 42 55 46 30 0B 78 0B 45 38 52 57              // .BUF0.x.E8RW

                    Store (Zero, E8RW)
                }


  3B22: 70 00 45 38 52 57                                // p.E8RW

                If (PM6H)
                {

  3B28: A0 17 50 4D 36 48                                // ..PM6H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)  // _LEN: Length

  3B2E: 8A 42 55 46 30 0B 9A 01 45 43 4C 4E              // .BUF0...ECLN

                    Store (Zero, ECLN)
                }


  3B3A: 70 00 45 43 4C 4E                                // p.ECLN

                If (LEqual (PM6H, One))
                {

  3B40: A0 19 93 50 4D 36 48 01                          // ...PM6H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)  // _RW_: Read-Write Status

  3B48: 8D 42 55 46 30 0B 48 0C 45 43 52 57              // .BUF0.H.ECRW

                    Store (Zero, ECRW (
  3B54: 70 00 45 43 52 57                                // p.ECRW

If (PM0H)
                            {

  3B5A: A0 17 50 4D 30 48                                // ..PM0H

                                CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)  // _LEN: Length

  3B60: 8A 42 55 46 30 0B B4 01 46 30 4C 4E              // .BUF0...F0LN

                                Store (Zero, F0LN)
                            }))
                }


  3B6C: 70 00 46 30 4C 4E                                // p.F0LN

                If (LEqual (PM0H, One))
                {

  3B72: A0 19 93 50 4D 30 48 01                          // ...PM0H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)  // _RW_: Read-Write Status

  3B7A: 8D 42 55 46 30 0B 18 0D 46 30 52 57              // .BUF0...F0RW

                    Store (Zero, F0RW)
                }


  3B86: 70 00 46 30 52 57                                // p.F0RW

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)  // _MIN: Minimum Base Address

  3B8C: 8A 42 55 46 30 0B C2 01 4D 31 4D 4E              // .BUF0...M1MN

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)  // _MAX: Maximum Base Address

  3B98: 8A 42 55 46 30 0B C6 01 4D 31 4D 58              // .BUF0...M1MX

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)  // _LEN: Length
                Store (M32L, M1LN)
                Store (M32B, M1MN)
                Subtract (Add (M1MN, M1LN), One, M1MX)

  3BA4: 8A 42 55 46 30 0B CE 01 4D 31 4C 4E 70 4D 33 32  // .BUF0...M1LNpM32
  3BB4: 4C 4D 31 4C 4E 70 4D 33 32 42 4D 31 4D 4E 74 72  // LM1LNpM32BM1MNtr
  3BC4: 4D 31 4D 4E 4D 31 4C 4E 00 01 4D 31 4D 58        // M1MNM1LN..M1MX

                If (LEqual (M64L, Zero))
                {

  3BD2: A0 19 93 4D 36 34 4C 00                          // ...M64L.

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._LEN, MSLN)  // _LEN: Length

  3BDA: 8F 42 55 46 30 0B F8 01 4D 53 4C 4E              // .BUF0...MSLN

                    Store (Zero, MSLN)
                }

  3BE6: 70 00 4D 53 4C 4E                                // p.MSLN

                Else
                {

  3BEC: A1 48 04                                         // .H.

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._LEN, M2LN)  // _LEN: Length

  3BEF: 8F 42 55 46 30 0B F8 01 4D 32 4C 4E              // .BUF0...M2LN

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MIN, M2MN)  // _MIN: Minimum Base Address

  3BFB: 8F 42 55 46 30 0B E0 01 4D 32 4D 4E              // .BUF0...M2MN

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MAX, M2MX)  // _MAX: Maximum Base Address
                    Store (M64L, M2LN)
                    Store (M64B, M2MN)

  3C07: 8F 42 55 46 30 0B E8 01 4D 32 4D 58 70 4D 36 34  // .BUF0...M2MXpM64
  3C17: 4C 4D 32 4C 4E 70 4D 36 34 42 4D 32 4D 4E        // LM2LNpM64BM2MN

                    Subtract (Add (M2MN, M2LN), One, M2MX)
                }


  3C25: 74 72 4D 32 4D 4E 4D 32 4C 4E 00 01 4D 32 4D 58  // trM2MNM2LN..M2MX

                Return (BUF0)
            }


  3C35: A4 42 55 46 30                                   // .BUF0

            Name (GUID, 
  3C3A: 08 47 55 49 44                                   // .GUID

ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)

  3C3F: 11 13 0A 10 5B 4D DB 33 F7 1F 1C 40 96 57 74 41  // ....[M.3...@.WtA
  3C4F: C0 3D D7 66                                      // .=.f

            Name (SUPP, Zero)

  3C53: 08 53 55 50 50 00                                // .SUPP.

            Name (CTRL, Zero)

  3C59: 08 43 54 52 4C 00                                // .CTRL.

            Name (XCNT, Zero)

  3C5F: 08 58 43 4E 54 00                                // .XCNT.

            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {

  3C65: 14 4C 1E 5F 4F 53 43 0C                          // .L._OSC.

                If (CondRefOf (\_OSI, Local1))
                {

  3C6D: A0 4C 10 5B 12 5C 5F 4F 53 49 61                 // .L.[.\_OSIa

                    If (LOr (_OSI ("Windows 2009"), _OSI ("Windows 2013")))
                    {

  3C78: A0 41 10 91 5F 4F 53 49 0D 57 69 6E 64 6F 77 73  // .A.._OSI.Windows
  3C88: 20 32 30 30 39 00 5F 4F 53 49 0D 57 69 6E 64 6F  //  2009._OSI.Windo
  3C98: 77 73 20 32 30 31 33 00                          // ws 2013.

                        OperationRegion (PCF0, SystemMemory, 0xF0100000, 0x0200)

  3CA0: 5B 80 50 43 46 30 00 0C 00 00 10 F0 0B 00 02     // [.PCF0.........

                        Field (PCF0, ByteAcc, NoLock, Preserve)
                        {
                            HVD0,   32, 
                            Offset (0x160), 
                            TPR0,   8
                        }


  3CAF: 5B 81 13 50 43 46 30 01 48 56 44 30 20 00 40 AE  // [..PCF0.HVD0 .@.
  3CBF: 54 50 52 30 08                                   // TPR0.

                        OperationRegion (PCF1, SystemMemory, 0xF0200000, 0x0200)

  3CC4: 5B 80 50 43 46 31 00 0C 00 00 20 F0 0B 00 02     // [.PCF1.... ....

                        Field (PCF1, ByteAcc, NoLock, Preserve)
                        {
                            HVD1,   32, 
                            Offset (0x160), 
                            TPR1,   8
                        }


  3CD3: 5B 81 13 50 43 46 31 01 48 56 44 31 20 00 40 AE  // [..PCF1.HVD1 .@.
  3CE3: 54 50 52 31 08                                   // TPR1.

                        OperationRegion (PCF2, SystemMemory, 0xF00E0000, 0x0300)

  3CE8: 5B 80 50 43 46 32 00 0C 00 00 0E F0 0B 00 03     // [.PCF2.........

                        Field (PCF2, ByteAcc, NoLock, Preserve)
                        {
                            HVD2,   32, 
                            Offset (0x20C), 
                            BPR2,   8
                        }


  3CF7: 5B 81 14 50 43 46 32 01 48 56 44 32 20 00 80 04  // [..PCF2.HVD2 ...
  3D07: 01 42 50 52 32 08                                // .BPR2.

                        OperationRegion (PCF3, SystemMemory, 0xF00E2000, 0x0300)

  3D0D: 5B 80 50 43 46 33 00 0C 00 20 0E F0 0B 00 03     // [.PCF3... .....

                        Field (PCF3, ByteAcc, NoLock, Preserve)
                        {
                            HVD3,   32, 
                            Offset (0x20C), 
                            BPR3,   8
                        }


  3D1C: 5B 81 14 50 43 46 33 01 48 56 44 33 20 00 80 04  // [..PCF3.HVD3 ...
  3D2C: 01 42 50 52 33 08                                // .BPR3.

                        If (LEqual (HVD0, 0x24FD8086))
                        {

  3D32: A0 23 93 48 56 44 30 0C 86 80 FD 24              // .#.HVD0....$

                            If (
  3D3E: A0 17 92                                         // ...

LNotEqual (TPR0, 0xF0))
                            {
                                Store (0xF0, TPR0)

  3D41: 93 54 50 52 30 0A F0 70 0A F0 54 50 52 30        // .TPR0..p..TPR0

                                Store (0xF0, BPR2)
                            }
                        }


  3D4F: 70 0A F0 42 50 52 32                             // p..BPR2

                        If (LEqual (HVD1, 0x24FD8086))
                        {

  3D56: A0 23 93 48 56 44 31 0C 86 80 FD 24              // .#.HVD1....$

                            If (
  3D62: A0 17 92                                         // ...

LNotEqual (TPR1, 0xF0))
                            {
                                Store (0xF0, TPR1)

  3D65: 93 54 50 52 31 0A F0 70 0A F0 54 50 52 31        // .TPR1..p..TPR1

                                Store (0xF0, BPR3)
                            }
                        }
                    }
                }

                Store (Arg3, Local0)

  3D73: 70 0A F0 42 50 52 33 70 6B 60                    // p..BPR3pk`

                CreateDWordField (Local0, Zero, CDW1)

  3D7D: 8A 60 00 43 44 57 31                             // .`.CDW1

                CreateDWordField (Local0, 0x04, CDW2)

  3D84: 8A 60 0A 04 43 44 57 32                          // .`..CDW2

                CreateDWordField (Local0, 0x08, CDW3)

  3D8C: 8A 60 0A 08 43 44 57 33                          // .`..CDW3

                If (LEqual (Arg0, GUID))
                {
                    Store (CDW2, SUPP)
                    Store (CDW3, CTRL)

  3D94: A0 4E 0A 93 68 47 55 49 44 70 43 44 57 32 53 55  // .N..hGUIDpCDW2SU
  3DA4: 50 50 70 43 44 57 33 43 54 52 4C                 // PPpCDW3CTRL

                    If (LNot (NEXP))
                    {

  3DAF: A0 14 92 4E 45 58 50                             // ...NEXP

                        And (CTRL, 0xFFFFFFF8, CTRL)
                    }


  3DB6: 7B 43 54 52 4C 0C F8 FF FF FF 43 54 52 4C        // {CTRL.....CTRL

                    If (LAnd (LEqual (TBTS, One), 
  3DC4: A0 1C 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (TNAT, One)))
                    {

  3DCD: 93 54 4E 41 54 01                                // .TNAT.

                        And (CTRL, 0xFFFFFFF7, CTRL)
                    }


  3DD3: 7B 43 54 52 4C 0C F7 FF FF FF 43 54 52 4C        // {CTRL.....CTRL

                    If (Not (And (CDW1, One)))
                    {

  3DE1: A0 25 80 7B 43 44 57 31 01 00 00                 // .%.{CDW1...

                        If (And (CTRL, One))
                        {
                            NHPG ()
                        }


  3DEC: A0 0C 7B 43 54 52 4C 01 00 4E 48 50 47           // ..{CTRL..NHPG

                        If (And (CTRL, 0x04))
                        {
                            NPME ()
                        }
                    }


  3DF9: A0 0D 7B 43 54 52 4C 0A 04 00 4E 50 4D 45        // ..{CTRL...NPME

                    If (
  3E07: A0 10 92                                         // ...

LNotEqual (Arg1, One))
                    {

  3E0A: 93 69 01                                         // .i.

                        Or (CDW1, 0x08, CDW1)
                    }


  3E0D: 7D 43 44 57 31 0A 08 43 44 57 31                 // }CDW1..CDW1

                    If (
  3E18: A0 16 92                                         // ...

LNotEqual (CDW3, CTRL))
                    {

  3E1B: 93 43 44 57 33 43 54 52 4C                       // .CDW3CTRL

                        Or (CDW1, 0x10, CDW1)
                    }

                    Store (CTRL, CDW3)
                    Store (CTRL, OSCC)

  3E24: 7D 43 44 57 31 0A 10 43 44 57 31 70 43 54 52 4C  // }CDW1..CDW1pCTRL
  3E34: 43 44 57 33 70 43 54 52 4C 4F 53 43 43           // CDW3pCTRLOSCC

                    Return (Local0)
                }

  3E41: A4 60                                            // .`

                Else
                {
                    Or (CDW1, 0x04, CDW1)

  3E43: A1 0E 7D 43 44 57 31 0A 04 43 44 57 31           // ..}CDW1..CDW1

                    Return (Local0)
                }
            }


  3E50: A4 60                                            // .`

            Scope (\_SB.PCI0)
            {

  3E52: 10 4B 05 5C 2E 5F 53 42 5F 50 43 49 30           // .K.\._SB_PCI0

                Device (GFX0)
                {

  3E5F: 5B 82 0F 47 46 58 30                             // [..GFX0

                    Name (_ADR, 0x00020000)  // _ADR: Address
                }


  3E66: 08 5F 41 44 52 0C 00 00 02 00                    // ._ADR.....

                Device (B0D4)
                {

  3E70: 5B 82 2B 42 30 44 34                             // [.+B0D4

                    Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                    {

  3E77: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                        If (PCIC (Arg0))
                        {

  3E7E: A0 0F 50 43 49 43 68                             // ..PCICh

                            Return (PCID (Arg0, Arg1, Arg2, Arg3))
                        }


  3E85: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                        Return (
  3E8E: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


  3E8F: 11 03 01 00                                      // ....

                    Name (_ADR, 0x00040000)  // _ADR: Address
                }


  3E93: 08 5F 41 44 52 0C 00 00 04 00                    // ._ADR.....

                Device (ISP0)
                {

  3E9D: 5B 82 0F 49 53 50 30                             // [..ISP0

                    Name (_ADR, 0x00050000)  // _ADR: Address
                }
            }


  3EA4: 08 5F 41 44 52 0C 00 00 05 00                    // ._ADR.....

            Scope (\_SB.PCI0)
            {

  3EAE: 10 4C 16 5C 2E 5F 53 42 5F 50 43 49 30           // .L.\._SB_PCI0

                Name (PALK, Zero)

  3EBB: 08 50 41 4C 4B 00                                // .PALK.

                Name (PA0H, Zero)

  3EC1: 08 50 41 30 48 00                                // .PA0H.

                Name (PA1H, Zero)

  3EC7: 08 50 41 31 48 00                                // .PA1H.

                Name (PA1L, Zero)

  3ECD: 08 50 41 31 4C 00                                // .PA1L.

                Name (PA2H, Zero)

  3ED3: 08 50 41 32 48 00                                // .PA2H.

                Name (PA2L, Zero)

  3ED9: 08 50 41 32 4C 00                                // .PA2L.

                Name (PA3H, Zero)

  3EDF: 08 50 41 33 48 00                                // .PA3H.

                Name (PA3L, Zero)

  3EE5: 08 50 41 33 4C 00                                // .PA3L.

                Name (PA4H, Zero)

  3EEB: 08 50 41 34 48 00                                // .PA4H.

                Name (PA4L, Zero)

  3EF1: 08 50 41 34 4C 00                                // .PA4L.

                Name (PA5H, Zero)

  3EF7: 08 50 41 35 48 00                                // .PA5H.

                Name (PA5L, Zero)

  3EFD: 08 50 41 35 4C 00                                // .PA5L.

                Name (PA6H, Zero)

  3F03: 08 50 41 36 48 00                                // .PA6H.

                Name (PA6L, Zero)

  3F09: 08 50 41 36 4C 00                                // .PA6L.

                Method (NPTS, 1, NotSerialized)
                {
                    Store (PM0H, PA0H)
                    Store (PMLK, PALK)
                    Store (PM1H, PA1H)
                    Store (PM1L, PA1L)
                    Store (PM2H, PA2H)
                    Store (PM2L, PA2L)
                    Store (PM3H, PA3H)
                    Store (PM3L, PA3L)
                    Store (PM4H, PA4H)
                    Store (PM4L, PA4L)
                    Store (PM5H, PA5H)
                    Store (PM5L, PA5L)
                    Store (PM6H, PA6H)

  3F0F: 14 45 08 4E 50 54 53 01 70 50 4D 30 48 50 41 30  // .E.NPTS.pPM0HPA0
  3F1F: 48 70 50 4D 4C 4B 50 41 4C 4B 70 50 4D 31 48 50  // HpPMLKPALKpPM1HP
  3F2F: 41 31 48 70 50 4D 31 4C 50 41 31 4C 70 50 4D 32  // A1HpPM1LPA1LpPM2
  3F3F: 48 50 41 32 48 70 50 4D 32 4C 50 41 32 4C 70 50  // HPA2HpPM2LPA2LpP
  3F4F: 4D 33 48 50 41 33 48 70 50 4D 33 4C 50 41 33 4C  // M3HPA3HpPM3LPA3L
  3F5F: 70 50 4D 34 48 50 41 34 48 70 50 4D 34 4C 50 41  // pPM4HPA4HpPM4LPA
  3F6F: 34 4C 70 50 4D 35 48 50 41 35 48 70 50 4D 35 4C  // 4LpPM5HPA5HpPM5L
  3F7F: 50 41 35 4C 70 50 4D 36 48 50 41 36 48           // PA5LpPM6HPA6H

                    Store (PM6L, PA6L)
                }


  3F8C: 70 50 4D 36 4C 50 41 36 4C                       // pPM6LPA6L

                Method (NWAK, 1, NotSerialized)
                {
                    Store (PA0H, PM0H)
                    Store (PA1H, PM1H)
                    Store (PA1L, PM1L)
                    Store (PA2H, PM2H)
                    Store (PA2L, PM2L)
                    Store (PA3H, PM3H)
                    Store (PA3L, PM3L)
                    Store (PA4H, PM4H)
                    Store (PA4L, PM4L)
                    Store (PA5H, PM5H)
                    Store (PA5L, PM5L)
                    Store (PA6H, PM6H)
                    Store (PA6L, PM6L)

  3F95: 14 45 08 4E 57 41 4B 01 70 50 41 30 48 50 4D 30  // .E.NWAK.pPA0HPM0
  3FA5: 48 70 50 41 31 48 50 4D 31 48 70 50 41 31 4C 50  // HpPA1HPM1HpPA1LP
  3FB5: 4D 31 4C 70 50 41 32 48 50 4D 32 48 70 50 41 32  // M1LpPA2HPM2HpPA2
  3FC5: 4C 50 4D 32 4C 70 50 41 33 48 50 4D 33 48 70 50  // LPM2LpPA3HPM3HpP
  3FD5: 41 33 4C 50 4D 33 4C 70 50 41 34 48 50 4D 34 48  // A3LPM3LpPA4HPM4H
  3FE5: 70 50 41 34 4C 50 4D 34 4C 70 50 41 35 48 50 4D  // pPA4LPM4LpPA5HPM
  3FF5: 35 48 70 50 41 35 4C 50 4D 35 4C 70 50 41 36 48  // 5HpPA5LPM5LpPA6H
  4005: 50 4D 36 48 70 50 41 36 4C 50 4D 36 4C           // PM6HpPA6LPM6L

                    Store (PALK, PMLK)
                }
            }


  4012: 70 50 41 4C 4B 50 4D 4C 4B                       // pPALKPMLK

            Device (PEG0)
            {

  401B: 5B 82 33 50 45 47 30                             // [.3PEG0

                Name (_ADR, 0x00010000)  // _ADR: Address

  4022: 08 5F 41 44 52 0C 00 00 01 00                    // ._ADR.....

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  402C: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  4033: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR01)
                    }


  4039: A4 41 52 30 31                                   // .AR01

                    Return (PR01)
                }


  403E: A4 50 52 30 31                                   // .PR01

                Device (PEGP)
                {

  4043: 5B 82 0B 50 45 47 50                             // [..PEGP

                    Name (_ADR, Zero)  // _ADR: Address
                }
            }


  404A: 08 5F 41 44 52 00                                // ._ADR.

            Device (PEG1)
            {

  4050: 5B 82 33 50 45 47 31                             // [.3PEG1

                Name (_ADR, 0x00010001)  // _ADR: Address

  4057: 08 5F 41 44 52 0C 01 00 01 00                    // ._ADR.....

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  4061: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  4068: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR02)
                    }


  406E: A4 41 52 30 32                                   // .AR02

                    Return (PR02)
                }


  4073: A4 50 52 30 32                                   // .PR02

                Device (PEGP)
                {

  4078: 5B 82 0B 50 45 47 50                             // [..PEGP

                    Name (_ADR, Zero)  // _ADR: Address
                }
            }


  407F: 08 5F 41 44 52 00                                // ._ADR.

            Device (PEG2)
            {

  4085: 5B 82 33 50 45 47 32                             // [.3PEG2

                Name (_ADR, 0x00010002)  // _ADR: Address

  408C: 08 5F 41 44 52 0C 02 00 01 00                    // ._ADR.....

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  4096: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  409D: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR03)
                    }


  40A3: A4 41 52 30 33                                   // .AR03

                    Return (PR03)
                }


  40A8: A4 50 52 30 33                                   // .PR03

                Device (PEGP)
                {

  40AD: 5B 82 0B 50 45 47 50                             // [..PEGP

                    Name (_ADR, Zero)  // _ADR: Address
                }
            }


  40B4: 08 5F 41 44 52 00                                // ._ADR.

            Device (LPCB)
            {

  40BA: 5B 82 48 0B 4C 50 43 42                          // [.H.LPCB

                Name (_ADR, 0x001F0000)  // _ADR: Address

  40C2: 08 5F 41 44 52 0C 00 00 1F 00                    // ._ADR.....

                Scope (\_SB.PCI0.LPCB)
                {
                }


  40CC: 10 10 5C 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
  40DC: 42                                               // B

                Method (SPTS, 1, NotSerialized)
                {
                    Store (One, SLPX)
                    Store (One, SLPE)

  40DD: 14 1E 53 50 54 53 01 70 01 53 4C 50 58 70 01 53  // ..SPTS.p.SLPXp.S
  40ED: 4C 50 45                                         // LPE

                    If (LEqual (Arg0, 0x03))
                    {

  40F0: A0 0B 93 68 0A 03                                // ...h..

                        Store (One, AES3)
                    }
                }


  40F6: 70 01 41 45 53 33                                // p.AES3

                Method (SWAK, 1, NotSerialized)
                {
                    Store (Zero, SLPE)
                    Store (Zero, AES3)

  40FC: 14 21 53 57 41 4B 01 70 00 53 4C 50 45 70 00 41  // .!SWAK.p.SLPEp.A
  410C: 45 53 33                                         // ES3

                    If (RTCS){}

  410F: A0 05 52 54 43 53                                // ..RTCS

                    Else
                    {

  4115: A1 08                                            // ..

                        Notify (PBTN, 0x02)
                    }
                }


  4117: 86 50 42 54 4E 0A 02                             // .PBTN..

                OperationRegion (SMIE, SystemIO, PMBA, 0x04)

  411E: 5B 80 53 4D 49 45 01 50 4D 42 41 0A 04           // [.SMIE.PMBA..

                Field (SMIE, ByteAcc, NoLock, Preserve)
                {
                        ,   10, 
                    RTCS,   1, 
                        ,   3, 
                    PEXS,   1, 
                    WAKS,   1, 
                    Offset (0x03), 
                    PWBT,   1, 
                    Offset (0x04)
                }


  412B: 5B 81 22 53 4D 49 45 01 00 0A 52 54 43 53 01 00  // [."SMIE...RTCS..
  413B: 03 50 45 58 53 01 57 41 4B 53 01 00 08 50 57 42  // .PEXS.WAKS...PWB
  414B: 54 01 00 07                                      // T...

                OperationRegion (SLPR, SystemIO, SMCR, 0x08)

  414F: 5B 80 53 4C 50 52 01 53 4D 43 52 0A 08           // [.SLPR.SMCR..

                Field (SLPR, ByteAcc, NoLock, Preserve)
                {
                        ,   4, 
                    SLPE,   1, 
                        ,   31, 
                    SLPX,   1, 
                    Offset (0x08)
                }
            }


  415C: 5B 81 16 53 4C 50 52 01 00 04 53 4C 50 45 01 00  // [..SLPR...SLPE..
  416C: 1F 53 4C 50 58 01 00 1B                          // .SLPX...

            Device (RP09)
            {

  4174: 5B 82 47 3B 52 50 30 39                          // [.G;RP09

                Name (_ADR, 0x001D0000)  // _ADR: Address

  417C: 08 5F 41 44 52 0C 00 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  4186: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  4191: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  41A1: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  41B1: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  41C1: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  41D1: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  41E1: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  41F1: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  4201: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  4211: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  4221: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  4229: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  4239: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  4240: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  4245: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  424C: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  4254: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  425A: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  425F: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  426F: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  4273: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  427F: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  4288: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  428D: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  4293: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  429D: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  42A8: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  42B3: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  42BE: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  42C9: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  42CC: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  42D6: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  42DC: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  42E2: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  42E8: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  42EE: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  42F6: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  42F9: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  4303: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  4309: A4 4F 50 54 53                                   // .OPTS

                            Case
  430E: A1 45 15                                         // .E.

 (0x04)
                            {

  4311: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  431B: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  431E: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  4322: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  4328: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  4329: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  4339: 00 00 00 00                                      // ....

                                    Else
                                    {

  433D: A1 16                                            // ..

                                        Return (
  433F: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  4340: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  4350: 00 00 00 00                                      // ....

                            Case
  4354: A1 4F 10                                         // .O.

 (0x05)
                            {

  4357: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  4360: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  4365: A4 01                                            // ..

                            Case
  4367: A1 4C 0F                                         // .L.

 (0x06)
                            {

  436A: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  4374: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  4378: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  437C: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  4383: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  438D: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  4393: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  43A3: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  43A6: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  43AE: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  43B0: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  43C0: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  43C3: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  43D3: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  43D8: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  43E8: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  43E9: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  43F9: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  43FD: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  440D: 03 00                                            // ..

Index (LTRV, 0x03))

  440F: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  4417: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  441C: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  441E: A4 00                                            // ..

                            Case
  4420: A1 43 04                                         // .C.

 (0x08)
                            {

  4423: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  442C: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4434: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  4437: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  443B: A4 01                                            // ..

                            Case
  443D: A1 26                                            // .&

 (0x09)
                            {

  443F: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  4448: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4450: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  4453: 95 69 0A 03                                      // .i..

                                        Return (
  4457: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  4458: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  4464: A5                                               // .

                    Return (
  4465: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  4466: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  446A: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  4472: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  4478: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  447F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  4488: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  448F: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  4498: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  44A1: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  44A6: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  44A8: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  44AD: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  44B4: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  44B8: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  44C2: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  44D2: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  44D5: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  44DB: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  44EB: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  44FB: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  44FD: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  4506: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  450D: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  4516: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  451D: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0C)
                    }


  4523: A4 41 52 30 43                                   // .AR0C

                    Return (PR0C)
                }
            }


  4528: A4 50 52 30 43                                   // .PR0C

            Device (RP10)
            {

  452D: 5B 82 47 3B 52 50 31 30                          // [.G;RP10

                Name (_ADR, 0x001D0001)  // _ADR: Address

  4535: 08 5F 41 44 52 0C 01 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  453F: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  454A: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  455A: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  456A: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  457A: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  458A: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  459A: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  45AA: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  45BA: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  45CA: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  45DA: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  45E2: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  45F2: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  45F9: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  45FE: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  4605: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  460D: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  4613: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  4618: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  4628: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  462C: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  4638: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  4641: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  4646: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  464C: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  4656: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  4661: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  466C: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  4677: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  4682: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  4685: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  468F: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  4695: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  469B: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  46A1: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  46A7: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  46AF: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  46B2: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  46BC: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  46C2: A4 4F 50 54 53                                   // .OPTS

                            Case
  46C7: A1 45 15                                         // .E.

 (0x04)
                            {

  46CA: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  46D4: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  46D7: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  46DB: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  46E1: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  46E2: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  46F2: 00 00 00 00                                      // ....

                                    Else
                                    {

  46F6: A1 16                                            // ..

                                        Return (
  46F8: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  46F9: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  4709: 00 00 00 00                                      // ....

                            Case
  470D: A1 4F 10                                         // .O.

 (0x05)
                            {

  4710: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  4719: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  471E: A4 01                                            // ..

                            Case
  4720: A1 4C 0F                                         // .L.

 (0x06)
                            {

  4723: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  472D: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  4731: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  4735: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  473C: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  4746: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  474C: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  475C: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  475F: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  4767: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  4769: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  4779: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  477C: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  478C: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  4791: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  47A1: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  47A2: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  47B2: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  47B6: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  47C6: 03 00                                            // ..

Index (LTRV, 0x03))

  47C8: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  47D0: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  47D5: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  47D7: A4 00                                            // ..

                            Case
  47D9: A1 43 04                                         // .C.

 (0x08)
                            {

  47DC: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  47E5: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  47ED: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  47F0: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  47F4: A4 01                                            // ..

                            Case
  47F6: A1 26                                            // .&

 (0x09)
                            {

  47F8: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  4801: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4809: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  480C: 95 69 0A 03                                      // .i..

                                        Return (
  4810: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  4811: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  481D: A5                                               // .

                    Return (
  481E: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  481F: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  4823: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  482B: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  4831: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  4838: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  4841: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  4848: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  4851: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  485A: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  485F: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  4861: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  4866: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  486D: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  4871: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  487B: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  488B: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  488E: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  4894: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  48A4: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  48B4: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  48B6: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  48BF: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  48C6: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  48CF: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  48D6: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0D)
                    }


  48DC: A4 41 52 30 44                                   // .AR0D

                    Return (PR0D)
                }
            }


  48E1: A4 50 52 30 44                                   // .PR0D

            Device (RP11)
            {

  48E6: 5B 82 47 3B 52 50 31 31                          // [.G;RP11

                Name (_ADR, 0x001D0002)  // _ADR: Address

  48EE: 08 5F 41 44 52 0C 02 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  48F8: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  4903: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  4913: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  4923: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  4933: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  4943: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  4953: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  4963: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  4973: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  4983: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  4993: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  499B: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  49AB: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  49B2: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  49B7: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  49BE: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  49C6: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  49CC: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  49D1: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  49E1: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  49E5: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  49F1: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  49FA: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  49FF: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  4A05: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  4A0F: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  4A1A: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  4A25: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  4A30: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  4A3B: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  4A3E: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  4A48: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  4A4E: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  4A54: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  4A5A: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  4A60: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  4A68: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  4A6B: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  4A75: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  4A7B: A4 4F 50 54 53                                   // .OPTS

                            Case
  4A80: A1 45 15                                         // .E.

 (0x04)
                            {

  4A83: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  4A8D: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  4A90: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  4A94: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  4A9A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  4A9B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  4AAB: 00 00 00 00                                      // ....

                                    Else
                                    {

  4AAF: A1 16                                            // ..

                                        Return (
  4AB1: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  4AB2: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  4AC2: 00 00 00 00                                      // ....

                            Case
  4AC6: A1 4F 10                                         // .O.

 (0x05)
                            {

  4AC9: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  4AD2: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  4AD7: A4 01                                            // ..

                            Case
  4AD9: A1 4C 0F                                         // .L.

 (0x06)
                            {

  4ADC: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  4AE6: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  4AEA: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  4AEE: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  4AF5: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  4AFF: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  4B05: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  4B15: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  4B18: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  4B20: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  4B22: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  4B32: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  4B35: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  4B45: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  4B4A: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  4B5A: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  4B5B: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  4B6B: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  4B6F: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  4B7F: 03 00                                            // ..

Index (LTRV, 0x03))

  4B81: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  4B89: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  4B8E: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  4B90: A4 00                                            // ..

                            Case
  4B92: A1 43 04                                         // .C.

 (0x08)
                            {

  4B95: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  4B9E: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4BA6: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  4BA9: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  4BAD: A4 01                                            // ..

                            Case
  4BAF: A1 26                                            // .&

 (0x09)
                            {

  4BB1: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  4BBA: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4BC2: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  4BC5: 95 69 0A 03                                      // .i..

                                        Return (
  4BC9: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  4BCA: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  4BD6: A5                                               // .

                    Return (
  4BD7: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  4BD8: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  4BDC: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  4BE4: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  4BEA: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  4BF1: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  4BFA: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  4C01: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  4C0A: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  4C13: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  4C18: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  4C1A: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  4C1F: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  4C26: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  4C2A: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  4C34: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  4C44: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  4C47: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  4C4D: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  4C5D: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  4C6D: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  4C6F: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  4C78: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  4C7F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  4C88: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  4C8F: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0E)
                    }


  4C95: A4 41 52 30 45                                   // .AR0E

                    Return (PR0E)
                }
            }


  4C9A: A4 50 52 30 45                                   // .PR0E

            Device (RP12)
            {

  4C9F: 5B 82 47 3B 52 50 31 32                          // [.G;RP12

                Name (_ADR, 0x001D0003)  // _ADR: Address

  4CA7: 08 5F 41 44 52 0C 03 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  4CB1: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  4CBC: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  4CCC: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  4CDC: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  4CEC: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  4CFC: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  4D0C: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  4D1C: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  4D2C: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  4D3C: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  4D4C: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  4D54: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  4D64: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  4D6B: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  4D70: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  4D77: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  4D7F: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  4D85: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  4D8A: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  4D9A: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  4D9E: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  4DAA: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  4DB3: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  4DB8: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  4DBE: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  4DC8: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  4DD3: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  4DDE: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  4DE9: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  4DF4: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  4DF7: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  4E01: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  4E07: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  4E0D: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  4E13: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  4E19: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  4E21: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  4E24: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  4E2E: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  4E34: A4 4F 50 54 53                                   // .OPTS

                            Case
  4E39: A1 45 15                                         // .E.

 (0x04)
                            {

  4E3C: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  4E46: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  4E49: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  4E4D: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  4E53: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  4E54: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  4E64: 00 00 00 00                                      // ....

                                    Else
                                    {

  4E68: A1 16                                            // ..

                                        Return (
  4E6A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  4E6B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  4E7B: 00 00 00 00                                      // ....

                            Case
  4E7F: A1 4F 10                                         // .O.

 (0x05)
                            {

  4E82: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  4E8B: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  4E90: A4 01                                            // ..

                            Case
  4E92: A1 4C 0F                                         // .L.

 (0x06)
                            {

  4E95: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  4E9F: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  4EA3: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  4EA7: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  4EAE: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  4EB8: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  4EBE: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  4ECE: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  4ED1: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  4ED9: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  4EDB: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  4EEB: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  4EEE: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  4EFE: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  4F03: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  4F13: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  4F14: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  4F24: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  4F28: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  4F38: 03 00                                            // ..

Index (LTRV, 0x03))

  4F3A: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  4F42: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  4F47: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  4F49: A4 00                                            // ..

                            Case
  4F4B: A1 43 04                                         // .C.

 (0x08)
                            {

  4F4E: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  4F57: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4F5F: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  4F62: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  4F66: A4 01                                            // ..

                            Case
  4F68: A1 26                                            // .&

 (0x09)
                            {

  4F6A: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  4F73: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  4F7B: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  4F7E: 95 69 0A 03                                      // .i..

                                        Return (
  4F82: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  4F83: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  4F8F: A5                                               // .

                    Return (
  4F90: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  4F91: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  4F95: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  4F9D: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  4FA3: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  4FAA: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  4FB3: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  4FBA: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  4FC3: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  4FCC: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  4FD1: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  4FD3: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  4FD8: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  4FDF: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  4FE3: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  4FED: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  4FFD: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  5000: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  5006: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  5016: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  5026: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  5028: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  5031: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  5038: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  5041: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  5048: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0F)
                    }


  504E: A4 41 52 30 46                                   // .AR0F

                    Return (PR0F)
                }
            }


  5053: A4 50 52 30 46                                   // .PR0F

            Device (RP13)
            {

  5058: 5B 82 47 3B 52 50 31 33                          // [.G;RP13

                Name (_ADR, 0x001D0004)  // _ADR: Address

  5060: 08 5F 41 44 52 0C 04 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  506A: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  5075: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  5085: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  5095: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  50A5: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  50B5: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  50C5: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  50D5: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  50E5: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  50F5: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  5105: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  510D: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  511D: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  5124: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  5129: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  5130: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  5138: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  513E: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  5143: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  5153: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  5157: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  5163: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  516C: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  5171: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  5177: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  5181: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  518C: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  5197: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  51A2: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  51AD: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  51B0: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  51BA: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  51C0: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  51C6: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  51CC: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  51D2: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  51DA: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  51DD: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  51E7: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  51ED: A4 4F 50 54 53                                   // .OPTS

                            Case
  51F2: A1 45 15                                         // .E.

 (0x04)
                            {

  51F5: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  51FF: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  5202: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  5206: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  520C: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  520D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  521D: 00 00 00 00                                      // ....

                                    Else
                                    {

  5221: A1 16                                            // ..

                                        Return (
  5223: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  5224: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  5234: 00 00 00 00                                      // ....

                            Case
  5238: A1 4F 10                                         // .O.

 (0x05)
                            {

  523B: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  5244: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  5249: A4 01                                            // ..

                            Case
  524B: A1 4C 0F                                         // .L.

 (0x06)
                            {

  524E: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  5258: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  525C: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  5260: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  5267: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  5271: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  5277: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  5287: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  528A: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  5292: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  5294: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  52A4: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  52A7: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  52B7: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  52BC: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  52CC: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  52CD: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  52DD: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  52E1: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  52F1: 03 00                                            // ..

Index (LTRV, 0x03))

  52F3: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  52FB: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  5300: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  5302: A4 00                                            // ..

                            Case
  5304: A1 43 04                                         // .C.

 (0x08)
                            {

  5307: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  5310: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  5318: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  531B: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  531F: A4 01                                            // ..

                            Case
  5321: A1 26                                            // .&

 (0x09)
                            {

  5323: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  532C: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  5334: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  5337: 95 69 0A 03                                      // .i..

                                        Return (
  533B: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  533C: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  5348: A5                                               // .

                    Return (
  5349: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  534A: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  534E: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  5356: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  535C: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  5363: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  536C: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  5373: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  537C: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  5385: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  538A: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  538C: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  5391: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  5398: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  539C: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  53A6: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  53B6: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  53B9: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  53BF: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  53CF: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  53DF: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  53E1: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  53EA: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  53F1: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  53FA: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  5401: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR10)
                    }


  5407: A4 41 52 31 30                                   // .AR10

                    Return (PR10)
                }
            }


  540C: A4 50 52 31 30                                   // .PR10

            Device (RP01)
            {

  5411: 5B 82 47 3B 52 50 30 31                          // [.G;RP01

                Name (_ADR, 0x001C0000)  // _ADR: Address

  5419: 08 5F 41 44 52 0C 00 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  5423: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  542E: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  543E: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  544E: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  545E: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  546E: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  547E: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  548E: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  549E: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  54AE: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  54BE: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  54C6: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  54D6: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  54DD: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  54E2: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  54E9: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  54F1: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  54F7: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  54FC: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  550C: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  5510: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  551C: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  5525: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  552A: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  5530: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  553A: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  5545: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  5550: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  555B: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  5566: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  5569: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  5573: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  5579: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  557F: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  5585: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  558B: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  5593: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  5596: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  55A0: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  55A6: A4 4F 50 54 53                                   // .OPTS

                            Case
  55AB: A1 45 15                                         // .E.

 (0x04)
                            {

  55AE: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  55B8: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  55BB: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  55BF: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  55C5: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  55C6: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  55D6: 00 00 00 00                                      // ....

                                    Else
                                    {

  55DA: A1 16                                            // ..

                                        Return (
  55DC: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  55DD: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  55ED: 00 00 00 00                                      // ....

                            Case
  55F1: A1 4F 10                                         // .O.

 (0x05)
                            {

  55F4: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  55FD: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  5602: A4 01                                            // ..

                            Case
  5604: A1 4C 0F                                         // .L.

 (0x06)
                            {

  5607: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  5611: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  5615: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  5619: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  5620: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  562A: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  5630: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  5640: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  5643: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  564B: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  564D: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  565D: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  5660: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  5670: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  5675: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  5685: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  5686: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  5696: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  569A: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  56AA: 03 00                                            // ..

Index (LTRV, 0x03))

  56AC: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  56B4: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  56B9: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  56BB: A4 00                                            // ..

                            Case
  56BD: A1 43 04                                         // .C.

 (0x08)
                            {

  56C0: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  56C9: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  56D1: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  56D4: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  56D8: A4 01                                            // ..

                            Case
  56DA: A1 26                                            // .&

 (0x09)
                            {

  56DC: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  56E5: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  56ED: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  56F0: 95 69 0A 03                                      // .i..

                                        Return (
  56F4: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  56F5: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  5701: A5                                               // .

                    Return (
  5702: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  5703: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  5707: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  570F: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  5715: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  571C: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  5725: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  572C: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  5735: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  573E: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  5743: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  5745: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  574A: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  5751: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  5755: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  575F: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  576F: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  5772: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  5778: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  5788: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  5798: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  579A: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  57A3: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  57AA: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  57B3: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  57BA: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR04)
                    }


  57C0: A4 41 52 30 34                                   // .AR04

                    Return (PR04)
                }
            }


  57C5: A4 50 52 30 34                                   // .PR04

            Device (RP02)
            {

  57CA: 5B 82 47 3B 52 50 30 32                          // [.G;RP02

                Name (_ADR, 0x001C0001)  // _ADR: Address

  57D2: 08 5F 41 44 52 0C 01 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  57DC: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  57E7: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  57F7: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  5807: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  5817: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  5827: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  5837: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  5847: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  5857: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  5867: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  5877: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  587F: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  588F: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  5896: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  589B: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  58A2: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  58AA: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  58B0: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  58B5: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  58C5: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  58C9: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  58D5: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  58DE: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  58E3: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  58E9: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  58F3: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  58FE: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  5909: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  5914: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  591F: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  5922: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  592C: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  5932: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  5938: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  593E: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  5944: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  594C: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  594F: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  5959: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  595F: A4 4F 50 54 53                                   // .OPTS

                            Case
  5964: A1 45 15                                         // .E.

 (0x04)
                            {

  5967: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  5971: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  5974: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  5978: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  597E: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  597F: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  598F: 00 00 00 00                                      // ....

                                    Else
                                    {

  5993: A1 16                                            // ..

                                        Return (
  5995: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  5996: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  59A6: 00 00 00 00                                      // ....

                            Case
  59AA: A1 4F 10                                         // .O.

 (0x05)
                            {

  59AD: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  59B6: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  59BB: A4 01                                            // ..

                            Case
  59BD: A1 4C 0F                                         // .L.

 (0x06)
                            {

  59C0: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  59CA: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  59CE: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  59D2: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  59D9: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  59E3: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  59E9: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  59F9: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  59FC: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  5A04: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  5A06: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  5A16: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  5A19: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  5A29: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  5A2E: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  5A3E: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  5A3F: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  5A4F: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  5A53: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  5A63: 03 00                                            // ..

Index (LTRV, 0x03))

  5A65: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  5A6D: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  5A72: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  5A74: A4 00                                            // ..

                            Case
  5A76: A1 43 04                                         // .C.

 (0x08)
                            {

  5A79: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  5A82: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  5A8A: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  5A8D: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  5A91: A4 01                                            // ..

                            Case
  5A93: A1 26                                            // .&

 (0x09)
                            {

  5A95: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  5A9E: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  5AA6: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  5AA9: 95 69 0A 03                                      // .i..

                                        Return (
  5AAD: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  5AAE: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  5ABA: A5                                               // .

                    Return (
  5ABB: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  5ABC: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  5AC0: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  5AC8: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  5ACE: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  5AD5: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  5ADE: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  5AE5: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  5AEE: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  5AF7: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  5AFC: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  5AFE: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  5B03: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  5B0A: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  5B0E: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  5B18: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  5B28: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  5B2B: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  5B31: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  5B41: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  5B51: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  5B53: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  5B5C: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  5B63: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  5B6C: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  5B73: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR05)
                    }


  5B79: A4 41 52 30 35                                   // .AR05

                    Return (PR05)
                }
            }


  5B7E: A4 50 52 30 35                                   // .PR05

            Device (RP03)
            {

  5B83: 5B 82 47 3B 52 50 30 33                          // [.G;RP03

                Name (_ADR, 0x001C0002)  // _ADR: Address

  5B8B: 08 5F 41 44 52 0C 02 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  5B95: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  5BA0: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  5BB0: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  5BC0: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  5BD0: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  5BE0: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  5BF0: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  5C00: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  5C10: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  5C20: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  5C30: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  5C38: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  5C48: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  5C4F: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  5C54: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  5C5B: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  5C63: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  5C69: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  5C6E: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  5C7E: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  5C82: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  5C8E: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  5C97: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  5C9C: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  5CA2: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  5CAC: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  5CB7: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  5CC2: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  5CCD: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  5CD8: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  5CDB: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  5CE5: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  5CEB: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  5CF1: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  5CF7: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  5CFD: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  5D05: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  5D08: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  5D12: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  5D18: A4 4F 50 54 53                                   // .OPTS

                            Case
  5D1D: A1 45 15                                         // .E.

 (0x04)
                            {

  5D20: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  5D2A: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  5D2D: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  5D31: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  5D37: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  5D38: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  5D48: 00 00 00 00                                      // ....

                                    Else
                                    {

  5D4C: A1 16                                            // ..

                                        Return (
  5D4E: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  5D4F: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  5D5F: 00 00 00 00                                      // ....

                            Case
  5D63: A1 4F 10                                         // .O.

 (0x05)
                            {

  5D66: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  5D6F: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  5D74: A4 01                                            // ..

                            Case
  5D76: A1 4C 0F                                         // .L.

 (0x06)
                            {

  5D79: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  5D83: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  5D87: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  5D8B: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  5D92: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  5D9C: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  5DA2: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  5DB2: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  5DB5: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  5DBD: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  5DBF: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  5DCF: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  5DD2: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  5DE2: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  5DE7: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  5DF7: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  5DF8: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  5E08: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  5E0C: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  5E1C: 03 00                                            // ..

Index (LTRV, 0x03))

  5E1E: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  5E26: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  5E2B: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  5E2D: A4 00                                            // ..

                            Case
  5E2F: A1 43 04                                         // .C.

 (0x08)
                            {

  5E32: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  5E3B: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  5E43: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  5E46: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  5E4A: A4 01                                            // ..

                            Case
  5E4C: A1 26                                            // .&

 (0x09)
                            {

  5E4E: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  5E57: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  5E5F: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  5E62: 95 69 0A 03                                      // .i..

                                        Return (
  5E66: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  5E67: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  5E73: A5                                               // .

                    Return (
  5E74: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  5E75: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  5E79: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  5E81: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  5E87: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  5E8E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  5E97: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  5E9E: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  5EA7: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  5EB0: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  5EB5: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  5EB7: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  5EBC: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  5EC3: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  5EC7: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  5ED1: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  5EE1: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  5EE4: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  5EEA: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  5EFA: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  5F0A: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  5F0C: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  5F15: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  5F1C: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  5F25: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  5F2C: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR06)
                    }


  5F32: A4 41 52 30 36                                   // .AR06

                    Return (PR06)
                }
            }


  5F37: A4 50 52 30 36                                   // .PR06

            Device (RP04)
            {

  5F3C: 5B 82 47 3B 52 50 30 34                          // [.G;RP04

                Name (_ADR, 0x001C0003)  // _ADR: Address

  5F44: 08 5F 41 44 52 0C 03 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  5F4E: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  5F59: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  5F69: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  5F79: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  5F89: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  5F99: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  5FA9: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  5FB9: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  5FC9: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  5FD9: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  5FE9: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  5FF1: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  6001: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  6008: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  600D: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  6014: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  601C: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  6022: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  6027: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  6037: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  603B: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  6047: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  6050: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  6055: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  605B: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  6065: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  6070: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  607B: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  6086: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  6091: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  6094: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  609E: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  60A4: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  60AA: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  60B0: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  60B6: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  60BE: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  60C1: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  60CB: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  60D1: A4 4F 50 54 53                                   // .OPTS

                            Case
  60D6: A1 45 15                                         // .E.

 (0x04)
                            {

  60D9: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  60E3: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  60E6: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  60EA: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  60F0: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  60F1: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  6101: 00 00 00 00                                      // ....

                                    Else
                                    {

  6105: A1 16                                            // ..

                                        Return (
  6107: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  6108: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  6118: 00 00 00 00                                      // ....

                            Case
  611C: A1 4F 10                                         // .O.

 (0x05)
                            {

  611F: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  6128: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  612D: A4 01                                            // ..

                            Case
  612F: A1 4C 0F                                         // .L.

 (0x06)
                            {

  6132: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  613C: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  6140: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  6144: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  614B: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  6155: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  615B: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  616B: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  616E: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  6176: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  6178: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  6188: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  618B: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  619B: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  61A0: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  61B0: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  61B1: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  61C1: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  61C5: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  61D5: 03 00                                            // ..

Index (LTRV, 0x03))

  61D7: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  61DF: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  61E4: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  61E6: A4 00                                            // ..

                            Case
  61E8: A1 43 04                                         // .C.

 (0x08)
                            {

  61EB: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  61F4: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  61FC: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  61FF: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  6203: A4 01                                            // ..

                            Case
  6205: A1 26                                            // .&

 (0x09)
                            {

  6207: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  6210: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  6218: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  621B: 95 69 0A 03                                      // .i..

                                        Return (
  621F: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  6220: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  622C: A5                                               // .

                    Return (
  622D: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  622E: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  6232: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  623A: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  6240: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  6247: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  6250: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  6257: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  6260: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  6269: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  626E: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  6270: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  6275: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  627C: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  6280: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  628A: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  629A: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  629D: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  62A3: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  62B3: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  62C3: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  62C5: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  62CE: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  62D5: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  62DE: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  62E5: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR07)
                    }


  62EB: A4 41 52 30 37                                   // .AR07

                    Return (PR07)
                }
            }


  62F0: A4 50 52 30 37                                   // .PR07

            Device (RP05)
            {

  62F5: 5B 82 47 3B 52 50 30 35                          // [.G;RP05

                Name (_ADR, 0x001C0004)  // _ADR: Address

  62FD: 08 5F 41 44 52 0C 04 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  6307: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  6312: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  6322: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  6332: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  6342: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  6352: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  6362: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  6372: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  6382: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  6392: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  63A2: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  63AA: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  63BA: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  63C1: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  63C6: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  63CD: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  63D5: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  63DB: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  63E0: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  63F0: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  63F4: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  6400: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  6409: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  640E: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  6414: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  641E: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  6429: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  6434: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  643F: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  644A: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  644D: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  6457: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  645D: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  6463: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  6469: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  646F: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  6477: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  647A: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  6484: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  648A: A4 4F 50 54 53                                   // .OPTS

                            Case
  648F: A1 45 15                                         // .E.

 (0x04)
                            {

  6492: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  649C: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  649F: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  64A3: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  64A9: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  64AA: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  64BA: 00 00 00 00                                      // ....

                                    Else
                                    {

  64BE: A1 16                                            // ..

                                        Return (
  64C0: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  64C1: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  64D1: 00 00 00 00                                      // ....

                            Case
  64D5: A1 4F 10                                         // .O.

 (0x05)
                            {

  64D8: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  64E1: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  64E6: A4 01                                            // ..

                            Case
  64E8: A1 4C 0F                                         // .L.

 (0x06)
                            {

  64EB: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  64F5: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  64F9: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  64FD: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  6504: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  650E: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  6514: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  6524: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  6527: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  652F: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  6531: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  6541: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  6544: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  6554: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  6559: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  6569: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  656A: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  657A: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  657E: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  658E: 03 00                                            // ..

Index (LTRV, 0x03))

  6590: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  6598: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  659D: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  659F: A4 00                                            // ..

                            Case
  65A1: A1 43 04                                         // .C.

 (0x08)
                            {

  65A4: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  65AD: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  65B5: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  65B8: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  65BC: A4 01                                            // ..

                            Case
  65BE: A1 26                                            // .&

 (0x09)
                            {

  65C0: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  65C9: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  65D1: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  65D4: 95 69 0A 03                                      // .i..

                                        Return (
  65D8: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  65D9: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  65E5: A5                                               // .

                    Return (
  65E6: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  65E7: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  65EB: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  65F3: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  65F9: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  6600: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  6609: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  6610: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  6619: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  6622: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  6627: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  6629: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  662E: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  6635: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  6639: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  6643: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  6653: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  6656: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  665C: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  666C: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  667C: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  667E: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  6687: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  668E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  6697: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  669E: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR08)
                    }


  66A4: A4 41 52 30 38                                   // .AR08

                    Return (PR08)
                }
            }


  66A9: A4 50 52 30 38                                   // .PR08

            Device (RP06)
            {

  66AE: 5B 82 47 3B 52 50 30 36                          // [.G;RP06

                Name (_ADR, 0x001C0005)  // _ADR: Address

  66B6: 08 5F 41 44 52 0C 05 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  66C0: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  66CB: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  66DB: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  66EB: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  66FB: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  670B: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  671B: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  672B: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  673B: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  674B: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  675B: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  6763: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  6773: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  677A: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  677F: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  6786: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  678E: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  6794: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  6799: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  67A9: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  67AD: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  67B9: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  67C2: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  67C7: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  67CD: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  67D7: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  67E2: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  67ED: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  67F8: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  6803: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  6806: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  6810: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  6816: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  681C: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  6822: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  6828: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  6830: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  6833: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  683D: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  6843: A4 4F 50 54 53                                   // .OPTS

                            Case
  6848: A1 45 15                                         // .E.

 (0x04)
                            {

  684B: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  6855: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  6858: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  685C: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  6862: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  6863: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  6873: 00 00 00 00                                      // ....

                                    Else
                                    {

  6877: A1 16                                            // ..

                                        Return (
  6879: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  687A: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  688A: 00 00 00 00                                      // ....

                            Case
  688E: A1 4F 10                                         // .O.

 (0x05)
                            {

  6891: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  689A: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  689F: A4 01                                            // ..

                            Case
  68A1: A1 4C 0F                                         // .L.

 (0x06)
                            {

  68A4: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  68AE: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  68B2: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  68B6: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  68BD: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  68C7: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  68CD: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  68DD: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  68E0: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  68E8: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  68EA: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  68FA: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  68FD: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  690D: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  6912: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  6922: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  6923: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  6933: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  6937: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  6947: 03 00                                            // ..

Index (LTRV, 0x03))

  6949: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  6951: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  6956: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  6958: A4 00                                            // ..

                            Case
  695A: A1 43 04                                         // .C.

 (0x08)
                            {

  695D: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  6966: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  696E: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  6971: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  6975: A4 01                                            // ..

                            Case
  6977: A1 26                                            // .&

 (0x09)
                            {

  6979: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  6982: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  698A: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  698D: 95 69 0A 03                                      // .i..

                                        Return (
  6991: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  6992: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  699E: A5                                               // .

                    Return (
  699F: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  69A0: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  69A4: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  69AC: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  69B2: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  69B9: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  69C2: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  69C9: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  69D2: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  69DB: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  69E0: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  69E2: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  69E7: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  69EE: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  69F2: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  69FC: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  6A0C: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  6A0F: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  6A15: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  6A25: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  6A35: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  6A37: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  6A40: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  6A47: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  6A50: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  6A57: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR09)
                    }


  6A5D: A4 41 52 30 39                                   // .AR09

                    Return (PR09)
                }
            }


  6A62: A4 50 52 30 39                                   // .PR09

            Device (RP07)
            {

  6A67: 5B 82 47 3B 52 50 30 37                          // [.G;RP07

                Name (_ADR, 0x001C0006)  // _ADR: Address

  6A6F: 08 5F 41 44 52 0C 06 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  6A79: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  6A84: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  6A94: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  6AA4: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  6AB4: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  6AC4: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  6AD4: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  6AE4: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  6AF4: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  6B04: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  6B14: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  6B1C: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  6B2C: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  6B33: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  6B38: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  6B3F: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  6B47: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  6B4D: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  6B52: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  6B62: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  6B66: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  6B72: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  6B7B: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  6B80: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  6B86: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  6B90: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  6B9B: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  6BA6: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  6BB1: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  6BBC: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  6BBF: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  6BC9: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  6BCF: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  6BD5: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  6BDB: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  6BE1: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  6BE9: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  6BEC: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  6BF6: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  6BFC: A4 4F 50 54 53                                   // .OPTS

                            Case
  6C01: A1 45 15                                         // .E.

 (0x04)
                            {

  6C04: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  6C0E: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  6C11: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  6C15: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  6C1B: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  6C1C: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  6C2C: 00 00 00 00                                      // ....

                                    Else
                                    {

  6C30: A1 16                                            // ..

                                        Return (
  6C32: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  6C33: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  6C43: 00 00 00 00                                      // ....

                            Case
  6C47: A1 4F 10                                         // .O.

 (0x05)
                            {

  6C4A: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  6C53: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  6C58: A4 01                                            // ..

                            Case
  6C5A: A1 4C 0F                                         // .L.

 (0x06)
                            {

  6C5D: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  6C67: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  6C6B: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  6C6F: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  6C76: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  6C80: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  6C86: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  6C96: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  6C99: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  6CA1: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  6CA3: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  6CB3: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  6CB6: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  6CC6: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  6CCB: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  6CDB: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  6CDC: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  6CEC: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  6CF0: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  6D00: 03 00                                            // ..

Index (LTRV, 0x03))

  6D02: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  6D0A: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  6D0F: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  6D11: A4 00                                            // ..

                            Case
  6D13: A1 43 04                                         // .C.

 (0x08)
                            {

  6D16: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  6D1F: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  6D27: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  6D2A: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  6D2E: A4 01                                            // ..

                            Case
  6D30: A1 26                                            // .&

 (0x09)
                            {

  6D32: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  6D3B: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  6D43: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  6D46: 95 69 0A 03                                      // .i..

                                        Return (
  6D4A: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  6D4B: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  6D57: A5                                               // .

                    Return (
  6D58: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  6D59: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  6D5D: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  6D65: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  6D6B: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  6D72: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  6D7B: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  6D82: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  6D8B: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  6D94: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  6D99: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  6D9B: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  6DA0: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  6DA7: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  6DAB: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  6DB5: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  6DC5: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  6DC8: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  6DCE: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  6DDE: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  6DEE: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  6DF0: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  6DF9: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  6E00: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  6E09: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  6E10: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0A)
                    }


  6E16: A4 41 52 30 41                                   // .AR0A

                    Return (PR0A)
                }
            }


  6E1B: A4 50 52 30 41                                   // .PR0A

            Device (RP08)
            {

  6E20: 5B 82 47 3B 52 50 30 38                          // [.G;RP08

                Name (_ADR, 0x001C0007)  // _ADR: Address

  6E28: 08 5F 41 44 52 0C 07 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  6E32: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  6E3D: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  6E4D: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  6E5D: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  6E6D: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  6E7D: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  6E8D: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  6E9D: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  6EAD: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  6EBD: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  6ECD: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  6ED5: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  6EE5: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  6EEC: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  6EF1: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  6EF8: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  6F00: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  6F06: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  6F0B: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  6F1B: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  6F1F: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  6F2B: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  6F34: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  6F39: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  6F3F: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  6F49: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  6F54: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  6F5F: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  6F6A: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  6F75: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  6F78: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  6F82: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  6F88: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  6F8E: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  6F94: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  6F9A: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  6FA2: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  6FA5: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  6FAF: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  6FB5: A4 4F 50 54 53                                   // .OPTS

                            Case
  6FBA: A1 45 15                                         // .E.

 (0x04)
                            {

  6FBD: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  6FC7: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  6FCA: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  6FCE: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  6FD4: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  6FD5: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  6FE5: 00 00 00 00                                      // ....

                                    Else
                                    {

  6FE9: A1 16                                            // ..

                                        Return (
  6FEB: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  6FEC: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  6FFC: 00 00 00 00                                      // ....

                            Case
  7000: A1 4F 10                                         // .O.

 (0x05)
                            {

  7003: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  700C: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  7011: A4 01                                            // ..

                            Case
  7013: A1 4C 0F                                         // .L.

 (0x06)
                            {

  7016: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  7020: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  7024: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  7028: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  702F: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  7039: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  703F: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  704F: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  7052: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  705A: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  705C: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  706C: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  706F: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  707F: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  7084: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  7094: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  7095: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  70A5: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  70A9: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  70B9: 03 00                                            // ..

Index (LTRV, 0x03))

  70BB: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  70C3: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  70C8: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  70CA: A4 00                                            // ..

                            Case
  70CC: A1 43 04                                         // .C.

 (0x08)
                            {

  70CF: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  70D8: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  70E0: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  70E3: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  70E7: A4 01                                            // ..

                            Case
  70E9: A1 26                                            // .&

 (0x09)
                            {

  70EB: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  70F4: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  70FC: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  70FF: 95 69 0A 03                                      // .i..

                                        Return (
  7103: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  7104: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  7110: A5                                               // .

                    Return (
  7111: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  7112: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  7116: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  711E: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  7124: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  712B: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  7134: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  713B: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  7144: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  714D: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  7152: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  7154: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  7159: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  7160: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  7164: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  716E: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  717E: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  7181: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  7187: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  7197: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  71A7: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  71A9: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  71B2: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  71B9: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  71C2: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  71C9: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0B)
                    }


  71CF: A4 41 52 30 42                                   // .AR0B

                    Return (PR0B)
                }
            }


  71D4: A4 50 52 30 42                                   // .PR0B

            Device (RP17)
            {

  71D9: 5B 82 47 3B 52 50 31 37                          // [.G;RP17

                Name (_ADR, 0x001B0000)  // _ADR: Address

  71E1: 08 5F 41 44 52 0C 00 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  71EB: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  71F6: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  7206: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  7216: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  7226: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  7236: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  7246: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  7256: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  7266: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  7276: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  7286: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  728E: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  729E: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  72A5: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  72AA: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  72B1: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  72B9: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  72BF: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  72C4: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  72D4: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  72D8: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  72E4: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  72ED: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  72F2: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  72F8: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  7302: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  730D: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  7318: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  7323: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  732E: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  7331: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  733B: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  7341: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  7347: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  734D: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  7353: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  735B: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  735E: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  7368: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  736E: A4 4F 50 54 53                                   // .OPTS

                            Case
  7373: A1 45 15                                         // .E.

 (0x04)
                            {

  7376: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  7380: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  7383: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  7387: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  738D: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  738E: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  739E: 00 00 00 00                                      // ....

                                    Else
                                    {

  73A2: A1 16                                            // ..

                                        Return (
  73A4: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  73A5: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  73B5: 00 00 00 00                                      // ....

                            Case
  73B9: A1 4F 10                                         // .O.

 (0x05)
                            {

  73BC: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  73C5: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  73CA: A4 01                                            // ..

                            Case
  73CC: A1 4C 0F                                         // .L.

 (0x06)
                            {

  73CF: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  73D9: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  73DD: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  73E1: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  73E8: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  73F2: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  73F8: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  7408: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  740B: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  7413: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  7415: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  7425: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  7428: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  7438: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  743D: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  744D: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  744E: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  745E: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  7462: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  7472: 03 00                                            // ..

Index (LTRV, 0x03))

  7474: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  747C: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  7481: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  7483: A4 00                                            // ..

                            Case
  7485: A1 43 04                                         // .C.

 (0x08)
                            {

  7488: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  7491: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  7499: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  749C: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  74A0: A4 01                                            // ..

                            Case
  74A2: A1 26                                            // .&

 (0x09)
                            {

  74A4: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  74AD: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  74B5: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  74B8: 95 69 0A 03                                      // .i..

                                        Return (
  74BC: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  74BD: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  74C9: A5                                               // .

                    Return (
  74CA: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  74CB: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  74CF: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  74D7: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  74DD: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  74E4: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  74ED: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  74F4: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  74FD: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  7506: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  750B: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  750D: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  7512: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  7519: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  751D: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  7527: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  7537: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  753A: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  7540: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  7550: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  7560: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  7562: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  756B: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  7572: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  757B: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  7582: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR14)
                    }


  7588: A4 41 52 31 34                                   // .AR14

                    Return (PR14)
                }
            }


  758D: A4 50 52 31 34                                   // .PR14

            Device (RP18)
            {

  7592: 5B 82 47 3B 52 50 31 38                          // [.G;RP18

                Name (_ADR, 0x001B0001)  // _ADR: Address

  759A: 08 5F 41 44 52 0C 01 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  75A4: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  75AF: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  75BF: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  75CF: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  75DF: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  75EF: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  75FF: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  760F: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  761F: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  762F: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  763F: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  7647: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  7657: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  765E: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  7663: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  766A: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  7672: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  7678: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  767D: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  768D: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  7691: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  769D: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  76A6: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  76AB: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  76B1: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  76BB: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  76C6: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  76D1: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  76DC: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  76E7: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  76EA: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  76F4: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  76FA: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  7700: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  7706: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  770C: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  7714: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  7717: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  7721: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  7727: A4 4F 50 54 53                                   // .OPTS

                            Case
  772C: A1 45 15                                         // .E.

 (0x04)
                            {

  772F: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  7739: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  773C: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  7740: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  7746: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  7747: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  7757: 00 00 00 00                                      // ....

                                    Else
                                    {

  775B: A1 16                                            // ..

                                        Return (
  775D: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  775E: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  776E: 00 00 00 00                                      // ....

                            Case
  7772: A1 4F 10                                         // .O.

 (0x05)
                            {

  7775: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  777E: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  7783: A4 01                                            // ..

                            Case
  7785: A1 4C 0F                                         // .L.

 (0x06)
                            {

  7788: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  7792: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  7796: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  779A: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  77A1: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  77AB: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  77B1: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  77C1: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  77C4: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  77CC: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  77CE: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  77DE: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  77E1: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  77F1: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  77F6: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  7806: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  7807: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  7817: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  781B: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  782B: 03 00                                            // ..

Index (LTRV, 0x03))

  782D: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  7835: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  783A: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  783C: A4 00                                            // ..

                            Case
  783E: A1 43 04                                         // .C.

 (0x08)
                            {

  7841: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  784A: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  7852: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  7855: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  7859: A4 01                                            // ..

                            Case
  785B: A1 26                                            // .&

 (0x09)
                            {

  785D: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  7866: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  786E: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  7871: 95 69 0A 03                                      // .i..

                                        Return (
  7875: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  7876: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  7882: A5                                               // .

                    Return (
  7883: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  7884: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  7888: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  7890: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  7896: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  789D: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  78A6: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  78AD: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  78B6: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  78BF: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  78C4: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  78C6: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  78CB: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  78D2: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  78D6: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  78E0: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  78F0: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  78F3: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  78F9: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  7909: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  7919: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  791B: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  7924: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  792B: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  7934: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  793B: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR15)
                    }


  7941: A4 41 52 31 35                                   // .AR15

                    Return (PR15)
                }
            }


  7946: A4 50 52 31 35                                   // .PR15

            Device (RP19)
            {

  794B: 5B 82 47 3B 52 50 31 39                          // [.G;RP19

                Name (_ADR, 0x001B0002)  // _ADR: Address

  7953: 08 5F 41 44 52 0C 02 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  795D: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  7968: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  7978: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  7988: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  7998: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  79A8: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  79B8: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  79C8: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  79D8: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  79E8: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  79F8: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  7A00: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  7A10: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  7A17: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  7A1C: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  7A23: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  7A2B: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  7A31: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  7A36: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  7A46: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  7A4A: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  7A56: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  7A5F: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  7A64: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  7A6A: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  7A74: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  7A7F: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  7A8A: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  7A95: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  7AA0: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  7AA3: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  7AAD: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  7AB3: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  7AB9: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  7ABF: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  7AC5: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  7ACD: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  7AD0: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  7ADA: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  7AE0: A4 4F 50 54 53                                   // .OPTS

                            Case
  7AE5: A1 45 15                                         // .E.

 (0x04)
                            {

  7AE8: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  7AF2: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  7AF5: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  7AF9: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  7AFF: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  7B00: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  7B10: 00 00 00 00                                      // ....

                                    Else
                                    {

  7B14: A1 16                                            // ..

                                        Return (
  7B16: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  7B17: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  7B27: 00 00 00 00                                      // ....

                            Case
  7B2B: A1 4F 10                                         // .O.

 (0x05)
                            {

  7B2E: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  7B37: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  7B3C: A4 01                                            // ..

                            Case
  7B3E: A1 4C 0F                                         // .L.

 (0x06)
                            {

  7B41: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  7B4B: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  7B4F: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  7B53: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  7B5A: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  7B64: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  7B6A: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  7B7A: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  7B7D: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  7B85: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  7B87: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  7B97: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  7B9A: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  7BAA: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  7BAF: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  7BBF: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  7BC0: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  7BD0: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  7BD4: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  7BE4: 03 00                                            // ..

Index (LTRV, 0x03))

  7BE6: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  7BEE: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  7BF3: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  7BF5: A4 00                                            // ..

                            Case
  7BF7: A1 43 04                                         // .C.

 (0x08)
                            {

  7BFA: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  7C03: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  7C0B: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  7C0E: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  7C12: A4 01                                            // ..

                            Case
  7C14: A1 26                                            // .&

 (0x09)
                            {

  7C16: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  7C1F: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  7C27: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  7C2A: 95 69 0A 03                                      // .i..

                                        Return (
  7C2E: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  7C2F: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  7C3B: A5                                               // .

                    Return (
  7C3C: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  7C3D: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  7C41: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  7C49: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  7C4F: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  7C56: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  7C5F: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  7C66: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  7C6F: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  7C78: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  7C7D: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  7C7F: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  7C84: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  7C8B: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  7C8F: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  7C99: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  7CA9: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  7CAC: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  7CB2: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  7CC2: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  7CD2: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  7CD4: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  7CDD: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  7CE4: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  7CED: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  7CF4: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR16)
                    }


  7CFA: A4 41 52 31 36                                   // .AR16

                    Return (PR16)
                }
            }


  7CFF: A4 50 52 31 36                                   // .PR16

            Device (RP20)
            {

  7D04: 5B 82 47 3B 52 50 32 30                          // [.G;RP20

                Name (_ADR, 0x001B0003)  // _ADR: Address

  7D0C: 08 5F 41 44 52 0C 03 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  7D16: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  7D21: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  7D31: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  7D41: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  7D51: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  7D61: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  7D71: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  7D81: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  7D91: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  7DA1: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  7DB1: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  7DB9: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  7DC9: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  7DD0: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  7DD5: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  7DDC: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  7DE4: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  7DEA: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  7DEF: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  7DFF: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  7E03: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  7E0F: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  7E18: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  7E1D: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  7E23: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  7E2D: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  7E38: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  7E43: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  7E4E: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  7E59: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  7E5C: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  7E66: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  7E6C: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  7E72: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  7E78: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  7E7E: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  7E86: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  7E89: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  7E93: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  7E99: A4 4F 50 54 53                                   // .OPTS

                            Case
  7E9E: A1 45 15                                         // .E.

 (0x04)
                            {

  7EA1: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  7EAB: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  7EAE: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  7EB2: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  7EB8: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  7EB9: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  7EC9: 00 00 00 00                                      // ....

                                    Else
                                    {

  7ECD: A1 16                                            // ..

                                        Return (
  7ECF: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  7ED0: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  7EE0: 00 00 00 00                                      // ....

                            Case
  7EE4: A1 4F 10                                         // .O.

 (0x05)
                            {

  7EE7: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  7EF0: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  7EF5: A4 01                                            // ..

                            Case
  7EF7: A1 4C 0F                                         // .L.

 (0x06)
                            {

  7EFA: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  7F04: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  7F08: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  7F0C: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  7F13: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  7F1D: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  7F23: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  7F33: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  7F36: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  7F3E: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  7F40: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  7F50: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  7F53: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  7F63: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  7F68: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  7F78: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  7F79: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  7F89: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  7F8D: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  7F9D: 03 00                                            // ..

Index (LTRV, 0x03))

  7F9F: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  7FA7: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  7FAC: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  7FAE: A4 00                                            // ..

                            Case
  7FB0: A1 43 04                                         // .C.

 (0x08)
                            {

  7FB3: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  7FBC: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  7FC4: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  7FC7: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  7FCB: A4 01                                            // ..

                            Case
  7FCD: A1 26                                            // .&

 (0x09)
                            {

  7FCF: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  7FD8: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  7FE0: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  7FE3: 95 69 0A 03                                      // .i..

                                        Return (
  7FE7: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  7FE8: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  7FF4: A5                                               // .

                    Return (
  7FF5: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  7FF6: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  7FFA: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  8002: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  8008: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  800F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  8018: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  801F: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  8028: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  8031: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  8036: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  8038: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  803D: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  8044: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  8048: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  8052: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  8062: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  8065: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  806B: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  807B: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  808B: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  808D: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  8096: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  809D: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  80A6: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  80AD: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR17)
                    }


  80B3: A4 41 52 31 37                                   // .AR17

                    Return (PR17)
                }
            }


  80B8: A4 50 52 31 37                                   // .PR17

            Device (RP21)
            {

  80BD: 5B 82 47 3B 52 50 32 31                          // [.G;RP21

                Name (_ADR, 0x001B0004)  // _ADR: Address

  80C5: 08 5F 41 44 52 0C 04 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  80CF: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  80DA: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  80EA: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  80FA: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  810A: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  811A: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  812A: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  813A: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  814A: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  815A: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  816A: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  8172: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  8182: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  8189: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  818E: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  8195: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  819D: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  81A3: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  81A8: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  81B8: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  81BC: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  81C8: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  81D1: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  81D6: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  81DC: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  81E6: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  81F1: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  81FC: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  8207: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  8212: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  8215: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  821F: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  8225: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  822B: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  8231: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  8237: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  823F: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  8242: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  824C: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  8252: A4 4F 50 54 53                                   // .OPTS

                            Case
  8257: A1 45 15                                         // .E.

 (0x04)
                            {

  825A: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  8264: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  8267: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  826B: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  8271: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  8272: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  8282: 00 00 00 00                                      // ....

                                    Else
                                    {

  8286: A1 16                                            // ..

                                        Return (
  8288: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  8289: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  8299: 00 00 00 00                                      // ....

                            Case
  829D: A1 4F 10                                         // .O.

 (0x05)
                            {

  82A0: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  82A9: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  82AE: A4 01                                            // ..

                            Case
  82B0: A1 4C 0F                                         // .L.

 (0x06)
                            {

  82B3: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  82BD: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  82C1: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  82C5: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  82CC: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  82D6: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  82DC: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  82EC: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  82EF: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  82F7: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  82F9: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  8309: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  830C: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  831C: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  8321: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  8331: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  8332: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  8342: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  8346: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  8356: 03 00                                            // ..

Index (LTRV, 0x03))

  8358: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  8360: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  8365: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  8367: A4 00                                            // ..

                            Case
  8369: A1 43 04                                         // .C.

 (0x08)
                            {

  836C: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  8375: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  837D: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8380: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  8384: A4 01                                            // ..

                            Case
  8386: A1 26                                            // .&

 (0x09)
                            {

  8388: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  8391: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8399: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  839C: 95 69 0A 03                                      // .i..

                                        Return (
  83A0: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  83A1: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  83AD: A5                                               // .

                    Return (
  83AE: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  83AF: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  83B3: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  83BB: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  83C1: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  83C8: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  83D1: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  83D8: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  83E1: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  83EA: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  83EF: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  83F1: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  83F6: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  83FD: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  8401: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  840B: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  841B: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  841E: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  8424: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  8434: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  8444: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  8446: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  844F: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  8456: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  845F: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  8466: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR18)
                    }


  846C: A4 41 52 31 38                                   // .AR18

                    Return (PR18)
                }
            }


  8471: A4 50 52 31 38                                   // .PR18

            Device (RP22)
            {

  8476: 5B 82 47 3B 52 50 32 32                          // [.G;RP22

                Name (_ADR, 0x001B0005)  // _ADR: Address

  847E: 08 5F 41 44 52 0C 05 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  8488: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  8493: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  84A3: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  84B3: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  84C3: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  84D3: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  84E3: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  84F3: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  8503: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  8513: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  8523: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  852B: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  853B: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  8542: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  8547: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  854E: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  8556: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  855C: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  8561: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  8571: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  8575: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  8581: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  858A: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  858F: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  8595: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  859F: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  85AA: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  85B5: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  85C0: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  85CB: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  85CE: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  85D8: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  85DE: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  85E4: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  85EA: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  85F0: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  85F8: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  85FB: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  8605: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  860B: A4 4F 50 54 53                                   // .OPTS

                            Case
  8610: A1 45 15                                         // .E.

 (0x04)
                            {

  8613: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  861D: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  8620: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  8624: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  862A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  862B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  863B: 00 00 00 00                                      // ....

                                    Else
                                    {

  863F: A1 16                                            // ..

                                        Return (
  8641: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  8642: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  8652: 00 00 00 00                                      // ....

                            Case
  8656: A1 4F 10                                         // .O.

 (0x05)
                            {

  8659: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  8662: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  8667: A4 01                                            // ..

                            Case
  8669: A1 4C 0F                                         // .L.

 (0x06)
                            {

  866C: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  8676: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  867A: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  867E: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  8685: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  868F: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  8695: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  86A5: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  86A8: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  86B0: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  86B2: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  86C2: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  86C5: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  86D5: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  86DA: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  86EA: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  86EB: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  86FB: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  86FF: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  870F: 03 00                                            // ..

Index (LTRV, 0x03))

  8711: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  8719: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  871E: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  8720: A4 00                                            // ..

                            Case
  8722: A1 43 04                                         // .C.

 (0x08)
                            {

  8725: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  872E: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8736: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8739: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  873D: A4 01                                            // ..

                            Case
  873F: A1 26                                            // .&

 (0x09)
                            {

  8741: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  874A: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8752: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8755: 95 69 0A 03                                      // .i..

                                        Return (
  8759: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  875A: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  8766: A5                                               // .

                    Return (
  8767: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  8768: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  876C: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  8774: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  877A: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  8781: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  878A: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  8791: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  879A: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  87A3: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  87A8: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  87AA: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  87AF: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  87B6: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  87BA: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  87C4: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  87D4: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  87D7: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  87DD: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  87ED: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  87FD: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  87FF: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  8808: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  880F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  8818: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  881F: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR19)
                    }


  8825: A4 41 52 31 39                                   // .AR19

                    Return (PR19)
                }
            }


  882A: A4 50 52 31 39                                   // .PR19

            Device (RP23)
            {

  882F: 5B 82 47 3B 52 50 32 33                          // [.G;RP23

                Name (_ADR, 0x001B0006)  // _ADR: Address

  8837: 08 5F 41 44 52 0C 06 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  8841: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  884C: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  885C: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  886C: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  887C: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  888C: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  889C: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  88AC: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  88BC: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  88CC: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  88DC: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  88E4: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  88F4: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  88FB: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  8900: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  8907: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  890F: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  8915: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  891A: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  892A: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  892E: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  893A: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  8943: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  8948: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  894E: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  8958: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  8963: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  896E: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  8979: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  8984: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  8987: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  8991: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  8997: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  899D: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  89A3: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  89A9: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  89B1: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  89B4: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  89BE: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  89C4: A4 4F 50 54 53                                   // .OPTS

                            Case
  89C9: A1 45 15                                         // .E.

 (0x04)
                            {

  89CC: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  89D6: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  89D9: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  89DD: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  89E3: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  89E4: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  89F4: 00 00 00 00                                      // ....

                                    Else
                                    {

  89F8: A1 16                                            // ..

                                        Return (
  89FA: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  89FB: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  8A0B: 00 00 00 00                                      // ....

                            Case
  8A0F: A1 4F 10                                         // .O.

 (0x05)
                            {

  8A12: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  8A1B: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  8A20: A4 01                                            // ..

                            Case
  8A22: A1 4C 0F                                         // .L.

 (0x06)
                            {

  8A25: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  8A2F: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  8A33: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  8A37: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  8A3E: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  8A48: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  8A4E: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  8A5E: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  8A61: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  8A69: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  8A6B: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  8A7B: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  8A7E: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  8A8E: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  8A93: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  8AA3: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  8AA4: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  8AB4: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  8AB8: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  8AC8: 03 00                                            // ..

Index (LTRV, 0x03))

  8ACA: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  8AD2: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  8AD7: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  8AD9: A4 00                                            // ..

                            Case
  8ADB: A1 43 04                                         // .C.

 (0x08)
                            {

  8ADE: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  8AE7: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8AEF: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8AF2: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  8AF6: A4 01                                            // ..

                            Case
  8AF8: A1 26                                            // .&

 (0x09)
                            {

  8AFA: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  8B03: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8B0B: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8B0E: 95 69 0A 03                                      // .i..

                                        Return (
  8B12: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  8B13: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  8B1F: A5                                               // .

                    Return (
  8B20: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  8B21: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  8B25: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  8B2D: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  8B33: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  8B3A: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  8B43: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  8B4A: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  8B53: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  8B5C: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  8B61: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  8B63: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  8B68: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  8B6F: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  8B73: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  8B7D: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  8B8D: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  8B90: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  8B96: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  8BA6: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  8BB6: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  8BB8: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  8BC1: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  8BC8: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  8BD1: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  8BD8: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR1A)
                    }


  8BDE: A4 41 52 31 41                                   // .AR1A

                    Return (PR1A)
                }
            }


  8BE3: A4 50 52 31 41                                   // .PR1A

            Device (RP24)
            {

  8BE8: 5B 82 47 3B 52 50 32 34                          // [.G;RP24

                Name (_ADR, 0x001B0007)  // _ADR: Address

  8BF0: 08 5F 41 44 52 0C 07 00 1B 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  8BFA: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  8C05: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  8C15: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  8C25: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  8C35: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  8C45: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  8C55: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  8C65: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  8C75: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  8C85: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  8C95: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  8C9D: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  8CAD: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  8CB4: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  8CB9: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  8CC0: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  8CC8: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  8CCE: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  8CD3: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  8CE3: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  8CE7: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  8CF3: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  8CFC: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  8D01: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  8D07: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  8D11: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  8D1C: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  8D27: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  8D32: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  8D3D: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  8D40: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  8D4A: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  8D50: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  8D56: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  8D5C: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  8D62: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  8D6A: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  8D6D: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  8D77: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  8D7D: A4 4F 50 54 53                                   // .OPTS

                            Case
  8D82: A1 45 15                                         // .E.

 (0x04)
                            {

  8D85: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  8D8F: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  8D92: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  8D96: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  8D9C: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  8D9D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  8DAD: 00 00 00 00                                      // ....

                                    Else
                                    {

  8DB1: A1 16                                            // ..

                                        Return (
  8DB3: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  8DB4: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  8DC4: 00 00 00 00                                      // ....

                            Case
  8DC8: A1 4F 10                                         // .O.

 (0x05)
                            {

  8DCB: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  8DD4: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  8DD9: A4 01                                            // ..

                            Case
  8DDB: A1 4C 0F                                         // .L.

 (0x06)
                            {

  8DDE: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  8DE8: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  8DEC: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  8DF0: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  8DF7: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  8E01: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  8E07: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  8E17: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  8E1A: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  8E22: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  8E24: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  8E34: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  8E37: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  8E47: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  8E4C: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  8E5C: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  8E5D: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  8E6D: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  8E71: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  8E81: 03 00                                            // ..

Index (LTRV, 0x03))

  8E83: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  8E8B: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  8E90: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  8E92: A4 00                                            // ..

                            Case
  8E94: A1 43 04                                         // .C.

 (0x08)
                            {

  8E97: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  8EA0: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8EA8: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8EAB: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  8EAF: A4 01                                            // ..

                            Case
  8EB1: A1 26                                            // .&

 (0x09)
                            {

  8EB3: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  8EBC: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  8EC4: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  8EC7: 95 69 0A 03                                      // .i..

                                        Return (
  8ECB: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  8ECC: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  8ED8: A5                                               // .

                    Return (
  8ED9: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  8EDA: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  8EDE: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  8EE6: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  8EEC: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  8EF3: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  8EFC: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  8F03: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  8F0C: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  8F15: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  8F1A: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  8F1C: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  8F21: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  8F28: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  8F2C: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  8F36: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  8F46: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  8F49: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  8F4F: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  8F5F: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  8F6F: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  8F71: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  8F7A: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  8F81: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  8F8A: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  8F91: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR1B)
                    }


  8F97: A4 41 52 31 42                                   // .AR1B

                    Return (PR1B)
                }
            }


  8F9C: A4 50 52 31 42                                   // .PR1B

            Device (RP14)
            {

  8FA1: 5B 82 47 3B 52 50 31 34                          // [.G;RP14

                Name (_ADR, 0x001D0005)  // _ADR: Address

  8FA9: 08 5F 41 44 52 0C 05 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  8FB3: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  8FBE: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  8FCE: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  8FDE: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  8FEE: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  8FFE: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  900E: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  901E: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  902E: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  903E: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  904E: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  9056: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  9066: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  906D: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  9072: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  9079: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  9081: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  9087: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  908C: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  909C: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  90A0: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  90AC: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  90B5: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  90BA: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  90C0: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  90CA: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  90D5: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  90E0: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  90EB: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  90F6: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  90F9: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  9103: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  9109: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  910F: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  9115: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  911B: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  9123: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  9126: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  9130: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  9136: A4 4F 50 54 53                                   // .OPTS

                            Case
  913B: A1 45 15                                         // .E.

 (0x04)
                            {

  913E: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  9148: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  914B: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  914F: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  9155: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  9156: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  9166: 00 00 00 00                                      // ....

                                    Else
                                    {

  916A: A1 16                                            // ..

                                        Return (
  916C: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  916D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  917D: 00 00 00 00                                      // ....

                            Case
  9181: A1 4F 10                                         // .O.

 (0x05)
                            {

  9184: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  918D: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  9192: A4 01                                            // ..

                            Case
  9194: A1 4C 0F                                         // .L.

 (0x06)
                            {

  9197: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  91A1: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  91A5: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  91A9: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  91B0: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  91BA: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  91C0: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  91D0: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  91D3: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  91DB: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  91DD: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  91ED: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  91F0: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  9200: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  9205: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  9215: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  9216: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  9226: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  922A: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  923A: 03 00                                            // ..

Index (LTRV, 0x03))

  923C: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  9244: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  9249: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  924B: A4 00                                            // ..

                            Case
  924D: A1 43 04                                         // .C.

 (0x08)
                            {

  9250: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  9259: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  9261: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  9264: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  9268: A4 01                                            // ..

                            Case
  926A: A1 26                                            // .&

 (0x09)
                            {

  926C: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  9275: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  927D: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  9280: 95 69 0A 03                                      // .i..

                                        Return (
  9284: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  9285: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  9291: A5                                               // .

                    Return (
  9292: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  9293: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  9297: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  929F: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  92A5: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  92AC: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  92B5: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  92BC: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  92C5: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  92CE: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  92D3: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  92D5: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  92DA: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  92E1: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  92E5: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  92EF: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  92FF: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  9302: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  9308: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  9318: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  9328: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  932A: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  9333: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  933A: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  9343: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  934A: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR11)
                    }


  9350: A4 41 52 31 31                                   // .AR11

                    Return (PR11)
                }
            }


  9355: A4 50 52 31 31                                   // .PR11

            Device (RP15)
            {

  935A: 5B 82 47 3B 52 50 31 35                          // [.G;RP15

                Name (_ADR, 0x001D0006)  // _ADR: Address

  9362: 08 5F 41 44 52 0C 06 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  936C: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  9377: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  9387: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  9397: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  93A7: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  93B7: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  93C7: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  93D7: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  93E7: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  93F7: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  9407: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  940F: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  941F: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  9426: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  942B: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  9432: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  943A: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  9440: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  9445: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  9455: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  9459: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  9465: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  946E: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  9473: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  9479: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  9483: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  948E: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  9499: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  94A4: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  94AF: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  94B2: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  94BC: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  94C2: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  94C8: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  94CE: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  94D4: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  94DC: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  94DF: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  94E9: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  94EF: A4 4F 50 54 53                                   // .OPTS

                            Case
  94F4: A1 45 15                                         // .E.

 (0x04)
                            {

  94F7: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  9501: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  9504: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  9508: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  950E: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  950F: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  951F: 00 00 00 00                                      // ....

                                    Else
                                    {

  9523: A1 16                                            // ..

                                        Return (
  9525: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  9526: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  9536: 00 00 00 00                                      // ....

                            Case
  953A: A1 4F 10                                         // .O.

 (0x05)
                            {

  953D: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  9546: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  954B: A4 01                                            // ..

                            Case
  954D: A1 4C 0F                                         // .L.

 (0x06)
                            {

  9550: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  955A: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  955E: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  9562: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  9569: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  9573: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  9579: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  9589: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  958C: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  9594: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  9596: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  95A6: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  95A9: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  95B9: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  95BE: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  95CE: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  95CF: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  95DF: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  95E3: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  95F3: 03 00                                            // ..

Index (LTRV, 0x03))

  95F5: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  95FD: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  9602: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  9604: A4 00                                            // ..

                            Case
  9606: A1 43 04                                         // .C.

 (0x08)
                            {

  9609: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  9612: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  961A: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  961D: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  9621: A4 01                                            // ..

                            Case
  9623: A1 26                                            // .&

 (0x09)
                            {

  9625: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  962E: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  9636: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  9639: 95 69 0A 03                                      // .i..

                                        Return (
  963D: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  963E: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  964A: A5                                               // .

                    Return (
  964B: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  964C: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  9650: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  9658: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  965E: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  9665: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  966E: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  9675: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  967E: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  9687: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  968C: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  968E: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  9693: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  969A: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  969E: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  96A8: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  96B8: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  96BB: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  96C1: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  96D1: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  96E1: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  96E3: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  96EC: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  96F3: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  96FC: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  9703: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR12)
                    }


  9709: A4 41 52 31 32                                   // .AR12

                    Return (PR12)
                }
            }


  970E: A4 50 52 31 32                                   // .PR12

            Device (RP16)
            {

  9713: 5B 82 47 3B 52 50 31 36                          // [.G;RP16

                Name (_ADR, 0x001D0007)  // _ADR: Address

  971B: 08 5F 41 44 52 0C 07 00 1D 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0480)

  9725: 5B 80 50 58 43 53 02 00 0B 80 04                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x19), 
                    SBNR,   8, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1, 
                    Offset (0x420), 
                        ,   30, 
                    DPGE,   1
                }


  9730: 5B 81 46 09 50 58 43 53 00 56 44 49 44 20 00 48  // [.F.PXCS.VDID .H
  9740: 0A 53 42 4E 52 08 00 40 1B 4C 30 53 45 01 00 03  // .SBNR..@.L0SE...
  9750: 4C 44 49 53 01 00 03 00 08 00 0D 4C 41 53 58 01  // LDIS.......LASX.
  9760: 00 02 00 06 48 50 43 45 01 00 29 41 42 50 58 01  // ....HPCE..)ABPX.
  9770: 00 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01  // ..PDCX...PDSX...
  9780: 00 28 00 10 50 53 50 58 01 50 4D 45 50 01 00 4E  // .(..PSPX.PMEP..N
  9790: 20 44 33 48 54 02 00 4E 19 00 1E 48 50 45 58 01  //  D3HT..N...HPEX.
  97A0: 50 4D 45 58 01 00 30 00 02 4C 32 33 45 01 4C 32  // PMEX..0..L23E.L2
  97B0: 33 52 01 00 8C 20 01 00 03 4C 45 44 4D 01 00 4C  // 3R... ...LEDM..L
  97C0: 7D 00 1E 44 50 47 45 01                          // }..DPGE.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  97C8: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  97D8: 58 01 50 4D 53 58 01                             // X.PMSX.

                Name (LTRV, 
  97DF: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  97E4: 12 06 04 00 00 00 00                             // .......

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  97EB: 14 4D 21 5F 44 53 4D 0C                          // .M!_DSM.


  97F3: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
  97F9: A0 4A 20 93 68                                   // .J .h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                    {

  97FE: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  980E: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

  9812: A2 41 1F 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                            Case (Zero)
                            {

  981E: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                                Name (OPTS, 
  9827: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                                {
                                     0x00, 0x00                                     
                                })

  982C: 11 05 0A 02 00 00                                // ......

                                CreateBitField (OPTS, Zero, FUN0)

  9832: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                                CreateBitField (OPTS, 0x04, FUN4)

  983C: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                                CreateBitField (OPTS, 0x06, FUN6)

  9847: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                                CreateBitField (OPTS, 0x08, FUN8)

  9852: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                                CreateBitField (OPTS, 0x09, FUN9)

  985D: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                                If (
  9868: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                                {
                                    Store (One, FUN0)

  986B: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                    If (LTRE)
                                    {

  9875: A0 0B 4C 54 52 45                                // ..LTRE

                                        Store (One, FUN6)
                                    }


  987B: 70 01 46 55 4E 36                                // p.FUN6

                                    If (OBFF)
                                    {

  9881: A0 0B 4F 42 46 46                                // ..OBFF

                                        Store (One, FUN4)
                                    }


  9887: 70 01 46 55 4E 34                                // p.FUN4

                                    If (LEqual (ECR1, One))
                                    {

  988D: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                        If (
  9895: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                        {
                                            Store (One, FUN8)

  9898: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                            Store (One, FUN9)
                                        }
                                    }
                                }


  98A2: 70 01 46 55 4E 39                                // p.FUN9

                                Return (OPTS)
                            }

  98A8: A4 4F 50 54 53                                   // .OPTS

                            Case
  98AD: A1 45 15                                         // .E.

 (0x04)
                            {

  98B0: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                                If (
  98BA: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                                {

  98BD: 95 69 0A 02                                      // .i..

                                    If (OBFZ)
                                    {

  98C1: A0 1A 4F 42 46 5A                                // ..OBFZ

                                        Return (
  98C7: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }

  98C8: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
  98D8: 00 00 00 00                                      // ....

                                    Else
                                    {

  98DC: A1 16                                            // ..

                                        Return (
  98DE: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }
                            }

  98DF: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  98EF: 00 00 00 00                                      // ....

                            Case
  98F3: A1 4F 10                                         // .O.

 (0x05)
                            {

  98F6: A0 0F 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                If (LEqual (Arg1, One))
                                {

  98FF: A0 06 93 69 01                                   // ...i.

                                    Return (One)
                                }
                            }

  9904: A4 01                                            // ..

                            Case
  9906: A1 4C 0F                                         // .L.

 (0x06)
                            {

  9909: A0 45 0B 93 5F 54 5F 30 0A 06                    // .E.._T_0..

                                If (
  9913: A0 4B 0A 92                                      // .K..

LGreaterEqual (Arg1, 0x02))
                                {

  9917: 95 69 0A 02                                      // .i..

                                    If (LTRZ)
                                    {

  991B: A0 4F 09 4C 54 52 5A                             // .O.LTRZ

                                        If (LOr (LEqual (LMSL, Zero), 
  9922: A0 47 04 91 93 4C 4D 53 4C 00                    // .G...LMSL.

LEqual (LNSL, Zero)))
                                        {

  992C: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, SPTH))
                                            {
                                                Store (0x0846, LMSL)

  9932: A0 1A 93 50 43 48 53 53 50 54 48 70 0B 46 08 4C  // ...PCHSSPTHp.F.L
  9942: 4D 53 4C                                         // MSL

                                                Store (0x0846, LNSL)
                                            }

  9945: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
  994D: A1 1C                                            // ..

 (LEqual (PCHS, SPTL))
                                            {
                                                Store (0x1003, LMSL)

  994F: A0 1A 93 50 43 48 53 53 50 54 4C 70 0B 03 10 4C  // ...PCHSSPTLp...L
  995F: 4D 53 4C                                         // MSL

                                                Store (0x1003, LNSL)
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
  9962: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
  9972: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
  9977: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
  9987: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
  9988: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
  9998: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
  999C: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
  99AC: 03 00                                            // ..

Index (LTRV, 0x03))

  99AE: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV)
                                    }

  99B6: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

  99BB: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }

  99BD: A4 00                                            // ..

                            Case
  99BF: A1 43 04                                         // .C.

 (0x08)
                            {

  99C2: A0 19 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                If (LEqual (ECR1, One))
                                {

  99CB: A0 10 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  99D3: A0 08 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  99D6: 95 69 0A 03                                      // .i..

                                        Return (One)
                                    }
                                }
                            }

  99DA: A4 01                                            // ..

                            Case
  99DC: A1 26                                            // .&

 (0x09)
                            {

  99DE: A0 24 93 5F 54 5F 30 0A 09                       // .$._T_0..

                                If (LEqual (ECR1, One))
                                {

  99E7: A0 1B 93 45 43 52 31 01                          // ...ECR1.

                                    If (
  99EF: A0 13 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {

  99F2: 95 69 0A 03                                      // .i..

                                        Return (
  99F6: A4                                               // .

Package (0x05)
                                        {
                                            0xC350, 
                                            Ones, 
                                            Ones, 
                                            0xC350, 
                                            Ones
                                        })
                                    }
                                }
                            }


  99F7: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                        }
                    }


  9A03: A5                                               // .

                    Return (
  9A04: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  9A05: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  9A09: 5B 82 41 04 50 58 53 58                          // [.A.PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  9A11: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  9A17: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x69, 0x04))
                    }


  9A1E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  9A27: 14 24 5F 52 4D 56 00                             // .$_RMV.

                        If (LAnd (LEqual (TBTS, One), 
  9A2E: A0 16 90 93 54 42 54 53 01                       // ....TBTS.

LEqual (SBNR, TBUS)))
                        {

  9A37: 93 53 42 4E 52 54 42 55 53                       // .SBNRTBUS

                            Return (TARS)
                        }

  9A40: A4 54 41 52 53                                   // .TARS

                        Else
                        {

  9A45: A1 06                                            // ..

                            Return (HPCE)
                        }
                    }
                }


  9A47: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {

  9A4C: 14 2D 48 50 4D 45 08                             // .-HPME.

                    If (LAnd (
  9A53: A0 26 90 92                                      // .&..

LNotEqual (VDID, 0xFFFFFFFF), 
  9A57: 93 56 44 49 44 0C FF FF FF FF                    // .VDID.....

LEqual (PMSX, One)))
                    {
                        Notify (PXSX, 0x02)
                        Store (One, PMSX)

  9A61: 93 50 4D 53 58 01 86 50 58 53 58 0A 02 70 01 50  // .PMSX..PXSX..p.P
  9A71: 4D 53 58                                         // MSX

                        Store (One, PSPX)
                    }
                }


  9A74: 70 01 50 53 50 58                                // p.PSPX

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (LTR1, LTRZ)
                    Store (PML1, LMSL)
                    Store (PNL1, LNSL)

  9A7A: 14 2A 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52 5A  // .*_INI.pLTR1LTRZ
  9A8A: 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C 4E  // pPML1LMSLpPNL1LN
  9A9A: 53 4C                                            // SL

                    Store (OBF1, OBFZ)
                }


  9A9C: 70 4F 42 46 31 4F 42 46 5A                       // pOBF1OBFZ

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  9AA5: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }


  9AAC: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  9AB5: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  9ABC: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR13)
                    }


  9AC2: A4 41 52 31 33                                   // .AR13

                    Return (PR13)
                }
            }
        }
    }


  9AC7: A4 50 52 31 33                                   // .PR13

    Scope (_GPE)
    {
    }


  9ACC: 10 05 5F 47 50 45                                // .._GPE

    Name (_S0, 
  9AD2: 08 5F 53 30 5F                                   // ._S0_

Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })

  9AD7: 12 06 04 00 00 00 00                             // .......

    Name (_S3, 
  9ADE: 08 5F 53 33 5F                                   // ._S3_

Package (0x04)  // _S3_: S3 System State
    {
        0x05, 
        Zero, 
        Zero, 
        Zero
    })

  9AE3: 12 07 04 0A 05 00 00 00                          // ........

    Name (_S4, 
  9AEB: 08 5F 53 34 5F                                   // ._S4_

Package (0x04)  // _S4_: S4 System State
    {
        0x06, 
        Zero, 
        Zero, 
        Zero
    })

  9AF0: 12 07 04 0A 06 00 00 00                          // ........

    Name (_S5, 
  9AF8: 08 5F 53 35 5F                                   // ._S5_

Package (0x04)  // _S5_: S5 System State
    {
        0x07, 
        Zero, 
        Zero, 
        Zero
    })

  9AFD: 12 07 04 0A 07 00 00 00                          // ........

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {

  9B05: 14 49 04 5F 50 54 53 01                          // .I._PTS.

        If (Arg0)
        {
            PTS (Arg0)
            \_SB.TPM.TPTS (Arg0)
            \_SB.PCI0.LPCB.SPTS (Arg0)
            \_SB.PCI0.NPTS (Arg0)
            RPTS (Arg0)
        }
    }


  9B0D: A0 41 04 68 50 54 53 5F 68 5C 2F 03 5F 53 42 5F  // .A.hPTS_h\/._SB_
  9B1D: 54 50 4D 5F 54 50 54 53 68 5C 2F 04 5F 53 42 5F  // TPM_TPTSh\/._SB_
  9B2D: 50 43 49 30 4C 50 43 42 53 50 54 53 68 5C 2F 03  // PCI0LPCBSPTSh\/.
  9B3D: 5F 53 42 5F 50 43 49 30 4E 50 54 53 68 52 50 54  // _SB_PCI0NPTShRPT
  9B4D: 53 68                                            // Sh

    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
    {
        RWAK (Arg0)
        \_SB.PCI0.NWAK (Arg0)
        \_SB.PCI0.LPCB.SWAK (Arg0)
        WAK (Arg0)

  9B4F: 14 39 5F 57 41 4B 01 52 57 41 4B 68 5C 2F 03 5F  // .9_WAK.RWAKh\/._
  9B5F: 53 42 5F 50 43 49 30 4E 57 41 4B 68 5C 2F 04 5F  // SB_PCI0NWAKh\/._
  9B6F: 53 42 5F 50 43 49 30 4C 50 43 42 53 57 41 4B 68  // SB_PCI0LPCBSWAKh
  9B7F: 57 41 4B 5F 68                                   // WAK_h

        Return (WAKP)
    }


  9B84: A4 57 41 4B 50                                   // .WAKP

    Scope (_PR)
    {

  9B89: 10 46 0D 5F 50 52 5F                             // .F._PR_

        Processor (PR00, 0x01, 0x00001810, 0x06){}

  9B90: 5B 83 0B 50 52 30 30 01 10 18 00 00 06           // [..PR00......

        Processor (PR01, 0x02, 0x00001810, 0x06){}

  9B9D: 5B 83 0B 50 52 30 31 02 10 18 00 00 06           // [..PR01......

        Processor (PR02, 0x03, 0x00001810, 0x06){}

  9BAA: 5B 83 0B 50 52 30 32 03 10 18 00 00 06           // [..PR02......

        Processor (PR03, 0x04, 0x00001810, 0x06){}

  9BB7: 5B 83 0B 50 52 30 33 04 10 18 00 00 06           // [..PR03......

        Processor (PR04, 0x05, 0x00001810, 0x06){}

  9BC4: 5B 83 0B 50 52 30 34 05 10 18 00 00 06           // [..PR04......

        Processor (PR05, 0x06, 0x00001810, 0x06){}

  9BD1: 5B 83 0B 50 52 30 35 06 10 18 00 00 06           // [..PR05......

        Processor (PR06, 0x07, 0x00001810, 0x06){}

  9BDE: 5B 83 0B 50 52 30 36 07 10 18 00 00 06           // [..PR06......

        Processor (PR07, 0x08, 0x00001810, 0x06){}

  9BEB: 5B 83 0B 50 52 30 37 08 10 18 00 00 06           // [..PR07......

        Processor (PR08, 0x09, 0x00001810, 0x06){}

  9BF8: 5B 83 0B 50 52 30 38 09 10 18 00 00 06           // [..PR08......

        Processor (PR09, 0x0A, 0x00001810, 0x06){}

  9C05: 5B 83 0B 50 52 30 39 0A 10 18 00 00 06           // [..PR09......

        Processor (PR10, 0x0B, 0x00001810, 0x06){}

  9C12: 5B 83 0B 50 52 31 30 0B 10 18 00 00 06           // [..PR10......

        Processor (PR11, 0x0C, 0x00001810, 0x06){}

  9C1F: 5B 83 0B 50 52 31 31 0C 10 18 00 00 06           // [..PR11......

        Processor (PR12, 0x0D, 0x00001810, 0x06){}

  9C2C: 5B 83 0B 50 52 31 32 0D 10 18 00 00 06           // [..PR12......

        Processor (PR13, 0x0E, 0x00001810, 0x06){}

  9C39: 5B 83 0B 50 52 31 33 0E 10 18 00 00 06           // [..PR13......

        Processor (PR14, 0x0F, 0x00001810, 0x06){}

  9C46: 5B 83 0B 50 52 31 34 0F 10 18 00 00 06           // [..PR14......

        Processor (PR15, 0x10, 0x00001810, 0x06){}
    }


  9C53: 5B 83 0B 50 52 31 35 10 10 18 00 00 06           // [..PR15......

    Scope (_PR.PR00)
    {

  9C60: 10 40 2E 2E 5F 50 52 5F 50 52 30 30              // .@.._PR_PR00

        Name (CPC2, 
  9C6C: 08 43 50 43 32                                   // .CPC2

Package (0x15)
        {
            0x15, 
            0x02, 

  9C71: 12 4E 16 15 0A 15 0A 02                          // .N......

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9C79: 11 14 0A 11 82 0C 00 7F 08 00 04 71 07 00 00 00  // ...........q....
  9C89: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000000000CE, // Address
                    0x04,               // Access Size
                    )
            }, 


  9C8E: 11 14 0A 11 82 0C 00 7F 08 08 04 CE 00 00 00 00  // ................
  9C9E: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9CA3: 11 14 0A 11 82 0C 00 7F 08 10 04 71 07 00 00 00  // ...........q....
  9CB3: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9CB8: 11 14 0A 11 82 0C 00 7F 08 18 04 71 07 00 00 00  // ...........q....
  9CC8: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9CCD: 11 14 0A 11 82 0C 00 7F 08 08 04 71 07 00 00 00  // ...........q....
  9CDD: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9CE2: 11 14 0A 11 82 0C 00 7F 08 10 04 74 07 00 00 00  // ...........t....
  9CF2: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9CF7: 11 14 0A 11 82 0C 00 7F 08 00 04 74 07 00 00 00  // ...........t....
  9D07: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9D0C: 11 14 0A 11 82 0C 00 7F 08 08 04 74 07 00 00 00  // ...........t....
  9D1C: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


  9D21: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
  9D31: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


  9D36: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
  9D46: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


  9D4B: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
  9D5B: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 


  9D60: 11 14 0A 11 82 0C 00 7F 40 00 04 E7 00 00 00 00  // ........@.......
  9D70: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 


  9D75: 11 14 0A 11 82 0C 00 7F 40 00 04 E8 00 00 00 00  // ........@.......
  9D85: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x01,               // Bit Offset
                    0x0000000000000777, // Address
                    0x04,               // Access Size
                    )
            }, 


  9D8A: 11 14 0A 11 82 0C 00 7F 02 01 04 77 07 00 00 00  // ...........w....
  9D9A: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000770, // Address
                    0x04,               // Access Size
                    )
            }, 

            One, 

  9D9F: 11 14 0A 11 82 0C 00 7F 01 00 04 70 07 00 00 00  // ...........p....
  9DAF: 00 00 00 79 00 01                                // ...y..

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x0A,               // Bit Width
                    0x20,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9DB5: 11 14 0A 11 82 0C 00 7F 0A 20 04 74 07 00 00 00  // ......... .t....
  9DC5: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            Zero
        })

  9DCA: 11 14 0A 11 82 0C 00 7F 08 18 04 74 07 00 00 00  // ...........t....
  9DDA: 00 00 00 79 00 00                                // ...y..

        Name (CPOC, 
  9DE0: 08 43 50 4F 43                                   // .CPOC

Package (0x15)
        {
            0x15, 
            0x02, 
            0xFF, 

  9DE5: 12 4B 15 15 0A 15 0A 02 0A FF                    // .K........

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x00000000000000CE, // Address
                    0x04,               // Access Size
                    )
            }, 


  9DEF: 11 14 0A 11 82 0C 00 7F 08 08 04 CE 00 00 00 00  // ................
  9DFF: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9E04: 11 14 0A 11 82 0C 00 7F 08 10 04 71 07 00 00 00  // ...........q....
  9E14: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9E19: 11 14 0A 11 82 0C 00 7F 08 18 04 71 07 00 00 00  // ...........q....
  9E29: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000771, // Address
                    0x04,               // Access Size
                    )
            }, 


  9E2E: 11 14 0A 11 82 0C 00 7F 08 08 04 71 07 00 00 00  // ...........q....
  9E3E: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x10,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9E43: 11 14 0A 11 82 0C 00 7F 08 10 04 74 07 00 00 00  // ...........t....
  9E53: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9E58: 11 14 0A 11 82 0C 00 7F 08 00 04 74 07 00 00 00  // ...........t....
  9E68: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x08,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9E6D: 11 14 0A 11 82 0C 00 7F 08 08 04 74 07 00 00 00  // ...........t....
  9E7D: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


  9E82: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
  9E92: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


  9E97: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
  9EA7: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (SystemMemory, 
                    0x00,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000000, // Address
                    ,)
            }, 


  9EAC: 11 14 0A 11 82 0C 00 00 00 00 00 00 00 00 00 00  // ................
  9EBC: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E7, // Address
                    0x04,               // Access Size
                    )
            }, 


  9EC1: 11 14 0A 11 82 0C 00 7F 40 00 04 E7 00 00 00 00  // ........@.......
  9ED1: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x40,               // Bit Width
                    0x00,               // Bit Offset
                    0x00000000000000E8, // Address
                    0x04,               // Access Size
                    )
            }, 


  9ED6: 11 14 0A 11 82 0C 00 7F 40 00 04 E8 00 00 00 00  // ........@.......
  9EE6: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x02,               // Bit Width
                    0x01,               // Bit Offset
                    0x0000000000000777, // Address
                    0x04,               // Access Size
                    )
            }, 


  9EEB: 11 14 0A 11 82 0C 00 7F 02 01 04 77 07 00 00 00  // ...........w....
  9EFB: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x01,               // Bit Width
                    0x00,               // Bit Offset
                    0x0000000000000770, // Address
                    0x04,               // Access Size
                    )
            }, 

            One, 

  9F00: 11 14 0A 11 82 0C 00 7F 01 00 04 70 07 00 00 00  // ...........p....
  9F10: 00 00 00 79 00 01                                // ...y..

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x0A,               // Bit Width
                    0x20,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 


  9F16: 11 14 0A 11 82 0C 00 7F 0A 20 04 74 07 00 00 00  // ......... .t....
  9F26: 00 00 00 79 00                                   // ...y.

            ResourceTemplate ()
            {
                Register (FFixedHW, 
                    0x08,               // Bit Width
                    0x18,               // Bit Offset
                    0x0000000000000774, // Address
                    0x04,               // Access Size
                    )
            }, 

            Zero
        })
    }


  9F2B: 11 14 0A 11 82 0C 00 7F 08 18 04 74 07 00 00 00  // ...........t....
  9F3B: 00 00 00 79 00 00                                // ...y..

    Scope (_SB)
    {

  9F41: 10 48 05 5F 53 42 5F                             // .H._SB_

        Device (PAGD)
        {

  9F48: 5B 82 40 05 50 41 47 44                          // [.@.PAGD

            Name (_HID, "ACPI000C")  // _HID: Hardware ID

  9F50: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 43 00     // ._HID.ACPI000C.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  9F5F: 14 30 5F 53 54 41 00                             // .0_STA.

                If (_OSI ("Processor Aggregator Device"))
                {

  9F66: A0 25 5F 4F 53 49 0D 50 72 6F 63 65 73 73 6F 72  // .%_OSI.Processor
  9F76: 20 41 67 67 72 65 67 61 74 6F 72 20 44 65 76 69  //  Aggregator Devi
  9F86: 63 65 00                                         // ce.

                    Return (0x0F)
                }

  9F89: A4 0A 0F                                         // ...

                Else
                {

  9F8C: A1 03                                            // ..

                    Return (Zero)
                }
            }


  9F8E: A4 00                                            // ..

            Name (_PUR, 
  9F90: 08 5F 50 55 52                                   // ._PUR

Package (0x02)  // _PUR: Processor Utilization Request
            {
                One, 
                Zero
            })
        }
    }


  9F95: 12 04 02 01 00                                   // .....

    Scope (_SB.PCI0)
    {

  9F9A: 10 4A 17 2E 5F 53 42 5F 50 43 49 30              // .J.._SB_PCI0

        Device (PDRC)
        {

  9FA6: 5B 82 4D 16 50 44 52 43                          // [.M.PDRC

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  9FAE: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

  9FB8: 08 5F 55 49 44 01                                // ._UID.

            Name (BUF0, 
  9FBE: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y10)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y11)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y12)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y13)
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y14)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y15)
            })

  9FC3: 11 4A 08 0A 86 86 09 00 01 00 00 00 00 00 80 00  // .J..............
  9FD3: 00 86 09 00 01 00 00 00 00 00 10 00 00 86 09 00  // ................
  9FE3: 01 00 00 00 00 00 10 00 00 86 09 00 01 00 00 00  // ................
  9FF3: 00 00 00 00 00 86 09 00 01 00 00 D2 FE 00 00 02  // ................
  A003: 00 86 09 00 00 00 00 D9 FE 00 40 00 00 86 09 00  // ..........@.....
  A013: 01 00 50 D4 FE 00 B0 04 00 86 09 00 00 00 00 00  // ..P.............
  A023: FF 00 00 00 01 86 09 00 00 00 00 E0 FE 00 00 10  // ................
  A033: 00 86 09 00 01 00 00 00 00 00 00 00 00 86 09 00  // ................
  A043: 01 00 00 00 00 00 00 00 00 79 00                 // .........y.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  A04E: 14 46 0C 5F 43 52 53 08                          // .F._CRS.

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y10._BAS, MBR0)  // _BAS: Base Address
                Store (GMHB (), MBR0)

  A056: 8A 42 55 46 30 0A 04 4D 42 52 30 70 47 4D 48 42  // .BUF0..MBR0pGMHB
  A066: 4D 42 52 30                                      // MBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y11._BAS, DBR0)  // _BAS: Base Address
                Store (GDMB (), DBR0)

  A06A: 8A 42 55 46 30 0A 10 44 42 52 30 70 47 44 4D 42  // .BUF0..DBR0pGDMB
  A07A: 44 42 52 30                                      // DBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._BAS, EBR0)  // _BAS: Base Address
                Store (GEPB (), EBR0)

  A07E: 8A 42 55 46 30 0A 1C 45 42 52 30 70 47 45 50 42  // .BUF0..EBR0pGEPB
  A08E: 45 42 52 30                                      // EBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._BAS, XBR0)  // _BAS: Base Address
                Store (GPCB (), XBR0)

  A092: 8A 42 55 46 30 0A 28 58 42 52 30 70 47 50 43 42  // .BUF0.(XBR0pGPCB
  A0A2: 58 42 52 30                                      // XBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._LEN, XSZ0)  // _LEN: Length
                Store (GPCL (), XSZ0)

  A0A6: 8A 42 55 46 30 0A 2C 58 53 5A 30 70 47 50 43 4C  // .BUF0.,XSZ0pGPCL
  A0B6: 58 53 5A 30                                      // XSZ0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._BAS, SXRA)  // _BAS: Base Address
                Store (SXRB, SXRA)

  A0BA: 8A 42 55 46 30 0A 70 53 58 52 41 70 53 58 52 42  // .BUF0.pSXRApSXRB
  A0CA: 53 58 52 41                                      // SXRA

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._LEN, SXRL)  // _LEN: Length
                Store (SXRS, SXRL)

  A0CE: 8A 42 55 46 30 0A 74 53 58 52 4C 70 53 58 52 53  // .BUF0.tSXRLpSXRS
  A0DE: 53 58 52 4C                                      // SXRL

                If (LNot (HPTE))
                {

  A0E2: A0 2D 92 48 50 54 45                             // .-.HPTE

                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y15._BAS, HBAS)  // _BAS: Base Address

  A0E9: 8A 42 55 46 30 0A 7C 48 42 41 53                 // .BUF0.|HBAS

                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y15._LEN, HLEN)  // _LEN: Length
                    Store (HPTB, HBAS)

  A0F4: 8A 42 55 46 30 0A 80 48 4C 45 4E 70 48 50 54 42  // .BUF0..HLENpHPTB
  A104: 48 42 41 53                                      // HBAS

                    Store (0x0400, HLEN)
                }


  A108: 70 0B 00 04 48 4C 45 4E                          // p...HLEN

                Return (BUF0)
            }
        }
    }


  A110: A4 42 55 46 30                                   // .BUF0

    Name (PNVB, 0x68F05018)

  A115: 08 50 4E 56 42 0C 18 50 F0 68                    // .PNVB..P.h

    Name (PNVL, 0x0287)

  A11F: 08 50 4E 56 4C 0B 87 02                          // .PNVL...

    If (LEqual (ECR1, One))
    {

  A127: A0 40 07 93 45 43 52 31 01                       // .@..ECR1.

        Scope (_SB.PCI0)
        {

  A130: 10 47 06 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

            Name (PCIG, 
  A13C: 08 50 43 49 47                                   // .PCIG

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */)

  A141: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  A151: 19 C3 43 4D                                      // ..CM

            Method (PCID, 4, Serialized)
            {

  A155: 14 42 04 50 43 49 44 0C                          // .B.PCID.

                If (LEqual (Arg0, PCIG))
                {

  A15D: A0 35 93 68 50 43 49 47                          // .5.hPCIG

                    If (
  A165: A0 2D 92                                         // .-.

LGreaterEqual (Arg1, 0x03))
                    {

  A168: 95 69 0A 03                                      // .i..

                        If (LEqual (Arg2, Zero))
                        {

  A16C: A0 0B 93 6A 00                                   // ...j.

                            Return (
  A171: A4                                               // .

Buffer (0x02)
                            {
                                 0x01, 0x03                                     
                            })
                        }


  A172: 11 05 0A 02 01 03                                // ......

                        If (LEqual (Arg2, 0x08))
                        {

  A178: A0 07 93 6A 0A 08                                // ...j..

                            Return (One)
                        }


  A17E: A4 01                                            // ..

                        If (LEqual (Arg2, 0x09))
                        {

  A180: A0 12 93 6A 0A 09                                // ...j..

                            Return (
  A186: A4                                               // .

Package (0x05)
                            {
                                0xC350, 
                                Ones, 
                                Ones, 
                                0xC350, 
                                Ones
                            })
                        }
                    }
                }


  A187: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                Return (
  A193: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


  A194: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  A198: 10 25 2E 5F 53 42 5F 50 43 49 30                 // .%._SB_PCI0

        Method (PCIC, 1, Serialized)
        {

  A1A3: 14 1A 50 43 49 43 09                             // ..PCIC.

            If (LEqual (ECR1, One))
            {

  A1AA: A0 11 93 45 43 52 31 01                          // ...ECR1.

                If (LEqual (Arg0, PCIG))
                {

  A1B2: A0 09 93 68 50 43 49 47                          // ...hPCIG

                    Return (One)
                }
            }


  A1BA: A4 01                                            // ..

            Return (Zero)
        }
    }


  A1BC: A4 00                                            // ..

    OperationRegion (PNVA, SystemMemory, PNVB, PNVL)

  A1BE: 5B 80 50 4E 56 41 00 50 4E 56 42 50 4E 56 4C     // [.PNVA.PNVBPNVL

    Field (PNVA, AnyAcc, Lock, Preserve)
    {
        PCHS,   16, 
        PCHG,   16, 
        RPA1,   32, 
        RPA2,   32, 
        RPA3,   32, 
        RPA4,   32, 
        RPA5,   32, 
        RPA6,   32, 
        RPA7,   32, 
        RPA8,   32, 
        RPA9,   32, 
        RPAA,   32, 
        RPAB,   32, 
        RPAC,   32, 
        RPAD,   32, 
        RPAE,   32, 
        RPAF,   32, 
        RPAG,   32, 
        RPAH,   32, 
        RPAI,   32, 
        RPAJ,   32, 
        RPAK,   32, 
        RPAL,   32, 
        RPAM,   32, 
        RPAN,   32, 
        RPAO,   32, 
        NHLA,   64, 
        NHLL,   32, 
        ADFM,   32, 
        SBRG,   32, 
        GPEM,   32, 
        G2L0,   32, 
        G2L1,   32, 
        G2L2,   32, 
        G2L3,   32, 
        G2L4,   32, 
        G2L5,   32, 
        G2L6,   32, 
        G2L7,   32, 
        G2L8,   32, 
        G2L9,   32, 
        PML1,   16, 
        PML2,   16, 
        PML3,   16, 
        PML4,   16, 
        PML5,   16, 
        PML6,   16, 
        PML7,   16, 
        PML8,   16, 
        PML9,   16, 
        PMLA,   16, 
        PMLB,   16, 
        PMLC,   16, 
        PMLD,   16, 
        PMLE,   16, 
        PMLF,   16, 
        PMLG,   16, 
        PMLH,   16, 
        PMLI,   16, 
        PMLJ,   16, 
        PMLK,   16, 
        PMLL,   16, 
        PMLM,   16, 
        PMLN,   16, 
        PMLO,   16, 
        PNL1,   16, 
        PNL2,   16, 
        PNL3,   16, 
        PNL4,   16, 
        PNL5,   16, 
        PNL6,   16, 
        PNL7,   16, 
        PNL8,   16, 
        PNL9,   16, 
        PNLA,   16, 
        PNLB,   16, 
        PNLC,   16, 
        PNLD,   16, 
        PNLE,   16, 
        PNLF,   16, 
        PNLG,   16, 
        PNLH,   16, 
        PNLI,   16, 
        PNLJ,   16, 
        PNLK,   16, 
        PNLL,   16, 
        PNLM,   16, 
        PNLN,   16, 
        PNLO,   16, 
        U0C0,   32, 
        U1C0,   32, 
        XHPC,   8, 
        XRPC,   8, 
        XSPC,   8, 
        XSPA,   8, 
        HPTB,   32, 
        HPTE,   8, 
        SMD0,   8, 
        SMD1,   8, 
        SMD2,   8, 
        SMD3,   8, 
        SMD4,   8, 
        SMD5,   8, 
        SMD6,   8, 
        SMD7,   8, 
        SMD8,   8, 
        SMD9,   8, 
        SMDA,   8, 
        SIR0,   8, 
        SIR1,   8, 
        SIR2,   8, 
        SIR3,   8, 
        SIR4,   8, 
        SIR5,   8, 
        SIR6,   8, 
        SIR7,   8, 
        SIR8,   8, 
        SIR9,   8, 
        SIRA,   8, 
        SB00,   64, 
        SB01,   64, 
        SB02,   64, 
        SB03,   64, 
        SB04,   64, 
        SB05,   64, 
        SB06,   64, 
        SB07,   64, 
        SB08,   64, 
        SB09,   64, 
        SB0A,   64, 
        SB10,   64, 
        SB11,   64, 
        SB12,   64, 
        SB13,   64, 
        SB14,   64, 
        SB15,   64, 
        SB16,   64, 
        SB17,   64, 
        SB18,   64, 
        SB19,   64, 
        SB1A,   64, 
        GPEN,   8, 
        SGIR,   8, 
        NIT1,   8, 
        NIT2,   8, 
        NIT3,   8, 
        NPM1,   8, 
        NPM2,   8, 
        NPM3,   8, 
        NPC1,   8, 
        NPC2,   8, 
        NPC3,   8, 
        NL11,   16, 
        NL12,   16, 
        NL13,   16, 
        ND21,   8, 
        ND22,   8, 
        ND23,   8, 
        ND11,   32, 
        ND12,   32, 
        ND13,   32, 
        NLR1,   16, 
        NLR2,   16, 
        NLR3,   16, 
        NLD1,   32, 
        NLD2,   32, 
        NLD3,   32, 
        NEA1,   16, 
        NEA2,   16, 
        NEA3,   16, 
        NEB1,   16, 
        NEB2,   16, 
        NEB3,   16, 
        NEC1,   16, 
        NEC2,   16, 
        NEC3,   16, 
        NRA1,   16, 
        NRA2,   16, 
        NRA3,   16, 
        NMB1,   32, 
        NMB2,   32, 
        NMB3,   32, 
        NMV1,   32, 
        NMV2,   32, 
        NMV3,   32, 
        NPB1,   32, 
        NPB2,   32, 
        NPB3,   32, 
        NPV1,   32, 
        NPV2,   32, 
        NPV3,   32, 
        NRP1,   32, 
        NRP2,   32, 
        NRP3,   32, 
        Offset (0x262), 
        SXRB,   32, 
        SXRS,   32, 
        CIOE,   8, 
        CIOI,   8, 
        TAEN,   8, 
        TIRQ,   8, 
        XWMB,   32, 
        EMH4,   8, 
        EMDS,   8, 
        CSKU,   8, 
        ITA0,   16, 
        ITA1,   16, 
        ITA2,   16, 
        ITA3,   16, 
        ITS0,   8, 
        ITS1,   8, 
        ITS2,   8, 
        ITS3,   8, 
        PMBS,   16, 
        PWRM,   32
    }


  A1CD: 5B 81 4E 44 50 4E 56 41 10 50 43 48 53 10 50 43  // [.NDPNVA.PCHS.PC
  A1DD: 48 47 10 52 50 41 31 20 52 50 41 32 20 52 50 41  // HG.RPA1 RPA2 RPA
  A1ED: 33 20 52 50 41 34 20 52 50 41 35 20 52 50 41 36  // 3 RPA4 RPA5 RPA6
  A1FD: 20 52 50 41 37 20 52 50 41 38 20 52 50 41 39 20  //  RPA7 RPA8 RPA9 
  A20D: 52 50 41 41 20 52 50 41 42 20 52 50 41 43 20 52  // RPAA RPAB RPAC R
  A21D: 50 41 44 20 52 50 41 45 20 52 50 41 46 20 52 50  // PAD RPAE RPAF RP
  A22D: 41 47 20 52 50 41 48 20 52 50 41 49 20 52 50 41  // AG RPAH RPAI RPA
  A23D: 4A 20 52 50 41 4B 20 52 50 41 4C 20 52 50 41 4D  // J RPAK RPAL RPAM
  A24D: 20 52 50 41 4E 20 52 50 41 4F 20 4E 48 4C 41 40  //  RPAN RPAO NHLA@
  A25D: 04 4E 48 4C 4C 20 41 44 46 4D 20 53 42 52 47 20  // .NHLL ADFM SBRG 
  A26D: 47 50 45 4D 20 47 32 4C 30 20 47 32 4C 31 20 47  // GPEM G2L0 G2L1 G
  A27D: 32 4C 32 20 47 32 4C 33 20 47 32 4C 34 20 47 32  // 2L2 G2L3 G2L4 G2
  A28D: 4C 35 20 47 32 4C 36 20 47 32 4C 37 20 47 32 4C  // L5 G2L6 G2L7 G2L
  A29D: 38 20 47 32 4C 39 20 50 4D 4C 31 10 50 4D 4C 32  // 8 G2L9 PML1.PML2
  A2AD: 10 50 4D 4C 33 10 50 4D 4C 34 10 50 4D 4C 35 10  // .PML3.PML4.PML5.
  A2BD: 50 4D 4C 36 10 50 4D 4C 37 10 50 4D 4C 38 10 50  // PML6.PML7.PML8.P
  A2CD: 4D 4C 39 10 50 4D 4C 41 10 50 4D 4C 42 10 50 4D  // ML9.PMLA.PMLB.PM
  A2DD: 4C 43 10 50 4D 4C 44 10 50 4D 4C 45 10 50 4D 4C  // LC.PMLD.PMLE.PML
  A2ED: 46 10 50 4D 4C 47 10 50 4D 4C 48 10 50 4D 4C 49  // F.PMLG.PMLH.PMLI
  A2FD: 10 50 4D 4C 4A 10 50 4D 4C 4B 10 50 4D 4C 4C 10  // .PMLJ.PMLK.PMLL.
  A30D: 50 4D 4C 4D 10 50 4D 4C 4E 10 50 4D 4C 4F 10 50  // PMLM.PMLN.PMLO.P
  A31D: 4E 4C 31 10 50 4E 4C 32 10 50 4E 4C 33 10 50 4E  // NL1.PNL2.PNL3.PN
  A32D: 4C 34 10 50 4E 4C 35 10 50 4E 4C 36 10 50 4E 4C  // L4.PNL5.PNL6.PNL
  A33D: 37 10 50 4E 4C 38 10 50 4E 4C 39 10 50 4E 4C 41  // 7.PNL8.PNL9.PNLA
  A34D: 10 50 4E 4C 42 10 50 4E 4C 43 10 50 4E 4C 44 10  // .PNLB.PNLC.PNLD.
  A35D: 50 4E 4C 45 10 50 4E 4C 46 10 50 4E 4C 47 10 50  // PNLE.PNLF.PNLG.P
  A36D: 4E 4C 48 10 50 4E 4C 49 10 50 4E 4C 4A 10 50 4E  // NLH.PNLI.PNLJ.PN
  A37D: 4C 4B 10 50 4E 4C 4C 10 50 4E 4C 4D 10 50 4E 4C  // LK.PNLL.PNLM.PNL
  A38D: 4E 10 50 4E 4C 4F 10 55 30 43 30 20 55 31 43 30  // N.PNLO.U0C0 U1C0
  A39D: 20 58 48 50 43 08 58 52 50 43 08 58 53 50 43 08  //  XHPC.XRPC.XSPC.
  A3AD: 58 53 50 41 08 48 50 54 42 20 48 50 54 45 08 53  // XSPA.HPTB HPTE.S
  A3BD: 4D 44 30 08 53 4D 44 31 08 53 4D 44 32 08 53 4D  // MD0.SMD1.SMD2.SM
  A3CD: 44 33 08 53 4D 44 34 08 53 4D 44 35 08 53 4D 44  // D3.SMD4.SMD5.SMD
  A3DD: 36 08 53 4D 44 37 08 53 4D 44 38 08 53 4D 44 39  // 6.SMD7.SMD8.SMD9
  A3ED: 08 53 4D 44 41 08 53 49 52 30 08 53 49 52 31 08  // .SMDA.SIR0.SIR1.
  A3FD: 53 49 52 32 08 53 49 52 33 08 53 49 52 34 08 53  // SIR2.SIR3.SIR4.S
  A40D: 49 52 35 08 53 49 52 36 08 53 49 52 37 08 53 49  // IR5.SIR6.SIR7.SI
  A41D: 52 38 08 53 49 52 39 08 53 49 52 41 08 53 42 30  // R8.SIR9.SIRA.SB0
  A42D: 30 40 04 53 42 30 31 40 04 53 42 30 32 40 04 53  // 0@.SB01@.SB02@.S
  A43D: 42 30 33 40 04 53 42 30 34 40 04 53 42 30 35 40  // B03@.SB04@.SB05@
  A44D: 04 53 42 30 36 40 04 53 42 30 37 40 04 53 42 30  // .SB06@.SB07@.SB0
  A45D: 38 40 04 53 42 30 39 40 04 53 42 30 41 40 04 53  // 8@.SB09@.SB0A@.S
  A46D: 42 31 30 40 04 53 42 31 31 40 04 53 42 31 32 40  // B10@.SB11@.SB12@
  A47D: 04 53 42 31 33 40 04 53 42 31 34 40 04 53 42 31  // .SB13@.SB14@.SB1
  A48D: 35 40 04 53 42 31 36 40 04 53 42 31 37 40 04 53  // 5@.SB16@.SB17@.S
  A49D: 42 31 38 40 04 53 42 31 39 40 04 53 42 31 41 40  // B18@.SB19@.SB1A@
  A4AD: 04 47 50 45 4E 08 53 47 49 52 08 4E 49 54 31 08  // .GPEN.SGIR.NIT1.
  A4BD: 4E 49 54 32 08 4E 49 54 33 08 4E 50 4D 31 08 4E  // NIT2.NIT3.NPM1.N
  A4CD: 50 4D 32 08 4E 50 4D 33 08 4E 50 43 31 08 4E 50  // PM2.NPM3.NPC1.NP
  A4DD: 43 32 08 4E 50 43 33 08 4E 4C 31 31 10 4E 4C 31  // C2.NPC3.NL11.NL1
  A4ED: 32 10 4E 4C 31 33 10 4E 44 32 31 08 4E 44 32 32  // 2.NL13.ND21.ND22
  A4FD: 08 4E 44 32 33 08 4E 44 31 31 20 4E 44 31 32 20  // .ND23.ND11 ND12 
  A50D: 4E 44 31 33 20 4E 4C 52 31 10 4E 4C 52 32 10 4E  // ND13 NLR1.NLR2.N
  A51D: 4C 52 33 10 4E 4C 44 31 20 4E 4C 44 32 20 4E 4C  // LR3.NLD1 NLD2 NL
  A52D: 44 33 20 4E 45 41 31 10 4E 45 41 32 10 4E 45 41  // D3 NEA1.NEA2.NEA
  A53D: 33 10 4E 45 42 31 10 4E 45 42 32 10 4E 45 42 33  // 3.NEB1.NEB2.NEB3
  A54D: 10 4E 45 43 31 10 4E 45 43 32 10 4E 45 43 33 10  // .NEC1.NEC2.NEC3.
  A55D: 4E 52 41 31 10 4E 52 41 32 10 4E 52 41 33 10 4E  // NRA1.NRA2.NRA3.N
  A56D: 4D 42 31 20 4E 4D 42 32 20 4E 4D 42 33 20 4E 4D  // MB1 NMB2 NMB3 NM
  A57D: 56 31 20 4E 4D 56 32 20 4E 4D 56 33 20 4E 50 42  // V1 NMV2 NMV3 NPB
  A58D: 31 20 4E 50 42 32 20 4E 50 42 33 20 4E 50 56 31  // 1 NPB2 NPB3 NPV1
  A59D: 20 4E 50 56 32 20 4E 50 56 33 20 4E 52 50 31 20  //  NPV2 NPV3 NRP1 
  A5AD: 4E 52 50 32 20 4E 52 50 33 20 00 08 53 58 52 42  // NRP2 NRP3 ..SXRB
  A5BD: 20 53 58 52 53 20 43 49 4F 45 08 43 49 4F 49 08  //  SXRS CIOE.CIOI.
  A5CD: 54 41 45 4E 08 54 49 52 51 08 58 57 4D 42 20 45  // TAEN.TIRQ.XWMB E
  A5DD: 4D 48 34 08 45 4D 44 53 08 43 53 4B 55 08 49 54  // MH4.EMDS.CSKU.IT
  A5ED: 41 30 10 49 54 41 31 10 49 54 41 32 10 49 54 41  // A0.ITA1.ITA2.ITA
  A5FD: 33 10 49 54 53 30 08 49 54 53 31 08 49 54 53 32  // 3.ITS0.ITS1.ITS2
  A60D: 08 49 54 53 33 08 50 4D 42 53 10 50 57 52 4D 20  // .ITS3.PMBS.PWRM 

    Scope (_SB)
    {

  A61D: 10 40 1B 5F 53 42 5F                             // .@._SB_

        Name (GPCL, 
  A624: 08 47 50 43 4C                                   // .GPCL

Package (0x08)
        {

  A629: 12 43 0A 08                                      // .C..

            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 


  A62D: 12 13 06 0C 00 00 AF 00 0A 18 0B 00 04 0A D0 0A  // ................
  A63D: 20 0B 40 01                                      //  .@.

            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x30, 
                0x0144
            }, 


  A641: 12 13 06 0C 00 00 AF 00 0A 18 0B C0 04 0A D4 0A  // ................
  A651: 30 0B 44 01                                      // 0.D.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 


  A655: 12 13 06 0C 00 00 AE 00 0A 18 0B 00 04 0A D0 0A  // ................
  A665: 20 0B 40 01                                      //  .@.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x30, 
                0x0144
            }, 


  A669: 12 13 06 0C 00 00 AE 00 0A 18 0B C0 04 0A D4 0A  // ................
  A679: 30 0B 44 01                                      // 0.D.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0580, 
                0xD8, 
                0x40, 
                0x0148
            }, 


  A67D: 12 13 06 0C 00 00 AE 00 0A 18 0B 80 05 0A D8 0A  // ................
  A68D: 40 0B 48 01                                      // @.H.

            Package (0x06)
            {
                0x00AC0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 


  A691: 12 13 06 0C 00 00 AC 00 0A 18 0B 00 04 0A D0 0A  // ................
  A6A1: 20 0B 40 01                                      //  .@.

            Package (0x06)
            {
                0x00AC0000, 
                0x08, 
                0x04C0, 
                0xD4, 
                0x30, 
                0x0144
            }, 


  A6A5: 12 13 06 0C 00 00 AC 00 0A 08 0B C0 04 0A D4 0A  // ................
  A6B5: 30 0B 44 01                                      // 0.D.

            Package (0x06)
            {
                0x00AD0000, 
                0x0C, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }
        })

  A6B9: 12 13 06 0C 00 00 AD 00 0A 0C 0B 00 04 0A D0 0A  // ................
  A6C9: 20 0B 40 01                                      //  .@.

        Name (GPCH, 
  A6CD: 08 47 50 43 48                                   // .GPCH

Package (0x0A)
        {

  A6D2: 12 4B 0C 0A                                      // .K..

            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 


  A6D6: 12 13 06 0C 00 00 AF 00 0A 18 0B 00 04 0A D0 0A  // ................
  A6E6: 20 0B 40 01                                      //  .@.

            Package (0x06)
            {
                0x00AF0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x2C, 
                0x0144
            }, 


  A6EA: 12 13 06 0C 00 00 AF 00 0A 18 0B C0 04 0A D4 0A  // ................
  A6FA: 2C 0B 44 01                                      // ,.D.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 


  A6FE: 12 13 06 0C 00 00 AE 00 0A 18 0B 00 04 0A D0 0A  // ................
  A70E: 20 0B 40 01                                      //  .@.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x04C0, 
                0xD4, 
                0x2C, 
                0x0144
            }, 


  A712: 12 13 06 0C 00 00 AE 00 0A 18 0B C0 04 0A D4 0A  // ................
  A722: 2C 0B 44 01                                      // ,.D.

            Package (0x06)
            {
                0x00AE0000, 
                0x0D, 
                0x0580, 
                0xD8, 
                0x38, 
                0x0148
            }, 


  A726: 12 13 06 0C 00 00 AE 00 0A 0D 0B 80 05 0A D8 0A  // ................
  A736: 38 0B 48 01                                      // 8.H.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x05E8, 
                0xDC, 
                0x40, 
                0x014C
            }, 


  A73A: 12 13 06 0C 00 00 AE 00 0A 18 0B E8 05 0A DC 0A  // ................
  A74A: 40 0B 4C 01                                      // @.L.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x06A8, 
                0xE0, 
                0x4C, 
                0x0150
            }, 


  A74E: 12 13 06 0C 00 00 AE 00 0A 18 0B A8 06 0A E0 0A  // ................
  A75E: 4C 0B 50 01                                      // L.P.

            Package (0x06)
            {
                0x00AE0000, 
                0x18, 
                0x0768, 
                0xE4, 
                0x58, 
                0x0154
            }, 


  A762: 12 13 06 0C 00 00 AE 00 0A 18 0B 68 07 0A E4 0A  // ...........h....
  A772: 58 0B 54 01                                      // X.T.

            Package (0x06)
            {
                0x00AC0000, 
                0x0B, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }, 


  A776: 12 13 06 0C 00 00 AC 00 0A 0B 0B 00 04 0A D0 0A  // ................
  A786: 20 0B 40 01                                      //  .@.

            Package (0x06)
            {
                0x00AD0000, 
                0x0C, 
                0x0400, 
                0xD0, 
                0x20, 
                0x0140
            }
        })

  A78A: 12 13 06 0C 00 00 AD 00 0A 0C 0B 00 04 0A D0 0A  // ................
  A79A: 20 0B 40 01                                      //  .@.

        Name (RXEV, 
  A79E: 08 52 58 45 56                                   // .RXEV

Package (0x0A)
        {

  A7A3: 12 2A 0A                                         // .*.

            Buffer (0x18){}, 

  A7A6: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7AA: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7AE: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7B2: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7B6: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7BA: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7BE: 11 03 0A 18                                      // ....

            Buffer (0x18){}, 

  A7C2: 11 03 0A 18                                      // ....

            Buffer (0x0B){}, 

  A7C6: 11 03 0A 0B                                      // ....

            Buffer (0x0C){}
        })
    }


  A7CA: 11 03 0A 0C                                      // ....

    Scope (_SB)
    {

  A7CE: 10 4C 7C 5F 53 42 5F                             // .L|_SB_

        Method (GINF, 2, NotSerialized)
        {

  A7D5: 14 2D 47 49 4E 46 02                             // .-GINF.

            If (LEqual (PCHS, SPTL))
            {

  A7DC: A0 17 93 50 43 48 53 53 50 54 4C                 // ...PCHSSPTL

                Return (
  A7E7: A4                                               // .

DerefOf (
  A7E8: 83                                               // .

Index (DerefOf (
  A7E9: 88 83                                            // ..

Index (GPCL, Arg0)), Arg1)))
            }

  A7EB: 88 47 50 43 4C 68 00 69 00                       // .GPCLh.i.

            Else
            {

  A7F4: A1 0E                                            // ..

                Return (
  A7F6: A4                                               // .

DerefOf (
  A7F7: 83                                               // .

Index (DerefOf (
  A7F8: 88 83                                            // ..

Index (GPCH, Arg0)), Arg1)))
            }
        }


  A7FA: 88 47 50 43 48 68 00 69 00                       // .GPCHh.i.

        Method (GMXG, 0, NotSerialized)
        {

  A803: 14 19 47 4D 58 47 00                             // ..GMXG.

            If (LEqual (PCHS, SPTL))
            {

  A80A: A0 0D 93 50 43 48 53 53 50 54 4C                 // ...PCHSSPTL

                Return (0x08)
            }

  A815: A4 0A 08                                         // ...

            Else
            {

  A818: A1 04                                            // ..

                Return (0x0A)
            }
        }


  A81A: A4 0A 0A                                         // ...

        Method (GADR, 2, NotSerialized)
        {
            Store (Add (GINF (Arg0, Zero), SBRG), Local0)
            Store (GINF (Arg0, Arg1), Local1)

  A81D: 14 21 47 41 44 52 02 70 72 47 49 4E 46 68 00 53  // .!GADR.prGINFh.S
  A82D: 42 52 47 00 60 70 47 49 4E 46 68 69 61           // BRG.`pGINFhia

            Return (
  A83A: A4                                               // .

Add (Local0, Local1))
        }


  A83B: 72 60 61 00                                      // r`a.

        Method (GNUM, 1, NotSerialized)
        {
            Store (GNMB (Arg0), Local0)
            Store (GGRP (Arg0), Local1)

  A83F: 14 1D 47 4E 55 4D 01 70 47 4E 4D 42 68 60 70 47  // ..GNUM.pGNMBh`pG
  A84F: 47 52 50 68 61                                   // GRPha

            Return (
  A854: A4                                               // .

Add (Local0, Multiply (Local1, 0x18)))
        }


  A855: 72 60 77 61 0A 18 00 00                          // r`wa....

        Method (INUM, 1, NotSerialized)
        {
            Store (GNMB (Arg0), Local1)
            Store (GGRP (Arg0), Local2)
            Store (Zero, Local3)

  A85D: 14 31 49 4E 55 4D 01 70 47 4E 4D 42 68 61 70 47  // .1INUM.pGNMBhapG
  A86D: 47 52 50 68 62 70 00 63                          // GRPhbp.c

            While (LLess (Local3, Local2))
            {
                Add (GINF (Local3, One), Local1, Local1)

  A875: A2 0F 95 63 62 72 47 49 4E 46 63 01 61 61        // ...cbrGINFc.aa

                Increment (Local3)
            }


  A883: 75 63                                            // uc

            Return (
  A885: A4                                               // .

Add (0x18, Mod (Local1, 0x60)))
        }


  A886: 72 0A 18 85 61 0A 60 00 00                       // r...a.`..

        Method (GGRP, 1, Serialized)
        {
            ShiftRight (And (Arg0, 0x00FF0000), 0x10, Local0)

  A88F: 14 14 47 47 52 50 09 7A 7B 68 0C 00 00 FF 00 00  // ..GGRP.z{h......
  A89F: 0A 10 60                                         // ..`

            Return (Local0)
        }


  A8A2: A4 60                                            // .`

        Method (GNMB, 1, Serialized)
        {

  A8A4: 14 0D 47 4E 4D 42 09                             // ..GNMB.

            Return (
  A8AB: A4                                               // .

And (Arg0, 0xFFFF))
        }


  A8AC: 7B 68 0B FF FF 00                                // {h....

        Method (GGPE, 1, NotSerialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)

  A8B2: 14 4A 04 47 47 50 45 01 70 47 47 52 50 68 60 70  // .J.GGPE.pGGRPh`p
  A8C2: 47 4E 4D 42 68 61                                // GNMBha

            If (LEqual (And (ShiftRight (GPEM, Multiply (Local0, 0x02)), 0x03), Zero))
            {

  A8C8: A0 15 93 7B 7A 47 50 45 4D 77 60 0A 02 00 00 0A  // ...{zGPEMw`.....
  A8D8: 03 00 00                                         // ...

                Return (0x6F)
            }

  A8DB: A4 0A 6F                                         // ..o

            Else
            {
                Store (And (ShiftRight (GPEM, Multiply (Local0, 0x02)), 0x03), Local2)

  A8DE: A1 1E 70 7B 7A 47 50 45 4D 77 60 0A 02 00 00 0A  // ..p{zGPEMw`.....
  A8EE: 03 00 62                                         // ..b

                Return (
  A8F1: A4                                               // .

Add (Multiply (Subtract (Local2, One), 0x20), Local1))
            }
        }


  A8F2: 72 77 74 62 01 00 0A 20 00 61 00                 // rwtb... .a.

        Method (GPC0, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  A8FD: 14 41 04 47 50 43 30 09 70 47 47 52 50 68 60 70  // .A.GPC0.pGGRPh`p
  A90D: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  A91D: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  A923: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  A92D: 5B 81 0B 50 44 57 30 00 54 45 4D 50 20           // [..PDW0.TEMP 

            Return (TEMP)
        }


  A93A: A4 54 45 4D 50                                   // .TEMP

        Method (SPC0, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  A93F: 14 42 04 53 50 43 30 0A 70 47 47 52 50 68 60 70  // .B.SPC0.pGGRPh`p
  A94F: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  A95F: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  A965: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  A96F: 5B 81 0B 50 44 57 30 00 54 45 4D 50 20           // [..PDW0.TEMP 

            Store (Arg1, TEMP)
        }


  A97C: 70 69 54 45 4D 50                                // piTEMP

        Method (GPC1, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), 0x04), Local2)

  A982: 14 45 04 47 50 43 31 09 70 47 47 52 50 68 60 70  // .E.GPC1.pGGRPh`p
  A992: 47 4E 4D 42 68 61 70 72 72 47 41 44 52 60 0A 02  // GNMBhaprrGADR`..
  A9A2: 77 61 0A 08 00 00 0A 04 00 62                    // wa.......b

            OperationRegion (PDW1, SystemMemory, Local2, 0x04)

  A9AC: 5B 80 50 44 57 31 00 62 0A 04                    // [.PDW1.b..

            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  A9B6: 5B 81 0B 50 44 57 31 00 54 45 4D 50 20           // [..PDW1.TEMP 

            Return (TEMP)
        }


  A9C3: A4 54 45 4D 50                                   // .TEMP

        Method (SPC1, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), 0x04), Local2)

  A9C8: 14 46 04 53 50 43 31 0A 70 47 47 52 50 68 60 70  // .F.SPC1.pGGRPh`p
  A9D8: 47 4E 4D 42 68 61 70 72 72 47 41 44 52 60 0A 02  // GNMBhaprrGADR`..
  A9E8: 77 61 0A 08 00 00 0A 04 00 62                    // wa.......b

            OperationRegion (PDW1, SystemMemory, Local2, 0x04)

  A9F2: 5B 80 50 44 57 31 00 62 0A 04                    // [.PDW1.b..

            Field (PDW1, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  A9FC: 5B 81 0B 50 44 57 31 00 54 45 4D 50 20           // [..PDW1.TEMP 

            Store (Arg1, TEMP)
        }


  AA09: 70 69 54 45 4D 50                                // piTEMP

        Method (SRXO, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AA0F: 14 46 04 53 52 58 4F 0A 70 47 47 52 50 68 60 70  // .F.SRXO.pGGRPh`p
  AA1F: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AA2F: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AA35: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   28, 
                TEMP,   1, 
                Offset (0x04)
            }


  AA3F: 5B 81 0F 50 44 57 30 00 00 1C 54 45 4D 50 01 00  // [..PDW0...TEMP..
  AA4F: 03                                               // .

            Store (Arg1, TEMP)
        }


  AA50: 70 69 54 45 4D 50                                // piTEMP

        Method (GGIV, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AA56: 14 45 04 47 47 49 56 09 70 47 47 52 50 68 60 70  // .E.GGIV.pGGRPh`p
  AA66: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AA76: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AA7C: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   1, 
                TEMP,   1, 
                Offset (0x04)
            }


  AA86: 5B 81 0F 50 44 57 30 00 00 01 54 45 4D 50 01 00  // [..PDW0...TEMP..
  AA96: 1E                                               // .

            Return (TEMP)
        }


  AA97: A4 54 45 4D 50                                   // .TEMP

        Method (GGOV, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AA9C: 14 43 04 47 47 4F 56 09 70 47 47 52 50 68 60 70  // .C.GGOV.pGGRPh`p
  AAAC: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AABC: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AAC2: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }


  AACC: 5B 81 0D 50 44 57 30 00 54 45 4D 50 01 00 1F     // [..PDW0.TEMP...

            Return (TEMP)
        }


  AADB: A4 54 45 4D 50                                   // .TEMP

        Method (SGOV, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AAE0: 14 44 04 53 47 4F 56 0A 70 47 47 52 50 68 60 70  // .D.SGOV.pGGRPh`p
  AAF0: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AB00: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AB06: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }


  AB10: 5B 81 0D 50 44 57 30 00 54 45 4D 50 01 00 1F     // [..PDW0.TEMP...

            Store (Arg1, TEMP)
        }


  AB1F: 70 69 54 45 4D 50                                // piTEMP

        Method (GGII, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AB25: 14 45 04 47 47 49 49 09 70 47 47 52 50 68 60 70  // .E.GGII.pGGRPh`p
  AB35: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AB45: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AB4B: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }


  AB55: 5B 81 0F 50 44 57 30 00 00 17 54 45 4D 50 01 00  // [..PDW0...TEMP..
  AB65: 08                                               // .

            Return (TEMP)
        }


  AB66: A4 54 45 4D 50                                   // .TEMP

        Method (SGII, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AB6B: 14 46 04 53 47 49 49 0A 70 47 47 52 50 68 60 70  // .F.SGII.pGGRPh`p
  AB7B: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AB8B: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AB91: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   23, 
                TEMP,   1, 
                Offset (0x04)
            }


  AB9B: 5B 81 0F 50 44 57 30 00 00 17 54 45 4D 50 01 00  // [..PDW0...TEMP..
  ABAB: 08                                               // .

            Store (Arg1, TEMP)
        }


  ABAC: 70 69 54 45 4D 50                                // piTEMP

        Method (GPMV, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  ABB2: 14 45 04 47 50 4D 56 09 70 47 47 52 50 68 60 70  // .E.GPMV.pGGRPh`p
  ABC2: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  ABD2: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  ABD8: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }


  ABE2: 5B 81 0F 50 44 57 30 00 00 0A 54 45 4D 50 03 00  // [..PDW0...TEMP..
  ABF2: 13                                               // .

            Return (TEMP)
        }


  ABF3: A4 54 45 4D 50                                   // .TEMP

        Method (SPMV, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  ABF8: 14 46 04 53 50 4D 56 0A 70 47 47 52 50 68 60 70  // .F.SPMV.pGGRPh`p
  AC08: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AC18: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AC1E: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   3, 
                Offset (0x04)
            }


  AC28: 5B 81 0F 50 44 57 30 00 00 0A 54 45 4D 50 03 00  // [..PDW0...TEMP..
  AC38: 13                                               // .

            Store (Arg1, TEMP)
        }


  AC39: 70 69 54 45 4D 50                                // piTEMP

        Method (GHPO, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Add (GADR (Local0, 0x03), Multiply (ShiftRight (Local1, 0x05), 0x04), Local3)
            And (Local1, 0x1F, Local4)

  AC3F: 14 4E 04 47 48 50 4F 09 70 47 47 52 50 68 60 70  // .N.GHPO.pGGRPh`p
  AC4F: 47 4E 4D 42 68 61 72 47 41 44 52 60 0A 03 77 7A  // GNMBharGADR`..wz
  AC5F: 61 0A 05 00 0A 04 00 63 7B 61 0A 1F 64           // a......c{a..d

            OperationRegion (PREG, SystemMemory, Local3, 0x04)

  AC6C: 5B 80 50 52 45 47 00 63 0A 04                    // [.PREG.c..

            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  AC76: 5B 81 0B 50 52 45 47 00 54 45 4D 50 20           // [..PREG.TEMP 

            Return (
  AC83: A4                                               // .

And (ShiftRight (TEMP, Local4), One))
        }


  AC84: 7B 7A 54 45 4D 50 64 00 01 00                    // {zTEMPd...

        Method (SHPO, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Add (GADR (Local0, 0x03), Multiply (ShiftRight (Local1, 0x05), 0x04), Local3)
            And (Local1, 0x1F, Local4)

  AC8E: 14 44 06 53 48 50 4F 0A 70 47 47 52 50 68 60 70  // .D.SHPO.pGGRPh`p
  AC9E: 47 4E 4D 42 68 61 72 47 41 44 52 60 0A 03 77 7A  // GNMBharGADR`..wz
  ACAE: 61 0A 05 00 0A 04 00 63 7B 61 0A 1F 64           // a......c{a..d

            OperationRegion (PREG, SystemMemory, Local3, 0x04)

  ACBB: 5B 80 50 52 45 47 00 63 0A 04                    // [.PREG.c..

            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  ACC5: 5B 81 0B 50 52 45 47 00 54 45 4D 50 20           // [..PREG.TEMP 

            If (Arg1)
            {

  ACD2: A0 0F 69                                         // ..i

                Or (TEMP, ShiftLeft (One, Local4), TEMP)
            }

  ACD5: 7D 54 45 4D 50 79 01 64 00 54 45 4D 50           // }TEMPy.d.TEMP

            Else
            {

  ACE2: A1 10                                            // ..

                And (TEMP, Not (ShiftLeft (One, Local4)), TEMP)
            }
        }


  ACE4: 7B 54 45 4D 50 80 79 01 64 00 00 54 45 4D 50     // {TEMP.y.d..TEMP

        Method (GGPO, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x04), Multiply (ShiftRight (Local1, 0x03), 0x04)), Local2)

  ACF3: 14 44 05 47 47 50 4F 09 70 47 47 52 50 68 60 70  // .D.GGPO.pGGRPh`p
  AD03: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 04 77  // GNMBhaprGADR`..w
  AD13: 7A 61 0A 03 00 0A 04 00 00 62                    // za.......b

            OperationRegion (PREG, SystemMemory, Local2, 0x04)

  AD1D: 5B 80 50 52 45 47 00 62 0A 04                    // [.PREG.b..

            Field (PREG, AnyAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


  AD27: 5B 81 0B 50 52 45 47 00 54 45 4D 50 20           // [..PREG.TEMP 

            Return (
  AD34: A4                                               // .

And (ShiftRight (TEMP, Multiply (And (Local1, 0x07), 0x04)), 0x03))
        }


  AD35: 7B 7A 54 45 4D 50 77 7B 61 0A 07 00 0A 04 00 00  // {zTEMPw{a.......
  AD45: 0A 03 00                                         // ...

        Method (SGRA, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AD48: 14 46 04 53 47 52 41 0A 70 47 47 52 50 68 60 70  // .F.SGRA.pGGRPh`p
  AD58: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AD68: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AD6E: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   20, 
                TEMP,   1, 
                Offset (0x04)
            }


  AD78: 5B 81 0F 50 44 57 30 00 00 14 54 45 4D 50 01 00  // [..PDW0...TEMP..
  AD88: 0B                                               // .

            Store (Arg1, TEMP)
        }


  AD89: 70 69 54 45 4D 50                                // piTEMP

        Method (SGWP, 2, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), 0x04), Local2)

  AD8F: 14 4A 04 53 47 57 50 0A 70 47 47 52 50 68 60 70  // .J.SGWP.pGGRPh`p
  AD9F: 47 4E 4D 42 68 61 70 72 72 47 41 44 52 60 0A 02  // GNMBhaprrGADR`..
  ADAF: 77 61 0A 08 00 00 0A 04 00 62                    // wa.......b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  ADB9: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   10, 
                TEMP,   4, 
                Offset (0x04)
            }


  ADC3: 5B 81 0F 50 44 57 30 00 00 0A 54 45 4D 50 04 00  // [..PDW0...TEMP..
  ADD3: 12                                               // .

            Store (Arg1, TEMP)
        }


  ADD4: 70 69 54 45 4D 50                                // piTEMP

        Method (UGPS, 0, Serialized)
        {
        }


  ADDA: 14 06 55 47 50 53 08                             // ..UGPS.

        Method (CGPS, 0, Serialized)
        {
        }


  ADE1: 14 06 43 47 50 53 08                             // ..CGPS.

        Method (CGLS, 0, Serialized)
        {
        }


  ADE8: 14 06 43 47 4C 53 08                             // ..CGLS.

        Method (CAGS, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Multiply (ShiftRight (Local1, 0x05), 0x04, Local4)

  ADEF: 14 40 06 43 41 47 53 09 70 47 47 52 50 68 60 70  // .@.CAGS.pGGRPh`p
  ADFF: 47 4E 4D 42 68 61 77 7A 61 0A 05 00 0A 04 64     // GNMBhawza.....d

            If (LEqual (And (ShiftRight (GPEM, Multiply (Local0, 0x02)), 0x03), Zero))
            {

  AE0E: A0 41 04 93 7B 7A 47 50 45 4D 77 60 0A 02 00 00  // .A..{zGPEMw`....
  AE1E: 0A 03 00 00                                      // ....

                OperationRegion (GPPX, SystemMemory, Add (GADR (Local0, 0x05), Local4), 0x04)

  AE22: 5B 80 47 50 50 58 00 72 47 41 44 52 60 0A 05 64  // [.GPPX.rGADR`..d
  AE32: 00 0A 04                                         // ...

                Field (GPPX, AnyAcc, NoLock, Preserve)
                {
                    STSX,   32
                }

                ShiftLeft (One, Mod (Local1, 0x20), Local2)

  AE35: 5B 81 0B 47 50 50 58 00 53 54 53 58 20 79 01 85  // [..GPPX.STSX y..
  AE45: 61 0A 20 00 62                                   // a. .b

                Store (Local2, STSX)
            }
        }


  AE4A: 70 62 53 54 53 58                                // pbSTSX

        Method (ISME, 1, NotSerialized)
        {

  AE50: 14 42 07 49 53 4D 45 01                          // .B.ISME.

            If (
  AE58: A0 15 92                                         // ...

LNotEqual (And (ShiftRight (GPEM, Multiply (Arg0, 0x02)), 0x03), Zero))
            {

  AE5B: 93 7B 7A 47 50 45 4D 77 68 0A 02 00 00 0A 03 00  // .{zGPEMwh.......
  AE6B: 00                                               // .

                Return (Zero)
            }

            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Add (GADR (Local0, 0x05), Multiply (ShiftRight (Local1, 0x05), 0x04), Local2)
            And (Local1, 0x1F, Local3)

  AE6C: A4 00 70 47 47 52 50 68 60 70 47 4E 4D 42 68 61  // ..pGGRPh`pGNMBha
  AE7C: 72 47 41 44 52 60 0A 05 77 7A 61 0A 05 00 0A 04  // rGADR`..wza.....
  AE8C: 00 62 7B 61 0A 1F 63                             // .b{a..c

            OperationRegion (GPPX, SystemMemory, Local2, 0x24)

  AE93: 5B 80 47 50 50 58 00 62 0A 24                    // [.GPPX.b.$

            Field (GPPX, AnyAcc, NoLock, Preserve)
            {
                STSX,   32, 
                Offset (0x20), 
                GENX,   32
            }


  AE9D: 5B 81 13 47 50 50 58 00 53 54 53 58 20 00 40 0E  // [..GPPX.STSX .@.
  AEAD: 47 45 4E 58 20                                   // GENX 

            Return (
  AEB2: A4                                               // .

And (ShiftRight (And (STSX, GENX), Local3), One))
        }


  AEB3: 7B 7A 7B 53 54 53 58 47 45 4E 58 00 63 00 01 00  // {z{STSXGENX.c...

        Method (DIPI, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AEC3: 14 4E 06 44 49 50 49 09 70 47 47 52 50 68 60 70  // .N.DIPI.pGGRPh`p
  AED3: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AEE3: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AEE9: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }


  AEF3: 5B 81 16 50 44 57 30 00 00 09 52 44 49 53 01 00  // [..PDW0...RDIS..
  AF03: 0F 52 43 46 47 02 00 05                          // .RCFG...

            If (
  AF0B: A0 26 92                                         // .&.

LNotEqual (RCFG, 0x02))
            {
                Store (RCFG, 
  AF0E: 93 52 43 46 47 0A 02 70 52 43 46 47              // .RCFG..pRCFG

Index (DerefOf (
  AF1A: 88 83                                            // ..

Index (RXEV, Local0)), Local1))
                Store (0x02, RCFG)

  AF1C: 88 52 58 45 56 60 00 61 00 70 0A 02 52 43 46 47  // .RXEV`.a.p..RCFG

                Store (One, RDIS)
            }
        }


  AF2C: 70 01 52 44 49 53                                // p.RDIS

        Method (UIPI, 1, Serialized)
        {
            Store (GGRP (Arg0), Local0)
            Store (GNMB (Arg0), Local1)
            Store (Add (GADR (Local0, 0x02), Multiply (Local1, 0x08)), Local2)

  AF32: 14 48 06 55 49 50 49 09 70 47 47 52 50 68 60 70  // .H.UIPI.pGGRPh`p
  AF42: 47 4E 4D 42 68 61 70 72 47 41 44 52 60 0A 02 77  // GNMBhaprGADR`..w
  AF52: 61 0A 08 00 00 62                                // a....b

            OperationRegion (PDW0, SystemMemory, Local2, 0x04)

  AF58: 5B 80 50 44 57 30 00 62 0A 04                    // [.PDW0.b..

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                    ,   9, 
                RDIS,   1, 
                    ,   15, 
                RCFG,   2, 
                Offset (0x04)
            }

            Store (DerefOf (
  AF62: 5B 81 16 50 44 57 30 00 00 09 52 44 49 53 01 00  // [..PDW0...RDIS..
  AF72: 0F 52 43 46 47 02 00 05 70 83                    // .RCFG...p.

Index (DerefOf (
  AF7C: 88 83                                            // ..

Index (RXEV, Local0)), Local1)), Local3)

  AF7E: 88 52 58 45 56 60 00 61 00 63                    // .RXEV`.a.c

            If (
  AF88: A0 12 92                                         // ...

LNotEqual (Local3, 0x02))
            {
                Store (Zero, RDIS)

  AF8B: 93 63 0A 02 70 00 52 44 49 53                    // .c..p.RDIS

                Store (Local3, RCFG)
            }
        }
    }


  AF95: 70 63 52 43 46 47                                // pcRCFG

    Scope (\)
    {

  AF9B: 10 43 1B 5C 00                                   // .C.\.

        Method (THEN, 0, Serialized)
        {

  AFA0: 14 2D 54 48 45 4E 08                             // .-THEN.

            OperationRegion (THBA, SystemMemory, 0xFE200000, 0x10)

  AFA7: 5B 80 54 48 42 41 00 0C 00 00 20 FE 0A 10        // [.THBA.... ...

            Field (THBA, DWordAcc, NoLock, Preserve)
            {
                DO00,   32
            }


  AFB5: 5B 81 0B 54 48 42 41 03 44 4F 30 30 20           // [..THBA.DO00 

            Return (
  AFC2: A4                                               // .


  AFC3: 92                                               // .

LNotEqual (DO00, 0xFFFFFFFF))
        }


  AFC4: 93 44 4F 30 30 0C FF FF FF FF                    // .DO00.....

        Method (THDA, 2, Serialized)
        {
            Store (0xFE200000, Local0)
            Add (Local0, Multiply (0x40, Multiply (0x80, Subtract (Arg0, 0x20))), Local0)
            Add (Local0, Multiply (0x40, Arg1), Local0)

  AFCE: 14 27 54 48 44 41 0A 70 0C 00 00 20 FE 60 72 60  // .'THDA.p... .`r`
  AFDE: 77 0A 40 77 0A 80 74 68 0A 20 00 00 00 60 72 60  // w.@w..th. ...`r`
  AFEE: 77 0A 40 69 00 60                                // w.@i.`

            Return (Local0)
        }


  AFF4: A4 60                                            // .`

        Method (STRD, 3, Serialized)
        {

  AFF6: 14 38 53 54 52 44 0B                             // .8STRD.

            If (LGreater (Add (Arg1, Arg2), 
  AFFD: A0 0A 94 72 69 6A 00                             // ...rij.

SizeOf (Arg0)))
            {

  B004: 87 68                                            // .h

                Return (Zero)
            }

            ToBuffer (Arg0, Local3)
            Store (Zero, Local0)
            Store (Zero, Local1)

  B006: A4 00 96 68 63 70 00 60 70 00 61                 // ...hcp.`p.a

            While (LLess (Local1, Arg2))
            {
                Store (DerefOf (
  B011: A2 1B 95 61 6A 70 83                             // ...ajp.

Index (Local3, Add (Arg1, Local1))), Local2)
                Add (Local0, ShiftLeft (Local2, Multiply (0x08, Local1)), Local0)

  B018: 88 63 72 69 61 00 00 62 72 60 79 62 77 0A 08 61  // .cria..br`ybw..a
  B028: 00 00 60                                         // ..`

                Increment (Local1)
            }


  B02B: 75 61                                            // ua

            Return (Local0)
        }


  B02D: A4 60                                            // .`

        Method (THDS, 1, Serialized)
        {

  B02F: 14 43 10 54 48 44 53 09                          // .C.THDS.

            If (LNot (THEN ()))
            {

  B037: A0 08 92 54 48 45 4E                             // ...THEN

                Return (Zero)
            }

            Concatenate (Arg0, "\n", Local2)
            Store (SizeOf (Local2), Local0)
            Store (THDA (0x20, 0x16), Local1)

  B03E: A4 00 73 68 0D 0A 00 62 70 87 62 60 70 54 48 44  // ..sh...bp.b`pTHD
  B04E: 41 0A 20 0A 16 61                                // A. ..a

            OperationRegion (THBA, SystemMemory, Local1, 0x40)

  B054: 5B 80 54 48 42 41 00 61 0A 40                    // [.THBA.a.@

            Field (THBA, QWordAcc, NoLock, Preserve)
            {
                QO00,   64
            }


  B05E: 5B 81 0C 54 48 42 41 04 51 4F 30 30 40 04        // [..THBA.QO00@.

            Field (THBA, DWordAcc, NoLock, Preserve)
            {
                DO00,   32, 
                Offset (0x10), 
                DO10,   32, 
                Offset (0x30), 
                DO30,   32
            }


  B06C: 5B 81 1B 54 48 42 41 03 44 4F 30 30 20 00 40 06  // [..THBA.DO00 .@.
  B07C: 44 4F 31 30 20 00 40 0E 44 4F 33 30 20           // DO10 .@.DO30 

            Field (THBA, WordAcc, NoLock, Preserve)
            {
                WO00,   16
            }


  B089: 5B 81 0B 54 48 42 41 02 57 4F 30 30 10           // [..THBA.WO00.

            Field (THBA, ByteAcc, NoLock, Preserve)
            {
                BO00,   8
            }

            Store (0x01000242, DO10)
            Store (Local0, WO00)
            Store (Zero, Local6)
            Store (Local0, Local7)

  B096: 5B 81 0B 54 48 42 41 01 42 4F 30 30 08 70 0C 42  // [..THBA.BO00.p.B
  B0A6: 02 00 01 44 4F 31 30 70 60 57 4F 30 30 70 00 66  // ...DO10p`WO00p.f
  B0B6: 70 60 67                                         // p`g

            While (
  B0B9: A2 1D 92                                         // ...

LGreaterEqual (Local7, 0x08))
            {
                Store (STRD (Local2, Local6, 0x08), QO00)
                Add (Local6, 0x08, Local6)

  B0BC: 95 67 0A 08 70 53 54 52 44 62 66 0A 08 51 4F 30  // .g..pSTRDbf..QO0
  B0CC: 30 72 66 0A 08 66                                // 0rf..f

                Subtract (Local7, 0x08, Local7)
            }


  B0D2: 74 67 0A 08 67                                   // tg..g

            If (
  B0D7: A0 1D 92                                         // ...

LGreaterEqual (Local7, 0x04))
            {
                Store (STRD (Local2, Local6, 0x04), DO00)
                Add (Local6, 0x04, Local6)

  B0DA: 95 67 0A 04 70 53 54 52 44 62 66 0A 04 44 4F 30  // .g..pSTRDbf..DO0
  B0EA: 30 72 66 0A 04 66                                // 0rf..f

                Subtract (Local7, 0x04, Local7)
            }


  B0F0: 74 67 0A 04 67                                   // tg..g

            If (
  B0F5: A0 1D 92                                         // ...

LGreaterEqual (Local7, 0x02))
            {
                Store (STRD (Local2, Local6, 0x02), WO00)
                Add (Local6, 0x02, Local6)

  B0F8: 95 67 0A 02 70 53 54 52 44 62 66 0A 02 57 4F 30  // .g..pSTRDbf..WO0
  B108: 30 72 66 0A 02 66                                // 0rf..f

                Subtract (Local7, 0x02, Local7)
            }


  B10E: 74 67 0A 02 67                                   // tg..g

            If (
  B113: A0 19 92                                         // ...

LGreaterEqual (Local7, One))
            {
                Store (STRD (Local2, Local6, One), BO00)
                Add (Local6, One, Local6)

  B116: 95 67 01 70 53 54 52 44 62 66 01 42 4F 30 30 72  // .g.pSTRDbf.BO00r
  B126: 66 01 66                                         // f.f

                Subtract (Local7, One, Local7)
            }


  B129: 74 67 01 67                                      // tg.g

            Store (Zero, DO30)
        }


  B12D: 70 00 44 4F 33 30                                // p.DO30

        Method (THDH, 1, Serialized)
        {
            THDS (
  B133: 14 0D 54 48 44 48 09 54 48 44 53                 // ..THDH.THDS

ToHexString (Arg0))
        }


  B13E: 98 68 00                                         // .h.

        Method (THDD, 1, Serialized)
        {
            THDS (
  B141: 14 0D 54 48 44 44 09 54 48 44 53                 // ..THDD.THDS

ToDecimalString (Arg0))
        }
    }


  B14C: 97 68 00                                         // .h.

    Name (SPTH, One)

  B14F: 08 53 50 54 48 01                                // .SPTH.

    Name (SPTL, 0x02)

  B155: 08 53 50 54 4C 0A 02                             // .SPTL..

    Method (PCHV, 0, NotSerialized)
    {

  B15C: 14 23 50 43 48 56 00                             // .#PCHV.

        If (LEqual (PCHS, One))
        {

  B163: A0 0C 93 50 43 48 53 01                          // ...PCHS.

            Return (SPTH)
        }


  B16B: A4 53 50 54 48                                   // .SPTH

        If (LEqual (PCHS, 0x02))
        {

  B170: A0 0D 93 50 43 48 53 0A 02                       // ...PCHS..

            Return (SPTL)
        }


  B179: A4 53 50 54 4C                                   // .SPTL

        Return (Zero)
    }


  B17E: A4 00                                            // ..

    Scope (_GPE)
    {

  B180: 10 4A 05 5F 47 50 45                             // .J._GPE

        Method (_L6D, 0, Serialized)  // _Lxx: Level-Triggered GPE
        {
            \_SB.PCI0.XHC.GPEH ()
            \_SB.PCI0.HDAS.GPEH ()
            \_SB.PCI0.GLAN.GPEH ()
            \_SB.PCI0.XDCI.GPEH ()
        }
    }


  B187: 14 43 05 5F 4C 36 44 08 5C 2F 04 5F 53 42 5F 50  // .C._L6D.\/._SB_P
  B197: 43 49 30 58 48 43 5F 47 50 45 48 5C 2F 04 5F 53  // CI0XHC_GPEH\/._S
  B1A7: 42 5F 50 43 49 30 48 44 41 53 47 50 45 48 5C 2F  // B_PCI0HDASGPEH\/
  B1B7: 04 5F 53 42 5F 50 43 49 30 47 4C 41 4E 47 50 45  // ._SB_PCI0GLANGPE
  B1C7: 48 5C 2F 04 5F 53 42 5F 50 43 49 30 58 44 43 49  // H\/._SB_PCI0XDCI
  B1D7: 47 50 45 48                                      // GPEH

    Scope (_SB.PCI0)
    {

  B1DB: 10 4B 20 2E 5F 53 42 5F 50 43 49 30              // .K ._SB_PCI0

        Name (TEMP, Zero)

  B1E7: 08 54 45 4D 50 00                                // .TEMP.

        Device (PRRE)
        {

  B1ED: 5B 82 42 09 50 52 52 45                          // [.B.PRRE

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  B1F5: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, "PCHRESV")  // _UID: Unique ID

  B1FF: 08 5F 55 49 44 0D 50 43 48 52 45 53 56 00        // ._UID.PCHRESV.

            Name (_STA, 0x03)  // _STA: Status

  B20D: 08 5F 53 54 41 0A 03                             // ._STA..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B214: 14 4C 06 5F 43 52 53 08                          // .L._CRS.

                Name (BUF0, 
  B21C: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFD000000,         // Address Base
                        0x00AC0000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFDAD0000,         // Address Base
                        0x00010000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFDB00000,         // Address Base
                        0x00500000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE000000,         // Address Base
                        0x00020000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE036000,         // Address Base
                        0x00006000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE03D000,         // Address Base
                        0x003C3000,         // Address Length
                        )
                    Memory32Fixed (ReadWrite,
                        0xFE410000,         // Address Base
                        0x003F0000,         // Address Length
                        )
                })

  B221: 11 4A 05 0A 56 86 09 00 01 00 00 00 FD 00 00 AC  // .J..V...........
  B231: 00 86 09 00 01 00 00 AD FD 00 00 01 00 86 09 00  // ................
  B241: 01 00 00 B0 FD 00 00 50 00 86 09 00 01 00 00 00  // .......P........
  B251: FE 00 00 02 00 86 09 00 01 00 60 03 FE 00 60 00  // ..........`...`.
  B261: 00 86 09 00 01 00 D0 03 FE 00 30 3C 00 86 09 00  // ..........0<....
  B271: 01 00 00 41 FE 00 00 3F 00 79 00                 // ...A...?.y.

                Return (BUF0)
            }
        }


  B27C: A4 42 55 46 30                                   // .BUF0

        Device (IOTR)
        {

  B281: 5B 82 44 16 49 4F 54 52                          // [.D.IOTR

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  B289: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, "IoTraps")  // _UID: Unique ID

  B293: 08 5F 55 49 44 0D 49 6F 54 72 61 70 73 00        // ._UID.IoTraps.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {
                Store (
  B2A1: 14 45 14 5F 43 52 53 00 70                       // .E._CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                     
                    }, Local0)

  B2AA: 11 05 0A 02 79 00 60                             // ....y.`

                Name (BUF0, 
  B2B1: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y16)
                })

  B2B6: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                Name (BUF1, 
  B2C4: 08 42 55 46 31                                   // .BUF1

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y17)
                })

  B2C9: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                Name (BUF2, 
  B2D7: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y18)
                })

  B2DC: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                Name (BUF3, 
  B2EA: 08 42 55 46 33                                   // .BUF3

ResourceTemplate ()
                {
                    IO (Decode16,
                        0x0000,             // Range Minimum
                        0x0000,             // Range Maximum
                        0x01,               // Alignment
                        0xFF,               // Length
                        _Y19)
                })

  B2EF: 11 0D 0A 0A 47 01 00 00 00 00 01 FF 79 00        // ....G.......y.

                CreateWordField (BUF0, \_SB.PCI0.IOTR._CRS._Y16._MIN, AMI0)  // _MIN: Minimum Base Address

  B2FD: 8B 42 55 46 30 0A 02 41 4D 49 30                 // .BUF0..AMI0

                CreateWordField (BUF0, \_SB.PCI0.IOTR._CRS._Y16._MAX, AMA0)  // _MAX: Maximum Base Address

  B308: 8B 42 55 46 30 0A 04 41 4D 41 30                 // .BUF0..AMA0

                CreateWordField (BUF1, \_SB.PCI0.IOTR._CRS._Y17._MIN, AMI1)  // _MIN: Minimum Base Address

  B313: 8B 42 55 46 31 0A 02 41 4D 49 31                 // .BUF1..AMI1

                CreateWordField (BUF1, \_SB.PCI0.IOTR._CRS._Y17._MAX, AMA1)  // _MAX: Maximum Base Address

  B31E: 8B 42 55 46 31 0A 04 41 4D 41 31                 // .BUF1..AMA1

                CreateWordField (BUF2, \_SB.PCI0.IOTR._CRS._Y18._MIN, AMI2)  // _MIN: Minimum Base Address

  B329: 8B 42 55 46 32 0A 02 41 4D 49 32                 // .BUF2..AMI2

                CreateWordField (BUF2, \_SB.PCI0.IOTR._CRS._Y18._MAX, AMA2)  // _MAX: Maximum Base Address

  B334: 8B 42 55 46 32 0A 04 41 4D 41 32                 // .BUF2..AMA2

                CreateWordField (BUF3, \_SB.PCI0.IOTR._CRS._Y19._MIN, AMI3)  // _MIN: Minimum Base Address

  B33F: 8B 42 55 46 33 0A 02 41 4D 49 33                 // .BUF3..AMI3

                CreateWordField (BUF3, \_SB.PCI0.IOTR._CRS._Y19._MAX, AMA3)  // _MAX: Maximum Base Address
                Store (ITA0, AMI0)
                Store (ITA0, AMA0)
                Store (ITA1, AMI1)
                Store (ITA1, AMA1)
                Store (ITA2, AMI2)
                Store (ITA2, AMA2)
                Store (ITA3, AMI3)
                Store (ITA3, AMA3)

  B34A: 8B 42 55 46 33 0A 04 41 4D 41 33 70 49 54 41 30  // .BUF3..AMA3pITA0
  B35A: 41 4D 49 30 70 49 54 41 30 41 4D 41 30 70 49 54  // AMI0pITA0AMA0pIT
  B36A: 41 31 41 4D 49 31 70 49 54 41 31 41 4D 41 31 70  // A1AMI1pITA1AMA1p
  B37A: 49 54 41 32 41 4D 49 32 70 49 54 41 32 41 4D 41  // ITA2AMI2pITA2AMA
  B38A: 32 70 49 54 41 33 41 4D 49 33 70 49 54 41 33 41  // 2pITA3AMI3pITA3A
  B39A: 4D 41 33                                         // MA3

                If (LEqual (ITS0, One))
                {
                    ConcatenateResTemplate (Local0, BUF0, Local1)

  B39D: A0 11 93 49 54 53 30 01 84 60 42 55 46 30 61     // ...ITS0..`BUF0a

                    Store (Local1, Local0)
                }


  B3AC: 70 61 60                                         // pa`

                If (LEqual (ITS1, One))
                {
                    ConcatenateResTemplate (Local0, BUF1, Local1)

  B3AF: A0 11 93 49 54 53 31 01 84 60 42 55 46 31 61     // ...ITS1..`BUF1a

                    Store (Local1, Local0)
                }


  B3BE: 70 61 60                                         // pa`

                If (LEqual (ITS2, One))
                {
                    ConcatenateResTemplate (Local0, BUF2, Local1)

  B3C1: A0 11 93 49 54 53 32 01 84 60 42 55 46 32 61     // ...ITS2..`BUF2a

                    Store (Local1, Local0)
                }


  B3D0: 70 61 60                                         // pa`

                If (LEqual (ITS3, One))
                {
                    ConcatenateResTemplate (Local0, BUF3, Local1)

  B3D3: A0 11 93 49 54 53 33 01 84 60 42 55 46 33 61     // ...ITS3..`BUF3a

                    Store (Local1, Local0)
                }


  B3E2: 70 61 60                                         // pa`

                Return (Local0)
            }
        }
    }


  B3E5: A4 60                                            // .`

    Scope (_SB.PCI0.LPCB)
    {

  B3E7: 10 4E 06 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .N./._SB_PCI0LPC
  B3F7: 42                                               // B

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

  B3F8: 14 1B 5F 44 53 4D 0C                             // .._DSM.

            If (PCIC (Arg0))
            {

  B3FF: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


  B406: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            Return (
  B40F: A4                                               // .

Buffer (One)
            {
                 0x00                                           
            })
        }


  B410: 11 03 01 00                                      // ....

        OperationRegion (LPC, PCI_Config, Zero, 0x0100)

  B414: 5B 80 4C 50 43 5F 02 00 0B 00 01                 // [.LPC_.....

        Field (LPC, AnyAcc, NoLock, Preserve)
        {
            Offset (0x02), 
            CDID,   16, 
            Offset (0x08), 
            CRID,   8, 
            Offset (0x80), 
            IOD0,   8, 
            IOD1,   8, 
            Offset (0xA0), 
                ,   9, 
            PRBL,   1, 
            Offset (0xDC), 
                ,   2, 
            ESPI,   1
        }
    }


  B41F: 5B 81 35 4C 50 43 5F 00 00 10 43 44 49 44 10 00  // [.5LPC_...CDID..
  B42F: 20 43 52 49 44 08 00 48 3B 49 4F 44 30 08 49 4F  //  CRID..H;IOD0.IO
  B43F: 44 31 08 00 40 0F 00 09 50 52 42 4C 01 00 46 1D  // D1..@...PRBL..F.
  B44F: 00 02 45 53 50 49 01                             // ..ESPI.

    Scope (_SB.PCI0)
    {

  B456: 10 45 06 2E 5F 53 42 5F 50 43 49 30              // .E.._SB_PCI0

        Device (PPMC)
        {

  B462: 5B 82 2B 50 50 4D 43                             // [.+PPMC

            Name (_ADR, 0x001F0002)  // _ADR: Address

  B469: 08 5F 41 44 52 0C 02 00 1F 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  B473: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

  B47A: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  B481: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (
  B48A: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


  B48B: 11 03 01 00                                      // ....

        Device (SBUS)
        {

  B48F: 5B 82 2B 53 42 55 53                             // [.+SBUS

            Name (_ADR, 0x001F0004)  // _ADR: Address

  B496: 08 5F 41 44 52 0C 04 00 1F 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  B4A0: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

  B4A7: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  B4AE: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (
  B4B7: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


  B4B8: 11 03 01 00                                      // ....

    Scope (_SB)
    {

  B4BC: 10 4D 52 5F 53 42 5F                             // .MR_SB_

        Device (LNKA)
        {

  B4C3: 5B 82 42 0A 4C 4E 4B 41                          // [.B.LNKA

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B4CB: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

  B4D5: 08 5F 55 49 44 01                                // ._UID.

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B4DB: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PARC, 0x80, PARC)
            }


  B4E2: 7D 50 41 52 43 0A 80 50 41 52 43                 // }PARC..PARC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B4ED: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSA)
            }


  B4F4: A4 50 52 53 41                                   // .PRSA

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B4F9: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLA, 
  B500: 08 52 54 4C 41                                   // .RTLA

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B505: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLA, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PARC, 0x0F), IRQ0)

  B50F: 8B 52 54 4C 41 01 49 52 51 30 70 00 49 52 51 30  // .RTLA.IRQ0p.IRQ0
  B51F: 79 01 7B 50 41 52 43 0A 0F 00 49 52 51 30        // y.{PARC...IRQ0

                Return (RTLA)
            }


  B52D: A4 52 54 4C 41                                   // .RTLA

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B532: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B539: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PARC)
            }


  B548: 70 60 50 41 52 43                                // p`PARC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B54E: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PARC, 0x80))
                {

  B555: A0 0C 7B 50 41 52 43 0A 80 00                    // ..{PARC...

                    Return (0x09)
                }

  B55F: A4 0A 09                                         // ...

                Else
                {

  B562: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B564: A4 0A 0B                                         // ...

        Device (LNKB)
        {

  B567: 5B 82 43 0A 4C 4E 4B 42                          // [.C.LNKB

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B56F: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x02)  // _UID: Unique ID

  B579: 08 5F 55 49 44 0A 02                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B580: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PBRC, 0x80, PBRC)
            }


  B587: 7D 50 42 52 43 0A 80 50 42 52 43                 // }PBRC..PBRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B592: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSB)
            }


  B599: A4 50 52 53 42                                   // .PRSB

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B59E: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLB, 
  B5A5: 08 52 54 4C 42                                   // .RTLB

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B5AA: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLB, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PBRC, 0x0F), IRQ0)

  B5B4: 8B 52 54 4C 42 01 49 52 51 30 70 00 49 52 51 30  // .RTLB.IRQ0p.IRQ0
  B5C4: 79 01 7B 50 42 52 43 0A 0F 00 49 52 51 30        // y.{PBRC...IRQ0

                Return (RTLB)
            }


  B5D2: A4 52 54 4C 42                                   // .RTLB

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B5D7: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B5DE: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PBRC)
            }


  B5ED: 70 60 50 42 52 43                                // p`PBRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B5F3: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PBRC, 0x80))
                {

  B5FA: A0 0C 7B 50 42 52 43 0A 80 00                    // ..{PBRC...

                    Return (0x09)
                }

  B604: A4 0A 09                                         // ...

                Else
                {

  B607: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B609: A4 0A 0B                                         // ...

        Device (LNKC)
        {

  B60C: 5B 82 43 0A 4C 4E 4B 43                          // [.C.LNKC

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B614: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x03)  // _UID: Unique ID

  B61E: 08 5F 55 49 44 0A 03                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B625: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PCRC, 0x80, PCRC)
            }


  B62C: 7D 50 43 52 43 0A 80 50 43 52 43                 // }PCRC..PCRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B637: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSC)
            }


  B63E: A4 50 52 53 43                                   // .PRSC

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B643: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLC, 
  B64A: 08 52 54 4C 43                                   // .RTLC

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B64F: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLC, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PCRC, 0x0F), IRQ0)

  B659: 8B 52 54 4C 43 01 49 52 51 30 70 00 49 52 51 30  // .RTLC.IRQ0p.IRQ0
  B669: 79 01 7B 50 43 52 43 0A 0F 00 49 52 51 30        // y.{PCRC...IRQ0

                Return (RTLC)
            }


  B677: A4 52 54 4C 43                                   // .RTLC

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B67C: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B683: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PCRC)
            }


  B692: 70 60 50 43 52 43                                // p`PCRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B698: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PCRC, 0x80))
                {

  B69F: A0 0C 7B 50 43 52 43 0A 80 00                    // ..{PCRC...

                    Return (0x09)
                }

  B6A9: A4 0A 09                                         // ...

                Else
                {

  B6AC: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B6AE: A4 0A 0B                                         // ...

        Device (LNKD)
        {

  B6B1: 5B 82 43 0A 4C 4E 4B 44                          // [.C.LNKD

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B6B9: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x04)  // _UID: Unique ID

  B6C3: 08 5F 55 49 44 0A 04                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B6CA: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PDRC, 0x80, PDRC)
            }


  B6D1: 7D 50 44 52 43 0A 80 50 44 52 43                 // }PDRC..PDRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B6DC: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSD)
            }


  B6E3: A4 50 52 53 44                                   // .PRSD

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B6E8: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLD, 
  B6EF: 08 52 54 4C 44                                   // .RTLD

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B6F4: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLD, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PDRC, 0x0F), IRQ0)

  B6FE: 8B 52 54 4C 44 01 49 52 51 30 70 00 49 52 51 30  // .RTLD.IRQ0p.IRQ0
  B70E: 79 01 7B 50 44 52 43 0A 0F 00 49 52 51 30        // y.{PDRC...IRQ0

                Return (RTLD)
            }


  B71C: A4 52 54 4C 44                                   // .RTLD

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B721: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B728: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PDRC)
            }


  B737: 70 60 50 44 52 43                                // p`PDRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B73D: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PDRC, 0x80))
                {

  B744: A0 0C 7B 50 44 52 43 0A 80 00                    // ..{PDRC...

                    Return (0x09)
                }

  B74E: A4 0A 09                                         // ...

                Else
                {

  B751: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B753: A4 0A 0B                                         // ...

        Device (LNKE)
        {

  B756: 5B 82 43 0A 4C 4E 4B 45                          // [.C.LNKE

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B75E: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x05)  // _UID: Unique ID

  B768: 08 5F 55 49 44 0A 05                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B76F: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PERC, 0x80, PERC)
            }


  B776: 7D 50 45 52 43 0A 80 50 45 52 43                 // }PERC..PERC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B781: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSE)
            }


  B788: A4 50 52 53 45                                   // .PRSE

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B78D: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLE, 
  B794: 08 52 54 4C 45                                   // .RTLE

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B799: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLE, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PERC, 0x0F), IRQ0)

  B7A3: 8B 52 54 4C 45 01 49 52 51 30 70 00 49 52 51 30  // .RTLE.IRQ0p.IRQ0
  B7B3: 79 01 7B 50 45 52 43 0A 0F 00 49 52 51 30        // y.{PERC...IRQ0

                Return (RTLE)
            }


  B7C1: A4 52 54 4C 45                                   // .RTLE

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B7C6: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B7CD: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PERC)
            }


  B7DC: 70 60 50 45 52 43                                // p`PERC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B7E2: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PERC, 0x80))
                {

  B7E9: A0 0C 7B 50 45 52 43 0A 80 00                    // ..{PERC...

                    Return (0x09)
                }

  B7F3: A4 0A 09                                         // ...

                Else
                {

  B7F6: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B7F8: A4 0A 0B                                         // ...

        Device (LNKF)
        {

  B7FB: 5B 82 43 0A 4C 4E 4B 46                          // [.C.LNKF

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B803: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x06)  // _UID: Unique ID

  B80D: 08 5F 55 49 44 0A 06                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B814: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PFRC, 0x80, PFRC)
            }


  B81B: 7D 50 46 52 43 0A 80 50 46 52 43                 // }PFRC..PFRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B826: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSF)
            }


  B82D: A4 50 52 53 46                                   // .PRSF

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B832: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLF, 
  B839: 08 52 54 4C 46                                   // .RTLF

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B83E: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLF, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PFRC, 0x0F), IRQ0)

  B848: 8B 52 54 4C 46 01 49 52 51 30 70 00 49 52 51 30  // .RTLF.IRQ0p.IRQ0
  B858: 79 01 7B 50 46 52 43 0A 0F 00 49 52 51 30        // y.{PFRC...IRQ0

                Return (RTLF)
            }


  B866: A4 52 54 4C 46                                   // .RTLF

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B86B: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B872: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PFRC)
            }


  B881: 70 60 50 46 52 43                                // p`PFRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B887: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PFRC, 0x80))
                {

  B88E: A0 0C 7B 50 46 52 43 0A 80 00                    // ..{PFRC...

                    Return (0x09)
                }

  B898: A4 0A 09                                         // ...

                Else
                {

  B89B: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B89D: A4 0A 0B                                         // ...

        Device (LNKG)
        {

  B8A0: 5B 82 43 0A 4C 4E 4B 47                          // [.C.LNKG

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B8A8: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x07)  // _UID: Unique ID

  B8B2: 08 5F 55 49 44 0A 07                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B8B9: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PGRC, 0x80, PGRC)
            }


  B8C0: 7D 50 47 52 43 0A 80 50 47 52 43                 // }PGRC..PGRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B8CB: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSG)
            }


  B8D2: A4 50 52 53 47                                   // .PRSG

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B8D7: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLG, 
  B8DE: 08 52 54 4C 47                                   // .RTLG

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B8E3: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLG, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PGRC, 0x0F), IRQ0)

  B8ED: 8B 52 54 4C 47 01 49 52 51 30 70 00 49 52 51 30  // .RTLG.IRQ0p.IRQ0
  B8FD: 79 01 7B 50 47 52 43 0A 0F 00 49 52 51 30        // y.{PGRC...IRQ0

                Return (RTLG)
            }


  B90B: A4 52 54 4C 47                                   // .RTLG

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B910: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B917: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PGRC)
            }


  B926: 70 60 50 47 52 43                                // p`PGRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B92C: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PGRC, 0x80))
                {

  B933: A0 0C 7B 50 47 52 43 0A 80 00                    // ..{PGRC...

                    Return (0x09)
                }

  B93D: A4 0A 09                                         // ...

                Else
                {

  B940: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


  B942: A4 0A 0B                                         // ...

        Device (LNKH)
        {

  B945: 5B 82 43 0A 4C 4E 4B 48                          // [.C.LNKH

            Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  B94D: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x08)  // _UID: Unique ID

  B957: 08 5F 55 49 44 0A 08                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

  B95E: 14 11 5F 44 49 53 08                             // .._DIS.

                Or (PHRC, 0x80, PHRC)
            }


  B965: 7D 50 48 52 43 0A 80 50 48 52 43                 // }PHRC..PHRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

  B970: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSH)
            }


  B977: A4 50 52 53 48                                   // .PRSH

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  B97C: 14 38 5F 43 52 53 08                             // .8_CRS.

                Name (RTLH, 
  B983: 08 52 54 4C 48                                   // .RTLH

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

  B988: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLH, One, IRQ0)
                Store (Zero, IRQ0)
                ShiftLeft (One, And (PHRC, 0x0F), IRQ0)

  B992: 8B 52 54 4C 48 01 49 52 51 30 70 00 49 52 51 30  // .RTLH.IRQ0p.IRQ0
  B9A2: 79 01 7B 50 48 52 43 0A 0F 00 49 52 51 30        // y.{PHRC...IRQ0

                Return (RTLH)
            }


  B9B0: A4 52 54 4C 48                                   // .RTLH

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  B9B5: 14 1B 5F 53 52 53 09                             // .._SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

  B9BC: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, PHRC)
            }


  B9CB: 70 60 50 48 52 43                                // p`PHRC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

  B9D1: 14 18 5F 53 54 41 08                             // .._STA.

                If (And (PHRC, 0x80))
                {

  B9D8: A0 0C 7B 50 48 52 43 0A 80 00                    // ..{PHRC...

                    Return (0x09)
                }

  B9E2: A4 0A 09                                         // ...

                Else
                {

  B9E5: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }
    }


  B9E7: A4 0A 0B                                         // ...

    Scope (\)
    {

  B9EA: 10 4A 1A 5C 00                                   // .J.\.

        Method (PCRR, 2, Serialized)
        {
            Add (ShiftLeft (Arg0, 0x10), Arg1, Local0)
            Add (SBRG, Local0, Local0)

  B9EF: 14 31 50 43 52 52 0A 72 79 68 0A 10 00 69 60 72  // .1PCRR.ryh...i`r
  B9FF: 53 42 52 47 60 60                                // SBRG``

            OperationRegion (PCR0, SystemMemory, Local0, 0x04)

  BA05: 5B 80 50 43 52 30 00 60 0A 04                    // [.PCR0.`..

            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }


  BA0F: 5B 81 0B 50 43 52 30 13 44 41 54 30 20           // [..PCR0.DAT0 

            Return (DAT0)
        }


  BA1C: A4 44 41 54 30                                   // .DAT0

        Method (PCRW, 3, Serialized)
        {
            Add (ShiftLeft (Arg0, 0x10), Arg1, Local0)
            Add (SBRG, Local0, Local0)

  BA21: 14 3D 50 43 52 57 0B 72 79 68 0A 10 00 69 60 72  // .=PCRW.ryh...i`r
  BA31: 53 42 52 47 60 60                                // SBRG``

            OperationRegion (PCR0, SystemMemory, Local0, 0x04)

  BA37: 5B 80 50 43 52 30 00 60 0A 04                    // [.PCR0.`..

            Field (PCR0, DWordAcc, Lock, Preserve)
            {
                DAT0,   32
            }

            Store (Arg2, DAT0)

  BA41: 5B 81 0B 50 43 52 30 13 44 41 54 30 20 70 6A 44  // [..PCR0.DAT0 pjD
  BA51: 41 54 30                                         // AT0

            Store (PCRR (0xC7, 0x3418), Local0)
        }


  BA54: 70 50 43 52 52 0A C7 0B 18 34 60                 // pPCRR....4`

        Method (PCRO, 3, Serialized)
        {
            Store (PCRR (Arg0, Arg1), Local0)
            Store (Or (Local0, Arg2), Local1)
            PCRW (Arg0, Arg1, Local1)
        }


  BA5F: 14 1B 50 43 52 4F 0B 70 50 43 52 52 68 69 60 70  // ..PCRO.pPCRRhi`p
  BA6F: 7D 60 6A 00 61 50 43 52 57 68 69 61              // }`j.aPCRWhia

        Method (PCRA, 3, Serialized)
        {
            Store (PCRR (Arg0, Arg1), Local0)
            Store (And (Local0, Arg2), Local1)
            PCRW (Arg0, Arg1, Local1)
        }


  BA7B: 14 1B 50 43 52 41 0B 70 50 43 52 52 68 69 60 70  // ..PCRA.pPCRRhi`p
  BA8B: 7B 60 6A 00 61 50 43 52 57 68 69 61              // {`j.aPCRWhia

        Method (PCAO, 4, Serialized)
        {
            Store (PCRR (Arg0, Arg1), Local0)
            Store (Or (And (Local0, Arg2), Arg3), Local1)
            PCRW (Arg0, Arg1, Local1)
        }


  BA97: 14 1E 50 43 41 4F 0C 70 50 43 52 52 68 69 60 70  // ..PCAO.pPCRRhi`p
  BAA7: 7D 7B 60 6A 00 6B 00 61 50 43 52 57 68 69 61     // }{`j.k.aPCRWhia

        Name (TCBV, Zero)

  BAB6: 08 54 43 42 56 00                                // .TCBV.

        Method (TCBS, 0, NotSerialized)
        {

  BABC: 14 27 54 43 42 53 00                             // .'TCBS.

            If (LEqual (TCBV, Zero))
            {
                Store (PCRR (0xEF, 0x2778), Local0)

  BAC3: A0 1B 93 54 43 42 56 00 70 50 43 52 52 0A EF 0B  // ...TCBV.pPCRR...
  BAD3: 78 27 60                                         // x'`

                And (Local0, 0xFFE0, TCBV)
            }


  BAD6: 7B 60 0B E0 FF 54 43 42 56                       // {`...TCBV

            Return (TCBV)
        }


  BADF: A4 54 43 42 56                                   // .TCBV

        OperationRegion (PMIO, SystemIO, PMBS, 0x60)

  BAE4: 5B 80 50 4D 49 4F 01 50 4D 42 53 0A 60           // [.PMIO.PMBS.`

        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            Offset (0x01), 
            PBSS,   1, 
            Offset (0x40), 
                ,   17, 
            GPEC,   1
        }


  BAF1: 5B 81 17 50 4D 49 4F 01 00 08 50 42 53 53 01 00  // [..PMIO...PBSS..
  BB01: 47 1F 00 11 47 50 45 43 01                       // G...GPEC.

        OperationRegion (TCBA, SystemIO, TCBS (), 0x10)

  BB0A: 5B 80 54 43 42 41 01 54 43 42 53 0A 10           // [.TCBA.TCBS..

        Field (TCBA, ByteAcc, NoLock, Preserve)
        {
            Offset (0x04), 
                ,   9, 
            CPSC,   1
        }


  BB17: 5B 81 0F 54 43 42 41 01 00 20 00 09 43 50 53 43  // [..TCBA.. ..CPSC
  BB27: 01                                               // .

        OperationRegion (PWMR, SystemMemory, PWRM, 0x0800)

  BB28: 5B 80 50 57 4D 52 00 50 57 52 4D 0B 00 08        // [.PWMR.PWRM...

        Field (PWMR, AnyAcc, NoLock, Preserve)
        {
            Offset (0xE0), 
            Offset (0xE2), 
            DWLE,   1, 
            HWLE,   1, 
            Offset (0x31C), 
                ,   13, 
            SLS0,   1, 
                ,   8, 
            XSQD,   1
        }


  BB36: 5B 81 27 50 57 4D 52 00 00 40 70 00 10 44 57 4C  // [.'PWMR..@p..DWL
  BB46: 45 01 48 57 4C 45 01 00 8E 1C 01 00 0D 53 4C 53  // E.HWLE.......SLS
  BB56: 30 01 00 08 58 53 51 44 01                       // 0...XSQD.

        OperationRegion (PMST, SystemMemory, PWRM, 0x80)

  BB5F: 5B 80 50 4D 53 54 00 50 57 52 4D 0A 80           // [.PMST.PWRM..

        Field (PMST, DWordAcc, NoLock, Preserve)
        {
            Offset (0x18), 
                ,   25, 
            USBP,   1, 
            Offset (0x1C), 
            Offset (0x1F), 
            PMFS,   1, 
            Offset (0x20), 
            MPMC,   32, 
                ,   20, 
            UWAB,   1
        }
    }


  BB6C: 5B 81 27 50 4D 53 54 03 00 40 0C 00 19 55 53 42  // [.'PMST..@...USB
  BB7C: 50 01 00 06 00 18 50 4D 46 53 01 00 07 4D 50 4D  // P.....PMFS...MPM
  BB8C: 43 20 00 14 55 57 41 42 01                       // C ..UWAB.

    Scope (_SB.PCI0)
    {

  BB95: 10 4D 0B 2E 5F 53 42 5F 50 43 49 30              // .M.._SB_PCI0

        Name (LTRZ, Zero)

  BBA1: 08 4C 54 52 5A 00                                // .LTRZ.

        Name (OBFZ, Zero)

  BBA7: 08 4F 42 46 5A 00                                // .OBFZ.

        Name (LMSL, Zero)

  BBAD: 08 4C 4D 53 4C 00                                // .LMSL.

        Name (LNSL, Zero)

  BBB3: 08 4C 4E 53 4C 00                                // .LNSL.

        Device (GLAN)
        {

  BBB9: 5B 82 48 09 47 4C 41 4E                          // [.H.GLAN

            Name (_ADR, 0x001F0006)  // _ADR: Address

  BBC1: 08 5F 41 44 52 0C 06 00 1F 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  BBCB: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                If (PCIC (Arg0))
                {

  BBD2: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  BBD9: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Return (
  BBE2: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  BBE3: 11 03 01 00                                      // ....

            OperationRegion (GLBA, PCI_Config, Zero, 0x0100)

  BBE7: 5B 80 47 4C 42 41 02 00 0B 00 01                 // [.GLBA.....

            Field (GLBA, AnyAcc, NoLock, Preserve)
            {
                DVID,   16
            }


  BBF2: 5B 81 0B 47 4C 42 41 00 44 56 49 44 10           // [..GLBA.DVID.

            Field (GLBA, ByteAcc, NoLock, Preserve)
            {
                Offset (0xCC), 
                Offset (0xCD), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


  BBFF: 5B 81 17 47 4C 42 41 01 00 40 66 00 08 50 4D 45  // [..GLBA..@f..PME
  BC0F: 45 01 00 06 50 4D 45 53 01                       // E...PMES.

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  BC18: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x04))
            }


  BC1F: A4 47 50 52 57 0A 6D 0A 04                       // .GPRW.m..

            Method (GPEH, 0, NotSerialized)
            {

  BC28: 14 2A 47 50 45 48 00                             // .*GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

  BC2F: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }


  BC39: A4 00                                            // ..

                If (LAnd (PMEE, PMES))
                {
                    Store (One, PMES)

  BC3B: A0 17 90 50 4D 45 45 50 4D 45 53 70 01 50 4D 45  // ...PMEEPMESp.PME
  BC4B: 53                                               // S

                    Notify (GLAN, 0x02)
                }
            }
        }
    }


  BC4C: 86 47 4C 41 4E 0A 02                             // .GLAN..

    Scope (_SB.PCI0)
    {

  BC53: 10 42 66 2E 5F 53 42 5F 50 43 49 30              // .Bf._SB_PCI0

        Device (XHC)
        {

  BC5F: 5B 82 45 65 58 48 43 5F                          // [.EeXHC_

            Name (_ADR, 0x00140000)  // _ADR: Address

  BC67: 08 5F 41 44 52 0C 00 00 14 00                    // ._ADR.....

            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)

  BC71: 5B 80 58 50 52 54 02 00 0B 00 01                 // [.XPRT.....

            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x10), 
                XADL,   32, 
                XADH,   32, 
                Offset (0x50), 
                    ,   2, 
                STGE,   1, 
                Offset (0xA2), 
                    ,   2, 
                D3HE,   1
            }


  BC7C: 5B 81 2C 58 50 52 54 00 44 56 49 44 10 00 40 07  // [.,XPRT.DVID..@.
  BC8C: 58 41 44 4C 20 58 41 44 48 20 00 40 1C 00 02 53  // XADL XADH .@...S
  BC9C: 54 47 45 01 00 4D 28 00 02 44 33 48 45 01        // TGE..M(..D3HE.

            Field (XPRT, ByteAcc, NoLock, Preserve)
            {
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


  BCAA: 5B 81 1C 58 50 52 54 01 00 40 3A 44 30 44 33 02  // [..XPRT..@:D0D3.
  BCBA: 00 06 50 4D 45 45 01 00 06 50 4D 45 53 01        // ..PMEE...PMES.

            Name (XFLT, Zero)

  BCC8: 08 58 46 4C 54 00                                // .XFLT.

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {
                ADBG ("_DSM")
                ShiftLeft (XADH, 0x20, Local0)
                Or (Local0, XADL, Local0)
                And (Local0, 0xFFFFFFFFFFFFFFF0, Local0)

  BCCE: 14 44 0F 5F 44 53 4D 0C 41 44 42 47 0D 5F 44 53  // .D._DSM.ADBG._DS
  BCDE: 4D 00 79 58 41 44 48 0A 20 60 7D 60 58 41 44 4C  // M.yXADH. `}`XADL
  BCEE: 60 7B 60 0E F0 FF FF FF FF FF FF FF 60           // `{`.........`

                OperationRegion (XMIO, SystemMemory, Local0, 0x9000)

  BCFB: 5B 80 58 4D 49 4F 00 60 0B 00 90                 // [.XMIO.`...

                Field (XMIO, AnyAcc, Lock, Preserve)
                {
                    Offset (0x550), 
                    PCCS,   1, 
                        ,   4, 
                    PPLS,   4, 
                    PTPP,   1, 
                    Offset (0x8420), 
                    PRTM,   2
                }


  BD06: 5B 81 24 58 4D 49 4F 10 00 80 A8 02 50 43 43 53  // [.$XMIO.....PCCS
  BD16: 01 00 04 50 50 4C 53 04 50 54 50 50 01 00 86 67  // ...PPLS.PTPP...g
  BD26: 3F 50 52 54 4D 02                                // ?PRTM.

                If (PCIC (Arg0))
                {

  BD2C: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  BD33: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
  BD3C: A0 41 08 93 68                                   // .A..h

ToUUID ("ac340cb7-e901-45bf-b7e6-2b34ec931e23")))
                {

  BD41: 11 13 0A 10 B7 0C 34 AC 01 E9 BF 45 B7 E6 2B 34  // ......4....E..+4
  BD51: EC 93 1E 23                                      // ...#

                    If (LEqual (Arg1, 0x03))
                    {

  BD55: A0 0B 93 69 0A 03                                // ...i..

                        Store (Arg1, XFLT)
                    }


  BD5B: 70 69 58 46 4C 54                                // piXFLT

                    If (LAnd (LGreater (PRTM, Zero), 
  BD61: A0 4C 05 90 94 50 52 54 4D 00                    // .L...PRTM.

LOr (LEqual (Arg1, 0x05), 
  BD6B: 91 93 69 0A 05                                   // ..i..

LEqual (Arg1, 0x06))))
                    {
                        ADBG ("SSIC")

  BD70: 93 69 0A 06 41 44 42 47 0D 53 53 49 43 00        // .i..ADBG.SSIC.

                        If (LOr (LOr (LEqual (PCCS, Zero), 
  BD7E: A0 37 91 91 93 50 43 43 53 00                    // .7...PCCS.

LEqual (PTPP, Zero)), 
  BD88: 93 50 54 50 50 00                                // .PTPP.

LAnd (
  BD8E: 90 92                                            // ..

LGreaterEqual (PPLS, 0x04), 
  BD90: 95 50 50 4C 53 0A 04                             // .PPLS..


  BD97: 92                                               // .

LLessEqual (PPLS, 0x0F))))
                        {

  BD98: 94 50 50 4C 53 0A 0F                             // .PPLS..

                            If (LEqual (PPLS, 0x08))
                            {

  BD9F: A0 0E 93 50 50 4C 53 0A 08                       // ...PPLS..

                                Store (One, D3HE)
                            }

  BDA8: 70 01 44 33 48 45                                // p.D3HE

                            Else
                            {

  BDAE: A1 07                                            // ..

                                Store (Zero, D3HE)
                            }
                        }

  BDB0: 70 00 44 33 48 45                                // p.D3HE

                        Else
                        {

  BDB6: A1 07                                            // ..

                            Store (One, D3HE)
                        }
                    }
                }


  BDB8: 70 01 44 33 48 45                                // p.D3HE

                Return (
  BDBE: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  BDBF: 11 03 01 00                                      // ....

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

  BDC3: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x03)
            }


  BDCA: A4 0A 03                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

  BDCD: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x03)
            }


  BDD4: A4 0A 03                                         // ...

            Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
            {

  BDD7: 14 09 5F 53 33 57 00                             // .._S3W.

                Return (0x03)
            }


  BDDE: A4 0A 03                                         // ...

            Method (_S4W, 0, NotSerialized)  // _S4W: S4 Device Wake State
            {

  BDE1: 14 09 5F 53 34 57 00                             // .._S4W.

                Return (0x03)
            }


  BDE8: A4 0A 03                                         // ...

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {

  BDEB: 14 15 5F 53 30 57 00                             // .._S0W.

                If (LEqual (XFLT, Zero))
                {

  BDF2: A0 09 93 58 46 4C 54 00                          // ...XFLT.

                    Return (Zero)
                }

  BDFA: A4 00                                            // ..

                Else
                {

  BDFC: A1 04                                            // ..

                    Return (0x03)
                }
            }


  BDFE: A4 0A 03                                         // ...

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

  BE01: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE)
            }


  BE08: 70 68 50 4D 45 45                                // phPMEE

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

  BE0E: 14 2C 5F 49 4E 49 00                             // .,_INI.

                If (CondRefOf (\_SB.PCI0.XHC.RHUB.INIR))
                {
                    ^RHUB.INIR ()
                }
            }


  BE15: A0 25 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // .%[.\/._SB_PCI0X
  BE25: 48 43 5F 52 48 55 42 49 4E 49 52 00 5E 2E 52 48  // HC_RHUBINIR.^.RH
  BE35: 55 42 49 4E 49 52                                // UBINIR

            Method (GPEH, 0, NotSerialized)
            {

  BE3B: 14 2D 47 50 45 48 00                             // .-GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

  BE42: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (PMES, Local0)
                Store (One, PMES)

  BE4C: A4 00 70 50 4D 45 53 60 70 01 50 4D 45 53        // ..pPMES`p.PMES

                If (LAnd (PMEE, Local0))
                {

  BE5A: A0 0E 90 50 4D 45 45 60                          // ...PMEE`

                    Notify (XHC, 0x02)
                }
            }


  BE62: 86 58 48 43 5F 0A 02                             // .XHC_..

            OperationRegion (XHCP, SystemMemory, Add (GPCB (), 0x000A0000), 0x0100)

  BE69: 5B 80 58 48 43 50 00 72 47 50 43 42 0C 00 00 0A  // [.XHCP.rGPCB....
  BE79: 00 00 0B 00 01                                   // .....

            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }


  BE7E: 5B 81 16 58 48 43 50 10 00 20 50 44 42 4D 10 00  // [..XHCP.. PDBM..
  BE8E: 40 05 4D 45 4D 42 40 04                          // @.MEMB@.

            Method (USRA, 0, Serialized)
            {

  BE96: 14 19 55 53 52 41 08                             // ..USRA.

                If (LEqual (PCHV (), SPTH))
                {

  BE9D: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x0F)
                }

  BEA8: A4 0A 0F                                         // ...

                Else
                {

  BEAB: A1 04                                            // ..

                    Return (0x0B)
                }
            }


  BEAD: A4 0A 0B                                         // ...

            Method (SSPA, 0, Serialized)
            {

  BEB0: 14 19 53 53 50 41 08                             // ..SSPA.

                If (LEqual (PCHV (), SPTH))
                {

  BEB7: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x11)
                }

  BEC2: A4 0A 11                                         // ...

                Else
                {

  BEC5: A1 04                                            // ..

                    Return (0x0D)
                }
            }


  BEC7: A4 0A 0D                                         // ...

            Name (XRST, Zero)

  BECA: 08 58 52 53 54 00                                // .XRST.

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {

  BED0: 14 40 0E 5F 50 53 30 08                          // .@._PS0.

                If (LEqual (DVID, 0xFFFF))
                {

  BED8: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM)
                Store (Zero, D3HE)
                Store (Zero, STGE)
                Store (Zero, D0D3)
                Store (XWMB, MEMB)
                Or (Local1, 0x02, PDBM)

  BEE2: A4 00 70 4D 45 4D 42 62 70 50 44 42 4D 61 7B 50  // ..pMEMBbpPDBMa{P
  BEF2: 44 42 4D 0E F9 FF FF FF FF FF FF FF 50 44 42 4D  // DBM.........PDBM
  BF02: 70 00 44 33 48 45 70 00 53 54 47 45 70 00 44 30  // p.D3HEp.STGEp.D0
  BF12: 44 33 70 58 57 4D 42 4D 45 4D 42 7D 61 0A 02 50  // D3pXWMBMEMB}a..P
  BF22: 44 42 4D                                         // DBM

                OperationRegion (MC11, SystemMemory, XWMB, 0x9000)

  BF25: 5B 80 4D 43 31 31 00 58 57 4D 42 0B 00 90        // [.MC11.XWMB...

                Field (MC11, DWordAcc, Lock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    UPSW,   2
                }

                Store (Zero, UPSW)
                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM)
                Store (Local2, MEMB)
                Store (Local1, PDBM)

  BF33: 5B 81 11 4D 43 31 31 13 00 80 E2 40 00 02 55 50  // [..MC11....@..UP
  BF43: 53 57 02 70 00 55 50 53 57 7B 50 44 42 4D 0E FD  // SW.p.UPSW{PDBM..
  BF53: FF FF FF FF FF FF FF 50 44 42 4D 70 62 4D 45 4D  // .......PDBMpbMEM
  BF63: 42 70 61 50 44 42 4D                             // BpaPDBM

                If (CondRefOf (\_SB.PCI0.XHC.PS0X))
                {
                    PS0X ()
                }


  BF6A: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  BF7A: 48 43 5F 50 53 30 58 00 50 53 30 58              // HC_PS0X.PS0X

                If (LAnd (UWAB, 
  BF86: A0 2A 90 55 57 41 42                             // .*.UWAB

LOr (LEqual (D0D3, Zero), 
  BF8D: 91 93 44 30 44 33 00                             // ..D0D3.

LEqual (^^XDCI.D0I3, Zero))))
                {
                    Store (One, MPMC)

  BF94: 93 5E 5E 2E 58 44 43 49 44 30 49 33 00 70 01 4D  // .^^.XDCID0I3.p.M
  BFA4: 50 4D 43                                         // PMC

                    While (PMFS)
                    {

  BFA7: A2 09 50 4D 46 53                                // ..PMFS

                        Sleep (0x0A)
                    }
                }
            }


  BFAD: 5B 22 0A 0A                                      // ["..

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {

  BFB1: 14 4B 0F 5F 50 53 33 08                          // .K._PS3.

                If (LEqual (DVID, 0xFFFF))
                {

  BFB9: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM)
                Store (Zero, D0D3)
                Store (XWMB, MEMB)
                Or (Local1, 0x02, PDBM)

  BFC3: A4 00 70 4D 45 4D 42 62 70 50 44 42 4D 61 7B 50  // ..pMEMBbpPDBMa{P
  BFD3: 44 42 4D 0E F9 FF FF FF FF FF FF FF 50 44 42 4D  // DBM.........PDBM
  BFE3: 70 00 44 30 44 33 70 58 57 4D 42 4D 45 4D 42 7D  // p.D0D3pXWMBMEMB}
  BFF3: 61 0A 02 50 44 42 4D                             // a..PDBM

                OperationRegion (MC11, SystemMemory, XWMB, 0x9000)

  BFFA: 5B 80 4D 43 31 31 00 58 57 4D 42 0B 00 90        // [.MC11.XWMB...

                Field (MC11, DWordAcc, Lock, Preserve)
                {
                    Offset (0x81C4), 
                        ,   2, 
                    UPSW,   2
                }

                Store (0x03, UPSW)
                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM)
                Store (One, STGE)
                Store (One, D3HE)
                Store (0x03, D0D3)
                Store (Local2, MEMB)
                Store (Local1, PDBM)

  C008: 5B 81 11 4D 43 31 31 13 00 80 E2 40 00 02 55 50  // [..MC11....@..UP
  C018: 53 57 02 70 0A 03 55 50 53 57 7B 50 44 42 4D 0E  // SW.p..UPSW{PDBM.
  C028: FD FF FF FF FF FF FF FF 50 44 42 4D 70 01 53 54  // ........PDBMp.ST
  C038: 47 45 70 01 44 33 48 45 70 0A 03 44 30 44 33 70  // GEp.D3HEp..D0D3p
  C048: 62 4D 45 4D 42 70 61 50 44 42 4D                 // bMEMBpaPDBM

                If (CondRefOf (\_SB.PCI0.XHC.PS3X))
                {
                    PS3X ()
                }


  C053: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  C063: 48 43 5F 50 53 33 58 00 50 53 33 58              // HC_PS3X.PS3X

                If (LAnd (UWAB, 
  C06F: A0 3D 90 55 57 41 42                             // .=.UWAB

LAnd (LEqual (D0D3, 0x03), 
  C076: 90 93 44 30 44 33 0A 03                          // ..D0D3..

LOr (LEqual (^^XDCI.D0I3, 0x03), 
  C07E: 91 93 5E 5E 2E 58 44 43 49 44 30 49 33 0A 03     // ..^^.XDCID0I3..

LEqual (^^XDCI.DVID, 0xFFFF)))))
                {
                    Store (0x03, MPMC)

  C08D: 93 5E 5E 2E 58 44 43 49 44 56 49 44 0B FF FF 70  // .^^.XDCIDVID...p
  C09D: 0A 03 4D 50 4D 43                                // ..MPMC

                    While (PMFS)
                    {

  C0A3: A2 09 50 4D 46 53                                // ..PMFS

                        Sleep (0x0A)
                    }
                }
            }


  C0A9: 5B 22 0A 0A                                      // ["..

            Method (CUID, 1, Serialized)
            {

  C0AD: 14 22 43 55 49 44 09                             // ."CUID.

                If (LEqual (Arg0, 
  C0B4: A0 19 93 68                                      // ...h

ToUUID ("7c9512a9-1705-4cb4-af7d-506a2423ab71")))
                {

  C0B8: 11 13 0A 10 A9 12 95 7C 05 17 B4 4C AF 7D 50 6A  // .......|...L.}Pj
  C0C8: 24 23 AB 71                                      // $#.q

                    Return (One)
                }


  C0CC: A4 01                                            // ..

                Return (Zero)
            }


  C0CE: A4 00                                            // ..

            Device (RHUB)
            {

  C0D0: 5B 82 44 1E 52 48 55 42                          // [.D.RHUB

                Name (_ADR, Zero)  // _ADR: Address

  C0D8: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

  C0DE: 14 32 5F 50 53 30 08                             // .2_PS0.

                    If (LEqual (DVID, 0xFFFF))
                    {

  C0E5: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


  C0EF: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS0X))
                    {
                        PS0X ()
                    }
                }


  C0F1: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  C101: 48 43 5F 52 48 55 42 50 53 30 58 00 50 53 30 58  // HC_RHUBPS0X.PS0X

                Method (_PS2, 0, Serialized)  // _PS2: Power State 2
                {

  C111: 14 32 5F 50 53 32 08                             // .2_PS2.

                    If (LEqual (DVID, 0xFFFF))
                    {

  C118: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


  C122: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS2X))
                    {
                        PS2X ()
                    }
                }


  C124: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  C134: 48 43 5F 52 48 55 42 50 53 32 58 00 50 53 32 58  // HC_RHUBPS2X.PS2X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

  C144: 14 32 5F 50 53 33 08                             // .2_PS3.

                    If (LEqual (DVID, 0xFFFF))
                    {

  C14B: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


  C155: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS3X))
                    {
                        PS3X ()
                    }
                }


  C157: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  C167: 48 43 5F 52 48 55 42 50 53 33 58 00 50 53 33 58  // HC_RHUBPS3X.PS3X

                Device (HS01)
                {

  C177: 5B 82 0B 48 53 30 31                             // [..HS01

                    Name (_ADR, One)  // _ADR: Address
                }


  C17E: 08 5F 41 44 52 01                                // ._ADR.

                Device (HS02)
                {

  C184: 5B 82 0C 48 53 30 32                             // [..HS02

                    Name (_ADR, 0x02)  // _ADR: Address
                }


  C18B: 08 5F 41 44 52 0A 02                             // ._ADR..

                Device (HS03)
                {

  C192: 5B 82 0C 48 53 30 33                             // [..HS03

                    Name (_ADR, 0x03)  // _ADR: Address
                }


  C199: 08 5F 41 44 52 0A 03                             // ._ADR..

                Device (HS04)
                {

  C1A0: 5B 82 0C 48 53 30 34                             // [..HS04

                    Name (_ADR, 0x04)  // _ADR: Address
                }


  C1A7: 08 5F 41 44 52 0A 04                             // ._ADR..

                Device (HS05)
                {

  C1AE: 5B 82 0C 48 53 30 35                             // [..HS05

                    Name (_ADR, 0x05)  // _ADR: Address
                }


  C1B5: 08 5F 41 44 52 0A 05                             // ._ADR..

                Device (HS06)
                {

  C1BC: 5B 82 0C 48 53 30 36                             // [..HS06

                    Name (_ADR, 0x06)  // _ADR: Address
                }


  C1C3: 08 5F 41 44 52 0A 06                             // ._ADR..

                Device (HS07)
                {

  C1CA: 5B 82 0C 48 53 30 37                             // [..HS07

                    Name (_ADR, 0x07)  // _ADR: Address
                }


  C1D1: 08 5F 41 44 52 0A 07                             // ._ADR..

                Device (HS08)
                {

  C1D8: 5B 82 0C 48 53 30 38                             // [..HS08

                    Name (_ADR, 0x08)  // _ADR: Address
                }


  C1DF: 08 5F 41 44 52 0A 08                             // ._ADR..

                Device (HS09)
                {

  C1E6: 5B 82 0C 48 53 30 39                             // [..HS09

                    Name (_ADR, 0x09)  // _ADR: Address
                }


  C1ED: 08 5F 41 44 52 0A 09                             // ._ADR..

                Device (HS10)
                {

  C1F4: 5B 82 0C 48 53 31 30                             // [..HS10

                    Name (_ADR, 0x0A)  // _ADR: Address
                }


  C1FB: 08 5F 41 44 52 0A 0A                             // ._ADR..

                Device (USR1)
                {

  C202: 5B 82 14 55 53 52 31                             // [..USR1

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C209: 14 0E 5F 41 44 52 00                             // .._ADR.

                        Return (
  C210: A4                                               // .

Add (USRA (), Zero))
                    }
                }


  C211: 72 55 53 52 41 00 00                             // rUSRA..

                Device (USR2)
                {

  C218: 5B 82 14 55 53 52 32                             // [..USR2

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C21F: 14 0E 5F 41 44 52 00                             // .._ADR.

                        Return (
  C226: A4                                               // .

Add (USRA (), One))
                    }
                }


  C227: 72 55 53 52 41 01 00                             // rUSRA..

                Device (SS01)
                {

  C22E: 5B 82 14 53 53 30 31                             // [..SS01

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C235: 14 0E 5F 41 44 52 00                             // .._ADR.

                        Return (
  C23C: A4                                               // .

Add (SSPA (), Zero))
                    }
                }


  C23D: 72 53 53 50 41 00 00                             // rSSPA..

                Device (SS02)
                {

  C244: 5B 82 14 53 53 30 32                             // [..SS02

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C24B: 14 0E 5F 41 44 52 00                             // .._ADR.

                        Return (
  C252: A4                                               // .

Add (SSPA (), One))
                    }
                }


  C253: 72 53 53 50 41 01 00                             // rSSPA..

                Device (SS03)
                {

  C25A: 5B 82 15 53 53 30 33                             // [..SS03

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C261: 14 0F 5F 41 44 52 00                             // .._ADR.

                        Return (
  C268: A4                                               // .

Add (SSPA (), 0x02))
                    }
                }


  C269: 72 53 53 50 41 0A 02 00                          // rSSPA...

                Device (SS04)
                {

  C271: 5B 82 15 53 53 30 34                             // [..SS04

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C278: 14 0F 5F 41 44 52 00                             // .._ADR.

                        Return (
  C27F: A4                                               // .

Add (SSPA (), 0x03))
                    }
                }


  C280: 72 53 53 50 41 0A 03 00                          // rSSPA...

                Device (SS05)
                {

  C288: 5B 82 15 53 53 30 35                             // [..SS05

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C28F: 14 0F 5F 41 44 52 00                             // .._ADR.

                        Return (
  C296: A4                                               // .

Add (SSPA (), 0x04))
                    }
                }


  C297: 72 53 53 50 41 0A 04 00                          // rSSPA...

                Device (SS06)
                {

  C29F: 5B 82 15 53 53 30 36                             // [..SS06

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

  C2A6: 14 0F 5F 41 44 52 00                             // .._ADR.

                        Return (
  C2AD: A4                                               // .

Add (SSPA (), 0x05))
                    }
                }
            }
        }
    }


  C2AE: 72 53 53 50 41 0A 05 00                          // rSSPA...

    If (LEqual (PCHV (), SPTH))
    {

  C2B6: A0 44 0B 93 50 43 48 56 53 50 54 48              // .D..PCHVSPTH

        Scope (_SB.PCI0.XHC.RHUB)
        {

  C2C2: 10 48 0A 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // .H./._SB_PCI0XHC
  C2D2: 5F 52 48 55 42                                   // _RHUB

            Device (HS11)
            {

  C2D7: 5B 82 0C 48 53 31 31                             // [..HS11

                Name (_ADR, 0x0B)  // _ADR: Address
            }


  C2DE: 08 5F 41 44 52 0A 0B                             // ._ADR..

            Device (HS12)
            {

  C2E5: 5B 82 0C 48 53 31 32                             // [..HS12

                Name (_ADR, 0x0C)  // _ADR: Address
            }


  C2EC: 08 5F 41 44 52 0A 0C                             // ._ADR..

            Device (HS13)
            {

  C2F3: 5B 82 0C 48 53 31 33                             // [..HS13

                Name (_ADR, 0x0D)  // _ADR: Address
            }


  C2FA: 08 5F 41 44 52 0A 0D                             // ._ADR..

            Device (HS14)
            {

  C301: 5B 82 0C 48 53 31 34                             // [..HS14

                Name (_ADR, 0x0E)  // _ADR: Address
            }


  C308: 08 5F 41 44 52 0A 0E                             // ._ADR..

            Device (SS07)
            {

  C30F: 5B 82 15 53 53 30 37                             // [..SS07

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

  C316: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
  C31D: A4                                               // .

Add (SSPA (), 0x06))
                }
            }


  C31E: 72 53 53 50 41 0A 06 00                          // rSSPA...

            Device (SS08)
            {

  C326: 5B 82 15 53 53 30 38                             // [..SS08

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

  C32D: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
  C334: A4                                               // .

Add (SSPA (), 0x07))
                }
            }


  C335: 72 53 53 50 41 0A 07 00                          // rSSPA...

            Device (SS09)
            {

  C33D: 5B 82 15 53 53 30 39                             // [..SS09

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

  C344: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
  C34B: A4                                               // .

Add (SSPA (), 0x08))
                }
            }


  C34C: 72 53 53 50 41 0A 08 00                          // rSSPA...

            Device (SS10)
            {

  C354: 5B 82 15 53 53 31 30                             // [..SS10

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

  C35B: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
  C362: A4                                               // .

Add (SSPA (), 0x09))
                }
            }
        }
    }


  C363: 72 53 53 50 41 0A 09 00                          // rSSPA...

    Scope (_SB.PCI0)
    {

  C36B: 10 48 3B 2E 5F 53 42 5F 50 43 49 30              // .H;._SB_PCI0

        Device (XDCI)
        {

  C377: 5B 82 4B 3A 58 44 43 49                          // [.K:XDCI

            Name (_ADR, 0x00140001)  // _ADR: Address

  C37F: 08 5F 41 44 52 0C 01 00 14 00                    // ._ADR.....

            OperationRegion (OTGD, PCI_Config, Zero, 0x0100)

  C389: 5B 80 4F 54 47 44 02 00 0B 00 01                 // [.OTGD.....

            Field (OTGD, DWordAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x10), 
                XDCB,   64
            }


  C394: 5B 81 14 4F 54 47 44 03 44 56 49 44 10 00 40 07  // [..OTGD.DVID..@.
  C3A4: 58 44 43 42 40 04                                // XDCB@.

            Field (OTGD, ByteAcc, NoLock, Preserve)
            {
                Offset (0x84), 
                D0I3,   2, 
                Offset (0x85), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


  C3AA: 5B 81 1C 4F 54 47 44 01 00 40 42 44 30 49 33 02  // [..OTGD..@BD0I3.
  C3BA: 00 06 50 4D 45 45 01 00 06 50 4D 45 53 01        // ..PMEE...PMES.

            Method (XDBA, 0, NotSerialized)
            {

  C3C8: 14 16 58 44 42 41 00                             // ..XDBA.

                Return (
  C3CF: A4                                               // .

And (XDCB, 0xFFFFFFFFFFFFFF00))
            }


  C3D0: 7B 58 44 43 42 0E 00 FF FF FF FF FF FF FF 00     // {XDCB..........

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  C3DF: 14 49 28 5F 44 53 4D 0C                          // .I(_DSM.


  C3E7: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

  C3ED: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  C3F4: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
  C3FD: A0 46 26 93 68                                   // .F&.h

ToUUID ("732b85d5-b7a7-4a1b-9ba0-4bbd00ffd511")))
                {

  C402: 11 13 0A 10 D5 85 2B 73 A7 B7 1B 4A 9B A0 4B BD  // ......+s...J..K.
  C412: 00 FF D5 11                                      // ....

                    If (LEqual (Arg1, One))
                    {

  C416: A0 4D 24 93 69 01                                // .M$.i.

                        Method (SPPS, 2, Serialized)
                        {

  C41C: 14 46 10 53 50 50 53 0A                          // .F.SPPS.

                            OperationRegion (XDBW, SystemMemory, XDBA (), 0x00110000)

  C424: 5B 80 58 44 42 57 00 58 44 42 41 0C 00 00 11 00  // [.XDBW.XDBA.....

                            Field (XDBW, WordAcc, NoLock, Preserve)
                            {
                                Offset (0x10F810), 
                                Offset (0x10F811), 
                                U2CP,   2, 
                                U3CP,   2, 
                                Offset (0x10F818), 
                                PUPS,   2, 
                                    ,   1, 
                                PURC,   1, 
                                Offset (0x10F81A), 
                                Offset (0x10F81C), 
                                    ,   3, 
                                UXPE,   2, 
                                Offset (0x10F81E)
                            }

                            Store (Arg0, Local1)
                            Store (Arg1, Local2)

  C434: 5B 81 32 58 44 42 57 02 00 C0 08 7C 08 00 08 55  // [.2XDBW....|...U
  C444: 32 43 50 02 55 33 43 50 02 00 34 50 55 50 53 02  // 2CP.U3CP..4PUPS.
  C454: 00 01 50 55 52 43 01 00 0C 00 10 00 03 55 58 50  // ..PURC.......UXP
  C464: 45 02 00 0B 70 68 61 70 69 62                    // E...phapib

                            If (LEqual (Local1, Zero))
                            {
                                Store (Zero, UXPE)
                                Store (Zero, Local0)

  C46E: A0 44 05 93 61 00 70 00 55 58 50 45 70 00 60     // .D..a.p.UXPEp.`

                                While (LLess (Local0, 0x0A))
                                {
                                    Stall (0x64)

  C47D: A2 0B 95 60 0A 0A 5B 21 0A 64                    // ...`..[!.d

                                    Increment (Local0)
                                }

                                Store (Zero, PUPS)
                                Store (Zero, Local0)

  C487: 75 60 70 00 50 55 50 53 70 00 60                 // u`p.PUPSp.`

                                While (LLess (Local0, 0x07D0))
                                {
                                    Stall (0x64)

  C492: A2 1C 95 60 0B D0 07 5B 21 0A 64                 // ...`...[!.d

                                    If (LAnd (LEqual (U2CP, Zero), 
  C49D: A0 0F 90 93 55 32 43 50 00                       // ....U2CP.

LEqual (U3CP, Zero)))
                                    {

  C4A6: 93 55 33 43 50 00                                // .U3CP.

                                        Break
                                    }


  C4AC: A5                                               // .

                                    Increment (Local0)
                                }


  C4AD: 75 60                                            // u`

                                If (
  C4AF: A0 08                                            // ..


  C4B1: 92                                               // .

LNotEqual (U2CP, Zero)){}

  C4B2: 93 55 32 43 50 00                                // .U2CP.

                                If (
  C4B8: A0 08                                            // ..


  C4BA: 92                                               // .

LNotEqual (U3CP, Zero)){}

  C4BB: 93 55 33 43 50 00                                // .U3CP.

                                Return (Zero)
                            }


  C4C1: A4 00                                            // ..

                            If (LEqual (Local1, 0x03))
                            {

  C4C3: A0 4D 05 93 61 0A 03                             // .M..a..

                                If (
  C4CA: A0 08                                            // ..


  C4CC: 92                                               // .

LNotEqual (U2CP, Zero)){}

  C4CD: 93 55 32 43 50 00                                // .U2CP.

                                If (
  C4D3: A0 08                                            // ..


  C4D5: 92                                               // .

LNotEqual (U3CP, Zero)){}
                                Store (0x03, PUPS)
                                Store (Zero, Local0)

  C4D6: 93 55 33 43 50 00 70 0A 03 50 55 50 53 70 00 60  // .U3CP.p..PUPSp.`

                                While (LLess (Local0, 0x07D0))
                                {
                                    Stall (0x64)

  C4E6: A2 1E 95 60 0B D0 07 5B 21 0A 64                 // ...`...[!.d

                                    If (LAnd (LEqual (U2CP, 0x03), 
  C4F1: A0 11 90 93 55 32 43 50 0A 03                    // ....U2CP..

LEqual (U3CP, 0x03)))
                                    {

  C4FB: 93 55 33 43 50 0A 03                             // .U3CP..

                                        Break
                                    }


  C502: A5                                               // .

                                    Increment (Local0)
                                }


  C503: 75 60                                            // u`

                                If (
  C505: A0 09                                            // ..


  C507: 92                                               // .

LNotEqual (U2CP, 0x03)){}

  C508: 93 55 32 43 50 0A 03                             // .U2CP..

                                If (
  C50F: A0 09                                            // ..


  C511: 92                                               // .

LNotEqual (U3CP, 0x03)){}
                                Store (Local2, UXPE)

  C512: 93 55 33 43 50 0A 03 70 62 55 58 50 45           // .U3CP..pbUXPE

                                Return (Zero)
                            }


  C51F: A4 00                                            // ..

                            Return (Zero)
                        }


  C521: A4 00                                            // ..

                        Switch (ToInteger (Arg2))
                        {

  C523: A2 40 14 01 70 99 6A 00 5F 54 5F 30              // .@..p.j._T_0

                            Case (Zero)
                            {

  C52F: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                Return (
  C537: A4                                               // .

Buffer (One)
                                {
                                     0xF3                                           
                                })
                            }

  C538: 11 03 01 F3                                      // ....

                            Case
  C53C: A1 46 12                                         // .F.

 (One)
                            {

  C53F: A0 09 93 5F 54 5F 30 01                          // ..._T_0.

                                Return (One)
                            }

  C547: A4 01                                            // ..

                            Case
  C549: A1 49 11                                         // .I.

 (0x04)
                            {
                                Store (DerefOf (
  C54C: A0 15 93 5F 54 5F 30 0A 04 70 83                 // ..._T_0..p.

Index (Arg3, Zero)), Local1)
                                SPPS (Local1, Zero)
                            }

  C557: 88 6B 00 00 61 53 50 50 53 61 00                 // .k..aSPPSa.

                            Case
  C562: A1 40 10                                         // .@.

 (0x05)
                            {

  C565: A0 4B 04 93 5F 54 5F 30 0A 05                    // .K.._T_0..

                                If (CondRefOf (\_SB.PCI0.LPCB.H_EC.XDAT))
                                {

  C56F: A0 3F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .?[.\/._SB_PCI0L
  C57F: 50 43 42 48 5F 45 43 58 44 41 54 00              // PCBH_ECXDAT.

                                    If (LEqual (^^LPCB.H_EC.XDAT (), One))
                                    {

  C58B: A0 1A 93 5E 5E 2F 03 4C 50 43 42 48 5F 45 43 58  // ...^^/.LPCBH_ECX
  C59B: 44 41 54 01                                      // DAT.

                                        Notify (XDCI, 0x80)
                                    }

  C59F: 86 58 44 43 49 0A 80                             // .XDCI..

                                    Else
                                    {

  C5A6: A1 08                                            // ..

                                        Notify (XDCI, 0x81)
                                    }
                                }


  C5A8: 86 58 44 43 49 0A 81                             // .XDCI..

                                Return (Zero)
                            }

  C5AF: A4 00                                            // ..

                            Case
  C5B1: A1 41 0B                                         // .A.

 (0x06)
                            {

  C5B4: A0 47 07 93 5F 54 5F 30 0A 06                    // .G.._T_0..

                                OperationRegion (XDBD, SystemMemory, XDBA (), 0x00110000)

  C5BE: 5B 80 58 44 42 44 00 58 44 42 41 0C 00 00 11 00  // [.XDBD.XDBA.....

                                Field (XDBD, DWordAcc, NoLock, Preserve)
                                {
                                    Offset (0xC704), 
                                        ,   30, 
                                    CSFR,   1, 
                                    Offset (0xC708)
                                }


  C5CE: 5B 81 13 58 44 42 44 03 00 80 82 63 00 1E 43 53  // [..XDBD....c..CS
  C5DE: 46 52 01 00 01                                   // FR...

                                OperationRegion (XDW2, SystemMemory, XDBA (), 0x00110000)

  C5E3: 5B 80 58 44 57 32 00 58 44 42 41 0C 00 00 11 00  // [.XDW2.XDBA.....

                                Field (XDW2, WordAcc, NoLock, Preserve)
                                {
                                    Offset (0x10F820), 
                                        ,   13, 
                                    OTHC,   1
                                }


  C5F3: 5B 81 12 58 44 57 32 02 00 C0 10 7C 08 00 0D 4F  // [..XDW2....|...O
  C603: 54 48 43 01                                      // THC.

                                If (LEqual (OTHC, Zero))
                                {
                                    Store (One, CSFR)
                                    Store (Zero, Local0)

  C607: A0 22 93 4F 54 48 43 00 70 01 43 53 46 52 70 00  // .".OTHC.p.CSFRp.
  C617: 60                                               // `

                                    While (LLess (Local0, 0x64))
                                    {

  C618: A2 11 95 60 0A 64                                // ...`.d

                                        If (LEqual (CSFR, Zero))
                                        {

  C61E: A0 08 93 43 53 46 52 00                          // ...CSFR.

                                            Break
                                        }


  C626: A5                                               // .

                                        Sleep (One)
                                    }
                                }


  C627: 5B 22 01                                         // [".

                                Return (Zero)
                            }

  C62A: A4 00                                            // ..

                            Case
  C62C: A1 36                                            // .6

 (0x07)
                            {

  C62E: A0 34 93 5F 54 5F 30 0A 07                       // .4._T_0..

                                OperationRegion (XD22, SystemMemory, XDBA (), 0x00110000)

  C637: 5B 80 58 44 32 32 00 58 44 42 41 0C 00 00 11 00  // [.XD22.XDBA.....

                                Field (XD22, WordAcc, NoLock, Preserve)
                                {
                                    Offset (0x10F818), 
                                    P2PS,   2, 
                                    Offset (0x10F81A)
                                }

                                Store (P2PS, Local0)

  C647: 5B 81 12 58 44 32 32 02 00 C0 0C 7C 08 50 32 50  // [..XD22....|.P2P
  C657: 53 02 00 0E 70 50 32 50 53 60                    // S...pP2PS`

                                Return (Local0)
                            }


  C661: A4 60                                            // .`

                        }
                    }
                }


  C663: A5                                               // .

                Return (
  C664: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  C665: 11 03 01 00                                      // ....

            Name (_DDN, "SPT XHCI controller")  // _DDN: DOS Device Name

  C669: 08 5F 44 44 4E 0D 53 50 54 20 58 48 43 49 20 63  // ._DDN.SPT XHCI c
  C679: 6F 6E 74 72 6F 6C 6C 65 72 00                    // ontroller.

            Name (_STR, 
  C683: 08 5F 53 54 52                                   // ._STR

Unicode ("SPT XHCI controller"))  // _STR: Description String

  C688: 11 2B 0A 28 53 00 50 00 54 00 20 00 58 00 48 00  // .+.(S.P.T. .X.H.
  C698: 43 00 49 00 20 00 63 00 6F 00 6E 00 74 00 72 00  // C.I. .c.o.n.t.r.
  C6A8: 6F 00 6C 00 6C 00 65 00 72 00 00 00              // o.l.l.e.r...

            Method (_S0W, 0, NotSerialized)  // _S0W: S0 Device Wake State
            {

  C6B4: 14 09 5F 53 30 57 00                             // .._S0W.

                Return (0x03)
            }


  C6BB: A4 0A 03                                         // ...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  C6BE: 14 1A 5F 53 54 41 00                             // .._STA.

                If (
  C6C5: A0 0F 92                                         // ...

LNotEqual (DVID, 0xFFFFFFFF))
                {

  C6C8: 93 44 56 49 44 0C FF FF FF FF                    // .DVID.....

                    Return (0x0F)
                }

  C6D2: A4 0A 0F                                         // ...

                Else
                {

  C6D5: A1 03                                            // ..

                    Return (Zero)
                }
            }


  C6D7: A4 00                                            // ..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  C6D9: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x04))
            }


  C6E0: A4 47 50 52 57 0A 6D 0A 04                       // .GPRW.m..

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

  C6E9: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE)
            }


  C6F0: 70 68 50 4D 45 45                                // phPMEE

            Method (GPEH, 0, NotSerialized)
            {

  C6F6: 14 2D 47 50 45 48 00                             // .-GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

  C6FD: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (PMES, Local0)
                Store (One, PMES)

  C707: A4 00 70 50 4D 45 53 60 70 01 50 4D 45 53        // ..pPMES`p.PMES

                If (LAnd (PMEE, Local0))
                {

  C715: A0 0E 90 50 4D 45 45 60                          // ...PMEE`

                    Notify (XDCI, 0x02)
                }
            }
        }
    }


  C71D: 86 58 44 43 49 0A 02                             // .XDCI..

    Scope (_SB.PCI0)
    {

  C724: 10 85 0E 02 2E 5F 53 42 5F 50 43 49 30           // ....._SB_PCI0

        Device (HDAS)
        {

  C731: 5B 82 42 2F 48 44 41 53                          // [.B/HDAS

            Name (_ADR, 0x001F0003)  // _ADR: Address

  C739: 08 5F 41 44 52 0C 03 00 1F 00                    // ._ADR.....

            OperationRegion (HDAR, PCI_Config, Zero, 0x0100)

  C743: 5B 80 48 44 41 52 02 00 0B 00 01                 // [.HDAR.....

            Field (HDAR, WordAcc, NoLock, Preserve)
            {
                VDID,   32
            }


  C74E: 5B 81 0B 48 44 41 52 02 56 44 49 44 20           // [..HDAR.VDID 

            Field (HDAR, ByteAcc, NoLock, Preserve)
            {
                Offset (0x54), 
                Offset (0x55), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


  C75B: 5B 81 17 48 44 41 52 01 00 40 2A 00 08 50 4D 45  // [..HDAR..@*..PME
  C76B: 45 01 00 06 50 4D 45 53 01                       // E...PMES.

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

  C774: 08 5F 53 30 57 0A 03                             // ._S0W..

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

  C77B: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE)
            }


  C782: 70 68 50 4D 45 45                                // phPMEE

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  C788: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x04))
            }


  C78F: A4 47 50 52 57 0A 6D 0A 04                       // .GPRW.m..

            Method (GPEH, 0, NotSerialized)
            {

  C798: 14 3B 47 50 45 48 00                             // .;GPEH.

                If (LEqual (VDID, 0xFFFFFFFF))
                {

  C79F: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                    Return (Zero)
                }


  C7AB: A4 00                                            // ..

                If (LAnd (PMEE, PMES))
                {
                    ADBG ("HDAS GPEH")
                    Store (One, PMES)

  C7AD: A0 26 90 50 4D 45 45 50 4D 45 53 41 44 42 47 0D  // .&.PMEEPMESADBG.
  C7BD: 48 44 41 53 20 47 50 45 48 00 70 01 50 4D 45 53  // HDAS GPEH.p.PMES

                    Notify (HDAS, 0x02)
                }
            }


  C7CD: 86 48 44 41 53 0A 02                             // .HDAS..

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {

  C7D4: 14 35 5F 50 53 30 08                             // .5_PS0.

                If (
  C7DB: A0 12 92                                         // ...

LNotEqual (VDID, 0xFFFFFFFF))
                {
                    VMMH (Zero, One)
                }


  C7DE: 93 56 44 49 44 0C FF FF FF FF 56 4D 4D 48 00 01  // .VDID.....VMMH..

                If (CondRefOf (\_SB.PCI0.HDAS.PS0X))
                {
                    PS0X ()
                }
            }


  C7EE: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 48  // ..[.\/._SB_PCI0H
  C7FE: 44 41 53 50 53 30 58 00 50 53 30 58              // DASPS0X.PS0X

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {

  C80A: 14 35 5F 50 53 33 08                             // .5_PS3.

                If (
  C811: A0 12 92                                         // ...

LNotEqual (VDID, 0xFFFFFFFF))
                {
                    VMMH (Zero, Zero)
                }


  C814: 93 56 44 49 44 0C FF FF FF FF 56 4D 4D 48 00 00  // .VDID.....VMMH..

                If (CondRefOf (\_SB.PCI0.HDAS.PS3X))
                {
                    PS3X ()
                }
            }


  C824: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 48  // ..[.\/._SB_PCI0H
  C834: 44 41 53 50 53 33 58 00 50 53 33 58              // DASPS3X.PS3X

            Name (NBUF, 
  C840: 08 4E 42 55 46                                   // .NBUF

ResourceTemplate ()
            {
                QWordMemory (ResourceConsumer, PosDecode, MinNotFixed, MaxNotFixed, NonCacheable, ReadOnly,
                    0x0000000000000001, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000000, // Length
                    ,, _Y1A, AddressRangeACPI, TypeStatic)
            })

  C845: 11 33 0A 30 8A 2B 00 00 01 10 01 00 00 00 00 00  // .3.0.+..........
  C855: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  C865: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  C875: 00 00 79 00                                      // ..y.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                ADBG ("HDAS _INI")

  C879: 14 4C 06 5F 49 4E 49 00 41 44 42 47 0D 48 44 41  // .L._INI.ADBG.HDA
  C889: 53 20 5F 49 4E 49 00                             // S _INI.

                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y1A._MIN, NBAS)  // _MIN: Minimum Base Address

  C890: 8F 4E 42 55 46 0A 0E 4E 42 41 53                 // .NBUF..NBAS

                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y1A._MAX, NMAS)  // _MAX: Maximum Base Address

  C89B: 8F 4E 42 55 46 0A 16 4E 4D 41 53                 // .NBUF..NMAS

                CreateQWordField (NBUF, \_SB.PCI0.HDAS._Y1A._LEN, NLEN)  // _LEN: Length
                Store (NHLA, NBAS)
                Add (NHLA, Subtract (NHLL, One), NMAS)
                Store (NHLL, NLEN)

  C8A6: 8F 4E 42 55 46 0A 26 4E 4C 45 4E 70 4E 48 4C 41  // .NBUF.&NLENpNHLA
  C8B6: 4E 42 41 53 72 4E 48 4C 41 74 4E 48 4C 4C 01 00  // NBASrNHLAtNHLL..
  C8C6: 4E 4D 41 53 70 4E 48 4C 4C 4E 4C 45 4E           // NMASpNHLLNLEN

                If (
  C8D3: A0 12 92                                         // ...

LNotEqual (VDID, 0xFFFFFFFF))
                {
                    VMMH (Zero, One)
                }
            }


  C8D6: 93 56 44 49 44 0C FF FF FF FF 56 4D 4D 48 00 01  // .VDID.....VMMH..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  C8E6: 14 4E 13 5F 44 53 4D 0C                          // .N._DSM.

                ADBG ("HDAS _DSM")

  C8EE: 08 5F 54 5F 30 00 41 44 42 47 0D 48 44 41 53 20  // ._T_0.ADBG.HDAS 
  C8FE: 5F 44 53 4D 00                                   // _DSM.

                If (PCIC (Arg0))
                {

  C903: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  C90A: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
  C913: A0 47 0D 93 68                                   // .G..h

ToUUID ("a69f886e-6ceb-4594-a41f-7b5dce24c553")))
                {

  C918: 11 13 0A 10 6E 88 9F A6 EB 6C 94 45 A4 1F 7B 5D  // ....n....l.E..{]
  C928: CE 24 C5 53                                      // .$.S

                    Switch (ToInteger (Arg2))
                    {

  C92C: A2 4E 0B 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                        Case (Zero)
                        {

  C938: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                            Return (
  C940: A4                                               // .

Buffer (One)
                            {
                                 0x0F                                           
                            })
                        }

  C941: 11 03 01 0F                                      // ....

                        Case
  C945: A1 44 0A                                         // .D.

 (One)
                        {
                            ADBG ("_DSM Fun 1 NHLT")

  C948: A0 21 93 5F 54 5F 30 01 41 44 42 47 0D 5F 44 53  // .!._T_0.ADBG._DS
  C958: 4D 20 46 75 6E 20 31 20 4E 48 4C 54 00           // M Fun 1 NHLT.

                            Return (NBUF)
                        }

  C965: A4 4E 42 55 46                                   // .NBUF

                        Case
  C96A: A1 4F 07                                         // .O.

 (0x02)
                        {
                            ADBG ("_DSM Fun 2 FMSK")

  C96D: A0 22 93 5F 54 5F 30 0A 02 41 44 42 47 0D 5F 44  // ."._T_0..ADBG._D
  C97D: 53 4D 20 46 75 6E 20 32 20 46 4D 53 4B 00        // SM Fun 2 FMSK.

                            Return (ADFM)
                        }

  C98B: A4 41 44 46 4D                                   // .ADFM

                        Case
  C990: A1 49 05                                         // .I.

 (0x03)
                        {
                            ADBG ("_DSM Fun 3 PPMS")

  C993: A0 3D 93 5F 54 5F 30 0A 03 41 44 42 47 0D 5F 44  // .=._T_0..ADBG._D
  C9A3: 53 4D 20 46 75 6E 20 33 20 50 50 4D 53 00        // SM Fun 3 PPMS.

                            If (CondRefOf (\_SB.PCI0.HDAS.PPMS))
                            {

  C9B1: A0 1D 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 48  // ..[.\/._SB_PCI0H
  C9C1: 44 41 53 50 50 4D 53 00                          // DASPPMS.

                                Return (PPMS (Arg3))
                            }


  C9C9: A4 50 50 4D 53 6B                                // .PPMSk

                            Return (Zero)
                        }

  C9CF: A4 00                                            // ..

                        Default
                        {
                            ADBG ("_DSM Fun NOK")

  C9D1: A1 18 41 44 42 47 0D 5F 44 53 4D 20 46 75 6E 20  // ..ADBG._DSM Fun 
  C9E1: 4E 4F 4B 00                                      // NOK.

                            Return (
  C9E5: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }


  C9E6: 11 03 01 00                                      // ....

                    }
                }


  C9EA: A5                                               // .

                If (CondRefOf (HIWC))
                {

  C9EB: A0 21 5B 12 48 49 57 43 00                       // .![.HIWC.

                    If (HIWC (Arg0))
                    {

  C9F4: A0 18 48 49 57 43 68                             // ..HIWCh

                        If (CondRefOf (HIDW))
                        {

  C9FB: A0 11 5B 12 48 49 44 57 00                       // ..[.HIDW.

                            Return (HIDW (Arg0, Arg1, Arg2, Arg3))
                        }
                    }
                }

                ADBG ("_DSM UUID NOK")

  CA04: A4 48 49 44 57 68 69 6A 6B 41 44 42 47 0D 5F 44  // .HIDWhijkADBG._D
  CA14: 53 4D 20 55 55 49 44 20 4E 4F 4B 00              // SM UUID NOK.

                Return (
  CA20: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


  CA21: 11 03 01 00                                      // ....

        Device (SAT0)
        {

  CA25: 5B 82 8D CF 01 53 41 54 30                       // [....SAT0

            Name (_ADR, 0x00170000)  // _ADR: Address

  CA2E: 08 5F 41 44 52 0C 00 00 17 00                    // ._ADR.....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  CA38: 14 3C 5F 44 53 4D 0C                             // .<_DSM.

                If (PCIC (Arg0))
                {

  CA3F: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


  CA46: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (CondRefOf (\_SB.PCI0.SAT0.SDSM))
                {

  CA4F: A0 20 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 53  // . [.\/._SB_PCI0S
  CA5F: 41 54 30 53 44 53 4D 00                          // AT0SDSM.

                    Return (SDSM (Arg0, Arg1, Arg2, Arg3))
                }


  CA67: A4 53 44 53 4D 68 69 6A 6B                       // .SDSMhijk

                Return (
  CA70: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  CA71: 11 03 01 00                                      // ....

            Device (PRT0)
            {

  CA75: 5B 82 0D 50 52 54 30                             // [..PRT0

                Name (_ADR, 0xFFFF)  // _ADR: Address
            }


  CA7C: 08 5F 41 44 52 0B FF FF                          // ._ADR...

            Device (PRT1)
            {

  CA84: 5B 82 0F 50 52 54 31                             // [..PRT1

                Name (_ADR, 0x0001FFFF)  // _ADR: Address
            }


  CA8B: 08 5F 41 44 52 0C FF FF 01 00                    // ._ADR.....

            Device (PRT2)
            {

  CA95: 5B 82 0F 50 52 54 32                             // [..PRT2

                Name (_ADR, 0x0002FFFF)  // _ADR: Address
            }


  CA9C: 08 5F 41 44 52 0C FF FF 02 00                    // ._ADR.....

            Device (PRT3)
            {

  CAA6: 5B 82 0F 50 52 54 33                             // [..PRT3

                Name (_ADR, 0x0003FFFF)  // _ADR: Address
            }


  CAAD: 08 5F 41 44 52 0C FF FF 03 00                    // ._ADR.....

            Device (PRT4)
            {

  CAB7: 5B 82 0F 50 52 54 34                             // [..PRT4

                Name (_ADR, 0x0004FFFF)  // _ADR: Address
            }


  CABE: 08 5F 41 44 52 0C FF FF 04 00                    // ._ADR.....

            Device (PRT5)
            {

  CAC8: 5B 82 0F 50 52 54 35                             // [..PRT5

                Name (_ADR, 0x0005FFFF)  // _ADR: Address
            }


  CACF: 08 5F 41 44 52 0C FF FF 05 00                    // ._ADR.....

            Device (VOL0)
            {

  CAD9: 5B 82 0F 56 4F 4C 30                             // [..VOL0

                Name (_ADR, 0x0080FFFF)  // _ADR: Address
            }


  CAE0: 08 5F 41 44 52 0C FF FF 80 00                    // ._ADR.....

            Device (VOL1)
            {

  CAEA: 5B 82 0F 56 4F 4C 31                             // [..VOL1

                Name (_ADR, 0x0081FFFF)  // _ADR: Address
            }


  CAF1: 08 5F 41 44 52 0C FF FF 81 00                    // ._ADR.....

            Device (VOL2)
            {

  CAFB: 5B 82 0F 56 4F 4C 32                             // [..VOL2

                Name (_ADR, 0x0082FFFF)  // _ADR: Address
            }


  CB02: 08 5F 41 44 52 0C FF FF 82 00                    // ._ADR.....

            Method (RDCA, 5, Serialized)
            {

  CB0C: 14 4D 0F 52 44 43 41 0D                          // .M.RDCA.


  CB14: 08 5F 54 5F 30 00                                // ._T_0.

                OperationRegion (RPAL, SystemMemory, Add (GPCB (), Add (0x000B8100, Arg1)), 0x04)

  CB1A: 5B 80 52 50 41 4C 00 72 47 50 43 42 72 0C 00 81  // [.RPAL.rGPCBr...
  CB2A: 0B 00 69 00 00 0A 04                             // ..i....

                Field (RPAL, DWordAcc, Lock, Preserve)
                {
                    RPCD,   32
                }


  CB31: 5B 81 0B 52 50 41 4C 13 52 50 43 44 20           // [..RPAL.RPCD 

                OperationRegion (EPAC, SystemMemory, Add (GPCB (), 0x000B8308), 0x08)

  CB3E: 5B 80 45 50 41 43 00 72 47 50 43 42 0C 08 83 0B  // [.EPAC.rGPCB....
  CB4E: 00 00 0A 08                                      // ....

                Field (EPAC, DWordAcc, Lock, Preserve)
                {
                    CAIR,   32, 
                    CADR,   32
                }


  CB52: 5B 81 10 45 50 41 43 13 43 41 49 52 20 43 41 44  // [..EPAC.CAIR CAD
  CB62: 52 20                                            // R 

                OperationRegion (NCRG, SystemMemory, Add (GPCB (), 0x000B8FC0), 0x04)

  CB64: 5B 80 4E 43 52 47 00 72 47 50 43 42 0C C0 8F 0B  // [.NCRG.rGPCB....
  CB74: 00 00 0A 04                                      // ....

                Field (NCRG, DWordAcc, Lock, Preserve)
                {
                    CRGC,   32
                }


  CB78: 5B 81 0B 4E 43 52 47 13 43 52 47 43 20           // [..NCRG.CRGC 

                If (LGreater (Arg0, 0x02))
                {

  CB85: A0 07 94 68 0A 02                                // ...h..

                    Return (Zero)
                }

  CB8B: A4 00                                            // ..

                Else
                {

  CB8D: A1 07                                            // ..

                    Store (Arg0, CRGC)
                }


  CB8F: 70 68 43 52 47 43                                // phCRGC

                Switch (ToInteger (Arg4))
                {

  CB95: A2 42 07 01 70 99 6C 00 5F 54 5F 30              // .B..p.l._T_0

                    Case (Zero)
                    {

  CBA1: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (RPCD)
                    }

  CBA9: A4 52 50 43 44                                   // .RPCD

                    Case
  CBAE: A1 48 05                                         // .H.

 (0x02)
                    {
                        Store (Arg1, CAIR)

  CBB1: A0 13 93 5F 54 5F 30 0A 02 70 69 43 41 49 52     // ..._T_0..piCAIR

                        Return (CADR)
                    }

  CBC0: A4 43 41 44 52                                   // .CADR

                    Case
  CBC5: A1 41 04                                         // .A.

 (One)
                    {
                        And (Arg2, RPCD, Local0)
                        Or (Arg3, Local0, Local0)

  CBC8: A0 18 93 5F 54 5F 30 01 7B 6A 52 50 43 44 60 7D  // ..._T_0.{jRPCD`}
  CBD8: 6B 60 60                                         // k``

                        Store (Local0, RPCD)
                    }

  CBDB: 70 60 52 50 43 44                                // p`RPCD

                    Case
  CBE1: A1 25                                            // .%

 (0x03)
                    {
                        Store (Arg1, CAIR)
                        And (Arg2, CADR, Local0)
                        Or (Arg3, Local0, Local0)

  CBE3: A0 1F 93 5F 54 5F 30 0A 03 70 69 43 41 49 52 7B  // ..._T_0..piCAIR{
  CBF3: 6A 43 41 44 52 60 7D 6B 60 60                    // jCADR`}k``

                        Store (Local0, CADR)
                    }

  CBFD: 70 60 43 41 44 52                                // p`CADR

                    Default
                    {

  CC03: A1 03                                            // ..

                        Return (Zero)
                    }


  CC05: A4 00                                            // ..

                }


  CC07: A5                                               // .

                Return (Zero)
            }


  CC08: A4 00                                            // ..

            Method (ARPC, 4, Serialized)
            {

  CC0A: 14 4F 22 41 52 50 43 0C                          // .O"ARPC.

                ADBG (
  CC12: 08 5F 54 5F 30 00 41 44 42 47                    // ._T_0.ADBG

Concatenate ("NRPN: ", ToHexString (Arg0)))

  CC1C: 73 0D 4E 52 50 4E 3A 20 00 98 68 00 00           // s.NRPN: ..h..

                Switch (ToInteger (Arg0))
                {

  CC29: A2 40 21 01 70 99 68 00 5F 54 5F 30              // .@!.p.h._T_0

                    Case (0x04)
                    {

  CC35: A0 48 07 93 5F 54 5F 30 0A 04                    // .H.._T_0..

                        If (CondRefOf (\_SB.PCI0.RP05.PWRG))
                        {

  CC3F: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CC4F: 50 30 35 50 57 52 47 00                          // P05PWRG.

                            CopyObject (^^RP05.PWRG, Arg1)
                        }


  CC57: 9D 5E 5E 2E 52 50 30 35 50 57 52 47 69           // .^^.RP05PWRGi

                        If (CondRefOf (\_SB.PCI0.RP05.RSTG))
                        {

  CC64: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CC74: 50 30 35 52 53 54 47 00                          // P05RSTG.

                            CopyObject (^^RP05.RSTG, Arg2)
                        }


  CC7C: 9D 5E 5E 2E 52 50 30 35 52 53 54 47 6A           // .^^.RP05RSTGj

                        If (CondRefOf (\_SB.PCI0.RP05.SCLK))
                        {

  CC89: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CC99: 50 30 35 53 43 4C 4B 00                          // P05SCLK.

                            CopyObject (^^RP05.SCLK, Arg3)
                        }
                    }

  CCA1: 9D 5E 5E 2E 52 50 30 35 53 43 4C 4B 6B           // .^^.RP05SCLKk

                    Case
  CCAE: A1 4A 18                                         // .J.

 (0x08)
                    {

  CCB1: A0 48 07 93 5F 54 5F 30 0A 08                    // .H.._T_0..

                        If (CondRefOf (\_SB.PCI0.RP09.PWRG))
                        {

  CCBB: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CCCB: 50 30 39 50 57 52 47 00                          // P09PWRG.

                            CopyObject (^^RP09.PWRG, Arg1)
                        }


  CCD3: 9D 5E 5E 2E 52 50 30 39 50 57 52 47 69           // .^^.RP09PWRGi

                        If (CondRefOf (\_SB.PCI0.RP09.RSTG))
                        {

  CCE0: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CCF0: 50 30 39 52 53 54 47 00                          // P09RSTG.

                            CopyObject (^^RP09.RSTG, Arg2)
                        }


  CCF8: 9D 5E 5E 2E 52 50 30 39 52 53 54 47 6A           // .^^.RP09RSTGj

                        If (CondRefOf (\_SB.PCI0.RP09.SCLK))
                        {

  CD05: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CD15: 50 30 39 53 43 4C 4B 00                          // P09SCLK.

                            CopyObject (^^RP09.SCLK, Arg3)
                        }
                    }

  CD1D: 9D 5E 5E 2E 52 50 30 39 53 43 4C 4B 6B           // .^^.RP09SCLKk

                    Case
  CD2A: A1 4E 10                                         // .N.

 (0x0C)
                    {

  CD2D: A0 48 07 93 5F 54 5F 30 0A 0C                    // .H.._T_0..

                        If (CondRefOf (\_SB.PCI0.RP13.PWRG))
                        {

  CD37: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CD47: 50 31 33 50 57 52 47 00                          // P13PWRG.

                            CopyObject (^^RP13.PWRG, Arg1)
                        }


  CD4F: 9D 5E 5E 2E 52 50 31 33 50 57 52 47 69           // .^^.RP13PWRGi

                        If (CondRefOf (\_SB.PCI0.RP13.RSTG))
                        {

  CD5C: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CD6C: 50 31 33 52 53 54 47 00                          // P13RSTG.

                            CopyObject (^^RP13.RSTG, Arg2)
                        }


  CD74: 9D 5E 5E 2E 52 50 31 33 52 53 54 47 6A           // .^^.RP13RSTGj

                        If (CondRefOf (\_SB.PCI0.RP13.SCLK))
                        {

  CD81: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CD91: 50 31 33 53 43 4C 4B 00                          // P13SCLK.

                            CopyObject (^^RP13.SCLK, Arg3)
                        }
                    }

  CD99: 9D 5E 5E 2E 52 50 31 33 53 43 4C 4B 6B           // .^^.RP13SCLKk

                    Case
  CDA6: A1 42 09                                         // .B.

 (0x10)
                    {

  CDA9: A0 48 07 93 5F 54 5F 30 0A 10                    // .H.._T_0..

                        If (CondRefOf (\_SB.PCI0.RP17.PWRG))
                        {

  CDB3: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CDC3: 50 31 37 50 57 52 47 00                          // P17PWRG.

                            CopyObject (^^RP17.PWRG, Arg1)
                        }


  CDCB: 9D 5E 5E 2E 52 50 31 37 50 57 52 47 69           // .^^.RP17PWRGi

                        If (CondRefOf (\_SB.PCI0.RP17.RSTG))
                        {

  CDD8: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CDE8: 50 31 37 52 53 54 47 00                          // P17RSTG.

                            CopyObject (^^RP17.RSTG, Arg2)
                        }


  CDF0: 9D 5E 5E 2E 52 50 31 37 52 53 54 47 6A           // .^^.RP17RSTGj

                        If (CondRefOf (\_SB.PCI0.RP17.SCLK))
                        {

  CDFD: A0 24 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .$[.\/._SB_PCI0R
  CE0D: 50 31 37 53 43 4C 4B 00                          // P17SCLK.

                            CopyObject (^^RP17.SCLK, Arg3)
                        }
                    }

  CE15: 9D 5E 5E 2E 52 50 31 37 53 43 4C 4B 6B           // .^^.RP17SCLKk

                    Default
                    {
                        ADBG (
  CE22: A1 16 41 44 42 47                                // ..ADBG

Concatenate ("ERR!NRPN: ", ToHexString (Arg0)))
                    }


  CE28: 73 0D 45 52 52 21 4E 52 50 4E 3A 20 00 98 68 00  // s.ERR!NRPN: ..h.
  CE38: 00                                               // .

                }
            }


  CE39: A5                                               // .

            Device (NVM1)
            {

  CE3A: 5B 82 40 7D 4E 56 4D 31                          // [.@}NVM1

                Name (_ADR, 0x00C1FFFF)  // _ADR: Address

  CE42: 08 5F 41 44 52 0C FF FF C1 00                    // ._ADR.....

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (NIT1, NITV)
                    Store (NPM1, NPMV)
                    Store (NPC1, NPCV)
                    Store (NL11, NL1V)
                    Store (ND21, ND2V)
                    Store (ND11, ND1V)
                    Store (NLR1, NLRV)
                    Store (NLD1, NLDV)
                    Store (NEA1, NEAV)
                    Store (NEB1, NEBV)
                    Store (NEC1, NECV)
                    Store (NRA1, NRAV)
                    Store (NMB1, NMBV)
                    Store (NMV1, NMVV)
                    Store (NPB1, NPBV)
                    Store (NPV1, NPVV)
                    Store (NRP1, NRPN)
                    Store (Zero, NCRN)
                    ARPC (NRPN, RefOf (PWRG), RefOf (RSTG), 
  CE4C: 14 4D 0B 5F 49 4E 49 00 70 4E 49 54 31 4E 49 54  // .M._INI.pNIT1NIT
  CE5C: 56 70 4E 50 4D 31 4E 50 4D 56 70 4E 50 43 31 4E  // VpNPM1NPMVpNPC1N
  CE6C: 50 43 56 70 4E 4C 31 31 4E 4C 31 56 70 4E 44 32  // PCVpNL11NL1VpND2
  CE7C: 31 4E 44 32 56 70 4E 44 31 31 4E 44 31 56 70 4E  // 1ND2VpND11ND1VpN
  CE8C: 4C 52 31 4E 4C 52 56 70 4E 4C 44 31 4E 4C 44 56  // LR1NLRVpNLD1NLDV
  CE9C: 70 4E 45 41 31 4E 45 41 56 70 4E 45 42 31 4E 45  // pNEA1NEAVpNEB1NE
  CEAC: 42 56 70 4E 45 43 31 4E 45 43 56 70 4E 52 41 31  // BVpNEC1NECVpNRA1
  CEBC: 4E 52 41 56 70 4E 4D 42 31 4E 4D 42 56 70 4E 4D  // NRAVpNMB1NMBVpNM
  CECC: 56 31 4E 4D 56 56 70 4E 50 42 31 4E 50 42 56 70  // V1NMVVpNPB1NPBVp
  CEDC: 4E 50 56 31 4E 50 56 56 70 4E 52 50 31 4E 52 50  // NPV1NPVVpNRP1NRP
  CEEC: 4E 70 00 4E 43 52 4E 41 52 50 43 4E 52 50 4E 71  // Np.NCRNARPCNRPNq
  CEFC: 50 57 52 47 71 52 53 54 47                       // PWRGqRSTG

RefOf (SCLK))
                }


  CF05: 71 53 43 4C 4B                                   // qSCLK

                Name (PRBI, Zero)

  CF0A: 08 50 52 42 49 00                                // .PRBI.

                Name (PRBD, Zero)

  CF10: 08 50 52 42 44 00                                // .PRBD.

                Name (PCMD, Zero)

  CF16: 08 50 43 4D 44 00                                // .PCMD.

                Name (RSTG, 
  CF1C: 08 52 53 54 47                                   // .RSTG

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  CF21: 12 06 04 00 00 00 00                             // .......

                Name (PWRG, 
  CF28: 08 50 57 52 47                                   // .PWRG

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  CF2D: 12 06 04 00 00 00 00                             // .......

                Name (SCLK, 
  CF34: 08 53 43 4C 4B                                   // .SCLK

Package (0x03)
                {
                    Zero, 
                    Zero, 
                    Zero
                })

  CF39: 12 05 03 00 00 00                                // ......

                Name (NCRN, Zero)

  CF3F: 08 4E 43 52 4E 00                                // .NCRN.

                Name (NITV, Zero)

  CF45: 08 4E 49 54 56 00                                // .NITV.

                Name (NPMV, Zero)

  CF4B: 08 4E 50 4D 56 00                                // .NPMV.

                Name (NPCV, Zero)

  CF51: 08 4E 50 43 56 00                                // .NPCV.

                Name (NL1V, Zero)

  CF57: 08 4E 4C 31 56 00                                // .NL1V.

                Name (ND2V, Zero)

  CF5D: 08 4E 44 32 56 00                                // .ND2V.

                Name (ND1V, Zero)

  CF63: 08 4E 44 31 56 00                                // .ND1V.

                Name (NLRV, Zero)

  CF69: 08 4E 4C 52 56 00                                // .NLRV.

                Name (NLDV, Zero)

  CF6F: 08 4E 4C 44 56 00                                // .NLDV.

                Name (NEAV, Zero)

  CF75: 08 4E 45 41 56 00                                // .NEAV.

                Name (NEBV, Zero)

  CF7B: 08 4E 45 42 56 00                                // .NEBV.

                Name (NECV, Zero)

  CF81: 08 4E 45 43 56 00                                // .NECV.

                Name (NRAV, Zero)

  CF87: 08 4E 52 41 56 00                                // .NRAV.

                Name (NMBV, Zero)

  CF8D: 08 4E 4D 42 56 00                                // .NMBV.

                Name (NMVV, Zero)

  CF93: 08 4E 4D 56 56 00                                // .NMVV.

                Name (NPBV, Zero)

  CF99: 08 4E 50 42 56 00                                // .NPBV.

                Name (NPVV, Zero)

  CF9F: 08 4E 50 56 56 00                                // .NPVV.

                Name (NRPN, Zero)

  CFA5: 08 4E 52 50 4E 00                                // .NRPN.

                Name (MXIE, Zero)

  CFAB: 08 4D 58 49 45 00                                // .MXIE.

                Name (ISD3, Zero)

  CFB1: 08 49 53 44 33 00                                // .ISD3.

                Method (RPON, 0, Serialized)
                {

  CFB7: 14 47 11 52 50 4F 4E 08                          // .G.RPON.

                    If (LEqual (ISD3, Zero))
                    {

  CFBF: A0 09 93 49 53 44 33 00                          // ...ISD3.

                        Return (Zero)
                    }

                    Store (Zero, ISD3)
                    ADBG (
  CFC7: A4 00 70 00 49 53 44 33 41 44 42 47              // ..p.ISD3ADBG

Concatenate ("RPONs: ", ToHexString (NRPN)))
                    PON (PWRG)

  CFD3: 73 0D 52 50 4F 4E 73 3A 20 00 98 4E 52 50 4E 00  // s.RPONs: ..NRPN.
  CFE3: 00 50 4F 4E 5F 50 57 52 47                       // .PON_PWRG

                    If (
  CFEC: A0 23 92                                         // .#.

LNotEqual (DerefOf (
  CFEF: 93 83                                            // ..

Index (SCLK, Zero)), Zero))
                    {
                        PCRA (0xDC, 0x100C, 
  CFF1: 88 53 43 4C 4B 00 00 00 50 43 52 41 0A DC 0B 0C  // .SCLK...PCRA....
  D001: 10                                               // .

Not (DerefOf (
  D002: 80 83                                            // ..

Index (SCLK, One))))

  D004: 88 53 43 4C 4B 01 00 00                          // .SCLK...

                        Sleep (0x10)
                    }

                    PON (RSTG)
                    RDCA (NCRN, 0x0420, 0xBFFFFFFF, Zero, One)
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x08, One)
                    Sleep (0x10)
                    Store (Zero, Local0)

  D00C: 5B 22 0A 10 50 4F 4E 5F 52 53 54 47 52 44 43 41  // ["..PON_RSTGRDCA
  D01C: 4E 43 52 4E 0B 20 04 0C FF FF FF BF 00 01 52 44  // NCRN. ........RD
  D02C: 43 41 4E 43 52 4E 0A E2 0C FF FF FF FF 0A 08 01  // CANCRN..........
  D03C: 5B 22 0A 10 70 00 60                             // ["..p.`

                    While (And (RDCA (NCRN, 0xE2, Zero, Zero, Zero), 0x08))
                    {

  D043: A2 1F 7B 52 44 43 41 4E 43 52 4E 0A E2 00 00 00  // ..{RDCANCRN.....
  D053: 0A 08 00                                         // ...

                        If (LGreater (Local0, 0x04))
                        {

  D056: A0 06 94 60 0A 04                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  D05C: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0420, 0xFFFFFFFF, 0x40000000, One)
                    Store (Zero, Local0)

  D061: 75 60 52 44 43 41 4E 43 52 4E 0B 20 04 0C FF FF  // u`RDCANCRN. ....
  D071: FF FF 0C 00 00 00 40 01 70 00 60                 // ......@.p.`

                    While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                    {

  D07C: A2 22 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // .".{RDCANCRN.R..
  D08C: 00 0B 00 20 00 00                                // ... ..

                        If (LGreater (Local0, 0x08))
                        {

  D092: A0 06 94 60 0A 08                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  D098: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFF7, Zero, One)
                    Sleep (0x07D0)
                    NVD0 ()
                    ADBG (
  D09D: 75 60 52 44 43 41 4E 43 52 4E 0B 24 03 0C F7 FF  // u`RDCANCRN.$....
  D0AD: FF FF 00 01 5B 22 0B D0 07 4E 56 44 30 41 44 42  // ....["...NVD0ADB
  D0BD: 47                                               // G

Concatenate ("RPONe: ", ToHexString (NRPN)))
                }


  D0BE: 73 0D 52 50 4F 4E 65 3A 20 00 98 4E 52 50 4E 00  // s.RPONe: ..NRPN.
  D0CE: 00                                               // .

                Method (RPOF, 0, Serialized)
                {

  D0CF: 14 42 0D 52 50 4F 46 08                          // .B.RPOF.

                    If (LEqual (NVD3 (), Zero))
                    {

  D0D7: A0 09 93 4E 56 44 33 00                          // ...NVD3.

                        Return (Zero)
                    }

                    ADBG (
  D0DF: A4 00 41 44 42 47                                // ..ADBG

Concatenate ("POFF NRPN: ", ToHexString (NRPN)))
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x04, One)
                    Sleep (0x10)
                    Store (Zero, Local0)

  D0E5: 73 0D 50 4F 46 46 20 4E 52 50 4E 3A 20 00 98 4E  // s.POFF NRPN: ..N
  D0F5: 52 50 4E 00 00 52 44 43 41 4E 43 52 4E 0A E2 0C  // RPN..RDCANCRN...
  D105: FF FF FF FF 0A 04 01 5B 22 0A 10 70 00 60        // .......["..p.`

                    While (And (RDCA (NCRN, 0xE2, Zero, Zero, Zero), 0x04))
                    {

  D113: A2 1F 7B 52 44 43 41 4E 43 52 4E 0A E2 00 00 00  // ..{RDCANCRN.....
  D123: 0A 04 00                                         // ...

                        If (LGreater (Local0, 0x04))
                        {

  D126: A0 06 94 60 0A 04                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  D12C: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFFF, 0x08, One)
                    POFF (RSTG)

  D131: 75 60 52 44 43 41 4E 43 52 4E 0B 24 03 0C FF FF  // u`RDCANCRN.$....
  D141: FF FF 0A 08 01 50 4F 46 46 52 53 54 47           // .....POFFRSTG

                    If (
  D14E: A0 21 92                                         // .!.

LNotEqual (DerefOf (
  D151: 93 83                                            // ..

Index (SCLK, Zero)), Zero))
                    {
                        PCRO (0xDC, 0x100C, 
  D153: 88 53 43 4C 4B 00 00 00 50 43 52 4F 0A DC 0B 0C  // .SCLK...PCRO....
  D163: 10                                               // .

DerefOf (
  D164: 83                                               // .

Index (SCLK, One)))

  D165: 88 53 43 4C 4B 01 00                             // .SCLK..

                        Sleep (0x10)
                    }

                    POFF (PWRG)
                    RDCA (NCRN, 0x50, 0xFFFFFFFF, 0x10, One)
                    RDCA (NCRN, 0x50, 0xFFFFFFEF, Zero, One)

  D16C: 5B 22 0A 10 50 4F 46 46 50 57 52 47 52 44 43 41  // ["..POFFPWRGRDCA
  D17C: 4E 43 52 4E 0A 50 0C FF FF FF FF 0A 10 01 52 44  // NCRN.P........RD
  D18C: 43 41 4E 43 52 4E 0A 50 0C EF FF FF FF 00 01     // CANCRN.P.......

                    Store (0x03, ISD3)
                }


  D19B: 70 0A 03 49 53 44 33                             // p..ISD3

                Method (NVD3, 0, Serialized)
                {

  D1A2: 14 4E 0D 4E 56 44 33 08                          // .N.NVD3.

                    If (LEqual (NITV, Zero))
                    {

  D1AA: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    Store (RDCA (NCRN, 0x04, Zero, Zero, 0x02), PCMD)

  D1B2: A4 00 70 52 44 43 41 4E 43 52 4E 0A 04 00 00 0A  // ..pRDCANCRN.....
  D1C2: 02 50 43 4D 44                                   // .PCMD

                    If (LEqual (NITV, One))
                    {
                        Store (0x24, PRBI)

  D1C7: A0 21 93 4E 49 54 56 01 70 0A 24 50 52 42 49     // .!.NITV.p.$PRBI

                        Store (RDCA (NCRN, 0x24, Zero, Zero, 0x02), PRBD)
                    }

  D1D6: 70 52 44 43 41 4E 43 52 4E 0A 24 00 00 0A 02 50  // pRDCANCRN.$....P
  D1E6: 52 42 44                                         // RBD

                    ElseIf
  D1E9: A1 4A 06                                         // .J.

 (LEqual (NITV, 0x02))
                    {
                        Store (0x10, PRBI)
                        Store (RDCA (NCRN, 0x10, Zero, Zero, 0x02), PRBD)

  D1EC: A0 47 06 93 4E 49 54 56 0A 02 70 0A 10 50 52 42  // .G..NITV..p..PRB
  D1FC: 49 70 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 02  // IpRDCANCRN......
  D20C: 50 52 42 44                                      // PRBD

                        OperationRegion (MCRC, SystemMemory, Add (GPCB (), 0x000B833C), 0x04)

  D210: 5B 80 4D 43 52 43 00 72 47 50 43 42 0C 3C 83 0B  // [.MCRC.rGPCB.<..
  D220: 00 00 0A 04                                      // ....

                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }


  D224: 5B 81 19 4D 43 52 43 00 53 43 53 4F 08 00 08 54  // [..MCRC.SCSO...T
  D234: 43 53 4F 08 00 07 52 45 5F 5F 01                 // CSO...RE__.

                        Store (RDCA (NCRN, TCSO, Zero, Zero, 0x02), MXIE)
                    }

                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, 0x03, 0x03)
                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, 0x03, One)

  D23F: 70 52 44 43 41 4E 43 52 4E 54 43 53 4F 00 00 0A  // pRDCANCRNTCSO...
  D24F: 02 4D 58 49 45 52 44 43 41 4E 43 52 4E 72 4E 50  // .MXIERDCANCRNrNP
  D25F: 4D 56 0A 04 00 0C FC FF FF FF 0A 03 0A 03 52 44  // MV............RD
  D26F: 43 41 4E 43 52 4E 0A A4 0C FC FF FF FF 0A 03 01  // CANCRN..........

                    Return (One)
                }


  D27F: A4 01                                            // ..

                Method (NVD0, 0, Serialized)
                {

  D281: 14 4B 0A 4E 56 44 30 08                          // .K.NVD0.

                    If (LEqual (NITV, Zero))
                    {

  D289: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, Zero, One)
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, Zero, 0x03)
                    CNRS ()

  D291: A4 00 52 44 43 41 4E 43 52 4E 0A A4 0C FC FF FF  // ..RDCANCRN......
  D2A1: FF 00 01 52 44 43 41 4E 43 52 4E 72 4E 50 4D 56  // ...RDCANCRNrNPMV
  D2B1: 0A 04 00 0C FC FF FF FF 00 0A 03 43 4E 52 53     // ...........CNRS

                    If (LEqual (NITV, 0x02))
                    {

  D2C0: A0 48 06 93 4E 49 54 56 0A 02                    // .H..NITV..

                        OperationRegion (MCRC, SystemMemory, Add (GPCB (), 0x000B833C), 0x04)

  D2CA: 5B 80 4D 43 52 43 00 72 47 50 43 42 0C 3C 83 0B  // [.MCRC.rGPCB.<..
  D2DA: 00 00 0A 04                                      // ....

                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        RDCA (NCRN, TCSO, 0xFFFFFFFF, And (MXIE, 0x80000000), 0x03)
                        ADBG ("NVD0:  MSIXe")
                    }

  D2DE: 5B 81 19 4D 43 52 43 00 53 43 53 4F 08 00 08 54  // [..MCRC.SCSO...T
  D2EE: 43 53 4F 08 00 07 52 45 5F 5F 01 52 44 43 41 4E  // CSO...RE__.RDCAN
  D2FE: 43 52 4E 54 43 53 4F 0C FF FF FF FF 7B 4D 58 49  // CRNTCSO.....{MXI
  D30E: 45 0C 00 00 00 80 00 0A 03 41 44 42 47 0D 4E 56  // E........ADBG.NV
  D31E: 44 30 3A 20 20 4D 53 49 58 65 00                 // D0:  MSIXe.

                    Else
                    {
                    }


  D329: A1 01                                            // ..

                    Return (One)
                }


  D32B: A4 01                                            // ..

                Method (CNRS, 0, Serialized)
                {
                    Store ("[ACPI RST] Restore Remapped Device and Hidden RP context |start", Debug)
                    ADBG (
  D32D: 14 4E 2D 43 4E 52 53 08 70 0D 5B 41 43 50 49 20  // .N-CNRS.p.[ACPI 
  D33D: 52 53 54 5D 20 52 65 73 74 6F 72 65 20 52 65 6D  // RST] Restore Rem
  D34D: 61 70 70 65 64 20 44 65 76 69 63 65 20 61 6E 64  // apped Device and
  D35D: 20 48 69 64 64 65 6E 20 52 50 20 63 6F 6E 74 65  //  Hidden RP conte
  D36D: 78 74 20 7C 73 74 61 72 74 00 5B 31 41 44 42 47  // xt |start.[1ADBG

Concatenate ("CNRSs ", ToDecimalString (Timer)))

  D37D: 73 0D 43 4E 52 53 73 20 00 97 5B 33 00 00        // s.CNRSs ..[3..

                    If (LEqual (NITV, Zero))
                    {

  D38B: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)

  D393: A4 00 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 03  // ..RDCANCRN......
  D3A3: 52 44 43 41 4E 43 52 4E 0A 14 00 00 0A 03 52 44  // RDCANCRN......RD
  D3B3: 43 41 4E 43 52 4E 0A 18 00 00 0A 03 52 44 43 41  // CANCRN......RDCA
  D3C3: 4E 43 52 4E 0A 1C 00 00 0A 03 52 44 43 41 4E 43  // NCRN......RDCANC
  D3D3: 52 4E 0A 20 00 00 0A 03 52 44 43 41 4E 43 52 4E  // RN. ....RDCANCRN
  D3E3: 0A 24 00 00 0A 03 52 44 43 41 4E 43 52 4E 50 52  // .$....RDCANCRNPR
  D3F3: 42 49 00 50 52 42 44 0A 03 52 44 43 41 4E 43 52  // BI.PRBD..RDCANCR
  D403: 4E 0A 04 0C F8 FF FF FF 50 43 4D 44 0A 03        // N.......PCMD..

                    If (
  D411: A0 4E 05 92                                      // .N..

LNotEqual (NL1V, Zero))
                    {
                        RDCA (NCRN, Add (NL1V, 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0x0F, And (ND1V, 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }


  D415: 93 4E 4C 31 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NL1V.RDCANCRNrN
  D425: 4C 31 56 0A 0C 00 0C 00 FF FF FF 4E 44 32 56 0A  // L1V........ND2V.
  D435: 03 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08  // .RDCANCRNrNL1V..
  D445: 00 0A 0F 7B 4E 44 31 56 0C F0 FF FF FF 00 0A 03  // ...{ND1V........
  D455: 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08 00  // RDCANCRNrNL1V...
  D465: 0C FF FF FF FF 4E 44 31 56 0A 03                 // .....ND1V..

                    If (
  D470: A0 23 92                                         // .#.

LNotEqual (NLRV, Zero))
                    {
                        RDCA (NCRN, Add (NLRV, 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFEBF, And (NEAV, 0xFFFC), 0x03)
                    RDCA (NCRN, Add (NPCV, 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, Add (NPCV, 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)

  D473: 93 4E 4C 52 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NLRV.RDCANCRNrN
  D483: 4C 52 56 0A 04 00 0C FF FF FF FF 4E 4C 44 56 0A  // LRV........NLDV.
  D493: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10  // .RDCANCRNrNPCV..
  D4A3: 00 0C BF FE FF FF 7B 4E 45 41 56 0B FC FF 00 0A  // ......{NEAV.....
  D4B3: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 28  // .RDCANCRNrNPCV.(
  D4C3: 00 0C FF FB FF FF 4E 45 43 56 0A 03 52 44 43 41  // ......NECV..RDCA
  D4D3: 4E 43 52 4E 72 4E 50 43 56 0A 08 00 0C 1F FF FF  // NCRNrNPCV.......
  D4E3: FF 4E 45 42 56 0A 03 52 44 43 41 4E 43 52 4E 0A  // .NEBV..RDCANCRN.
  D4F3: 68 0C FF FB FF FF 4E 52 41 56 01                 // h.....NRAV.

                    If (LEqual (And (NEAV, 0x40), 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)
                        ADBG (
  D4FE: A0 4B 04 93 7B 4E 45 41 56 0A 40 00 0A 40 52 44  // .K..{NEAV.@..@RD
  D50E: 43 41 4E 43 52 4E 0A 50 0C DF FF FF FF 0A 20 01  // CANCRN.P...... .
  D51E: 41 44 42 47                                      // ADBG

Concatenate ("CNRSw ", ToDecimalString (Timer)))

  D522: 73 0D 43 4E 52 53 77 20 00 97 5B 33 00 00        // s.CNRSw ..[3..

                        While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                        {

  D530: A2 19 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // ...{RDCANCRN.R..
  D540: 00 0B 00 20 00 00                                // ... ..

                            Stall (0x0A)
                        }
                    }

                    ADBG (
  D546: 5B 21 0A 0A 41 44 42 47                          // [!..ADBG

Concatenate ("CNRSx ", ToDecimalString (Timer)))
                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFFFC, And (NEAV, 0x03), 0x03)

  D54E: 73 0D 43 4E 52 53 78 20 00 97 5B 33 00 00 52 44  // s.CNRSx ..[3..RD
  D55E: 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10 00 0C FC  // CANCRNrNPCV.....
  D56E: FF FF FF 7B 4E 45 41 56 0A 03 00 0A 03           // ...{NEAV.....

                    If (
  D57B: A0 1B 92                                         // ...

LNotEqual (NMVV, Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }


  D57E: 93 4E 4D 56 56 00 52 44 43 41 4E 43 52 4E 4E 4D  // .NMVV.RDCANCRNNM
  D58E: 42 56 00 4E 4D 56 56 0A 03                       // BV.NMVV..

                    If (
  D597: A0 1B 92                                         // ...

LNotEqual (NPVV, Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }

                    ADBG (
  D59A: 93 4E 50 56 56 00 52 44 43 41 4E 43 52 4E 4E 50  // .NPVV.RDCANCRNNP
  D5AA: 42 56 00 4E 50 56 56 0A 03 41 44 42 47           // BV.NPVV..ADBG

Concatenate ("CNRSe ", ToDecimalString (Timer)))

  D5B7: 73 0D 43 4E 52 53 65 20 00 97 5B 33 00 00        // s.CNRSe ..[3..

                    Store ("[ACPI RST] Restore Remapped Device and Hidden RP context |complete", Debug)
                }
            }


  D5C5: 70 0D 5B 41 43 50 49 20 52 53 54 5D 20 52 65 73  // p.[ACPI RST] Res
  D5D5: 74 6F 72 65 20 52 65 6D 61 70 70 65 64 20 44 65  // tore Remapped De
  D5E5: 76 69 63 65 20 61 6E 64 20 48 69 64 64 65 6E 20  // vice and Hidden 
  D5F5: 52 50 20 63 6F 6E 74 65 78 74 20 7C 63 6F 6D 70  // RP context |comp
  D605: 6C 65 74 65 00 5B 31                             // lete.[1

            Device (NVM2)
            {

  D60C: 5B 82 40 7D 4E 56 4D 32                          // [.@}NVM2

                Name (_ADR, 0x00C2FFFF)  // _ADR: Address

  D614: 08 5F 41 44 52 0C FF FF C2 00                    // ._ADR.....

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (NIT2, NITV)
                    Store (NPM2, NPMV)
                    Store (NPC2, NPCV)
                    Store (NL12, NL1V)
                    Store (ND22, ND2V)
                    Store (ND12, ND1V)
                    Store (NLR2, NLRV)
                    Store (NLD2, NLDV)
                    Store (NEA2, NEAV)
                    Store (NEB2, NEBV)
                    Store (NEC2, NECV)
                    Store (NRA2, NRAV)
                    Store (NMB2, NMBV)
                    Store (NMV2, NMVV)
                    Store (NPB2, NPBV)
                    Store (NPV2, NPVV)
                    Store (NRP2, NRPN)
                    Store (One, NCRN)
                    ARPC (NRPN, RefOf (PWRG), RefOf (RSTG), 
  D61E: 14 4D 0B 5F 49 4E 49 00 70 4E 49 54 32 4E 49 54  // .M._INI.pNIT2NIT
  D62E: 56 70 4E 50 4D 32 4E 50 4D 56 70 4E 50 43 32 4E  // VpNPM2NPMVpNPC2N
  D63E: 50 43 56 70 4E 4C 31 32 4E 4C 31 56 70 4E 44 32  // PCVpNL12NL1VpND2
  D64E: 32 4E 44 32 56 70 4E 44 31 32 4E 44 31 56 70 4E  // 2ND2VpND12ND1VpN
  D65E: 4C 52 32 4E 4C 52 56 70 4E 4C 44 32 4E 4C 44 56  // LR2NLRVpNLD2NLDV
  D66E: 70 4E 45 41 32 4E 45 41 56 70 4E 45 42 32 4E 45  // pNEA2NEAVpNEB2NE
  D67E: 42 56 70 4E 45 43 32 4E 45 43 56 70 4E 52 41 32  // BVpNEC2NECVpNRA2
  D68E: 4E 52 41 56 70 4E 4D 42 32 4E 4D 42 56 70 4E 4D  // NRAVpNMB2NMBVpNM
  D69E: 56 32 4E 4D 56 56 70 4E 50 42 32 4E 50 42 56 70  // V2NMVVpNPB2NPBVp
  D6AE: 4E 50 56 32 4E 50 56 56 70 4E 52 50 32 4E 52 50  // NPV2NPVVpNRP2NRP
  D6BE: 4E 70 01 4E 43 52 4E 41 52 50 43 4E 52 50 4E 71  // Np.NCRNARPCNRPNq
  D6CE: 50 57 52 47 71 52 53 54 47                       // PWRGqRSTG

RefOf (SCLK))
                }


  D6D7: 71 53 43 4C 4B                                   // qSCLK

                Name (PRBI, Zero)

  D6DC: 08 50 52 42 49 00                                // .PRBI.

                Name (PRBD, Zero)

  D6E2: 08 50 52 42 44 00                                // .PRBD.

                Name (PCMD, Zero)

  D6E8: 08 50 43 4D 44 00                                // .PCMD.

                Name (RSTG, 
  D6EE: 08 52 53 54 47                                   // .RSTG

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  D6F3: 12 06 04 00 00 00 00                             // .......

                Name (PWRG, 
  D6FA: 08 50 57 52 47                                   // .PWRG

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  D6FF: 12 06 04 00 00 00 00                             // .......

                Name (SCLK, 
  D706: 08 53 43 4C 4B                                   // .SCLK

Package (0x03)
                {
                    Zero, 
                    Zero, 
                    Zero
                })

  D70B: 12 05 03 00 00 00                                // ......

                Name (NCRN, Zero)

  D711: 08 4E 43 52 4E 00                                // .NCRN.

                Name (NITV, Zero)

  D717: 08 4E 49 54 56 00                                // .NITV.

                Name (NPMV, Zero)

  D71D: 08 4E 50 4D 56 00                                // .NPMV.

                Name (NPCV, Zero)

  D723: 08 4E 50 43 56 00                                // .NPCV.

                Name (NL1V, Zero)

  D729: 08 4E 4C 31 56 00                                // .NL1V.

                Name (ND2V, Zero)

  D72F: 08 4E 44 32 56 00                                // .ND2V.

                Name (ND1V, Zero)

  D735: 08 4E 44 31 56 00                                // .ND1V.

                Name (NLRV, Zero)

  D73B: 08 4E 4C 52 56 00                                // .NLRV.

                Name (NLDV, Zero)

  D741: 08 4E 4C 44 56 00                                // .NLDV.

                Name (NEAV, Zero)

  D747: 08 4E 45 41 56 00                                // .NEAV.

                Name (NEBV, Zero)

  D74D: 08 4E 45 42 56 00                                // .NEBV.

                Name (NECV, Zero)

  D753: 08 4E 45 43 56 00                                // .NECV.

                Name (NRAV, Zero)

  D759: 08 4E 52 41 56 00                                // .NRAV.

                Name (NMBV, Zero)

  D75F: 08 4E 4D 42 56 00                                // .NMBV.

                Name (NMVV, Zero)

  D765: 08 4E 4D 56 56 00                                // .NMVV.

                Name (NPBV, Zero)

  D76B: 08 4E 50 42 56 00                                // .NPBV.

                Name (NPVV, Zero)

  D771: 08 4E 50 56 56 00                                // .NPVV.

                Name (NRPN, Zero)

  D777: 08 4E 52 50 4E 00                                // .NRPN.

                Name (MXIE, Zero)

  D77D: 08 4D 58 49 45 00                                // .MXIE.

                Name (ISD3, Zero)

  D783: 08 49 53 44 33 00                                // .ISD3.

                Method (RPON, 0, Serialized)
                {

  D789: 14 47 11 52 50 4F 4E 08                          // .G.RPON.

                    If (LEqual (ISD3, Zero))
                    {

  D791: A0 09 93 49 53 44 33 00                          // ...ISD3.

                        Return (Zero)
                    }

                    Store (Zero, ISD3)
                    ADBG (
  D799: A4 00 70 00 49 53 44 33 41 44 42 47              // ..p.ISD3ADBG

Concatenate ("RPONs: ", ToHexString (NRPN)))
                    PON (PWRG)

  D7A5: 73 0D 52 50 4F 4E 73 3A 20 00 98 4E 52 50 4E 00  // s.RPONs: ..NRPN.
  D7B5: 00 50 4F 4E 5F 50 57 52 47                       // .PON_PWRG

                    If (
  D7BE: A0 23 92                                         // .#.

LNotEqual (DerefOf (
  D7C1: 93 83                                            // ..

Index (SCLK, Zero)), Zero))
                    {
                        PCRA (0xDC, 0x100C, 
  D7C3: 88 53 43 4C 4B 00 00 00 50 43 52 41 0A DC 0B 0C  // .SCLK...PCRA....
  D7D3: 10                                               // .

Not (DerefOf (
  D7D4: 80 83                                            // ..

Index (SCLK, One))))

  D7D6: 88 53 43 4C 4B 01 00 00                          // .SCLK...

                        Sleep (0x10)
                    }

                    PON (RSTG)
                    RDCA (NCRN, 0x0420, 0xBFFFFFFF, Zero, One)
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x08, One)
                    Sleep (0x10)
                    Store (Zero, Local0)

  D7DE: 5B 22 0A 10 50 4F 4E 5F 52 53 54 47 52 44 43 41  // ["..PON_RSTGRDCA
  D7EE: 4E 43 52 4E 0B 20 04 0C FF FF FF BF 00 01 52 44  // NCRN. ........RD
  D7FE: 43 41 4E 43 52 4E 0A E2 0C FF FF FF FF 0A 08 01  // CANCRN..........
  D80E: 5B 22 0A 10 70 00 60                             // ["..p.`

                    While (And (RDCA (NCRN, 0xE2, Zero, Zero, Zero), 0x08))
                    {

  D815: A2 1F 7B 52 44 43 41 4E 43 52 4E 0A E2 00 00 00  // ..{RDCANCRN.....
  D825: 0A 08 00                                         // ...

                        If (LGreater (Local0, 0x04))
                        {

  D828: A0 06 94 60 0A 04                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  D82E: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0420, 0xFFFFFFFF, 0x40000000, One)
                    Store (Zero, Local0)

  D833: 75 60 52 44 43 41 4E 43 52 4E 0B 20 04 0C FF FF  // u`RDCANCRN. ....
  D843: FF FF 0C 00 00 00 40 01 70 00 60                 // ......@.p.`

                    While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                    {

  D84E: A2 22 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // .".{RDCANCRN.R..
  D85E: 00 0B 00 20 00 00                                // ... ..

                        If (LGreater (Local0, 0x08))
                        {

  D864: A0 06 94 60 0A 08                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  D86A: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFF7, Zero, One)
                    Sleep (0x07D0)
                    NVD0 ()
                    ADBG (
  D86F: 75 60 52 44 43 41 4E 43 52 4E 0B 24 03 0C F7 FF  // u`RDCANCRN.$....
  D87F: FF FF 00 01 5B 22 0B D0 07 4E 56 44 30 41 44 42  // ....["...NVD0ADB
  D88F: 47                                               // G

Concatenate ("RPONe: ", ToHexString (NRPN)))
                }


  D890: 73 0D 52 50 4F 4E 65 3A 20 00 98 4E 52 50 4E 00  // s.RPONe: ..NRPN.
  D8A0: 00                                               // .

                Method (RPOF, 0, Serialized)
                {

  D8A1: 14 42 0D 52 50 4F 46 08                          // .B.RPOF.

                    If (LEqual (NVD3 (), Zero))
                    {

  D8A9: A0 09 93 4E 56 44 33 00                          // ...NVD3.

                        Return (Zero)
                    }

                    ADBG (
  D8B1: A4 00 41 44 42 47                                // ..ADBG

Concatenate ("POFF NRPN: ", ToHexString (NRPN)))
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x04, One)
                    Sleep (0x10)
                    Store (Zero, Local0)

  D8B7: 73 0D 50 4F 46 46 20 4E 52 50 4E 3A 20 00 98 4E  // s.POFF NRPN: ..N
  D8C7: 52 50 4E 00 00 52 44 43 41 4E 43 52 4E 0A E2 0C  // RPN..RDCANCRN...
  D8D7: FF FF FF FF 0A 04 01 5B 22 0A 10 70 00 60        // .......["..p.`

                    While (And (RDCA (NCRN, 0xE2, Zero, Zero, Zero), 0x04))
                    {

  D8E5: A2 1F 7B 52 44 43 41 4E 43 52 4E 0A E2 00 00 00  // ..{RDCANCRN.....
  D8F5: 0A 04 00                                         // ...

                        If (LGreater (Local0, 0x04))
                        {

  D8F8: A0 06 94 60 0A 04                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  D8FE: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFFF, 0x08, One)
                    POFF (RSTG)

  D903: 75 60 52 44 43 41 4E 43 52 4E 0B 24 03 0C FF FF  // u`RDCANCRN.$....
  D913: FF FF 0A 08 01 50 4F 46 46 52 53 54 47           // .....POFFRSTG

                    If (
  D920: A0 21 92                                         // .!.

LNotEqual (DerefOf (
  D923: 93 83                                            // ..

Index (SCLK, Zero)), Zero))
                    {
                        PCRO (0xDC, 0x100C, 
  D925: 88 53 43 4C 4B 00 00 00 50 43 52 4F 0A DC 0B 0C  // .SCLK...PCRO....
  D935: 10                                               // .

DerefOf (
  D936: 83                                               // .

Index (SCLK, One)))

  D937: 88 53 43 4C 4B 01 00                             // .SCLK..

                        Sleep (0x10)
                    }

                    POFF (PWRG)
                    RDCA (NCRN, 0x50, 0xFFFFFFFF, 0x10, One)
                    RDCA (NCRN, 0x50, 0xFFFFFFEF, Zero, One)

  D93E: 5B 22 0A 10 50 4F 46 46 50 57 52 47 52 44 43 41  // ["..POFFPWRGRDCA
  D94E: 4E 43 52 4E 0A 50 0C FF FF FF FF 0A 10 01 52 44  // NCRN.P........RD
  D95E: 43 41 4E 43 52 4E 0A 50 0C EF FF FF FF 00 01     // CANCRN.P.......

                    Store (0x03, ISD3)
                }


  D96D: 70 0A 03 49 53 44 33                             // p..ISD3

                Method (NVD3, 0, Serialized)
                {

  D974: 14 4E 0D 4E 56 44 33 08                          // .N.NVD3.

                    If (LEqual (NITV, Zero))
                    {

  D97C: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    Store (RDCA (NCRN, 0x04, Zero, Zero, 0x02), PCMD)

  D984: A4 00 70 52 44 43 41 4E 43 52 4E 0A 04 00 00 0A  // ..pRDCANCRN.....
  D994: 02 50 43 4D 44                                   // .PCMD

                    If (LEqual (NITV, One))
                    {
                        Store (0x24, PRBI)

  D999: A0 21 93 4E 49 54 56 01 70 0A 24 50 52 42 49     // .!.NITV.p.$PRBI

                        Store (RDCA (NCRN, 0x24, Zero, Zero, 0x02), PRBD)
                    }

  D9A8: 70 52 44 43 41 4E 43 52 4E 0A 24 00 00 0A 02 50  // pRDCANCRN.$....P
  D9B8: 52 42 44                                         // RBD

                    ElseIf
  D9BB: A1 4A 06                                         // .J.

 (LEqual (NITV, 0x02))
                    {
                        Store (0x10, PRBI)
                        Store (RDCA (NCRN, 0x10, Zero, Zero, 0x02), PRBD)

  D9BE: A0 47 06 93 4E 49 54 56 0A 02 70 0A 10 50 52 42  // .G..NITV..p..PRB
  D9CE: 49 70 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 02  // IpRDCANCRN......
  D9DE: 50 52 42 44                                      // PRBD

                        OperationRegion (MCRC, SystemMemory, Add (GPCB (), 0x000B833C), 0x04)

  D9E2: 5B 80 4D 43 52 43 00 72 47 50 43 42 0C 3C 83 0B  // [.MCRC.rGPCB.<..
  D9F2: 00 00 0A 04                                      // ....

                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }


  D9F6: 5B 81 19 4D 43 52 43 00 53 43 53 4F 08 00 08 54  // [..MCRC.SCSO...T
  DA06: 43 53 4F 08 00 07 52 45 5F 5F 01                 // CSO...RE__.

                        Store (RDCA (NCRN, TCSO, Zero, Zero, 0x02), MXIE)
                    }

                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, 0x03, 0x03)
                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, 0x03, One)

  DA11: 70 52 44 43 41 4E 43 52 4E 54 43 53 4F 00 00 0A  // pRDCANCRNTCSO...
  DA21: 02 4D 58 49 45 52 44 43 41 4E 43 52 4E 72 4E 50  // .MXIERDCANCRNrNP
  DA31: 4D 56 0A 04 00 0C FC FF FF FF 0A 03 0A 03 52 44  // MV............RD
  DA41: 43 41 4E 43 52 4E 0A A4 0C FC FF FF FF 0A 03 01  // CANCRN..........

                    Return (One)
                }


  DA51: A4 01                                            // ..

                Method (NVD0, 0, Serialized)
                {

  DA53: 14 4B 0A 4E 56 44 30 08                          // .K.NVD0.

                    If (LEqual (NITV, Zero))
                    {

  DA5B: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, Zero, One)
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, Zero, 0x03)
                    CNRS ()

  DA63: A4 00 52 44 43 41 4E 43 52 4E 0A A4 0C FC FF FF  // ..RDCANCRN......
  DA73: FF 00 01 52 44 43 41 4E 43 52 4E 72 4E 50 4D 56  // ...RDCANCRNrNPMV
  DA83: 0A 04 00 0C FC FF FF FF 00 0A 03 43 4E 52 53     // ...........CNRS

                    If (LEqual (NITV, 0x02))
                    {

  DA92: A0 48 06 93 4E 49 54 56 0A 02                    // .H..NITV..

                        OperationRegion (MCRC, SystemMemory, Add (GPCB (), 0x000B833C), 0x04)

  DA9C: 5B 80 4D 43 52 43 00 72 47 50 43 42 0C 3C 83 0B  // [.MCRC.rGPCB.<..
  DAAC: 00 00 0A 04                                      // ....

                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        RDCA (NCRN, TCSO, 0xFFFFFFFF, And (MXIE, 0x80000000), 0x03)
                        ADBG ("NVD0:  MSIXe")
                    }

  DAB0: 5B 81 19 4D 43 52 43 00 53 43 53 4F 08 00 08 54  // [..MCRC.SCSO...T
  DAC0: 43 53 4F 08 00 07 52 45 5F 5F 01 52 44 43 41 4E  // CSO...RE__.RDCAN
  DAD0: 43 52 4E 54 43 53 4F 0C FF FF FF FF 7B 4D 58 49  // CRNTCSO.....{MXI
  DAE0: 45 0C 00 00 00 80 00 0A 03 41 44 42 47 0D 4E 56  // E........ADBG.NV
  DAF0: 44 30 3A 20 20 4D 53 49 58 65 00                 // D0:  MSIXe.

                    Else
                    {
                    }


  DAFB: A1 01                                            // ..

                    Return (One)
                }


  DAFD: A4 01                                            // ..

                Method (CNRS, 0, Serialized)
                {
                    Store ("[ACPI RST] Restore Remapped Device and Hidden RP context |start", Debug)
                    ADBG (
  DAFF: 14 4E 2D 43 4E 52 53 08 70 0D 5B 41 43 50 49 20  // .N-CNRS.p.[ACPI 
  DB0F: 52 53 54 5D 20 52 65 73 74 6F 72 65 20 52 65 6D  // RST] Restore Rem
  DB1F: 61 70 70 65 64 20 44 65 76 69 63 65 20 61 6E 64  // apped Device and
  DB2F: 20 48 69 64 64 65 6E 20 52 50 20 63 6F 6E 74 65  //  Hidden RP conte
  DB3F: 78 74 20 7C 73 74 61 72 74 00 5B 31 41 44 42 47  // xt |start.[1ADBG

Concatenate ("CNRSs ", ToDecimalString (Timer)))

  DB4F: 73 0D 43 4E 52 53 73 20 00 97 5B 33 00 00        // s.CNRSs ..[3..

                    If (LEqual (NITV, Zero))
                    {

  DB5D: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)

  DB65: A4 00 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 03  // ..RDCANCRN......
  DB75: 52 44 43 41 4E 43 52 4E 0A 14 00 00 0A 03 52 44  // RDCANCRN......RD
  DB85: 43 41 4E 43 52 4E 0A 18 00 00 0A 03 52 44 43 41  // CANCRN......RDCA
  DB95: 4E 43 52 4E 0A 1C 00 00 0A 03 52 44 43 41 4E 43  // NCRN......RDCANC
  DBA5: 52 4E 0A 20 00 00 0A 03 52 44 43 41 4E 43 52 4E  // RN. ....RDCANCRN
  DBB5: 0A 24 00 00 0A 03 52 44 43 41 4E 43 52 4E 50 52  // .$....RDCANCRNPR
  DBC5: 42 49 00 50 52 42 44 0A 03 52 44 43 41 4E 43 52  // BI.PRBD..RDCANCR
  DBD5: 4E 0A 04 0C F8 FF FF FF 50 43 4D 44 0A 03        // N.......PCMD..

                    If (
  DBE3: A0 4E 05 92                                      // .N..

LNotEqual (NL1V, Zero))
                    {
                        RDCA (NCRN, Add (NL1V, 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0x0F, And (ND1V, 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }


  DBE7: 93 4E 4C 31 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NL1V.RDCANCRNrN
  DBF7: 4C 31 56 0A 0C 00 0C 00 FF FF FF 4E 44 32 56 0A  // L1V........ND2V.
  DC07: 03 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08  // .RDCANCRNrNL1V..
  DC17: 00 0A 0F 7B 4E 44 31 56 0C F0 FF FF FF 00 0A 03  // ...{ND1V........
  DC27: 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08 00  // RDCANCRNrNL1V...
  DC37: 0C FF FF FF FF 4E 44 31 56 0A 03                 // .....ND1V..

                    If (
  DC42: A0 23 92                                         // .#.

LNotEqual (NLRV, Zero))
                    {
                        RDCA (NCRN, Add (NLRV, 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFEBF, And (NEAV, 0xFFFC), 0x03)
                    RDCA (NCRN, Add (NPCV, 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, Add (NPCV, 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)

  DC45: 93 4E 4C 52 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NLRV.RDCANCRNrN
  DC55: 4C 52 56 0A 04 00 0C FF FF FF FF 4E 4C 44 56 0A  // LRV........NLDV.
  DC65: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10  // .RDCANCRNrNPCV..
  DC75: 00 0C BF FE FF FF 7B 4E 45 41 56 0B FC FF 00 0A  // ......{NEAV.....
  DC85: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 28  // .RDCANCRNrNPCV.(
  DC95: 00 0C FF FB FF FF 4E 45 43 56 0A 03 52 44 43 41  // ......NECV..RDCA
  DCA5: 4E 43 52 4E 72 4E 50 43 56 0A 08 00 0C 1F FF FF  // NCRNrNPCV.......
  DCB5: FF 4E 45 42 56 0A 03 52 44 43 41 4E 43 52 4E 0A  // .NEBV..RDCANCRN.
  DCC5: 68 0C FF FB FF FF 4E 52 41 56 01                 // h.....NRAV.

                    If (LEqual (And (NEAV, 0x40), 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)
                        ADBG (
  DCD0: A0 4B 04 93 7B 4E 45 41 56 0A 40 00 0A 40 52 44  // .K..{NEAV.@..@RD
  DCE0: 43 41 4E 43 52 4E 0A 50 0C DF FF FF FF 0A 20 01  // CANCRN.P...... .
  DCF0: 41 44 42 47                                      // ADBG

Concatenate ("CNRSw ", ToDecimalString (Timer)))

  DCF4: 73 0D 43 4E 52 53 77 20 00 97 5B 33 00 00        // s.CNRSw ..[3..

                        While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                        {

  DD02: A2 19 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // ...{RDCANCRN.R..
  DD12: 00 0B 00 20 00 00                                // ... ..

                            Stall (0x0A)
                        }
                    }

                    ADBG (
  DD18: 5B 21 0A 0A 41 44 42 47                          // [!..ADBG

Concatenate ("CNRSx ", ToDecimalString (Timer)))
                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFFFC, And (NEAV, 0x03), 0x03)

  DD20: 73 0D 43 4E 52 53 78 20 00 97 5B 33 00 00 52 44  // s.CNRSx ..[3..RD
  DD30: 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10 00 0C FC  // CANCRNrNPCV.....
  DD40: FF FF FF 7B 4E 45 41 56 0A 03 00 0A 03           // ...{NEAV.....

                    If (
  DD4D: A0 1B 92                                         // ...

LNotEqual (NMVV, Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }


  DD50: 93 4E 4D 56 56 00 52 44 43 41 4E 43 52 4E 4E 4D  // .NMVV.RDCANCRNNM
  DD60: 42 56 00 4E 4D 56 56 0A 03                       // BV.NMVV..

                    If (
  DD69: A0 1B 92                                         // ...

LNotEqual (NPVV, Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }

                    ADBG (
  DD6C: 93 4E 50 56 56 00 52 44 43 41 4E 43 52 4E 4E 50  // .NPVV.RDCANCRNNP
  DD7C: 42 56 00 4E 50 56 56 0A 03 41 44 42 47           // BV.NPVV..ADBG

Concatenate ("CNRSe ", ToDecimalString (Timer)))

  DD89: 73 0D 43 4E 52 53 65 20 00 97 5B 33 00 00        // s.CNRSe ..[3..

                    Store ("[ACPI RST] Restore Remapped Device and Hidden RP context |complete", Debug)
                }
            }


  DD97: 70 0D 5B 41 43 50 49 20 52 53 54 5D 20 52 65 73  // p.[ACPI RST] Res
  DDA7: 74 6F 72 65 20 52 65 6D 61 70 70 65 64 20 44 65  // tore Remapped De
  DDB7: 76 69 63 65 20 61 6E 64 20 48 69 64 64 65 6E 20  // vice and Hidden 
  DDC7: 52 50 20 63 6F 6E 74 65 78 74 20 7C 63 6F 6D 70  // RP context |comp
  DDD7: 6C 65 74 65 00 5B 31                             // lete.[1

            Device (NVM3)
            {

  DDDE: 5B 82 41 7D 4E 56 4D 33                          // [.A}NVM3

                Name (_ADR, 0x00C3FFFF)  // _ADR: Address

  DDE6: 08 5F 41 44 52 0C FF FF C3 00                    // ._ADR.....

                Method (_INI, 0, NotSerialized)  // _INI: Initialize
                {
                    Store (NIT3, NITV)
                    Store (NPM3, NPMV)
                    Store (NPC3, NPCV)
                    Store (NL13, NL1V)
                    Store (ND23, ND2V)
                    Store (ND13, ND1V)
                    Store (NLR3, NLRV)
                    Store (NLD3, NLDV)
                    Store (NEA3, NEAV)
                    Store (NEB3, NEBV)
                    Store (NEC3, NECV)
                    Store (NRA3, NRAV)
                    Store (NMB3, NMBV)
                    Store (NMV3, NMVV)
                    Store (NPB3, NPBV)
                    Store (NPV3, NPVV)
                    Store (NRP3, NRPN)
                    Store (0x02, NCRN)
                    ARPC (NRPN, RefOf (PWRG), RefOf (RSTG), 
  DDF0: 14 4E 0B 5F 49 4E 49 00 70 4E 49 54 33 4E 49 54  // .N._INI.pNIT3NIT
  DE00: 56 70 4E 50 4D 33 4E 50 4D 56 70 4E 50 43 33 4E  // VpNPM3NPMVpNPC3N
  DE10: 50 43 56 70 4E 4C 31 33 4E 4C 31 56 70 4E 44 32  // PCVpNL13NL1VpND2
  DE20: 33 4E 44 32 56 70 4E 44 31 33 4E 44 31 56 70 4E  // 3ND2VpND13ND1VpN
  DE30: 4C 52 33 4E 4C 52 56 70 4E 4C 44 33 4E 4C 44 56  // LR3NLRVpNLD3NLDV
  DE40: 70 4E 45 41 33 4E 45 41 56 70 4E 45 42 33 4E 45  // pNEA3NEAVpNEB3NE
  DE50: 42 56 70 4E 45 43 33 4E 45 43 56 70 4E 52 41 33  // BVpNEC3NECVpNRA3
  DE60: 4E 52 41 56 70 4E 4D 42 33 4E 4D 42 56 70 4E 4D  // NRAVpNMB3NMBVpNM
  DE70: 56 33 4E 4D 56 56 70 4E 50 42 33 4E 50 42 56 70  // V3NMVVpNPB3NPBVp
  DE80: 4E 50 56 33 4E 50 56 56 70 4E 52 50 33 4E 52 50  // NPV3NPVVpNRP3NRP
  DE90: 4E 70 0A 02 4E 43 52 4E 41 52 50 43 4E 52 50 4E  // Np..NCRNARPCNRPN
  DEA0: 71 50 57 52 47 71 52 53 54 47                    // qPWRGqRSTG

RefOf (SCLK))
                }


  DEAA: 71 53 43 4C 4B                                   // qSCLK

                Name (PRBI, Zero)

  DEAF: 08 50 52 42 49 00                                // .PRBI.

                Name (PRBD, Zero)

  DEB5: 08 50 52 42 44 00                                // .PRBD.

                Name (PCMD, Zero)

  DEBB: 08 50 43 4D 44 00                                // .PCMD.

                Name (RSTG, 
  DEC1: 08 52 53 54 47                                   // .RSTG

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  DEC6: 12 06 04 00 00 00 00                             // .......

                Name (PWRG, 
  DECD: 08 50 57 52 47                                   // .PWRG

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  DED2: 12 06 04 00 00 00 00                             // .......

                Name (SCLK, 
  DED9: 08 53 43 4C 4B                                   // .SCLK

Package (0x03)
                {
                    Zero, 
                    Zero, 
                    Zero
                })

  DEDE: 12 05 03 00 00 00                                // ......

                Name (NCRN, Zero)

  DEE4: 08 4E 43 52 4E 00                                // .NCRN.

                Name (NITV, Zero)

  DEEA: 08 4E 49 54 56 00                                // .NITV.

                Name (NPMV, Zero)

  DEF0: 08 4E 50 4D 56 00                                // .NPMV.

                Name (NPCV, Zero)

  DEF6: 08 4E 50 43 56 00                                // .NPCV.

                Name (NL1V, Zero)

  DEFC: 08 4E 4C 31 56 00                                // .NL1V.

                Name (ND2V, Zero)

  DF02: 08 4E 44 32 56 00                                // .ND2V.

                Name (ND1V, Zero)

  DF08: 08 4E 44 31 56 00                                // .ND1V.

                Name (NLRV, Zero)

  DF0E: 08 4E 4C 52 56 00                                // .NLRV.

                Name (NLDV, Zero)

  DF14: 08 4E 4C 44 56 00                                // .NLDV.

                Name (NEAV, Zero)

  DF1A: 08 4E 45 41 56 00                                // .NEAV.

                Name (NEBV, Zero)

  DF20: 08 4E 45 42 56 00                                // .NEBV.

                Name (NECV, Zero)

  DF26: 08 4E 45 43 56 00                                // .NECV.

                Name (NRAV, Zero)

  DF2C: 08 4E 52 41 56 00                                // .NRAV.

                Name (NMBV, Zero)

  DF32: 08 4E 4D 42 56 00                                // .NMBV.

                Name (NMVV, Zero)

  DF38: 08 4E 4D 56 56 00                                // .NMVV.

                Name (NPBV, Zero)

  DF3E: 08 4E 50 42 56 00                                // .NPBV.

                Name (NPVV, Zero)

  DF44: 08 4E 50 56 56 00                                // .NPVV.

                Name (NRPN, Zero)

  DF4A: 08 4E 52 50 4E 00                                // .NRPN.

                Name (MXIE, Zero)

  DF50: 08 4D 58 49 45 00                                // .MXIE.

                Name (ISD3, Zero)

  DF56: 08 49 53 44 33 00                                // .ISD3.

                Method (RPON, 0, Serialized)
                {

  DF5C: 14 47 11 52 50 4F 4E 08                          // .G.RPON.

                    If (LEqual (ISD3, Zero))
                    {

  DF64: A0 09 93 49 53 44 33 00                          // ...ISD3.

                        Return (Zero)
                    }

                    Store (Zero, ISD3)
                    ADBG (
  DF6C: A4 00 70 00 49 53 44 33 41 44 42 47              // ..p.ISD3ADBG

Concatenate ("RPONs: ", ToHexString (NRPN)))
                    PON (PWRG)

  DF78: 73 0D 52 50 4F 4E 73 3A 20 00 98 4E 52 50 4E 00  // s.RPONs: ..NRPN.
  DF88: 00 50 4F 4E 5F 50 57 52 47                       // .PON_PWRG

                    If (
  DF91: A0 23 92                                         // .#.

LNotEqual (DerefOf (
  DF94: 93 83                                            // ..

Index (SCLK, Zero)), Zero))
                    {
                        PCRA (0xDC, 0x100C, 
  DF96: 88 53 43 4C 4B 00 00 00 50 43 52 41 0A DC 0B 0C  // .SCLK...PCRA....
  DFA6: 10                                               // .

Not (DerefOf (
  DFA7: 80 83                                            // ..

Index (SCLK, One))))

  DFA9: 88 53 43 4C 4B 01 00 00                          // .SCLK...

                        Sleep (0x10)
                    }

                    PON (RSTG)
                    RDCA (NCRN, 0x0420, 0xBFFFFFFF, Zero, One)
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x08, One)
                    Sleep (0x10)
                    Store (Zero, Local0)

  DFB1: 5B 22 0A 10 50 4F 4E 5F 52 53 54 47 52 44 43 41  // ["..PON_RSTGRDCA
  DFC1: 4E 43 52 4E 0B 20 04 0C FF FF FF BF 00 01 52 44  // NCRN. ........RD
  DFD1: 43 41 4E 43 52 4E 0A E2 0C FF FF FF FF 0A 08 01  // CANCRN..........
  DFE1: 5B 22 0A 10 70 00 60                             // ["..p.`

                    While (And (RDCA (NCRN, 0xE2, Zero, Zero, Zero), 0x08))
                    {

  DFE8: A2 1F 7B 52 44 43 41 4E 43 52 4E 0A E2 00 00 00  // ..{RDCANCRN.....
  DFF8: 0A 08 00                                         // ...

                        If (LGreater (Local0, 0x04))
                        {

  DFFB: A0 06 94 60 0A 04                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  E001: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0420, 0xFFFFFFFF, 0x40000000, One)
                    Store (Zero, Local0)

  E006: 75 60 52 44 43 41 4E 43 52 4E 0B 20 04 0C FF FF  // u`RDCANCRN. ....
  E016: FF FF 0C 00 00 00 40 01 70 00 60                 // ......@.p.`

                    While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                    {

  E021: A2 22 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // .".{RDCANCRN.R..
  E031: 00 0B 00 20 00 00                                // ... ..

                        If (LGreater (Local0, 0x08))
                        {

  E037: A0 06 94 60 0A 08                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  E03D: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFF7, Zero, One)
                    Sleep (0x07D0)
                    NVD0 ()
                    ADBG (
  E042: 75 60 52 44 43 41 4E 43 52 4E 0B 24 03 0C F7 FF  // u`RDCANCRN.$....
  E052: FF FF 00 01 5B 22 0B D0 07 4E 56 44 30 41 44 42  // ....["...NVD0ADB
  E062: 47                                               // G

Concatenate ("RPONe: ", ToHexString (NRPN)))
                }


  E063: 73 0D 52 50 4F 4E 65 3A 20 00 98 4E 52 50 4E 00  // s.RPONe: ..NRPN.
  E073: 00                                               // .

                Method (RPOF, 0, Serialized)
                {

  E074: 14 42 0D 52 50 4F 46 08                          // .B.RPOF.

                    If (LEqual (NVD3 (), Zero))
                    {

  E07C: A0 09 93 4E 56 44 33 00                          // ...NVD3.

                        Return (Zero)
                    }

                    ADBG (
  E084: A4 00 41 44 42 47                                // ..ADBG

Concatenate ("POFF NRPN: ", ToHexString (NRPN)))
                    RDCA (NCRN, 0xE2, 0xFFFFFFFF, 0x04, One)
                    Sleep (0x10)
                    Store (Zero, Local0)

  E08A: 73 0D 50 4F 46 46 20 4E 52 50 4E 3A 20 00 98 4E  // s.POFF NRPN: ..N
  E09A: 52 50 4E 00 00 52 44 43 41 4E 43 52 4E 0A E2 0C  // RPN..RDCANCRN...
  E0AA: FF FF FF FF 0A 04 01 5B 22 0A 10 70 00 60        // .......["..p.`

                    While (And (RDCA (NCRN, 0xE2, Zero, Zero, Zero), 0x04))
                    {

  E0B8: A2 1F 7B 52 44 43 41 4E 43 52 4E 0A E2 00 00 00  // ..{RDCANCRN.....
  E0C8: 0A 04 00                                         // ...

                        If (LGreater (Local0, 0x04))
                        {

  E0CB: A0 06 94 60 0A 04                                // ...`..

                            Break
                        }

                        Sleep (0x10)

  E0D1: A5 5B 22 0A 10                                   // .["..

                        Increment (Local0)
                    }

                    RDCA (NCRN, 0x0324, 0xFFFFFFFF, 0x08, One)
                    POFF (RSTG)

  E0D6: 75 60 52 44 43 41 4E 43 52 4E 0B 24 03 0C FF FF  // u`RDCANCRN.$....
  E0E6: FF FF 0A 08 01 50 4F 46 46 52 53 54 47           // .....POFFRSTG

                    If (
  E0F3: A0 21 92                                         // .!.

LNotEqual (DerefOf (
  E0F6: 93 83                                            // ..

Index (SCLK, Zero)), Zero))
                    {
                        PCRO (0xDC, 0x100C, 
  E0F8: 88 53 43 4C 4B 00 00 00 50 43 52 4F 0A DC 0B 0C  // .SCLK...PCRO....
  E108: 10                                               // .

DerefOf (
  E109: 83                                               // .

Index (SCLK, One)))

  E10A: 88 53 43 4C 4B 01 00                             // .SCLK..

                        Sleep (0x10)
                    }

                    POFF (PWRG)
                    RDCA (NCRN, 0x50, 0xFFFFFFFF, 0x10, One)
                    RDCA (NCRN, 0x50, 0xFFFFFFEF, Zero, One)

  E111: 5B 22 0A 10 50 4F 46 46 50 57 52 47 52 44 43 41  // ["..POFFPWRGRDCA
  E121: 4E 43 52 4E 0A 50 0C FF FF FF FF 0A 10 01 52 44  // NCRN.P........RD
  E131: 43 41 4E 43 52 4E 0A 50 0C EF FF FF FF 00 01     // CANCRN.P.......

                    Store (0x03, ISD3)
                }


  E140: 70 0A 03 49 53 44 33                             // p..ISD3

                Method (NVD3, 0, Serialized)
                {

  E147: 14 4E 0D 4E 56 44 33 08                          // .N.NVD3.

                    If (LEqual (NITV, Zero))
                    {

  E14F: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    Store (RDCA (NCRN, 0x04, Zero, Zero, 0x02), PCMD)

  E157: A4 00 70 52 44 43 41 4E 43 52 4E 0A 04 00 00 0A  // ..pRDCANCRN.....
  E167: 02 50 43 4D 44                                   // .PCMD

                    If (LEqual (NITV, One))
                    {
                        Store (0x24, PRBI)

  E16C: A0 21 93 4E 49 54 56 01 70 0A 24 50 52 42 49     // .!.NITV.p.$PRBI

                        Store (RDCA (NCRN, 0x24, Zero, Zero, 0x02), PRBD)
                    }

  E17B: 70 52 44 43 41 4E 43 52 4E 0A 24 00 00 0A 02 50  // pRDCANCRN.$....P
  E18B: 52 42 44                                         // RBD

                    ElseIf
  E18E: A1 4A 06                                         // .J.

 (LEqual (NITV, 0x02))
                    {
                        Store (0x10, PRBI)
                        Store (RDCA (NCRN, 0x10, Zero, Zero, 0x02), PRBD)

  E191: A0 47 06 93 4E 49 54 56 0A 02 70 0A 10 50 52 42  // .G..NITV..p..PRB
  E1A1: 49 70 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 02  // IpRDCANCRN......
  E1B1: 50 52 42 44                                      // PRBD

                        OperationRegion (MCRC, SystemMemory, Add (GPCB (), 0x000B833C), 0x04)

  E1B5: 5B 80 4D 43 52 43 00 72 47 50 43 42 0C 3C 83 0B  // [.MCRC.rGPCB.<..
  E1C5: 00 00 0A 04                                      // ....

                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }


  E1C9: 5B 81 19 4D 43 52 43 00 53 43 53 4F 08 00 08 54  // [..MCRC.SCSO...T
  E1D9: 43 53 4F 08 00 07 52 45 5F 5F 01                 // CSO...RE__.

                        Store (RDCA (NCRN, TCSO, Zero, Zero, 0x02), MXIE)
                    }

                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, 0x03, 0x03)
                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, 0x03, One)

  E1E4: 70 52 44 43 41 4E 43 52 4E 54 43 53 4F 00 00 0A  // pRDCANCRNTCSO...
  E1F4: 02 4D 58 49 45 52 44 43 41 4E 43 52 4E 72 4E 50  // .MXIERDCANCRNrNP
  E204: 4D 56 0A 04 00 0C FC FF FF FF 0A 03 0A 03 52 44  // MV............RD
  E214: 43 41 4E 43 52 4E 0A A4 0C FC FF FF FF 0A 03 01  // CANCRN..........

                    Return (One)
                }


  E224: A4 01                                            // ..

                Method (NVD0, 0, Serialized)
                {

  E226: 14 4B 0A 4E 56 44 30 08                          // .K.NVD0.

                    If (LEqual (NITV, Zero))
                    {

  E22E: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0xA4, 0xFFFFFFFC, Zero, One)
                    RDCA (NCRN, Add (NPMV, 0x04), 0xFFFFFFFC, Zero, 0x03)
                    CNRS ()

  E236: A4 00 52 44 43 41 4E 43 52 4E 0A A4 0C FC FF FF  // ..RDCANCRN......
  E246: FF 00 01 52 44 43 41 4E 43 52 4E 72 4E 50 4D 56  // ...RDCANCRNrNPMV
  E256: 0A 04 00 0C FC FF FF FF 00 0A 03 43 4E 52 53     // ...........CNRS

                    If (LEqual (NITV, 0x02))
                    {

  E265: A0 48 06 93 4E 49 54 56 0A 02                    // .H..NITV..

                        OperationRegion (MCRC, SystemMemory, Add (GPCB (), 0x000B833C), 0x04)

  E26F: 5B 80 4D 43 52 43 00 72 47 50 43 42 0C 3C 83 0B  // [.MCRC.rGPCB.<..
  E27F: 00 00 0A 04                                      // ....

                        Field (MCRC, AnyAcc, NoLock, Preserve)
                        {
                            SCSO,   8, 
                            Offset (0x02), 
                            TCSO,   8, 
                                ,   7, 
                            RE,     1
                        }

                        RDCA (NCRN, TCSO, 0xFFFFFFFF, And (MXIE, 0x80000000), 0x03)
                        ADBG ("NVD0:  MSIXe")
                    }

  E283: 5B 81 19 4D 43 52 43 00 53 43 53 4F 08 00 08 54  // [..MCRC.SCSO...T
  E293: 43 53 4F 08 00 07 52 45 5F 5F 01 52 44 43 41 4E  // CSO...RE__.RDCAN
  E2A3: 43 52 4E 54 43 53 4F 0C FF FF FF FF 7B 4D 58 49  // CRNTCSO.....{MXI
  E2B3: 45 0C 00 00 00 80 00 0A 03 41 44 42 47 0D 4E 56  // E........ADBG.NV
  E2C3: 44 30 3A 20 20 4D 53 49 58 65 00                 // D0:  MSIXe.

                    Else
                    {
                    }


  E2CE: A1 01                                            // ..

                    Return (One)
                }


  E2D0: A4 01                                            // ..

                Method (CNRS, 0, Serialized)
                {
                    Store ("[ACPI RST] Restore Remapped Device and Hidden RP context |start", Debug)
                    ADBG (
  E2D2: 14 4E 2D 43 4E 52 53 08 70 0D 5B 41 43 50 49 20  // .N-CNRS.p.[ACPI 
  E2E2: 52 53 54 5D 20 52 65 73 74 6F 72 65 20 52 65 6D  // RST] Restore Rem
  E2F2: 61 70 70 65 64 20 44 65 76 69 63 65 20 61 6E 64  // apped Device and
  E302: 20 48 69 64 64 65 6E 20 52 50 20 63 6F 6E 74 65  //  Hidden RP conte
  E312: 78 74 20 7C 73 74 61 72 74 00 5B 31 41 44 42 47  // xt |start.[1ADBG

Concatenate ("CNRSs ", ToDecimalString (Timer)))

  E322: 73 0D 43 4E 52 53 73 20 00 97 5B 33 00 00        // s.CNRSs ..[3..

                    If (LEqual (NITV, Zero))
                    {

  E330: A0 09 93 4E 49 54 56 00                          // ...NITV.

                        Return (Zero)
                    }

                    RDCA (NCRN, 0x10, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x14, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x18, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x1C, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x20, Zero, Zero, 0x03)
                    RDCA (NCRN, 0x24, Zero, Zero, 0x03)
                    RDCA (NCRN, PRBI, Zero, PRBD, 0x03)
                    RDCA (NCRN, 0x04, 0xFFFFFFF8, PCMD, 0x03)

  E338: A4 00 52 44 43 41 4E 43 52 4E 0A 10 00 00 0A 03  // ..RDCANCRN......
  E348: 52 44 43 41 4E 43 52 4E 0A 14 00 00 0A 03 52 44  // RDCANCRN......RD
  E358: 43 41 4E 43 52 4E 0A 18 00 00 0A 03 52 44 43 41  // CANCRN......RDCA
  E368: 4E 43 52 4E 0A 1C 00 00 0A 03 52 44 43 41 4E 43  // NCRN......RDCANC
  E378: 52 4E 0A 20 00 00 0A 03 52 44 43 41 4E 43 52 4E  // RN. ....RDCANCRN
  E388: 0A 24 00 00 0A 03 52 44 43 41 4E 43 52 4E 50 52  // .$....RDCANCRNPR
  E398: 42 49 00 50 52 42 44 0A 03 52 44 43 41 4E 43 52  // BI.PRBD..RDCANCR
  E3A8: 4E 0A 04 0C F8 FF FF FF 50 43 4D 44 0A 03        // N.......PCMD..

                    If (
  E3B6: A0 4E 05 92                                      // .N..

LNotEqual (NL1V, Zero))
                    {
                        RDCA (NCRN, Add (NL1V, 0x0C), 0xFFFFFF00, ND2V, 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0x0F, And (ND1V, 0xFFFFFFF0), 0x03)
                        RDCA (NCRN, Add (NL1V, 0x08), 0xFFFFFFFF, ND1V, 0x03)
                    }


  E3BA: 93 4E 4C 31 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NL1V.RDCANCRNrN
  E3CA: 4C 31 56 0A 0C 00 0C 00 FF FF FF 4E 44 32 56 0A  // L1V........ND2V.
  E3DA: 03 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08  // .RDCANCRNrNL1V..
  E3EA: 00 0A 0F 7B 4E 44 31 56 0C F0 FF FF FF 00 0A 03  // ...{ND1V........
  E3FA: 52 44 43 41 4E 43 52 4E 72 4E 4C 31 56 0A 08 00  // RDCANCRNrNL1V...
  E40A: 0C FF FF FF FF 4E 44 31 56 0A 03                 // .....ND1V..

                    If (
  E415: A0 23 92                                         // .#.

LNotEqual (NLRV, Zero))
                    {
                        RDCA (NCRN, Add (NLRV, 0x04), 0xFFFFFFFF, NLDV, 0x03)
                    }

                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFEBF, And (NEAV, 0xFFFC), 0x03)
                    RDCA (NCRN, Add (NPCV, 0x28), 0xFFFFFBFF, NECV, 0x03)
                    RDCA (NCRN, Add (NPCV, 0x08), 0xFFFFFF1F, NEBV, 0x03)
                    RDCA (NCRN, 0x68, 0xFFFFFBFF, NRAV, One)

  E418: 93 4E 4C 52 56 00 52 44 43 41 4E 43 52 4E 72 4E  // .NLRV.RDCANCRNrN
  E428: 4C 52 56 0A 04 00 0C FF FF FF FF 4E 4C 44 56 0A  // LRV........NLDV.
  E438: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10  // .RDCANCRNrNPCV..
  E448: 00 0C BF FE FF FF 7B 4E 45 41 56 0B FC FF 00 0A  // ......{NEAV.....
  E458: 03 52 44 43 41 4E 43 52 4E 72 4E 50 43 56 0A 28  // .RDCANCRNrNPCV.(
  E468: 00 0C FF FB FF FF 4E 45 43 56 0A 03 52 44 43 41  // ......NECV..RDCA
  E478: 4E 43 52 4E 72 4E 50 43 56 0A 08 00 0C 1F FF FF  // NCRNrNPCV.......
  E488: FF 4E 45 42 56 0A 03 52 44 43 41 4E 43 52 4E 0A  // .NEBV..RDCANCRN.
  E498: 68 0C FF FB FF FF 4E 52 41 56 01                 // h.....NRAV.

                    If (LEqual (And (NEAV, 0x40), 0x40))
                    {
                        RDCA (NCRN, 0x50, 0xFFFFFFDF, 0x20, One)
                        ADBG (
  E4A3: A0 4B 04 93 7B 4E 45 41 56 0A 40 00 0A 40 52 44  // .K..{NEAV.@..@RD
  E4B3: 43 41 4E 43 52 4E 0A 50 0C DF FF FF FF 0A 20 01  // CANCRN.P...... .
  E4C3: 41 44 42 47                                      // ADBG

Concatenate ("CNRSw ", ToDecimalString (Timer)))

  E4C7: 73 0D 43 4E 52 53 77 20 00 97 5B 33 00 00        // s.CNRSw ..[3..

                        While (LEqual (And (RDCA (NCRN, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                        {

  E4D5: A2 19 93 7B 52 44 43 41 4E 43 52 4E 0A 52 00 00  // ...{RDCANCRN.R..
  E4E5: 00 0B 00 20 00 00                                // ... ..

                            Stall (0x0A)
                        }
                    }

                    ADBG (
  E4EB: 5B 21 0A 0A 41 44 42 47                          // [!..ADBG

Concatenate ("CNRSx ", ToDecimalString (Timer)))
                    RDCA (NCRN, Add (NPCV, 0x10), 0xFFFFFFFC, And (NEAV, 0x03), 0x03)

  E4F3: 73 0D 43 4E 52 53 78 20 00 97 5B 33 00 00 52 44  // s.CNRSx ..[3..RD
  E503: 43 41 4E 43 52 4E 72 4E 50 43 56 0A 10 00 0C FC  // CANCRNrNPCV.....
  E513: FF FF FF 7B 4E 45 41 56 0A 03 00 0A 03           // ...{NEAV.....

                    If (
  E520: A0 1B 92                                         // ...

LNotEqual (NMVV, Zero))
                    {
                        RDCA (NCRN, NMBV, Zero, NMVV, 0x03)
                    }


  E523: 93 4E 4D 56 56 00 52 44 43 41 4E 43 52 4E 4E 4D  // .NMVV.RDCANCRNNM
  E533: 42 56 00 4E 4D 56 56 0A 03                       // BV.NMVV..

                    If (
  E53C: A0 1B 92                                         // ...

LNotEqual (NPVV, Zero))
                    {
                        RDCA (NCRN, NPBV, Zero, NPVV, 0x03)
                    }

                    ADBG (
  E53F: 93 4E 50 56 56 00 52 44 43 41 4E 43 52 4E 4E 50  // .NPVV.RDCANCRNNP
  E54F: 42 56 00 4E 50 56 56 0A 03 41 44 42 47           // BV.NPVV..ADBG

Concatenate ("CNRSe ", ToDecimalString (Timer)))

  E55C: 73 0D 43 4E 52 53 65 20 00 97 5B 33 00 00        // s.CNRSe ..[3..

                    Store ("[ACPI RST] Restore Remapped Device and Hidden RP context |complete", Debug)
                }
            }


  E56A: 70 0D 5B 41 43 50 49 20 52 53 54 5D 20 52 65 73  // p.[ACPI RST] Res
  E57A: 74 6F 72 65 20 52 65 6D 61 70 70 65 64 20 44 65  // tore Remapped De
  E58A: 76 69 63 65 20 61 6E 64 20 48 69 64 64 65 6E 20  // vice and Hidden 
  E59A: 52 50 20 63 6F 6E 74 65 78 74 20 7C 63 6F 6D 70  // RP context |comp
  E5AA: 6C 65 74 65 00 5B 31                             // lete.[1

            Method (PSTA, 1, Serialized)
            {

  E5B1: 14 41 06 50 53 54 41 09                          // .A.PSTA.

                If (LEqual (DerefOf (
  E5B9: A0 0A 93 83                                      // ....

Index (Arg0, Zero)), Zero))
                {

  E5BD: 88 68 00 00 00                                   // .h...

                    Return (One)
                }


  E5C2: A4 01                                            // ..

                If (LEqual (DerefOf (
  E5C4: A0 1F 93 83                                      // ....

Index (Arg0, Zero)), One))
                {

  E5C8: 88 68 00 00 01                                   // .h...

                    If (LEqual (GGOV (
  E5CD: A0 14 93 47 47 4F 56                             // ...GGOV

DerefOf (
  E5D4: 83                                               // .

Index (Arg0, 0x02))), 
  E5D5: 88 68 0A 02 00                                   // .h...

DerefOf (
  E5DA: 83                                               // .

Index (Arg0, 0x03))))
                    {

  E5DB: 88 68 0A 03 00                                   // .h...

                        Return (One)
                    }


  E5E0: A4 01                                            // ..

                    Return (Zero)
                }


  E5E2: A4 00                                            // ..

                If (LEqual (DerefOf (
  E5E4: A0 2C 93 83                                      // .,..

Index (Arg0, Zero)), 0x02))
                {

  E5E8: 88 68 00 00 0A 02                                // .h....

                    If (LEqual (^^GEXP.GEPS (DerefOf (
  E5EE: A0 20 93 5E 5E 2E 47 45 58 50 47 45 50 53 83     // . .^^.GEXPGEPS.

Index (Arg0, One)), 
  E5FD: 88 68 01 00                                      // .h..

DerefOf (
  E601: 83                                               // .

Index (Arg0, 0x02))), 
  E602: 88 68 0A 02 00                                   // .h...

DerefOf (
  E607: 83                                               // .

Index (Arg0, 0x03))))
                    {

  E608: 88 68 0A 03 00                                   // .h...

                        Return (One)
                    }


  E60D: A4 01                                            // ..

                    Return (Zero)
                }


  E60F: A4 00                                            // ..

                Return (Zero)
            }


  E611: A4 00                                            // ..

            Method (PON, 1, Serialized)
            {

  E613: 14 43 08 50 4F 4E 5F 09                          // .C.PON_.

                If (
  E61B: A0 4B 07 92                                      // .K..

LNotEqual (DerefOf (
  E61F: 93 83                                            // ..

Index (Arg0, Zero)), Zero))
                {

  E621: 88 68 00 00 00                                   // .h...

                    If (LEqual (DerefOf (
  E626: A0 31 93 83                                      // .1..

Index (Arg0, Zero)), One))
                    {
                        ADBG (
  E62A: 88 68 00 00 01 41 44 42 47                       // .h...ADBG

Concatenate ("PON GPIO=", ToHexString (DerefOf (
  E633: 73 0D 50 4F 4E 20 47 50 49 4F 3D 00 98 83        // s.PON GPIO=...

Index (Arg0, 0x02)))))
                        SGOV (DerefOf (
  E641: 88 68 0A 02 00 00 00 53 47 4F 56 83              // .h.....SGOV.

Index (Arg0, 0x02)), 
  E64D: 88 68 0A 02 00                                   // .h...

DerefOf (
  E652: 83                                               // .

Index (Arg0, 0x03)))
                    }


  E653: 88 68 0A 03 00                                   // .h...

                    If (LEqual (DerefOf (
  E658: A0 3E 93 83                                      // .>..

Index (Arg0, Zero)), 0x02))
                    {
                        ADBG (
  E65C: 88 68 00 00 0A 02 41 44 42 47                    // .h....ADBG

Concatenate ("PON IOEX=", ToHexString (DerefOf (
  E666: 73 0D 50 4F 4E 20 49 4F 45 58 3D 00 98 83        // s.PON IOEX=...

Index (Arg0, 0x02)))))
                        ^^GEXP.SGEP (DerefOf (
  E674: 88 68 0A 02 00 00 00 5E 5E 2E 47 45 58 50 53 47  // .h.....^^.GEXPSG
  E684: 45 50 83                                         // EP.

Index (Arg0, One)), DerefOf (
  E687: 88 68 01 00 83                                   // .h...

Index (Arg0, 0x02)), 
  E68C: 88 68 0A 02 00                                   // .h...

DerefOf (
  E691: 83                                               // .

Index (Arg0, 0x03)))
                    }
                }
            }


  E692: 88 68 0A 03 00                                   // .h...

            Method (POFF, 1, Serialized)
            {

  E697: 14 4C 08 50 4F 46 46 09                          // .L.POFF.

                If (
  E69F: A0 44 08 92                                      // .D..

LNotEqual (DerefOf (
  E6A3: 93 83                                            // ..

Index (Arg0, Zero)), Zero))
                {

  E6A5: 88 68 00 00 00                                   // .h...

                    If (LEqual (DerefOf (
  E6AA: A0 35 93 83                                      // .5..

Index (Arg0, Zero)), One))
                    {
                        ADBG (
  E6AE: 88 68 00 00 01 41 44 42 47                       // .h...ADBG

Concatenate ("POFF GPIO=", ToHexString (DerefOf (
  E6B7: 73 0D 50 4F 46 46 20 47 50 49 4F 3D 00 98 83     // s.POFF GPIO=...

Index (Arg0, 0x02)))))
                        SGOV (DerefOf (
  E6C6: 88 68 0A 02 00 00 00 53 47 4F 56 83              // .h.....SGOV.

Index (Arg0, 0x02)), 
  E6D2: 88 68 0A 02 00                                   // .h...

XOr (DerefOf (
  E6D7: 7F 83                                            // ..

Index (Arg0, 0x03)), One))
                    }


  E6D9: 88 68 0A 03 00 01 00                             // .h.....

                    If (LEqual (DerefOf (
  E6E0: A0 43 04 93 83                                   // .C...

Index (Arg0, Zero)), 0x02))
                    {
                        ADBG (
  E6E5: 88 68 00 00 0A 02 41 44 42 47                    // .h....ADBG

Concatenate ("POFF IOEX=", ToHexString (DerefOf (
  E6EF: 73 0D 50 4F 46 46 20 49 4F 45 58 3D 00 98 83     // s.POFF IOEX=...

Index (Arg0, 0x02)))))
                        ^^GEXP.SGEP (DerefOf (
  E6FE: 88 68 0A 02 00 00 00 5E 5E 2E 47 45 58 50 53 47  // .h.....^^.GEXPSG
  E70E: 45 50 83                                         // EP.

Index (Arg0, One)), DerefOf (
  E711: 88 68 01 00 83                                   // .h...

Index (Arg0, 0x02)), 
  E716: 88 68 0A 02 00                                   // .h...

XOr (DerefOf (
  E71B: 7F 83                                            // ..

Index (Arg0, 0x03)), One))
                    }
                }
            }
        }


  E71D: 88 68 0A 03 00 01 00                             // .h.....

        Device (CIO2)
        {

  E724: 5B 82 4A 06 43 49 4F 32                          // [.J.CIO2

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  E72C: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (CIOE, One))
                {

  E733: A0 0A 93 43 49 4F 45 01                          // ...CIOE.

                    Return (0x0F)
                }

  E73B: A4 0A 0F                                         // ...

                Else
                {

  E73E: A1 03                                            // ..

                    Return (Zero)
                }
            }


  E740: A4 00                                            // ..

            Name (_HID, "INT343E")  // _HID: Hardware ID

  E742: 08 5F 48 49 44 0D 49 4E 54 33 34 33 45 00        // ._HID.INT343E.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  E750: 14 3F 5F 43 52 53 00                             // .?_CRS.

                Name (CBUF, 
  E757: 08 43 42 55 46                                   // .CBUF

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y1B)
                    {
                        0x00000010,
                    }
                    Memory32Fixed (ReadWrite,
                        0xFE400000,         // Address Base
                        0x00010000,         // Address Length
                        )
                })

  E75C: 11 1A 0A 17 89 06 00 0D 01 10 00 00 00 86 09 00  // ................
  E76C: 01 00 00 40 FE 00 00 01 00 79 00                 // ...@.....y.

                CreateDWordField (CBUF, \_SB.PCI0.CIO2._CRS._Y1B._INT, CIOV)  // _INT: Interrupts
                Store (CIOI, CIOV)

  E777: 8A 43 42 55 46 0A 05 43 49 4F 56 70 43 49 4F 49  // .CBUF..CIOVpCIOI
  E787: 43 49 4F 56                                      // CIOV

                Return (CBUF)
            }
        }


  E78B: A4 43 42 55 46                                   // .CBUF

        Device (TERM)
        {

  E790: 5B 82 48 07 54 45 52 4D                          // [.H.TERM

            Name (_HID, "INT343D")  // _HID: Hardware ID

  E798: 08 5F 48 49 44 0D 49 4E 54 33 34 33 44 00        // ._HID.INT343D.

            Name (_UID, One)  // _UID: Unique ID

  E7A6: 08 5F 55 49 44 01                                // ._UID.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  E7AC: 14 3F 5F 43 52 53 00                             // .?_CRS.

                Name (RBUF, 
  E7B3: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0xFE03C000,         // Address Base
                        0x00001000,         // Address Length
                        )
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y1C)
                    {
                        0x00000012,
                    }
                })

  E7B8: 11 1A 0A 17 86 09 00 01 00 C0 03 FE 00 10 00 00  // ................
  E7C8: 89 06 00 0D 01 12 00 00 00 79 00                 // .........y.

                CreateDWordField (RBUF, \_SB.PCI0.TERM._CRS._Y1C._INT, IRQN)  // _INT: Interrupts
                Store (TIRQ, IRQN)

  E7D3: 8A 52 42 55 46 0A 11 49 52 51 4E 70 54 49 52 51  // .RBUF..IRQNpTIRQ
  E7E3: 49 52 51 4E                                      // IRQN

                Return (RBUF)
            }


  E7E7: A4 52 42 55 46                                   // .RBUF

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  E7EC: 14 1D 5F 53 54 41 00                             // .._STA.

                If (LEqual (TAEN, Zero))
                {

  E7F3: A0 09 93 54 41 45 4E 00                          // ...TAEN.

                    Return (Zero)
                }


  E7FB: A4 00                                            // ..

                If (LEqual (TIRQ, Zero))
                {

  E7FD: A0 09 93 54 49 52 51 00                          // ...TIRQ.

                    Return (Zero)
                }


  E805: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


  E807: A4 0A 0F                                         // ...

    Scope (_SB)
    {

  E80A: 10 44 0C 5F 53 42 5F                             // .D._SB_

        Name (HDAA, Zero)

  E811: 08 48 44 41 41 00                                // .HDAA.

        Name (DISA, One)

  E817: 08 44 49 53 41 01                                // .DISA.

        Method (DION, 0, NotSerialized)
        {
            VMMH (One, One)
        }


  E81D: 14 0C 44 49 4F 4E 00 56 4D 4D 48 01 01           // ..DION.VMMH..

        Method (DIOF, 0, NotSerialized)
        {
            VMMH (One, Zero)
        }


  E82A: 14 0C 44 49 4F 46 00 56 4D 4D 48 01 00           // ..DIOF.VMMH..

        Method (VMMH, 2, Serialized)
        {

  E837: 14 47 09 56 4D 4D 48 0A                          // .G.VMMH.


  E83F: 08 5F 54 5F 30 00                                // ._T_0.

            If (LOr (LNot (
  E845: A0 20 91 92                                      // . ..

CondRefOf (\_SB.VMON)), 
  E849: 5B 12 5C 2E 5F 53 42 5F 56 4D 4F 4E 00           // [.\._SB_VMON.

LNot (
  E856: 92                                               // .

CondRefOf (\_SB.VMOF))))
            {

  E857: 5B 12 5C 2E 5F 53 42 5F 56 4D 4F 46 00           // [.\._SB_VMOF.

                Return (Zero)
            }


  E864: A4 00                                            // ..

            Switch (ToInteger (Arg0))
            {

  E866: A2 2D 01 70 99 68 00 5F 54 5F 30                 // .-.p.h._T_0

                Case (Zero)
                {

  E871: A0 0D 93 5F 54 5F 30 00                          // ..._T_0.

                    Store (Arg1, HDAA)
                }

  E879: 70 69 48 44 41 41                                // piHDAA

                Case
  E87F: A1 13                                            // ..

 (One)
                {

  E881: A0 0D 93 5F 54 5F 30 01                          // ..._T_0.

                    Store (Arg1, DISA)
                }

  E889: 70 69 44 49 53 41                                // piDISA

                Default
                {

  E88F: A1 03                                            // ..

                    Return (Zero)
                }


  E891: A4 00                                            // ..

            }


  E893: A5                                               // .

            If (LNot (HDAA))
            {
                Store (One, SLS0)
                Store (Zero, XSQD)
                VMON ()
            }

  E894: A0 16 92 48 44 41 41 70 01 53 4C 53 30 70 00 58  // ...HDAAp.SLS0p.X
  E8A4: 53 51 44 56 4D 4F 4E                             // SQDVMON

            Else
            {
                VMOF ()
                Store (DISA, SLS0)

  E8AB: A1 23 56 4D 4F 46 70 44 49 53 41 53 4C 53 30     // .#VMOFpDISASLS0

                If (LNot (DISA))
                {

  E8BA: A0 0C 92 44 49 53 41                             // ...DISA

                    Store (One, XSQD)
                }

  E8C1: 70 01 58 53 51 44                                // p.XSQD

                Else
                {

  E8C7: A1 07                                            // ..

                    Store (Zero, XSQD)
                }
            }
        }
    }


  E8C9: 70 00 58 53 51 44                                // p.XSQD

    Scope (_SB.PCI0)
    {

  E8CF: 10 42 16 2E 5F 53 42 5F 50 43 49 30              // .B.._SB_PCI0

        Method (LPD3, 1, Serialized)
        {

  E8DB: 14 31 4C 50 44 33 09                             // .1LPD3.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

  E8E2: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                PMEC,   32
            }

            Store (0x03, PMEC)

  E8F0: 5B 81 0B 49 43 42 31 03 50 4D 45 43 20 70 0A 03  // [..ICB1.PMEC p..
  E900: 50 4D 45 43                                      // PMEC

            Store (PMEC, TEMP)
        }


  E904: 70 50 4D 45 43 54 45 4D 50                       // pPMECTEMP

        Method (LPD0, 1, Serialized)
        {

  E90D: 14 38 4C 50 44 30 09                             // .8LPD0.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

  E914: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                PMEC,   32
            }

            And (PMEC, 0xFFFF7FFC, PMEC)

  E922: 5B 81 0B 49 43 42 31 03 50 4D 45 43 20 7B 50 4D  // [..ICB1.PMEC {PM
  E932: 45 43 0C FC 7F FF FF 50 4D 45 43                 // EC.....PMEC

            Store (PMEC, TEMP)
        }


  E93D: 70 50 4D 45 43 54 45 4D 50                       // pPMECTEMP

        Method (LHRV, 1, Serialized)
        {

  E946: 14 26 4C 48 52 56 09                             // .&LHRV.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x08), 0x04)

  E94D: 5B 80 49 43 42 31 00 72 68 0A 08 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                HRV,    8
            }


  E95B: 5B 81 0B 49 43 42 31 03 48 52 56 5F 08           // [..ICB1.HRV_.

            Return (HRV)
        }


  E968: A4 48 52 56 5F                                   // .HRV_

        Method (GETD, 1, Serialized)
        {

  E96D: 14 2A 47 45 54 44 09                             // .*GETD.

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

  E974: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                PMEC,   32
            }


  E982: 5B 81 0B 49 43 42 31 03 50 4D 45 43 20           // [..ICB1.PMEC 

            Return (
  E98F: A4                                               // .

And (PMEC, 0x03))
        }


  E990: 7B 50 4D 45 43 0A 03 00                          // {PMEC...

        Method (LCRS, 3, Serialized)
        {

  E998: 14 46 06 4C 43 52 53 0B                          // .F.LCRS.

            Name (RBUF, 
  E9A0: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y1D)
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y1E)
                {
                    0x00000014,
                }
            })

  E9A5: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  E9B5: 89 06 00 0D 01 14 00 00 00 79 00                 // .........y.

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y1D._BAS, BVAL)  // _BAS: Base Address

  E9C0: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y1D._LEN, BLEN)  // _LEN: Length

  E9CB: 8A 52 42 55 46 0A 08 42 4C 45 4E                 // .RBUF..BLEN

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y1E._INT, IRQN)  // _INT: Interrupts
            Store (Arg1, BVAL)
            Store (Arg2, IRQN)

  E9D6: 8A 52 42 55 46 0A 11 49 52 51 4E 70 69 42 56 41  // .RBUF..IRQNpiBVA
  E9E6: 4C 70 6A 49 52 51 4E                             // LpjIRQN

            If (LEqual (Arg0, 0x04))
            {

  E9ED: A0 0C 93 68 0A 04                                // ...h..

                Store (0x08, BLEN)
            }


  E9F3: 70 0A 08 42 4C 45 4E                             // p..BLEN

            Return (RBUF)
        }


  E9FA: A4 52 42 55 46                                   // .RBUF

        Method (LSTA, 1, Serialized)
        {

  E9FF: 14 21 4C 53 54 41 09                             // .!LSTA.

            If (LOr (LEqual (Arg0, Zero), 
  EA06: A0 0B 91 93 68 00                                // ....h.

LEqual (Arg0, 0x03)))
            {

  EA0C: 93 68 0A 03                                      // .h..

                Return (Zero)
            }


  EA10: A4 00                                            // ..

            If (LLess (OSYS, 0x07DC))
            {

  EA12: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                Return (Zero)
            }


  EA1C: A4 00                                            // ..

            Return (0x0F)
        }


  EA1E: A4 0A 0F                                         // ...

        Method (GIRQ, 1, Serialized)
        {

  EA21: 14 10 47 49 52 51 09                             // ..GIRQ.

            Return (
  EA28: A4                                               // .

Add (0x18, Mod (Arg0, 0x60)))
        }
    }


  EA29: 72 0A 18 85 68 0A 60 00 00                       // r...h.`..

    Scope (_SB.PCI0)
    {

  EA32: 10 43 30 2E 5F 53 42 5F 50 43 49 30              // .C0._SB_PCI0

        Device (SIRC)
        {

  EA3E: 5B 82 48 1D 53 49 52 43                          // [.H.SIRC

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  EA46: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_STA, 0x03)  // _STA: Status

  EA50: 08 5F 53 54 41 0A 03                             // ._STA..

            Name (_UID, 0x05)  // _UID: Unique ID

  EA57: 08 5F 55 49 44 0A 05                             // ._UID..

            Method (ADDB, 3, Serialized)
            {

  EA5E: 14 45 09 41 44 44 42 0B                          // .E.ADDB.

                Name (BUFF, 
  EA66: 08 42 55 46 46                                   // .BUFF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y1F)
                })

  EA6B: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  EA7B: 79 00                                            // y.

                CreateDWordField (BUFF, \_SB.PCI0.SIRC.ADDB._Y1F._BAS, ADDR)  // _BAS: Base Address

  EA7D: 8A 42 55 46 46 0A 04 41 44 44 52                 // .BUFF..ADDR

                CreateDWordField (BUFF, \_SB.PCI0.SIRC.ADDB._Y1F._LEN, LENG)  // _LEN: Length
                Store (
  EA88: 8A 42 55 46 46 0A 08 4C 45 4E 47 70              // .BUFF..LENGp

Buffer (0x02)
                    {
                         0x79, 0x00                                     
                    }, Local0)

  EA94: 11 05 0A 02 79 00 60                             // ....y.`

                If (LOr (LOr (LEqual (Arg0, One), 
  EA9B: A0 1E 91 91 93 68 01                             // .....h.

LEqual (Arg0, 0x03)), 
  EAA2: 93 68 0A 03                                      // .h..

LEqual (Arg0, 0x04)))
                {
                    Store (Arg2, ADDR)
                    ConcatenateResTemplate (Local0, BUFF, Local1)

  EAA6: 93 68 0A 04 70 6A 41 44 44 52 84 60 42 55 46 46  // .h..pjADDR.`BUFF
  EAB6: 61                                               // a

                    Store (Local1, Local0)
                }


  EAB7: 70 61 60                                         // pa`

                If (LEqual (Arg0, 0x03))
                {
                    Store (Arg1, ADDR)
                    ConcatenateResTemplate (Local0, BUFF, Local1)

  EABA: A0 15 93 68 0A 03 70 69 41 44 44 52 84 60 42 55  // ...h..piADDR.`BU
  EACA: 46 46 61                                         // FFa

                    Store (Local1, Local0)
                }


  EACD: 70 61 60                                         // pa`

                If (LEqual (Arg0, 0x04))
                {
                    Store (Add (0x08, Arg1), ADDR)
                    Store (0x0FF8, LENG)
                    ConcatenateResTemplate (Local0, BUFF, Local1)

  EAD0: A0 21 93 68 0A 04 70 72 0A 08 69 00 41 44 44 52  // .!.h..pr..i.ADDR
  EAE0: 70 0B F8 0F 4C 45 4E 47 84 60 42 55 46 46 61     // p...LENG.`BUFFa

                    Store (Local1, Local0)
                }


  EAEF: 70 61 60                                         // pa`

                Return (Local0)
            }


  EAF2: A4 60                                            // .`

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
  EAF4: 14 43 12 5F 43 52 53 08 70                       // .C._CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                     
                    }, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD0, SB00, SB10), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD1, SB01, SB11), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD2, SB02, SB12), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD3, SB03, SB13), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD4, SB04, SB14), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD5, SB05, SB15), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD6, SB06, SB16), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD7, SB07, SB17), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD8, SB08, SB18), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMD9, SB09, SB19), Local1)
                Store (Local1, Local0)
                ConcatenateResTemplate (Local0, ADDB (SMDA, SB0A, SB1A), Local1)
                Store (Local1, Local0)

  EAFD: 11 05 0A 02 79 00 60 84 60 41 44 44 42 53 4D 44  // ....y.`.`ADDBSMD
  EB0D: 30 53 42 30 30 53 42 31 30 61 70 61 60 84 60 41  // 0SB00SB10apa`.`A
  EB1D: 44 44 42 53 4D 44 31 53 42 30 31 53 42 31 31 61  // DDBSMD1SB01SB11a
  EB2D: 70 61 60 84 60 41 44 44 42 53 4D 44 32 53 42 30  // pa`.`ADDBSMD2SB0
  EB3D: 32 53 42 31 32 61 70 61 60 84 60 41 44 44 42 53  // 2SB12apa`.`ADDBS
  EB4D: 4D 44 33 53 42 30 33 53 42 31 33 61 70 61 60 84  // MD3SB03SB13apa`.
  EB5D: 60 41 44 44 42 53 4D 44 34 53 42 30 34 53 42 31  // `ADDBSMD4SB04SB1
  EB6D: 34 61 70 61 60 84 60 41 44 44 42 53 4D 44 35 53  // 4apa`.`ADDBSMD5S
  EB7D: 42 30 35 53 42 31 35 61 70 61 60 84 60 41 44 44  // B05SB15apa`.`ADD
  EB8D: 42 53 4D 44 36 53 42 30 36 53 42 31 36 61 70 61  // BSMD6SB06SB16apa
  EB9D: 60 84 60 41 44 44 42 53 4D 44 37 53 42 30 37 53  // `.`ADDBSMD7SB07S
  EBAD: 42 31 37 61 70 61 60 84 60 41 44 44 42 53 4D 44  // B17apa`.`ADDBSMD
  EBBD: 38 53 42 30 38 53 42 31 38 61 70 61 60 84 60 41  // 8SB08SB18apa`.`A
  EBCD: 44 44 42 53 4D 44 39 53 42 30 39 53 42 31 39 61  // DDBSMD9SB09SB19a
  EBDD: 70 61 60 84 60 41 44 44 42 53 4D 44 41 53 42 30  // pa`.`ADDBSMDASB0
  EBED: 41 53 42 31 41 61 70 61 60                       // ASB1Aapa`

                If (LEqual (^^GPI0._STA (), Zero))
                {
                    ConcatenateResTemplate (Local0, ^^GPI0._CRS (), Local1)

  EBF6: A0 1F 93 5E 5E 2E 47 50 49 30 5F 53 54 41 00 84  // ...^^.GPI0_STA..
  EC06: 60 5E 5E 2E 47 50 49 30 5F 43 52 53 61           // `^^.GPI0_CRSa

                    Store (Local1, Local0)
                }


  EC13: 70 61 60                                         // pa`

                Return (Local0)
            }
        }


  EC16: A4 60                                            // .`

        Device (GPI0)
        {

  EC18: 5B 82 4C 11 47 50 49 30                          // [.L.GPI0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

  EC20: 14 38 5F 48 49 44 00                             // .8_HID.

                If (LEqual (PCHV (), SPTH))
                {

  EC27: A0 27 93 50 43 48 56 53 50 54 48                 // .'.PCHVSPTH

                    If (LEqual (PCHG, 0x02))
                    {

  EC32: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                        Return ("INT3451")
                    }


  EC3B: A4 0D 49 4E 54 33 34 35 31 00                    // ..INT3451.

                    Return ("INT345D")
                }


  EC45: A4 0D 49 4E 54 33 34 35 44 00                    // ..INT345D.

                Return ("INT344B")
            }


  EC4F: A4 0D 49 4E 54 33 34 34 42 00                    // ..INT344B.

            Name (LINK, "\\_SB.PCI0.GPI0")

  EC59: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  EC69: 47 50 49 30 00                                   // GPI0.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  EC6E: 14 49 0A 5F 43 52 53 00                          // .I._CRS.

                Name (RBUF, 
  EC76: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y20)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y21)
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00010000,         // Address Length
                        _Y23)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y22)
                    {
                        0x0000000E,
                    }
                })

  EC7B: 11 32 0A 2F 86 09 00 01 00 00 00 00 00 00 01 00  // .2./............
  EC8B: 86 09 00 01 00 00 00 00 00 00 01 00 86 09 00 01  // ................
  EC9B: 00 00 00 00 00 00 01 00 89 06 00 0D 01 0E 00 00  // ................
  ECAB: 00 79 00                                         // .y.

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y20._BAS, COM0)  // _BAS: Base Address

  ECAE: 8A 52 42 55 46 0A 04 43 4F 4D 30                 // .RBUF..COM0

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y21._BAS, COM1)  // _BAS: Base Address

  ECB9: 8A 52 42 55 46 0A 10 43 4F 4D 31                 // .RBUF..COM1

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y22._INT, IRQN)  // _INT: Interrupts
                Store (Add (SBRG, 0x00AF0000), COM0)
                Store (Add (SBRG, 0x00AE0000), COM1)

  ECC4: 8A 52 42 55 46 0A 29 49 52 51 4E 70 72 53 42 52  // .RBUF.)IRQNprSBR
  ECD4: 47 0C 00 00 AF 00 00 43 4F 4D 30 70 72 53 42 52  // G......COM0prSBR
  ECE4: 47 0C 00 00 AE 00 00 43 4F 4D 31                 // G......COM1

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._CRS._Y23._BAS, COM3)  // _BAS: Base Address
                Store (Add (SBRG, 0x00AC0000), COM3)
                Store (SGIR, IRQN)

  ECEF: 8A 52 42 55 46 0A 1C 43 4F 4D 33 70 72 53 42 52  // .RBUF..COM3prSBR
  ECFF: 47 0C 00 00 AC 00 00 43 4F 4D 33 70 53 47 49 52  // G......COM3pSGIR
  ED0F: 49 52 51 4E                                      // IRQN

                Return (RBUF)
            }


  ED13: A4 52 42 55 46                                   // .RBUF

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  ED18: 14 1D 5F 53 54 41 00                             // .._STA.

                If (LEqual (SBRG, Zero))
                {

  ED1F: A0 09 93 53 42 52 47 00                          // ...SBRG.

                    Return (Zero)
                }


  ED27: A4 00                                            // ..

                If (LEqual (GPEN, Zero))
                {

  ED29: A0 09 93 47 50 45 4E 00                          // ...GPEN.

                    Return (Zero)
                }


  ED31: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


  ED33: A4 0A 0F                                         // ...

    Scope (_SB.PCI0)
    {

  ED36: 10 46 0D 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C0)
        {

  ED42: 5B 82 49 0C 49 32 43 30                          // [.I.I2C0

            Name (LINK, "\\_SB.PCI0.I2C0")

  ED4A: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  ED5A: 49 32 43 30 00                                   // I2C0.

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  ED5F: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB10))
            }


  ED66: A4 47 45 54 44 53 42 31 30                       // .GETDSB10

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB10)
            }


  ED6F: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 30     // .._PS0.LPD0SB10

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB10)
            }


  ED7E: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 30     // .._PS3.LPD3SB10

            If (
  ED8D: A0 40 05 92                                      // .@..

LNotEqual (SMD0, 0x02))
            {

  ED91: 93 53 4D 44 30 0A 02                             // .SMD0..

                Name (_HID, "INT3442")  // _HID: Hardware ID

  ED98: 08 5F 48 49 44 0D 49 4E 54 33 34 34 32 00        // ._HID.INT3442.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  EDA6: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB10))
                }


  EDAD: A4 4C 48 52 56 53 42 31 30                       // .LHRVSB10

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  EDB6: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD0, SB00, SIR0))
                }


  EDBD: A4 4C 43 52 53 53 4D 44 30 53 42 30 30 53 49 52  // .LCRSSMD0SB00SIR
  EDCD: 30                                               // 0

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  EDCE: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD0))
                }
            }


  EDD5: A4 4C 53 54 41 53 4D 44 30                       // .LSTASMD0

            If (LEqual (SMD0, 0x02))
            {

  EDDE: A0 2E 93 53 4D 44 30 0A 02                       // ...SMD0..

                Name (_ADR, 0x00150000)  // _ADR: Address

  EDE7: 08 5F 41 44 52 0C 00 00 15 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  EDF1: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  EDF8: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  EDFF: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  EE08: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  EE09: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  EE0D: 10 46 0D 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C1)
        {

  EE19: 5B 82 49 0C 49 32 43 31                          // [.I.I2C1

            Name (LINK, "\\_SB.PCI0.I2C1")

  EE21: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  EE31: 49 32 43 31 00                                   // I2C1.

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  EE36: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB11))
            }


  EE3D: A4 47 45 54 44 53 42 31 31                       // .GETDSB11

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB11)
            }


  EE46: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 31     // .._PS0.LPD0SB11

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB11)
            }


  EE55: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 31     // .._PS3.LPD3SB11

            If (
  EE64: A0 40 05 92                                      // .@..

LNotEqual (SMD1, 0x02))
            {

  EE68: 93 53 4D 44 31 0A 02                             // .SMD1..

                Name (_HID, "INT3443")  // _HID: Hardware ID

  EE6F: 08 5F 48 49 44 0D 49 4E 54 33 34 34 33 00        // ._HID.INT3443.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  EE7D: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB11))
                }


  EE84: A4 4C 48 52 56 53 42 31 31                       // .LHRVSB11

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  EE8D: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD1, SB01, SIR1))
                }


  EE94: A4 4C 43 52 53 53 4D 44 31 53 42 30 31 53 49 52  // .LCRSSMD1SB01SIR
  EEA4: 31                                               // 1

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  EEA5: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD1))
                }
            }


  EEAC: A4 4C 53 54 41 53 4D 44 31                       // .LSTASMD1

            If (LEqual (SMD1, 0x02))
            {

  EEB5: A0 2E 93 53 4D 44 31 0A 02                       // ...SMD1..

                Name (_ADR, 0x00150001)  // _ADR: Address

  EEBE: 08 5F 41 44 52 0C 01 00 15 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  EEC8: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  EECF: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  EED6: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  EEDF: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  EEE0: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  EEE4: 10 46 0D 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C2)
        {

  EEF0: 5B 82 49 0C 49 32 43 32                          // [.I.I2C2

            Name (LINK, "\\_SB.PCI0.I2C2")

  EEF8: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  EF08: 49 32 43 32 00                                   // I2C2.

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  EF0D: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB12))
            }


  EF14: A4 47 45 54 44 53 42 31 32                       // .GETDSB12

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB12)
            }


  EF1D: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 32     // .._PS0.LPD0SB12

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB12)
            }


  EF2C: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 32     // .._PS3.LPD3SB12

            If (
  EF3B: A0 40 05 92                                      // .@..

LNotEqual (SMD2, 0x02))
            {

  EF3F: 93 53 4D 44 32 0A 02                             // .SMD2..

                Name (_HID, "INT3444")  // _HID: Hardware ID

  EF46: 08 5F 48 49 44 0D 49 4E 54 33 34 34 34 00        // ._HID.INT3444.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  EF54: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB12))
                }


  EF5B: A4 4C 48 52 56 53 42 31 32                       // .LHRVSB12

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  EF64: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD2, SB02, SIR2))
                }


  EF6B: A4 4C 43 52 53 53 4D 44 32 53 42 30 32 53 49 52  // .LCRSSMD2SB02SIR
  EF7B: 32                                               // 2

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  EF7C: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD2))
                }
            }


  EF83: A4 4C 53 54 41 53 4D 44 32                       // .LSTASMD2

            If (LEqual (SMD2, 0x02))
            {

  EF8C: A0 2E 93 53 4D 44 32 0A 02                       // ...SMD2..

                Name (_ADR, 0x00150002)  // _ADR: Address

  EF95: 08 5F 41 44 52 0C 02 00 15 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  EF9F: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  EFA6: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  EFAD: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  EFB6: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  EFB7: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  EFBB: 10 46 0D 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C3)
        {

  EFC7: 5B 82 49 0C 49 32 43 33                          // [.I.I2C3

            Name (LINK, "\\_SB.PCI0.I2C3")

  EFCF: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  EFDF: 49 32 43 33 00                                   // I2C3.

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  EFE4: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB13))
            }


  EFEB: A4 47 45 54 44 53 42 31 33                       // .GETDSB13

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB13)
            }


  EFF4: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 33     // .._PS0.LPD0SB13

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB13)
            }


  F003: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 33     // .._PS3.LPD3SB13

            If (
  F012: A0 40 05 92                                      // .@..

LNotEqual (SMD3, 0x02))
            {

  F016: 93 53 4D 44 33 0A 02                             // .SMD3..

                Name (_HID, "INT3445")  // _HID: Hardware ID

  F01D: 08 5F 48 49 44 0D 49 4E 54 33 34 34 35 00        // ._HID.INT3445.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F02B: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB13))
                }


  F032: A4 4C 48 52 56 53 42 31 33                       // .LHRVSB13

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F03B: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD3, SB03, SIR3))
                }


  F042: A4 4C 43 52 53 53 4D 44 33 53 42 30 33 53 49 52  // .LCRSSMD3SB03SIR
  F052: 33                                               // 3

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F053: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD3))
                }
            }


  F05A: A4 4C 53 54 41 53 4D 44 33                       // .LSTASMD3

            If (LEqual (SMD3, 0x02))
            {

  F063: A0 2E 93 53 4D 44 33 0A 02                       // ...SMD3..

                Name (_ADR, 0x00150003)  // _ADR: Address

  F06C: 08 5F 41 44 52 0C 03 00 15 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F076: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F07D: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F084: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F08D: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  F08E: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  F092: 10 46 0D 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C4)
        {

  F09E: 5B 82 49 0C 49 32 43 34                          // [.I.I2C4

            Name (LINK, "\\_SB.PCI0.I2C4")

  F0A6: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  F0B6: 49 32 43 34 00                                   // I2C4.

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  F0BB: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB14))
            }


  F0C2: A4 47 45 54 44 53 42 31 34                       // .GETDSB14

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB14)
            }


  F0CB: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 34     // .._PS0.LPD0SB14

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB14)
            }


  F0DA: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 34     // .._PS3.LPD3SB14

            If (
  F0E9: A0 40 05 92                                      // .@..

LNotEqual (SMD4, 0x02))
            {

  F0ED: 93 53 4D 44 34 0A 02                             // .SMD4..

                Name (_HID, "INT3446")  // _HID: Hardware ID

  F0F4: 08 5F 48 49 44 0D 49 4E 54 33 34 34 36 00        // ._HID.INT3446.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F102: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB14))
                }


  F109: A4 4C 48 52 56 53 42 31 34                       // .LHRVSB14

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F112: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD4, SB04, SIR4))
                }


  F119: A4 4C 43 52 53 53 4D 44 34 53 42 30 34 53 49 52  // .LCRSSMD4SB04SIR
  F129: 34                                               // 4

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F12A: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD4))
                }
            }


  F131: A4 4C 53 54 41 53 4D 44 34                       // .LSTASMD4

            If (LEqual (SMD4, 0x02))
            {

  F13A: A0 2E 93 53 4D 44 34 0A 02                       // ...SMD4..

                Name (_ADR, 0x00190002)  // _ADR: Address

  F143: 08 5F 41 44 52 0C 02 00 19 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F14D: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F154: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F15B: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F164: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  F165: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  F169: 10 46 0D 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C5)
        {

  F175: 5B 82 49 0C 49 32 43 35                          // [.I.I2C5

            Name (LINK, "\\_SB.PCI0.I2C5")

  F17D: 08 4C 49 4E 4B 0D 5C 5F 53 42 2E 50 43 49 30 2E  // .LINK.\_SB.PCI0.
  F18D: 49 32 43 35 00                                   // I2C5.

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  F192: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB15))
            }


  F199: A4 47 45 54 44 53 42 31 35                       // .GETDSB15

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB15)
            }


  F1A2: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 35     // .._PS0.LPD0SB15

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB15)
            }


  F1B1: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 35     // .._PS3.LPD3SB15

            If (
  F1C0: A0 40 05 92                                      // .@..

LNotEqual (SMD5, 0x02))
            {

  F1C4: 93 53 4D 44 35 0A 02                             // .SMD5..

                Name (_HID, "INT3447")  // _HID: Hardware ID

  F1CB: 08 5F 48 49 44 0D 49 4E 54 33 34 34 37 00        // ._HID.INT3447.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F1D9: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB15))
                }


  F1E0: A4 4C 48 52 56 53 42 31 35                       // .LHRVSB15

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F1E9: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD5, SB05, SIR5))
                }


  F1F0: A4 4C 43 52 53 53 4D 44 35 53 42 30 35 53 49 52  // .LCRSSMD5SB05SIR
  F200: 35                                               // 5

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F201: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD5))
                }
            }


  F208: A4 4C 53 54 41 53 4D 44 35                       // .LSTASMD5

            If (LEqual (SMD5, 0x02))
            {

  F211: A0 2E 93 53 4D 44 35 0A 02                       // ...SMD5..

                Name (_ADR, 0x00190001)  // _ADR: Address

  F21A: 08 5F 41 44 52 0C 01 00 19 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F224: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F22B: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F232: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F23B: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  F23C: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  F240: 10 41 0C 2E 5F 53 42 5F 50 43 49 30              // .A.._SB_PCI0

        Device (SPI0)
        {

  F24C: 5B 82 44 0B 53 50 49 30                          // [.D.SPI0

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  F254: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB16))
            }


  F25B: A4 47 45 54 44 53 42 31 36                       // .GETDSB16

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB16)
            }


  F264: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 36     // .._PS0.LPD0SB16

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB16)
            }


  F273: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 36     // .._PS3.LPD3SB16

            If (
  F282: A0 40 05 92                                      // .@..

LNotEqual (SMD6, 0x02))
            {

  F286: 93 53 4D 44 36 0A 02                             // .SMD6..

                Name (_HID, "INT3440")  // _HID: Hardware ID

  F28D: 08 5F 48 49 44 0D 49 4E 54 33 34 34 30 00        // ._HID.INT3440.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F29B: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB16))
                }


  F2A2: A4 4C 48 52 56 53 42 31 36                       // .LHRVSB16

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F2AB: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD6, SB06, SIR6))
                }


  F2B2: A4 4C 43 52 53 53 4D 44 36 53 42 30 36 53 49 52  // .LCRSSMD6SB06SIR
  F2C2: 36                                               // 6

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F2C3: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD6))
                }
            }


  F2CA: A4 4C 53 54 41 53 4D 44 36                       // .LSTASMD6

            If (LEqual (SMD6, 0x02))
            {

  F2D3: A0 2E 93 53 4D 44 36 0A 02                       // ...SMD6..

                Name (_ADR, 0x001E0002)  // _ADR: Address

  F2DC: 08 5F 41 44 52 0C 02 00 1E 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F2E6: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F2ED: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F2F4: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F2FD: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  F2FE: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  F302: 10 41 0C 2E 5F 53 42 5F 50 43 49 30              // .A.._SB_PCI0

        Device (SPI1)
        {

  F30E: 5B 82 44 0B 53 50 49 31                          // [.D.SPI1

            Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
            {

  F316: 14 0F 5F 50 53 43 00                             // .._PSC.

                Return (GETD (SB17))
            }


  F31D: A4 47 45 54 44 53 42 31 37                       // .GETDSB17

            Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
            {
                LPD0 (SB17)
            }


  F326: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 37     // .._PS0.LPD0SB17

            Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
            {
                LPD3 (SB17)
            }


  F335: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 37     // .._PS3.LPD3SB17

            If (
  F344: A0 40 05 92                                      // .@..

LNotEqual (SMD7, 0x02))
            {

  F348: 93 53 4D 44 37 0A 02                             // .SMD7..

                Name (_HID, "INT3441")  // _HID: Hardware ID

  F34F: 08 5F 48 49 44 0D 49 4E 54 33 34 34 31 00        // ._HID.INT3441.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F35D: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB17))
                }


  F364: A4 4C 48 52 56 53 42 31 37                       // .LHRVSB17

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F36D: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD7, SB07, SIR7))
                }


  F374: A4 4C 43 52 53 53 4D 44 37 53 42 30 37 53 49 52  // .LCRSSMD7SB07SIR
  F384: 37                                               // 7

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F385: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD7))
                }
            }


  F38C: A4 4C 53 54 41 53 4D 44 37                       // .LSTASMD7

            If (LEqual (SMD7, 0x02))
            {

  F395: A0 2E 93 53 4D 44 37 0A 02                       // ...SMD7..

                Name (_ADR, 0x001E0003)  // _ADR: Address

  F39E: 08 5F 41 44 52 0C 03 00 1E 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F3A8: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F3AF: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F3B6: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F3BF: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


  F3C0: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

  F3C4: 10 47 10 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

        Device (UA00)
        {

  F3D0: 5B 82 4A 0F 55 41 30 30                          // [.J.UA00

            If (
  F3D8: A0 4C 08 92                                      // .L..

LNotEqual (SMD8, 0x02))
            {

  F3DC: 93 53 4D 44 38 0A 02                             // .SMD8..

                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {

  F3E3: 14 21 5F 48 49 44 00                             // .!_HID.

                    If (LEqual (SMD8, 0x04))
                    {

  F3EA: A0 0E 93 53 4D 44 38 0A 04                       // ...SMD8..

                        Return (0x020CD041)
                    }

  F3F3: A4 0C 41 D0 0C 02                                // ..A...

                    Else
                    {

  F3F9: A1 0B                                            // ..

                        Return ("INT3448")
                    }
                }


  F3FB: A4 0D 49 4E 54 33 34 34 38 00                    // ..INT3448.

                Name (_UID, "SerialIoUart0")  // _UID: Unique ID

  F405: 08 5F 55 49 44 0D 53 65 72 69 61 6C 49 6F 55 61  // ._UID.SerialIoUa
  F415: 72 74 30 00                                      // rt0.

                Name (_DDN, "SerialIoUart0")  // _DDN: DOS Device Name

  F419: 08 5F 44 44 4E 0D 53 65 72 69 61 6C 49 6F 55 61  // ._DDN.SerialIoUa
  F429: 72 74 30 00                                      // rt0.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F42D: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB18))
                }


  F434: A4 4C 48 52 56 53 42 31 38                       // .LHRVSB18

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F43D: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD8, SB08, SIR8))
                }


  F444: A4 4C 43 52 53 53 4D 44 38 53 42 30 38 53 49 52  // .LCRSSMD8SB08SIR
  F454: 38                                               // 8

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F455: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD8))
                }
            }


  F45C: A4 4C 53 54 41 53 4D 44 38                       // .LSTASMD8

            If (LEqual (SMD8, 0x02))
            {

  F465: A0 2E 93 53 4D 44 38 0A 02                       // ...SMD8..

                Name (_ADR, 0x001E0000)  // _ADR: Address

  F46E: 08 5F 41 44 52 0C 00 00 1E 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F478: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F47F: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F486: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F48F: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }


  F490: 11 03 01 00                                      // ....

            If (
  F494: A0 37 92                                         // .7.

LNotEqual (SMD8, 0x04))
            {

  F497: 93 53 4D 44 38 0A 04                             // .SMD8..

                Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                {

  F49E: 14 0F 5F 50 53 43 00                             // .._PSC.

                    Return (GETD (SB18))
                }


  F4A5: A4 47 45 54 44 53 42 31 38                       // .GETDSB18

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    LPD0 (SB18)
                }


  F4AE: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 38     // .._PS0.LPD0SB18

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    LPD3 (SB18)
                }
            }
        }
    }


  F4BD: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 38     // .._PS3.LPD3SB18

    Scope (_SB.PCI0)
    {

  F4CC: 10 47 10 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

        Device (UA01)
        {

  F4D8: 5B 82 4A 0F 55 41 30 31                          // [.J.UA01

            If (
  F4E0: A0 4C 08 92                                      // .L..

LNotEqual (SMD9, 0x02))
            {

  F4E4: 93 53 4D 44 39 0A 02                             // .SMD9..

                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {

  F4EB: 14 21 5F 48 49 44 00                             // .!_HID.

                    If (LEqual (SMD9, 0x04))
                    {

  F4F2: A0 0E 93 53 4D 44 39 0A 04                       // ...SMD9..

                        Return (0x020CD041)
                    }

  F4FB: A4 0C 41 D0 0C 02                                // ..A...

                    Else
                    {

  F501: A1 0B                                            // ..

                        Return ("INT3449")
                    }
                }


  F503: A4 0D 49 4E 54 33 34 34 39 00                    // ..INT3449.

                Name (_UID, "SerialIoUart1")  // _UID: Unique ID

  F50D: 08 5F 55 49 44 0D 53 65 72 69 61 6C 49 6F 55 61  // ._UID.SerialIoUa
  F51D: 72 74 31 00                                      // rt1.

                Name (_DDN, "SerialIoUart1")  // _DDN: DOS Device Name

  F521: 08 5F 44 44 4E 0D 53 65 72 69 61 6C 49 6F 55 61  // ._DDN.SerialIoUa
  F531: 72 74 31 00                                      // rt1.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F535: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB19))
                }


  F53C: A4 4C 48 52 56 53 42 31 39                       // .LHRVSB19

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F545: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMD9, SB09, SIR9))
                }


  F54C: A4 4C 43 52 53 53 4D 44 39 53 42 30 39 53 49 52  // .LCRSSMD9SB09SIR
  F55C: 39                                               // 9

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F55D: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMD9))
                }
            }


  F564: A4 4C 53 54 41 53 4D 44 39                       // .LSTASMD9

            If (LEqual (SMD9, 0x02))
            {

  F56D: A0 2E 93 53 4D 44 39 0A 02                       // ...SMD9..

                Name (_ADR, 0x001E0001)  // _ADR: Address

  F576: 08 5F 41 44 52 0C 01 00 1E 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F580: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F587: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F58E: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F597: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }


  F598: 11 03 01 00                                      // ....

            If (
  F59C: A0 37 92                                         // .7.

LNotEqual (SMD9, 0x04))
            {

  F59F: 93 53 4D 44 39 0A 04                             // .SMD9..

                Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                {

  F5A6: 14 0F 5F 50 53 43 00                             // .._PSC.

                    Return (GETD (SB19))
                }


  F5AD: A4 47 45 54 44 53 42 31 39                       // .GETDSB19

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    LPD0 (SB19)
                }


  F5B6: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 39     // .._PS0.LPD0SB19

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    LPD3 (SB19)
                }
            }
        }
    }


  F5C5: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 39     // .._PS3.LPD3SB19

    Scope (_SB.PCI0)
    {

  F5D4: 10 47 10 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

        Device (UA02)
        {

  F5E0: 5B 82 4A 0F 55 41 30 32                          // [.J.UA02

            If (
  F5E8: A0 4C 08 92                                      // .L..

LNotEqual (SMDA, 0x02))
            {

  F5EC: 93 53 4D 44 41 0A 02                             // .SMDA..

                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {

  F5F3: 14 21 5F 48 49 44 00                             // .!_HID.

                    If (LEqual (SMDA, 0x04))
                    {

  F5FA: A0 0E 93 53 4D 44 41 0A 04                       // ...SMDA..

                        Return (0x020CD041)
                    }

  F603: A4 0C 41 D0 0C 02                                // ..A...

                    Else
                    {

  F609: A1 0B                                            // ..

                        Return ("INT344A")
                    }
                }


  F60B: A4 0D 49 4E 54 33 34 34 41 00                    // ..INT344A.

                Name (_UID, "SerialIoUart2")  // _UID: Unique ID

  F615: 08 5F 55 49 44 0D 53 65 72 69 61 6C 49 6F 55 61  // ._UID.SerialIoUa
  F625: 72 74 32 00                                      // rt2.

                Name (_DDN, "SerialIoUart2")  // _DDN: DOS Device Name

  F629: 08 5F 44 44 4E 0D 53 65 72 69 61 6C 49 6F 55 61  // ._DDN.SerialIoUa
  F639: 72 74 32 00                                      // rt2.

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  F63D: 14 0F 5F 48 52 56 00                             // .._HRV.

                    Return (LHRV (SB1A))
                }


  F644: A4 4C 48 52 56 53 42 31 41                       // .LHRVSB1A

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  F64D: 14 17 5F 43 52 53 00                             // .._CRS.

                    Return (LCRS (SMDA, SB0A, SIRA))
                }


  F654: A4 4C 43 52 53 53 4D 44 41 53 42 30 41 53 49 52  // .LCRSSMDASB0ASIR
  F664: 41                                               // A

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  F665: 14 0F 5F 53 54 41 00                             // .._STA.

                    Return (LSTA (SMDA))
                }
            }


  F66C: A4 4C 53 54 41 53 4D 44 41                       // .LSTASMDA

            If (LEqual (SMDA, 0x02))
            {

  F675: A0 2E 93 53 4D 44 41 0A 02                       // ...SMDA..

                Name (_ADR, 0x00190000)  // _ADR: Address

  F67E: 08 5F 41 44 52 0C 00 00 19 00                    // ._ADR.....

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  F688: 14 1B 5F 44 53 4D 0C                             // .._DSM.

                    If (PCIC (Arg0))
                    {

  F68F: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


  F696: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    Return (
  F69F: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }


  F6A0: 11 03 01 00                                      // ....

            If (
  F6A4: A0 37 92                                         // .7.

LNotEqual (SMDA, 0x04))
            {

  F6A7: 93 53 4D 44 41 0A 04                             // .SMDA..

                Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current
                {

  F6AE: 14 0F 5F 50 53 43 00                             // .._PSC.

                    Return (GETD (SB1A))
                }


  F6B5: A4 47 45 54 44 53 42 31 41                       // .GETDSB1A

                Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
                {
                    LPD0 (SB1A)
                }


  F6BE: 14 0E 5F 50 53 30 00 4C 50 44 30 53 42 31 41     // .._PS0.LPD0SB1A

                Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3
                {
                    LPD3 (SB1A)
                }
            }
        }
    }


  F6CD: 14 0E 5F 50 53 33 00 4C 50 44 33 53 42 31 41     // .._PS3.LPD3SB1A

    Scope (_SB.PCI0)
    {

  F6DC: 10 44 09 2E 5F 53 42 5F 50 43 49 30              // .D.._SB_PCI0

        Name (HIDG, 
  F6E8: 08 48 49 44 47                                   // .HIDG

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */)

  F6ED: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  F6FD: 3D 89 38 DE                                      // =.8.

        Name (TP7G, 
  F701: 08 54 50 37 47                                   // .TP7G

ToUUID ("ef87eb82-f951-46da-84ec-14871ac6f84b"))

  F706: 11 13 0A 10 82 EB 87 EF 51 F9 DA 46 84 EC 14 87  // ........Q..F....
  F716: 1A C6 F8 4B                                      // ...K

        Method (HIDD, 5, Serialized)
        {

  F71A: 14 29 48 49 44 44 0D                             // .)HIDD.

            If (LEqual (Arg0, HIDG))
            {

  F721: A0 1D 93 68 48 49 44 47                          // ...hHIDG

                If (LEqual (Arg2, Zero))
                {

  F729: A0 0E 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, One))
                    {

  F72E: A0 09 93 69 01                                   // ...i.

                        Return (
  F733: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }
                }


  F734: 11 03 01 03                                      // ....

                If (LEqual (Arg2, One))
                {

  F738: A0 06 93 6A 01                                   // ...j.

                    Return (Arg4)
                }
            }


  F73D: A4 6C                                            // .l

            Return (
  F73F: A4                                               // .

Buffer (One)
            {
                 0x00                                           
            })
        }


  F740: 11 03 01 00                                      // ....

        Method (TP7D, 6, Serialized)
        {

  F744: 14 2C 54 50 37 44 0E                             // .,TP7D.

            If (LEqual (Arg0, TP7G))
            {

  F74B: A0 20 93 68 54 50 37 47                          // . .hTP7G

                If (LEqual (Arg2, Zero))
                {

  F753: A0 0E 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, One))
                    {

  F758: A0 09 93 69 01                                   // ...i.

                        Return (
  F75D: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }
                }


  F75E: 11 03 01 03                                      // ....

                If (LEqual (Arg2, One))
                {

  F762: A0 09 93 6A 01                                   // ...j.

                    Return (
  F767: A4                                               // .

ConcatenateResTemplate (Arg4, Arg5))
                }
            }


  F768: 84 6C 6D 00                                      // .lm.

            Return (
  F76C: A4                                               // .

Buffer (One)
            {
                 0x00                                           
            })
        }
    }


  F76D: 11 03 01 00                                      // ....

    Scope (_SB.PCI0.I2C0)
    {

  F771: 10 47 53 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .GS/._SB_PCI0I2C
  F781: 30                                               // 0

        Device (TPD0)
        {

  F782: 5B 82 4C 27 54 50 44 30                          // [.L'TPD0

            Name (HID2, Zero)

  F78A: 08 48 49 44 32 00                                // .HID2.

            Name (SBFB, 
  F790: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
            {
                I2cSerialBusV2 (0x0020, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                    0x00, ResourceConsumer, _Y24, Exclusive,
                    )
            })

  F795: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  F7A5: 80 1A 06 00 20 00 5C 5F 53 42 2E 50 43 49 30 2E  // .... .\_SB.PCI0.
  F7B5: 49 32 43 30 00 79 00                             // I2C0.y.

            Name (SBFI, 
  F7BC: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y25)
                {
                    0x00000000,
                }
            })

  F7C1: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

            Name (SBFG, 
  F7D0: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })

  F7D5: 11 2D 0A 2A 8C 25 00 01 00 01 00 12 00 00 00 00  // .-.*.%..........
  F7E5: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
  F7F5: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

            CreateWordField (SBFB, \_SB.PCI0.I2C0.TPD0._Y24._ADR, BADR)  // _ADR: Address

  F803: 8B 53 42 46 42 0A 10 42 41 44 52                 // .SBFB..BADR

            CreateDWordField (SBFB, \_SB.PCI0.I2C0.TPD0._Y24._SPE, SPED)  // _SPE: Speed

  F80E: 8A 53 42 46 42 0A 0C 53 50 45 44                 // .SBFB..SPED

            CreateWordField (SBFG, 0x17, INT1)

  F819: 8B 53 42 46 47 0A 17 49 4E 54 31                 // .SBFG..INT1

            CreateDWordField (SBFI, \_SB.PCI0.I2C0.TPD0._Y25._INT, INT2)  // _INT: Interrupts

  F824: 8A 53 42 46 49 0A 05 49 4E 54 32                 // .SBFI..INT2

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

  F82F: 14 42 11 5F 49 4E 49 00                          // .B._INI.

                If (LLess (OSYS, 0x07DC))
                {
                    SRXO (GPDI, One)
                }

                Store (GNUM (GPDI), INT1)
                Store (INUM (GPDI), INT2)

  F837: A0 12 95 4F 53 59 53 0B DC 07 53 52 58 4F 47 50  // ...OSYS...SRXOGP
  F847: 44 49 01 70 47 4E 55 4D 47 50 44 49 49 4E 54 31  // DI.pGNUMGPDIINT1
  F857: 70 49 4E 55 4D 47 50 44 49 49 4E 54 32           // pINUMGPDIINT2

                If (LEqual (SDM0, Zero))
                {
                    SHPO (GPDI, One)
                }


  F864: A0 10 93 53 44 4D 30 00 53 48 50 4F 47 50 44 49  // ...SDM0.SHPOGPDI
  F874: 01                                               // .

                If (LEqual (SDS0, One))
                {
                    Store ("SYNA2393", _HID)
                    Store (0x20, HID2)

  F875: A0 1F 93 53 44 53 30 01 70 0D 53 59 4E 41 32 33  // ...SDS0.p.SYNA23
  F885: 39 33 00 5F 48 49 44 70 0A 20 48 49 44 32        // 93._HIDp. HID2

                    Return (Zero)
                }


  F893: A4 00                                            // ..

                If (LEqual (SDS0, 0x02))
                {
                    Store ("06CB2846", _HID)
                    Store (0x20, HID2)

  F895: A0 20 93 53 44 53 30 0A 02 70 0D 30 36 43 42 32  // . .SDS0..p.06CB2
  F8A5: 38 34 36 00 5F 48 49 44 70 0A 20 48 49 44 32     // 846._HIDp. HID2

                    Return (Zero)
                }


  F8B4: A4 00                                            // ..

                If (LEqual (SDS0, 0x06))
                {
                    Store ("ALPS0000", _HID)
                    Store (0x20, HID2)
                    Store (0x2C, BADR)

  F8B6: A0 27 93 53 44 53 30 0A 06 70 0D 41 4C 50 53 30  // .'.SDS0..p.ALPS0
  F8C6: 30 30 30 00 5F 48 49 44 70 0A 20 48 49 44 32 70  // 000._HIDp. HID2p
  F8D6: 0A 2C 42 41 44 52                                // .,BADR

                    Return (Zero)
                }


  F8DC: A4 00                                            // ..

                If (LEqual (SDS0, 0x05))
                {
                    Store ("CUST0001", _HID)
                    Store (TPDH, HID2)
                    Store (TPDB, BADR)

  F8DE: A0 43 06 93 53 44 53 30 0A 05 70 0D 43 55 53 54  // .C..SDS0..p.CUST
  F8EE: 30 30 30 31 00 5F 48 49 44 70 54 50 44 48 48 49  // 0001._HIDpTPDHHI
  F8FE: 44 32 70 54 50 44 42 42 41 44 52                 // D2pTPDBBADR

                    If (LEqual (TPDS, Zero))
                    {

  F909: A0 11 93 54 50 44 53 00                          // ...TPDS.

                        Store (0x000186A0, SPED)
                    }


  F911: 70 0C A0 86 01 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPDS, One))
                    {

  F91B: A0 11 93 54 50 44 53 01                          // ...TPDS.

                        Store (0x00061A80, SPED)
                    }


  F923: 70 0C 80 1A 06 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPDS, 0x02))
                    {

  F92D: A0 12 93 54 50 44 53 0A 02                       // ...TPDS..

                        Store (0x000F4240, SPED)
                    }


  F936: 70 0C 40 42 0F 00 53 50 45 44                    // p.@B..SPED

                    Return (Zero)
                }
            }


  F940: A4 00                                            // ..

            Name (_HID, "XXXX0000")  // _HID: Hardware ID

  F942: 08 5F 48 49 44 0D 58 58 58 58 30 30 30 30 00     // ._HID.XXXX0000.

            Name (_CID, "PNP0C50")  // _CID: Compatible ID

  F951: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

  F95F: 08 5F 53 30 57 0A 03                             // ._S0W..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  F966: 14 39 5F 44 53 4D 0C                             // .9_DSM.

                If (LEqual (Arg0, HIDG))
                {

  F96D: A0 14 93 68 48 49 44 47                          // ...hHIDG

                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }


  F975: A4 48 49 44 44 68 69 6A 6B 48 49 44 32           // .HIDDhijkHID2

                If (LEqual (Arg0, TP7G))
                {

  F982: A0 18 93 68 54 50 37 47                          // ...hTP7G

                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }


  F98A: A4 54 50 37 44 68 69 6A 6B 53 42 46 42 53 42 46  // .TP7DhijkSBFBSBF
  F99A: 47                                               // G

                Return (
  F99B: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  F99C: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  F9A0: 14 2B 5F 53 54 41 00                             // .+_STA.

                If (LOr (LEqual (SDS0, 0x05), 
  F9A7: A0 22 91 93 53 44 53 30 0A 05                    // ."..SDS0..

LOr (LEqual (SDS0, One), 
  F9B1: 91 93 53 44 53 30 01                             // ..SDS0.

LOr (LEqual (SDS0, 0x02), 
  F9B8: 91 93 53 44 53 30 0A 02                          // ..SDS0..

LEqual (SDS0, 0x06)))))
                {

  F9C0: 93 53 44 53 30 0A 06                             // .SDS0..

                    Return (0x0F)
                }


  F9C7: A4 0A 0F                                         // ...

                Return (Zero)
            }


  F9CA: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  F9CC: 14 33 5F 43 52 53 00                             // .3_CRS.

                If (LLess (OSYS, 0x07DC))
                {

  F9D3: A0 0E 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (SBFI)
                }


  F9DD: A4 53 42 46 49                                   // .SBFI

                If (LEqual (SDM0, Zero))
                {

  F9E2: A0 12 93 53 44 4D 30 00                          // ...SDM0.

                    Return (
  F9EA: A4                                               // .

ConcatenateResTemplate (SBFB, SBFG))
                }


  F9EB: 84 53 42 46 42 53 42 46 47 00                    // .SBFBSBFG.

                Return (
  F9F5: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }
        }


  F9F6: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

        Device (HDAC)
        {

  FA00: 5B 82 4D 16 48 44 41 43                          // [.M.HDAC

            Name (_HID, "INT0000")  // _HID: Hardware ID

  FA08: 08 5F 48 49 44 0D 49 4E 54 30 30 30 30 00        // ._HID.INT0000.

            Name (_CID, "INT0000")  // _CID: Compatible ID

  FA16: 08 5F 43 49 44 0D 49 4E 54 30 30 30 30 00        // ._CID.INT0000.

            Name (_DDN, "Intel(R) Smart Sound Technology Audio Codec")  // _DDN: DOS Device Name

  FA24: 08 5F 44 44 4E 0D 49 6E 74 65 6C 28 52 29 20 53  // ._DDN.Intel(R) S
  FA34: 6D 61 72 74 20 53 6F 75 6E 64 20 54 65 63 68 6E  // mart Sound Techn
  FA44: 6F 6C 6F 67 79 20 41 75 64 69 6F 20 43 6F 64 65  // ology Audio Code
  FA54: 63 00                                            // c.

            Name (_UID, One)  // _UID: Unique ID

  FA56: 08 5F 55 49 44 01                                // ._UID.

            Name (CADR, Zero)

  FA5C: 08 43 41 44 52 00                                // .CADR.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

  FA62: 14 4A 06 5F 49 4E 49 00                          // .J._INI.

                If (LOr (LEqual (I2SC, One), 
  FA6A: A0 34 91 93 49 32 53 43 01                       // .4..I2SC.

LEqual (I2SC, 0x02)))
                {
                    Store ("INT343A", _HID)
                    Store ("INT343A", _CID)
                    Store (0x1C, CADR)

  FA73: 93 49 32 53 43 0A 02 70 0D 49 4E 54 33 34 33 41  // .I2SC..p.INT343A
  FA83: 00 5F 48 49 44 70 0D 49 4E 54 33 34 33 41 00 5F  // ._HIDp.INT343A._
  FA93: 43 49 44 70 0A 1C 43 41 44 52                    // CIDp..CADR

                    Return (Zero)
                }


  FA9D: A4 00                                            // ..

                If (LEqual (I2SC, 0x03))
                {
                    Store ("INT343B", _HID)
                    Store ("INT343B", _CID)
                    Store (0x34, CADR)

  FA9F: A0 2D 93 49 32 53 43 0A 03 70 0D 49 4E 54 33 34  // .-.I2SC..p.INT34
  FAAF: 33 42 00 5F 48 49 44 70 0D 49 4E 54 33 34 33 42  // 3B._HIDp.INT343B
  FABF: 00 5F 43 49 44 70 0A 34 43 41 44 52              // ._CIDp.4CADR

                    Return (Zero)
                }
            }


  FACB: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  FACD: 14 4C 08 5F 43 52 53 00                          // .L._CRS.

                Name (SBFB, 
  FAD5: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, _Y26, Exclusive,
                        )
                })

  FADA: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  FAEA: 80 1A 06 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
  FAFA: 49 32 43 30 00 79 00                             // I2C0.y.

                Name (SBFI, 
  FB01: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y27)
                    {
                        0x00000000,
                    }
                })

  FB06: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

                CreateWordField (SBFB, \_SB.PCI0.I2C0.HDAC._CRS._Y26._ADR, ADR)  // _ADR: Address
                Store (CADR, ADR)

  FB15: 8B 53 42 46 42 0A 10 41 44 52 5F 70 43 41 44 52  // .SBFB..ADR_pCADR
  FB25: 41 44 52 5F                                      // ADR_

                CreateDWordField (SBFI, \_SB.PCI0.I2C0.HDAC._CRS._Y27._INT, AINT)  // _INT: Interrupts
                Store (INUM (0x02040016), AINT)

  FB29: 8A 53 42 46 49 0A 05 41 49 4E 54 70 49 4E 55 4D  // .SBFI..AINTpINUM
  FB39: 0C 16 00 04 02 41 49 4E 54                       // .....AINT

                If (LEqual (HAID, One))
                {

  FB42: A0 0C 93 48 41 49 44 01                          // ...HAID.

                    Return (SBFB)
                }


  FB4A: A4 53 42 46 42                                   // .SBFB

                Return (
  FB4F: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }


  FB50: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  FB5A: 14 14 5F 53 54 41 00                             // .._STA.

                If (
  FB61: A0 0B 92                                         // ...

LNotEqual (I2SC, Zero))
                {

  FB64: 93 49 32 53 43 00                                // .I2SC.

                    Return (0x0F)
                }


  FB6A: A4 0A 0F                                         // ...

                Return (Zero)
            }
        }


  FB6D: A4 00                                            // ..

        Device (UCM1)
        {

  FB6F: 5B 82 4B 09 55 43 4D 31                          // [.K.UCM1

            Name (_HID, "INT3515")  // _HID: Hardware ID

  FB77: 08 5F 48 49 44 0D 49 4E 54 33 35 31 35 00        // ._HID.INT3515.

            Name (_UID, Zero)  // _UID: Unique ID

  FB85: 08 5F 55 49 44 00                                // ._UID.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  FB8B: 14 4A 06 5F 43 52 53 00                          // .J._CRS.

                Name (SBFB, 
  FB93: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0038, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

  FB98: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  FBA8: 80 1A 06 00 38 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....8.\_SB.PCI0.
  FBB8: 49 32 43 30 00 79 00                             // I2C0.y.

                Name (SBFI, 
  FBBF: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y28)
                    {
                        0x00000000,
                    }
                })

  FBC4: 11 0E 0A 0B 89 06 00 05 01 00 00 00 00 79 00     // .............y.

                CreateDWordField (SBFI, \_SB.PCI0.I2C0.UCM1._CRS._Y28._INT, GINT)  // _INT: Interrupts
                Store (INUM (UCG1), GINT)

  FBD3: 8A 53 42 46 49 0A 05 47 49 4E 54 70 49 4E 55 4D  // .SBFI..GINTpINUM
  FBE3: 55 43 47 31 47 49 4E 54                          // UCG1GINT

                Return (
  FBEB: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }


  FBEC: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  FBF6: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (UCSI, One))
                {

  FBFD: A0 0A 93 55 43 53 49 01                          // ...UCSI.

                    Return (0x0F)
                }

  FC05: A4 0A 0F                                         // ...

                Else
                {

  FC08: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


  FC0A: A4 00                                            // ..

        Device (UCM2)
        {

  FC0C: 5B 82 4B 09 55 43 4D 32                          // [.K.UCM2

            Name (_HID, "INT3515")  // _HID: Hardware ID

  FC14: 08 5F 48 49 44 0D 49 4E 54 33 35 31 35 00        // ._HID.INT3515.

            Name (_UID, One)  // _UID: Unique ID

  FC22: 08 5F 55 49 44 01                                // ._UID.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  FC28: 14 4A 06 5F 43 52 53 00                          // .J._CRS.

                Name (SBFB, 
  FC30: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x003F, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

  FC35: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  FC45: 80 1A 06 00 3F 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....?.\_SB.PCI0.
  FC55: 49 32 43 30 00 79 00                             // I2C0.y.

                Name (SBFI, 
  FC5C: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y29)
                    {
                        0x00000000,
                    }
                })

  FC61: 11 0E 0A 0B 89 06 00 05 01 00 00 00 00 79 00     // .............y.

                CreateDWordField (SBFI, \_SB.PCI0.I2C0.UCM2._CRS._Y29._INT, GINT)  // _INT: Interrupts
                Store (INUM (UCG2), GINT)

  FC70: 8A 53 42 46 49 0A 05 47 49 4E 54 70 49 4E 55 4D  // .SBFI..GINTpINUM
  FC80: 55 43 47 32 47 49 4E 54                          // UCG2GINT

                Return (
  FC88: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }


  FC89: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  FC93: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (UCSI, One))
                {

  FC9A: A0 0A 93 55 43 53 49 01                          // ...UCSI.

                    Return (0x0F)
                }

  FCA2: A4 0A 0F                                         // ...

                Else
                {

  FCA5: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


  FCA7: A4 00                                            // ..

    Scope (_SB.PCI0.I2C1)
    {

  FCA9: 10 4F 5E 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .O^/._SB_PCI0I2C
  FCB9: 31                                               // 1

        Device (TPD1)
        {

  FCBA: 5B 82 42 22 54 50 44 31                          // [.B"TPD1

            Name (HID2, Zero)

  FCC2: 08 48 49 44 32 00                                // .HID2.

            Name (SBFB, 
  FCC8: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
            {
                I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                    0x00, ResourceConsumer, , Exclusive,
                    )
            })

  FCCD: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  FCDD: 80 1A 06 00 2C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....,.\_SB.PCI0.
  FCED: 49 32 43 31 00 79 00                             // I2C1.y.

            Name (SBFI, 
  FCF4: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y2A)
                {
                    0x00000000,
                }
            })

  FCF9: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

            Name (SBFG, 
  FD08: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })

  FD0D: 11 2D 0A 2A 8C 25 00 01 00 01 00 12 00 00 00 00  // .-.*.%..........
  FD1D: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
  FD2D: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

            CreateWordField (SBFG, 0x17, INT1)

  FD3B: 8B 53 42 46 47 0A 17 49 4E 54 31                 // .SBFG..INT1

            CreateDWordField (SBFI, \_SB.PCI0.I2C1.TPD1._Y2A._INT, INT2)  // _INT: Interrupts

  FD46: 8A 53 42 46 49 0A 05 49 4E 54 32                 // .SBFI..INT2

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

  FD51: 14 4B 0D 5F 49 4E 49 00                          // .K._INI.

                If (LLess (OSYS, 0x07DC))
                {
                    SRXO (GPDI, One)
                }

                Store (GNUM (GPDI), INT1)
                Store (INUM (GPDI), INT2)

  FD59: A0 12 95 4F 53 59 53 0B DC 07 53 52 58 4F 47 50  // ...OSYS...SRXOGP
  FD69: 44 49 01 70 47 4E 55 4D 47 50 44 49 49 4E 54 31  // DI.pGNUMGPDIINT1
  FD79: 70 49 4E 55 4D 47 50 44 49 49 4E 54 32           // pINUMGPDIINT2

                If (LEqual (SDM1, Zero))
                {
                    SHPO (GPDI, One)
                }


  FD86: A0 10 93 53 44 4D 31 00 53 48 50 4F 47 50 44 49  // ...SDM1.SHPOGPDI
  FD96: 01                                               // .

                If (LEqual (SDS1, 0x07))
                {
                    Store ("DELL07FB", _HID)

  FD97: A0 45 09 93 53 44 53 31 0A 07 70 0D 44 45 4C 4C  // .E..SDS1..p.DELL
  FDA7: 30 37 46 42 00 5F 48 49 44                       // 07FB._HID

                    If (CondRefOf (GGIV))
                    {

  FDB0: A0 13 5B 12 47 47 49 56 00                       // ..[.GGIV.

                        Store (GGIV (0x01060016), Local0)
                    }

                    Store (IPFI, Local0)

  FDB9: 70 47 47 49 56 0C 16 00 06 01 60 70 49 50 46 49  // pGGIV.....`pIPFI
  FDC9: 60                                               // `

                    If (LEqual (Local0, One))
                    {

  FDCA: A0 13 93 60 01                                   // ...`.

                        Store ("DELL07FA", _HID)
                    }

  FDCF: 70 0D 44 45 4C 4C 30 37 46 41 00 5F 48 49 44     // p.DELL07FA._HID

                    ElseIf
  FDDE: A1 45 04                                         // .E.

 (LEqual (Local0, 0x02))
                    {

  FDE1: A0 14 93 60 0A 02                                // ...`..

                        Store ("DELL07FB", _HID)
                    }

  FDE7: 70 0D 44 45 4C 4C 30 37 46 42 00 5F 48 49 44     // p.DELL07FB._HID

                    ElseIf
  FDF6: A1 2D                                            // .-

 (LEqual (Local0, 0x03))
                    {

  FDF8: A0 14 93 60 0A 03                                // ...`..

                        Store ("DELL0802", _HID)
                    }

  FDFE: 70 0D 44 45 4C 4C 30 38 30 32 00 5F 48 49 44     // p.DELL0802._HID

                    ElseIf
  FE0D: A1 16                                            // ..

 (LEqual (Local0, 0x04))
                    {

  FE0F: A0 14 93 60 0A 04                                // ...`..

                        Store ("DELL0803", _HID)
                    }

                    Store (0x20, HID2)

  FE15: 70 0D 44 45 4C 4C 30 38 30 33 00 5F 48 49 44 70  // p.DELL0803._HIDp
  FE25: 0A 20 48 49 44 32                                // . HID2

                    Return (Zero)
                }
            }


  FE2B: A4 00                                            // ..

            Name (_HID, "XXXX0000")  // _HID: Hardware ID

  FE2D: 08 5F 48 49 44 0D 58 58 58 58 30 30 30 30 00     // ._HID.XXXX0000.

            Name (_CID, "PNP0C50")  // _CID: Compatible ID

  FE3C: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

  FE4A: 08 5F 53 30 57 0A 03                             // ._S0W..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  FE51: 14 39 5F 44 53 4D 0C                             // .9_DSM.

                If (LEqual (Arg0, HIDG))
                {

  FE58: A0 14 93 68 48 49 44 47                          // ...hHIDG

                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }


  FE60: A4 48 49 44 44 68 69 6A 6B 48 49 44 32           // .HIDDhijkHID2

                If (LEqual (Arg0, TP7G))
                {

  FE6D: A0 18 93 68 54 50 37 47                          // ...hTP7G

                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }


  FE75: A4 54 50 37 44 68 69 6A 6B 53 42 46 42 53 42 46  // .TP7DhijkSBFBSBF
  FE85: 47                                               // G

                Return (
  FE86: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  FE87: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  FE8B: 14 1E 5F 53 54 41 00                             // .._STA.

                If (LAnd (
  FE92: A0 15 90 92                                      // ....

LGreaterEqual (OSYS, 0x07DC), 
  FE96: 95 4F 53 59 53 0B DC 07                          // .OSYS...

LEqual (SDS1, 0x07)))
                {

  FE9E: 93 53 44 53 31 0A 07                             // .SDS1..

                    Return (0x0F)
                }


  FEA5: A4 0A 0F                                         // ...

                Return (Zero)
            }


  FEA8: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

  FEAA: 14 33 5F 43 52 53 00                             // .3_CRS.

                If (LLess (OSYS, 0x07DC))
                {

  FEB1: A0 0E 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (SBFI)
                }


  FEBB: A4 53 42 46 49                                   // .SBFI

                If (LEqual (SDM1, Zero))
                {

  FEC0: A0 12 93 53 44 4D 31 00                          // ...SDM1.

                    Return (
  FEC8: A4                                               // .

ConcatenateResTemplate (SBFB, SBFG))
                }


  FEC9: 84 53 42 46 42 53 42 46 47 00                    // .SBFBSBFG.

                Return (
  FED3: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }
        }


  FED4: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

        Device (TPL1)
        {

  FEDE: 5B 82 4B 33 54 50 4C 31                          // [.K3TPL1

            Name (HID2, Zero)

  FEE6: 08 48 49 44 32 00                                // .HID2.

            Name (SBFB, 
  FEEC: 08 53 42 46 42                                   // .SBFB

ResourceTemplate ()
            {
                I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,
                    AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                    0x00, ResourceConsumer, _Y2B, Exclusive,
                    )
            })

  FEF1: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  FF01: 80 1A 06 00 4C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....L.\_SB.PCI0.
  FF11: 49 32 43 31 00 79 00                             // I2C1.y.

            Name (SBFG, 
  FF18: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
            {
                GpioInt (Level, ActiveLow, Exclusive, PullDefault, 0x0000,
                    "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })

  FF1D: 11 2D 0A 2A 8C 25 00 01 00 01 00 02 00 00 00 00  // .-.*.%..........
  FF2D: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
  FF3D: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

            Name (SBFI, 
  FF4B: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y2C)
                {
                    0x00000000,
                }
            })

  FF50: 11 0E 0A 0B 89 06 00 05 01 00 00 00 00 79 00     // .............y.

            CreateWordField (SBFB, \_SB.PCI0.I2C1.TPL1._Y2B._ADR, BADR)  // _ADR: Address

  FF5F: 8B 53 42 46 42 0A 10 42 41 44 52                 // .SBFB..BADR

            CreateDWordField (SBFB, \_SB.PCI0.I2C1.TPL1._Y2B._SPE, SPED)  // _SPE: Speed

  FF6A: 8A 53 42 46 42 0A 0C 53 50 45 44                 // .SBFB..SPED

            CreateDWordField (SBFI, \_SB.PCI0.I2C1.TPL1._Y2C._INT, INT2)  // _INT: Interrupts

  FF75: 8A 53 42 46 49 0A 05 49 4E 54 32                 // .SBFI..INT2

            CreateWordField (SBFG, 0x17, INT1)

  FF80: 8B 53 42 46 47 0A 17 49 4E 54 31                 // .SBFG..INT1

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

  FF8B: 14 49 1E 5F 49 4E 49 00                          // .I._INI.

                If (LLess (OSYS, 0x07DC))
                {
                    SRXO (GPLI, One)
                }

                Store (GNUM (GPLI), INT1)
                Store (INUM (GPLI), INT2)

  FF93: A0 12 95 4F 53 59 53 0B DC 07 53 52 58 4F 47 50  // ...OSYS...SRXOGP
  FFA3: 4C 49 01 70 47 4E 55 4D 47 50 4C 49 49 4E 54 31  // LI.pGNUMGPLIINT1
  FFB3: 70 49 4E 55 4D 47 50 4C 49 49 4E 54 32           // pINUMGPLIINT2

                If (LEqual (SDM1, Zero))
                {
                    SHPO (GPLI, One)
                }


  FFC0: A0 10 93 53 44 4D 31 00 53 48 50 4F 47 50 4C 49  // ...SDM1.SHPOGPLI
  FFD0: 01                                               // .

                If (LEqual (SDS1, One))
                {
                    Store ("ATML3432", _HID)
                    Store (Zero, HID2)
                    Store (0x4C, BADR)
                    Store (0x00061A80, SPED)

  FFD1: A0 2F 93 53 44 53 31 01 70 0D 41 54 4D 4C 33 34  // ./.SDS1.p.ATML34
  FFE1: 33 32 00 5F 48 49 44 70 00 48 49 44 32 70 0A 4C  // 32._HIDp.HID2p.L
  FFF1: 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44        // BADRp.....SPED

                    Return (Zero)
                }


  FFFF: A4 00                                            // ..

                If (LEqual (SDS1, 0x02))
                {
                    Store ("ATML2952", _HID)
                    Store (Zero, HID2)
                    Store (0x4A, BADR)
                    Store (0x00061A80, SPED)

 10001: A0 30 93 53 44 53 31 0A 02 70 0D 41 54 4D 4C 32  // .0.SDS1..p.ATML2
 10011: 39 35 32 00 5F 48 49 44 70 00 48 49 44 32 70 0A  // 952._HIDp.HID2p.
 10021: 4A 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // JBADRp.....SPED

                    Return (Zero)
                }


 10030: A4 00                                            // ..

                If (LEqual (SDS1, 0x03))
                {
                    Store ("ELAN2097", _HID)
                    Store (One, HID2)
                    Store (0x10, BADR)
                    Store (0x00061A80, SPED)

 10032: A0 30 93 53 44 53 31 0A 03 70 0D 45 4C 41 4E 32  // .0.SDS1..p.ELAN2
 10042: 30 39 37 00 5F 48 49 44 70 01 48 49 44 32 70 0A  // 097._HIDp.HID2p.
 10052: 10 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // .BADRp.....SPED

                    Return (Zero)
                }


 10061: A4 00                                            // ..

                If (LEqual (SDS1, 0x04))
                {
                    Store ("NTRG0001", _HID)
                    Store (One, HID2)
                    Store (0x07, BADR)
                    Store (0x00061A80, SPED)

 10063: A0 30 93 53 44 53 31 0A 04 70 0D 4E 54 52 47 30  // .0.SDS1..p.NTRG0
 10073: 30 30 31 00 5F 48 49 44 70 01 48 49 44 32 70 0A  // 001._HIDp.HID2p.
 10083: 07 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // .BADRp.....SPED

                    Return (Zero)
                }


 10092: A4 00                                            // ..

                If (LEqual (SDS1, 0x05))
                {
                    Store ("NTRG0002", _HID)
                    Store (One, HID2)
                    Store (0x64, BADR)
                    Store (0x00061A80, SPED)

 10094: A0 30 93 53 44 53 31 0A 05 70 0D 4E 54 52 47 30  // .0.SDS1..p.NTRG0
 100A4: 30 30 32 00 5F 48 49 44 70 01 48 49 44 32 70 0A  // 002._HIDp.HID2p.
 100B4: 64 42 41 44 52 70 0C 80 1A 06 00 53 50 45 44     // dBADRp.....SPED

                    Return (Zero)
                }


 100C3: A4 00                                            // ..

                If (LEqual (SDS1, 0x06))
                {
                    Store ("WCOM508E", _HID)
                    Store (One, HID2)
                    Store (0x0A, BADR)

 100C5: A0 4B 04 93 53 44 53 31 0A 06 70 0D 57 43 4F 4D  // .K..SDS1..p.WCOM
 100D5: 35 30 38 45 00 5F 48 49 44 70 01 48 49 44 32 70  // 508E._HIDp.HID2p
 100E5: 0A 0A 42 41 44 52                                // ..BADR

                    If (LEqual (TPLS, Zero))
                    {

 100EB: A0 11 93 54 50 4C 53 00                          // ...TPLS.

                        Store (0x00061A80, SPED)
                    }


 100F3: 70 0C 80 1A 06 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPLS, One))
                    {

 100FD: A0 11 93 54 50 4C 53 01                          // ...TPLS.

                        Store (0x000F4240, SPED)
                    }


 10105: 70 0C 40 42 0F 00 53 50 45 44                    // p.@B..SPED

                    Return (Zero)
                }


 1010F: A4 00                                            // ..

                If (LEqual (SDS1, 0x07))
                {
                    Store ("CUST0000", _HID)
                    Store (TPLH, HID2)
                    Store (TPLB, BADR)

 10111: A0 43 06 93 53 44 53 31 0A 07 70 0D 43 55 53 54  // .C..SDS1..p.CUST
 10121: 30 30 30 30 00 5F 48 49 44 70 54 50 4C 48 48 49  // 0000._HIDpTPLHHI
 10131: 44 32 70 54 50 4C 42 42 41 44 52                 // D2pTPLBBADR

                    If (LEqual (TPLS, Zero))
                    {

 1013C: A0 11 93 54 50 4C 53 00                          // ...TPLS.

                        Store (0x000186A0, SPED)
                    }


 10144: 70 0C A0 86 01 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPLS, One))
                    {

 1014E: A0 11 93 54 50 4C 53 01                          // ...TPLS.

                        Store (0x00061A80, SPED)
                    }


 10156: 70 0C 80 1A 06 00 53 50 45 44                    // p.....SPED

                    If (LEqual (TPLS, 0x02))
                    {

 10160: A0 12 93 54 50 4C 53 0A 02                       // ...TPLS..

                        Store (0x000F4240, SPED)
                    }


 10169: 70 0C 40 42 0F 00 53 50 45 44                    // p.@B..SPED

                    Return (Zero)
                }
            }


 10173: A4 00                                            // ..

            Name (_HID, "XXXX0000")  // _HID: Hardware ID

 10175: 08 5F 48 49 44 0D 58 58 58 58 30 30 30 30 00     // ._HID.XXXX0000.

            Name (_CID, "PNP0C50")  // _CID: Compatible ID

 10184: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

 10192: 08 5F 53 30 57 0A 04                             // ._S0W..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 10199: 14 39 5F 44 53 4D 0C                             // .9_DSM.

                If (LEqual (Arg0, HIDG))
                {

 101A0: A0 14 93 68 48 49 44 47                          // ...hHIDG

                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))
                }


 101A8: A4 48 49 44 44 68 69 6A 6B 48 49 44 32           // .HIDDhijkHID2

                If (LEqual (Arg0, TP7G))
                {

 101B5: A0 18 93 68 54 50 37 47                          // ...hTP7G

                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))
                }


 101BD: A4 54 50 37 44 68 69 6A 6B 53 42 46 42 53 42 46  // .TP7DhijkSBFBSBF
 101CD: 47                                               // G

                Return (
 101CE: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


 101CF: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 101D3: 14 13 5F 53 54 41 00                             // .._STA.

                If (LEqual (SDS1, 0x07))
                {

 101DA: A0 0A 93 53 44 53 31 0A 07                       // ...SDS1..

                    Return (Zero)
                }


 101E3: A4 00                                            // ..

                Return (Zero)
            }


 101E5: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

 101E7: 14 33 5F 43 52 53 00                             // .3_CRS.

                If (LLess (OSYS, 0x07DC))
                {

 101EE: A0 0E 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (SBFI)
                }


 101F8: A4 53 42 46 49                                   // .SBFI

                If (LEqual (SDM1, Zero))
                {

 101FD: A0 12 93 53 44 4D 31 00                          // ...SDM1.

                    Return (
 10205: A4                                               // .

ConcatenateResTemplate (SBFB, SBFG))
                }


 10206: 84 53 42 46 42 53 42 46 47 00                    // .SBFBSBFG.

                Return (
 10210: A4                                               // .

ConcatenateResTemplate (SBFB, SBFI))
            }
        }


 10211: 84 53 42 46 42 53 42 46 49 00                    // .SBFBSBFI.

        Device (IMP3)
        {

 1021B: 5B 82 4C 07 49 4D 50 33                          // [.L.IMP3

            Name (_ADR, Zero)  // _ADR: Address

 10223: 08 5F 41 44 52 00                                // ._ADR.

            Name (_HID, "IMPJ0003")  // _HID: Hardware ID

 10229: 08 5F 48 49 44 0D 49 4D 50 4A 30 30 30 33 00     // ._HID.IMPJ0003.

            Name (_CID, "IMPJ0003")  // _CID: Compatible ID

 10238: 08 5F 43 49 44 0D 49 4D 50 4A 30 30 30 33 00     // ._CID.IMPJ0003.

            Name (_UID, One)  // _UID: Unique ID

 10247: 08 5F 55 49 44 01                                // ._UID.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 1024D: 14 13 5F 53 54 41 00                             // .._STA.

                If (LEqual (HAID, One))
                {

 10254: A0 0A 93 48 41 49 44 01                          // ...HAID.

                    Return (0x0F)
                }


 1025C: A4 0A 0F                                         // ...

                Return (Zero)
            }


 1025F: A4 00                                            // ..

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

 10261: 14 37 5F 43 52 53 00                             // .7_CRS.

                Name (SBUF, 
 10268: 08 53 42 55 46                                   // .SBUF

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x006E, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

 1026D: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
 1027D: 80 1A 06 00 6E 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....n.\_SB.PCI0.
 1028D: 49 32 43 31 00 79 00                             // I2C1.y.

                Return (SBUF)
            }
        }
    }


 10294: A4 53 42 55 46                                   // .SBUF

    Scope (_SB.PCI0.SPI1)
    {

 10299: 10 4D 3B 2F 03 5F 53 42 5F 50 43 49 30 53 50 49  // .M;/._SB_PCI0SPI
 102A9: 31                                               // 1

        Device (FPNT)
        {

 102AA: 5B 82 4B 3A 46 50 4E 54                          // [.K:FPNT

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

 102B2: 14 46 08 5F 48 49 44 00                          // .F._HID.

                If (LEqual (SDS7, One))
                {

 102BA: A0 11 93 53 44 53 37 01                          // ...SDS7.

                    Return ("FPC1011")
                }


 102C2: A4 0D 46 50 43 31 30 31 31 00                    // ..FPC1011.

                If (LEqual (SDS7, 0x02))
                {

 102CC: A0 12 93 53 44 53 37 0A 02                       // ...SDS7..

                    Return ("FPC1020")
                }


 102D5: A4 0D 46 50 43 31 30 32 30 00                    // ..FPC1020.

                If (LEqual (SDS7, 0x03))
                {

 102DF: A0 13 93 53 44 53 37 0A 03                       // ...SDS7..

                    Return ("VFSI6101")
                }


 102E8: A4 0D 56 46 53 49 36 31 30 31 00                 // ..VFSI6101.

                If (LEqual (SDS7, 0x04))
                {

 102F3: A0 13 93 53 44 53 37 0A 04                       // ...SDS7..

                    Return ("VFSI7500")
                }


 102FC: A4 0D 56 46 53 49 37 35 30 30 00                 // ..VFSI7500.

                If (LEqual (SDS7, 0x05))
                {

 10307: A0 13 93 53 44 53 37 0A 05                       // ...SDS7..

                    Return ("EGIS0300")
                }


 10310: A4 0D 45 47 49 53 30 33 30 30 00                 // ..EGIS0300.

                If (LEqual (SDS7, 0x06))
                {

 1031B: A0 12 93 53 44 53 37 0A 06                       // ...SDS7..

                    Return ("FPC1021")
                }


 10324: A4 0D 46 50 43 31 30 32 31 00                    // ..FPC1021.

                Return ("FPNT_DIS")
            }


 1032E: A4 0D 46 50 4E 54 5F 44 49 53 00                 // ..FPNT_DIS.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                SHPO (GFPI, One)
                SHPO (GFPS, One)
            }


 10339: 14 18 5F 49 4E 49 00 53 48 50 4F 47 46 50 49 01  // .._INI.SHPOGFPI.
 10349: 53 48 50 4F 47 46 50 53 01                       // SHPOGFPS.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 10352: 14 14 5F 53 54 41 00                             // .._STA.

                If (
 10359: A0 0B 92                                         // ...

LNotEqual (SDS7, Zero))
                {

 1035C: 93 53 44 53 37 00                                // .SDS7.

                    Return (0x0F)
                }


 10362: A4 0A 0F                                         // ...

                Return (Zero)
            }


 10365: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

 10367: 14 4F 2E 5F 43 52 53 08                          // .O._CRS.


 1036F: 08 5F 54 5F 30 00                                // ._T_0.

                Name (BBUF, 
 10375: 08 42 42 55 46                                   // .BBUF

ResourceTemplate ()
                {
                    SpiSerialBusV2 (0x0000, PolarityLow, FourWireMode, 0x08,
                        ControllerInitiated, 0x00989680, ClockPolarityLow,
                        ClockPhaseFirst, "\\_SB.PCI0.SPI1",
                        0x00, ResourceConsumer, _Y2D, Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0008
                        }
                })

 1037A: 11 42 05 0A 4E 8E 21 00 01 00 02 02 00 00 01 09  // .B..N.!.........
 1038A: 00 80 96 98 00 08 00 00 00 00 5C 5F 53 42 2E 50  // ..........\_SB.P
 1039A: 43 49 30 2E 53 50 49 31 00 8C 25 00 01 01 01 00  // CI0.SPI1..%.....
 103AA: 02 00 00 00 00 00 00 17 00 00 19 00 28 00 00 00  // ............(...
 103BA: 08 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49 30  // ..\_SB.PCI0.GPI0
 103CA: 00 79 00                                         // .y.

                Name (IBUF, 
 103CD: 08 49 42 55 46                                   // .IBUF

ResourceTemplate ()
                {
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y2E)
                    {
                        0x00000000,
                    }
                })

 103D2: 11 0E 0A 0B 89 06 00 15 01 00 00 00 00 79 00     // .............y.

                Name (GBUF, 
 103E1: 08 47 42 55 46                                   // .GBUF

ResourceTemplate ()
                {
                    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, _Y2F,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

 103E6: 11 2D 0A 2A 8C 25 00 01 00 01 00 12 00 00 00 00  // .-.*.%..........
 103F6: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
 10406: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

                Name (UBUF, 
 10414: 08 55 42 55 46                                   // .UBUF

ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

 10419: 11 2D 0A 2A 8C 25 00 01 01 01 00 01 00 00 00 00  // .-.*.%..........
 10429: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
 10439: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

                CreateDWordField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2D._SPE, SPEX)  // _SPE: Speed

 10447: 8A 42 42 55 46 0A 0C 53 50 45 58                 // .BBUF..SPEX

                CreateByteField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2D._PHA, PHAX)  // _PHA: Clock Phase

 10452: 8C 42 42 55 46 0A 11 50 48 41 58                 // .BBUF..PHAX

                CreateWordField (BBUF, 0x3B, SPIN)

 1045D: 8B 42 42 55 46 0A 3B 53 50 49 4E                 // .BBUF.;SPIN

                CreateWordField (GBUF, 0x17, GPIN)

 10468: 8B 47 42 55 46 0A 17 47 50 49 4E                 // .GBUF..GPIN

                CreateDWordField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2E._INT, IPIN)  // _INT: Interrupts

 10473: 8A 49 42 55 46 0A 05 49 50 49 4E                 // .IBUF..IPIN

                CreateBitField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2E._LL, ILVL)  // _LL_: Low Level

 1047E: 8D 49 42 55 46 0A 1A 49 4C 56 4C                 // .IBUF..ILVL

                CreateBitField (IBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2E._HE, ITRG)  // _HE_: High-Edge

 10489: 8D 49 42 55 46 0A 19 49 54 52 47                 // .IBUF..ITRG

                CreateField (GBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2F._POL, 0x02, GLVL)  // _POL: Polarity

 10494: 5B 13 47 42 55 46 0A 39 0A 02 47 4C 56 4C        // [.GBUF.9..GLVL

                CreateBitField (GBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2F._MOD, GTRG)  // _MOD: Mode

 104A2: 8D 47 42 55 46 0A 38 47 54 52 47                 // .GBUF.8GTRG

                CreateBitField (BBUF, \_SB.PCI0.SPI1.FPNT._CRS._Y2D._DPL, SCSP)  // _DPL: Device Selection Polarity

 104AD: 8D 42 42 55 46 0A 39 53 43 53 50                 // .BBUF.9SCSP

                CreateWordField (UBUF, 0x17, UPIN)
                Store (GNUM (GFPS), SPIN)
                Store (GNUM (GFPI), GPIN)
                Store (INUM (GFPI), IPIN)
                Store (GNUM (GFPI), UPIN)

 104B8: 8B 55 42 55 46 0A 17 55 50 49 4E 70 47 4E 55 4D  // .UBUF..UPINpGNUM
 104C8: 47 46 50 53 53 50 49 4E 70 47 4E 55 4D 47 46 50  // GFPSSPINpGNUMGFP
 104D8: 49 47 50 49 4E 70 49 4E 55 4D 47 46 50 49 49 50  // IGPINpINUMGFPIIP
 104E8: 49 4E 70 47 4E 55 4D 47 46 50 49 55 50 49 4E     // INpGNUMGFPIUPIN

                If (LOr (LEqual (SDS7, 0x02), 
 104F7: A0 28 91 93 53 44 53 37 0A 02                    // .(..SDS7..

LEqual (SDS7, 0x06)))
                {
                    Store (Zero, ILVL)
                    Store (One, ITRG)
                    Store (Zero, GLVL)

 10501: 93 53 44 53 37 0A 06 70 00 49 4C 56 4C 70 01 49  // .SDS7..p.ILVLp.I
 10511: 54 52 47 70 00 47 4C 56 4C                       // TRGp.GLVL

                    Store (One, GTRG)
                }


 1051A: 70 01 47 54 52 47                                // p.GTRG

                If (LEqual (SDS7, 0x04))
                {
                    Store (Zero, ILVL)

 10520: A0 14 93 53 44 53 37 0A 04 70 00 49 4C 56 4C     // ...SDS7..p.ILVL

                    Store (One, ITRG)
                }


 1052F: 70 01 49 54 52 47                                // p.ITRG

                Switch (ToInteger (SDS7))
                {

 10535: A2 43 0B 01 70 99 53 44 53 37 00 5F 54 5F 30     // .C..p.SDS7._T_0

                    Case (One)
                    {
                        Store (0x00989680, SPEX)

 10544: A0 17 93 5F 54 5F 30 01 70 0C 80 96 98 00 53 50  // ..._T_0.p.....SP
 10554: 45 58                                            // EX

                        Store (Zero, PHAX)
                    }

 10556: 70 00 50 48 41 58                                // p.PHAX

                    Case
 1055C: A1 4B 08                                         // .K.

 (0x02)
                    {
                        Store (0x002DC6C0, SPEX)

 1055F: A0 18 93 5F 54 5F 30 0A 02 70 0C C0 C6 2D 00 53  // ..._T_0..p...-.S
 1056F: 50 45 58                                         // PEX

                        Store (Zero, PHAX)
                    }

 10572: 70 00 50 48 41 58                                // p.PHAX

                    Case
 10578: A1 4F 06                                         // .O.

 (0x03)
                    {
                        Store (0x007A1200, SPEX)

 1057B: A0 18 93 5F 54 5F 30 0A 03 70 0C 00 12 7A 00 53  // ..._T_0..p...z.S
 1058B: 50 45 58                                         // PEX

                        Store (One, PHAX)
                    }

 1058E: 70 01 50 48 41 58                                // p.PHAX

                    Case
 10594: A1 43 05                                         // .C.

 (0x04)
                    {
                        Store (0x007A1200, SPEX)

 10597: A0 18 93 5F 54 5F 30 0A 04 70 0C 00 12 7A 00 53  // ..._T_0..p...z.S
 105A7: 50 45 58                                         // PEX

                        Store (Zero, PHAX)
                    }

 105AA: 70 00 50 48 41 58                                // p.PHAX

                    Case
 105B0: A1 37                                            // .7

 (0x05)
                    {
                        Store (0x00F42400, SPEX)

 105B2: A0 18 93 5F 54 5F 30 0A 05 70 0C 00 24 F4 00 53  // ..._T_0..p..$..S
 105C2: 50 45 58                                         // PEX

                        Store (Zero, PHAX)
                    }

 105C5: 70 00 50 48 41 58                                // p.PHAX

                    Case
 105CB: A1 1C                                            // ..

 (0x06)
                    {
                        Store (0x002DC6C0, SPEX)

 105CD: A0 18 93 5F 54 5F 30 0A 06 70 0C C0 C6 2D 00 53  // ..._T_0..p...-.S
 105DD: 50 45 58                                         // PEX

                        Store (Zero, PHAX)
                    }

 105E0: 70 00 50 48 41 58                                // p.PHAX

                    Default
                    {
                    }


 105E6: A1 01                                            // ..

                }


 105E8: A5                                               // .

                If (LEqual (SDS7, One))
                {

 105E9: A0 0C 93 53 44 53 37 01                          // ...SDS7.

                    Return (BBUF)
                }


 105F1: A4 42 42 55 46                                   // .BBUF

                If (LAnd (LEqual (SDS7, 0x04), 
 105F6: A0 20 90 93 53 44 53 37 0A 04                    // . ..SDS7..

LEqual (SDM7, Zero)))
                {

 10600: 93 53 44 4D 37 00                                // .SDM7.

                    Return (
 10606: A4                                               // .

ConcatenateResTemplate (BBUF, ConcatenateResTemplate (UBUF, GBUF)))
                }


 10607: 84 42 42 55 46 84 55 42 55 46 47 42 55 46 00 00  // .BBUF.UBUFGBUF..

                If (LAnd (LEqual (SDS7, 0x04), 
 10617: A0 21 90 93 53 44 53 37 0A 04                    // .!..SDS7..


 10621: 92                                               // .

LNotEqual (SDM7, Zero)))
                {

 10622: 93 53 44 4D 37 00                                // .SDM7.

                    Return (
 10628: A4                                               // .

ConcatenateResTemplate (BBUF, ConcatenateResTemplate (UBUF, IBUF)))
                }


 10629: 84 42 42 55 46 84 55 42 55 46 49 42 55 46 00 00  // .BBUF.UBUFIBUF..

                If (LEqual (SDM7, Zero))
                {

 10639: A0 12 93 53 44 4D 37 00                          // ...SDM7.

                    Return (
 10641: A4                                               // .

ConcatenateResTemplate (BBUF, GBUF))
                }


 10642: 84 42 42 55 46 47 42 55 46 00                    // .BBUFGBUF.

                Return (
 1064C: A4                                               // .

ConcatenateResTemplate (BBUF, IBUF))
            }
        }
    }


 1064D: 84 42 42 55 46 49 42 55 46 00                    // .BBUFIBUF.

    Scope (_SB.PCI0.UA00)
    {

 10657: 10 4B 26 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .K&/._SB_PCI0UA0
 10667: 30                                               // 0

        Device (BTH0)
        {

 10668: 5B 82 49 25 42 54 48 30                          // [.I%BTH0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

 10670: 14 35 5F 48 49 44 00                             // .5_HID.

                If (LEqual (SDS8, One))
                {

 10677: A0 11 93 53 44 53 38 01                          // ...SDS8.

                    Return ("INT33E1")
                }


 1067F: A4 0D 49 4E 54 33 33 45 31 00                    // ..INT33E1.

                If (LEqual (SDS8, 0x02))
                {

 10689: A0 12 93 53 44 53 38 0A 02                       // ...SDS8..

                    Return ("BCM2E40")
                }


 10692: A4 0D 42 43 4D 32 45 34 30 00                    // ..BCM2E40.

                Return ("INT33E1")
            }


 1069C: A4 0D 49 4E 54 33 33 45 31 00                    // ..INT33E1.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                SHPO (GBTI, One)
                SHPO (GBTW, One)
                SHPO (GBTK, One)
            }


 106A6: 14 21 5F 49 4E 49 00 53 48 50 4F 47 42 54 49 01  // .!_INI.SHPOGBTI.
 106B6: 53 48 50 4F 47 42 54 57 01 53 48 50 4F 47 42 54  // SHPOGBTW.SHPOGBT
 106C6: 4B 01                                            // K.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

 106C8: 14 4E 1D 5F 43 52 53 00                          // .N._CRS.

                Name (SBFG, 
 106D0: 08 53 42 46 47                                   // .SBFG

ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.PCI0.UA00",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

 106D5: 11 43 0A 0A 9F 8E 22 00 01 00 03 02 35 00 01 0A  // .C....".....5...
 106E5: 00 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E  // ..... . ...\_SB.
 106F5: 50 43 49 30 2E 55 41 30 30 00 8C 25 00 01 01 01  // PCI0.UA00..%....
 10705: 00 02 00 00 00 00 00 00 17 00 00 19 00 28 00 00  // .............(..
 10715: 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49  // ...\_SB.PCI0.GPI
 10725: 30 00 8C 25 00 01 01 01 00 02 00 00 00 00 00 00  // 0..%............
 10735: 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53 42 2E  // .....(.....\_SB.
 10745: 50 43 49 30 2E 47 50 49 30 00 8C 25 00 01 00 01  // PCI0.GPI0..%....
 10755: 00 13 00 00 00 00 00 00 17 00 00 19 00 28 00 00  // .............(..
 10765: 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49  // ...\_SB.PCI0.GPI
 10775: 30 00 79 00                                      // 0.y.

                CreateWordField (SBFG, 0x8C, INT3)

 10779: 8B 53 42 46 47 0A 8C 49 4E 54 33                 // .SBFG..INT3

                CreateWordField (SBFG, 0x3C, WAK3)

 10784: 8B 53 42 46 47 0A 3C 57 41 4B 33                 // .SBFG.<WAK3

                CreateWordField (SBFG, 0x64, KIL3)
                Store (GNUM (GBTI), INT3)
                Store (GNUM (GBTW), WAK3)
                Store (GNUM (GBTK), KIL3)

 1078F: 8B 53 42 46 47 0A 64 4B 49 4C 33 70 47 4E 55 4D  // .SBFG.dKIL3pGNUM
 1079F: 47 42 54 49 49 4E 54 33 70 47 4E 55 4D 47 42 54  // GBTIINT3pGNUMGBT
 107AF: 57 57 41 4B 33 70 47 4E 55 4D 47 42 54 4B 4B 49  // WWAK3pGNUMGBTKKI
 107BF: 4C 33                                            // L3

                Name (SBFI, 
 107C1: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0020, 0x0020, "\\_SB.PCI0.UA00",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                    Interrupt (ResourceConsumer, Edge, ActiveLow, ExclusiveAndWake, ,, _Y30)
                    {
                        0x00000000,
                    }
                })

 107C6: 11 44 08 0A 80 8E 22 00 01 00 03 02 35 00 01 0A  // .D....".....5...
 107D6: 00 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E  // ..... . ...\_SB.
 107E6: 50 43 49 30 2E 55 41 30 30 00 8C 25 00 01 01 01  // PCI0.UA00..%....
 107F6: 00 02 00 00 00 00 00 00 17 00 00 19 00 28 00 00  // .............(..
 10806: 00 00 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50 49  // ...\_SB.PCI0.GPI
 10816: 30 00 8C 25 00 01 01 01 00 02 00 00 00 00 00 00  // 0..%............
 10826: 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53 42 2E  // .....(.....\_SB.
 10836: 50 43 49 30 2E 47 50 49 30 00 89 06 00 17 01 00  // PCI0.GPI0.......
 10846: 00 00 00 79 00                                   // ...y.

                CreateDWordField (SBFI, \_SB.PCI0.UA00.BTH0._CRS._Y30._INT, INT4)  // _INT: Interrupts

 1084B: 8A 53 42 46 49 0A 7A 49 4E 54 34                 // .SBFI.zINT4

                CreateWordField (SBFI, 0x3C, WAK4)

 10856: 8B 53 42 46 49 0A 3C 57 41 4B 34                 // .SBFI.<WAK4

                CreateWordField (SBFI, 0x64, KIL4)
                Store (INUM (GBTI), INT4)
                Store (GNUM (GBTW), WAK4)
                Store (GNUM (GBTK), KIL4)

 10861: 8B 53 42 46 49 0A 64 4B 49 4C 34 70 49 4E 55 4D  // .SBFI.dKIL4pINUM
 10871: 47 42 54 49 49 4E 54 34 70 47 4E 55 4D 47 42 54  // GBTIINT4pGNUMGBT
 10881: 57 57 41 4B 34 70 47 4E 55 4D 47 42 54 4B 4B 49  // WWAK4pGNUMGBTKKI
 10891: 4C 34                                            // L4

                If (LEqual (SDM8, Zero))
                {

 10893: A0 0C 93 53 44 4D 38 00                          // ...SDM8.

                    Return (SBFG)
                }

 1089B: A4 53 42 46 47                                   // .SBFG

                Else
                {

 108A0: A1 06                                            // ..

                    Return (SBFI)
                }
            }


 108A2: A4 53 42 46 49                                   // .SBFI

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 108A7: 14 14 5F 53 54 41 00                             // .._STA.

                If (
 108AE: A0 0B 92                                         // ...

LNotEqual (SDS8, Zero))
                {

 108B1: 93 53 44 53 38 00                                // .SDS8.

                    Return (0x0F)
                }


 108B7: A4 0A 0F                                         // ...

                Return (Zero)
            }


 108BA: A4 00                                            // ..

            Name (_S0W, 0x02)  // _S0W: S0 Device Wake State
        }
    }


 108BC: 08 5F 53 30 57 0A 02                             // ._S0W..

    Scope (_SB.PCI0)
    {

 108C3: 10 42 0D 2E 5F 53 42 5F 50 43 49 30              // .B.._SB_PCI0

        Device (GNSS)
        {

 108CF: 5B 82 45 0C 47 4E 53 53                          // [.E.GNSS

            Name (_HID, "INT33A2")  // _HID: Hardware ID

 108D7: 08 5F 48 49 44 0D 49 4E 54 33 33 41 32 00        // ._HID.INT33A2.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

 108E5: 14 4C 09 5F 43 52 53 00                          // .L._CRS.

                Name (BUF1, 
 108ED: 08 42 55 46 31                                   // .BUF1

ResourceTemplate ()
                {
                    UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                        0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                        0x0040, 0x0040, "\\_SB.PCI0.UA01",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

 108F2: 11 2A 0A 27 8E 22 00 01 00 03 02 35 00 01 0A 00  // .*.'.".....5....
 10902: 00 C2 01 00 40 00 40 00 00 C0 5C 5F 53 42 2E 50  // ....@.@...\_SB.P
 10912: 43 49 30 2E 55 41 30 31 00 79 00                 // CI0.UA01.y.

                Name (BUF2, 
 1091D: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
                {
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0000
                        }
                })

 10922: 11 2D 0A 2A 8C 25 00 01 01 01 00 02 00 00 00 00  // .-.*.%..........
 10932: 00 00 17 00 00 19 00 28 00 00 00 00 00 5C 5F 53  // .......(.....\_S
 10942: 42 2E 50 43 49 30 2E 47 50 49 30 00 79 00        // B.PCI0.GPI0.y.

                CreateWordField (BUF2, 0x17, RPIN)
                Store (GNUM (GGNR), RPIN)

 10950: 8B 42 55 46 32 0A 17 52 50 49 4E 70 47 4E 55 4D  // .BUF2..RPINpGNUM
 10960: 47 47 4E 52 52 50 49 4E                          // GGNRRPIN

                If (LEqual (GNSC, One))
                {

 10968: A0 12 93 47 4E 53 43 01                          // ...GNSC.

                    Return (
 10970: A4                                               // .

ConcatenateResTemplate (BUF1, BUF2))
                }

 10971: 84 42 55 46 31 42 55 46 32 00                    // .BUF1BUF2.

                Else
                {

 1097B: A1 06                                            // ..

                    Return (BUF2)
                }
            }


 1097D: A4 42 55 46 32                                   // .BUF2

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 10982: 14 13 5F 53 54 41 00                             // .._STA.

                If (LEqual (GNSC, Zero))
                {

 10989: A0 09 93 47 4E 53 43 00                          // ...GNSC.

                    Return (Zero)
                }


 10991: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


 10993: A4 0A 0F                                         // ...

    Scope (_SB.PCI0)
    {

 10996: 10 4C 67 2E 5F 53 42 5F 50 43 49 30              // .Lg._SB_PCI0

        Device (GEXP)
        {

 109A2: 5B 82 4F 66 47 45 58 50                          // [.OfGEXP

            Name (_ADR, One)  // _ADR: Address

 109AA: 08 5F 41 44 52 01                                // ._ADR.

            Name (_STA, 0x0B)  // _STA: Status

 109B0: 08 5F 53 54 41 0A 0B                             // ._STA..

            OperationRegion (BAR0, SystemMemory, SB04, 0x0208)

 109B7: 5B 80 42 41 52 30 00 53 42 30 34 0B 08 02        // [.BAR0.SB04...

            Field (BAR0, DWordAcc, NoLock, Preserve)
            {
                ICON,   32, 
                TAR,    32, 
                Offset (0x10), 
                DATA,   32, 
                HCNT,   32, 
                LCNT,   32, 
                Offset (0x2C), 
                    ,   5, 
                ABRT,   1, 
                Offset (0x40), 
                RBCK,   32, 
                Offset (0x54), 
                CLR,    32, 
                Offset (0x6C), 
                ENB,    1, 
                Offset (0x70), 
                ACTV,   1, 
                TFNF,   1, 
                    ,   1, 
                RFNE,   1, 
                Offset (0x7C), 
                HOLD,   32, 
                Offset (0x9C), 
                ENSB,   1, 
                Offset (0x204), 
                RST,    32
            }


 109C5: 5B 81 40 07 42 41 52 30 03 49 43 4F 4E 20 54 41  // [.@.BAR0.ICON TA
 109D5: 52 5F 20 00 40 04 44 41 54 41 20 48 43 4E 54 20  // R_ .@.DATA HCNT 
 109E5: 4C 43 4E 54 20 00 40 08 00 05 41 42 52 54 01 00  // LCNT .@...ABRT..
 109F5: 4A 09 52 42 43 4B 20 00 40 08 43 4C 52 5F 20 00  // J.RBCK .@.CLR_ .
 10A05: 40 0A 45 4E 42 5F 01 00 1F 41 43 54 56 01 54 46  // @.ENB_...ACTV.TF
 10A15: 4E 46 01 00 01 52 46 4E 45 01 00 4C 05 48 4F 4C  // NF...RFNE..L.HOL
 10A25: 44 20 00 40 0E 45 4E 53 42 01 00 4F B3 52 53 54  // D .@.ENSB..O.RST
 10A35: 5F 20                                            // _ 

            Method (SGEP, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, Zero)
            }


 10A37: 14 12 53 47 45 50 0B 43 53 45 52 47 45 58 4E 68  // ..SGEP.CSERGEXNh
 10A47: 69 6A 00                                         // ij.

            Method (SGED, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, One)
            }


 10A4A: 14 12 53 47 45 44 0B 43 53 45 52 47 45 58 4E 68  // ..SGED.CSERGEXNh
 10A5A: 69 6A 01                                         // ij.

            Method (GEPS, 2, Serialized)
            {

 10A5D: 14 14 47 45 50 53 0A                             // ..GEPS.

                Return (CSER (GEXN, Arg0, Arg1, Zero, 0x02))
            }


 10A64: A4 43 53 45 52 47 45 58 4E 68 69 00 0A 02        // .CSERGEXNhi...

            Method (SGEI, 3, Serialized)
            {
                CSER (GEXN, Arg0, Arg1, Arg2, 0x03)
            }


 10A72: 14 13 53 47 45 49 0B 43 53 45 52 47 45 58 4E 68  // ..SGEI.CSERGEXNh
 10A82: 69 6A 0A 03                                      // ij..

            Method (INVC, 0, NotSerialized)
            {
                Store (Zero, Local0)

 10A86: 14 3B 49 4E 56 43 00 70 00 60                    // .;INVC.p.`

                While (LLess (Local0, 0x10))
                {

 10A90: A2 31 95 60 0A 10                                // .1.`..

                    If (LEqual (R3DC (Zero, Local0, Zero), 0x02))
                    {
                        W3DC (Zero, Local0, Zero, One)
                    }


 10A96: A0 13 93 52 33 44 43 00 60 00 0A 02 57 33 44 43  // ...R3DC.`...W3DC
 10AA6: 00 60 00 01                                      // .`..

                    If (LEqual (R3DC (One, Local0, Zero), 0x02))
                    {
                        W3DC (One, Local0, Zero, One)
                    }


 10AAA: A0 13 93 52 33 44 43 01 60 00 0A 02 57 33 44 43  // ...R3DC.`...W3DC
 10ABA: 01 60 00 01                                      // .`..

                    Add (Local0, One, Local0)
                }
            }


 10ABE: 72 60 01 60                                      // r`.`

            Name (PPR, 0x08)

 10AC2: 08 50 50 52 5F 0A 08                             // .PPR_..

            Name (INR, 
 10AC9: 08 49 4E 52 5F                                   // .INR_

Package (0x03)
            {
                Zero, 
                One, 
                0x02
            })

 10ACE: 12 06 03 00 01 0A 02                             // .......

            Name (OUTR, 
 10AD5: 08 4F 55 54 52                                   // .OUTR

Package (0x03)
            {
                0x04, 
                0x05, 
                0x06
            })

 10ADA: 12 08 03 0A 04 0A 05 0A 06                       // .........

            Name (CFGR, 
 10AE3: 08 43 46 47 52                                   // .CFGR

Package (0x03)
            {
                0x0C, 
                0x0D, 
                0x0E
            })

 10AE8: 12 08 03 0A 0C 0A 0D 0A 0E                       // .........

            Name (POLR, 
 10AF1: 08 50 4F 4C 52                                   // .POLR

Package (0x03)
            {
                0x08, 
                0x09, 
                0x0A
            })

 10AF6: 12 08 03 0A 08 0A 09 0A 0A                       // .........

            Name (EXPA, 0x22)

 10AFF: 08 45 58 50 41 0A 22                             // .EXPA."

            Name (UCCH, One)

 10B06: 08 55 43 43 48 01                                // .UCCH.

            Name (END, 0x0200)

 10B0C: 08 45 4E 44 5F 0B 00 02                          // .END_...

            Name (READ, 0x0100)

 10B14: 08 52 45 41 44 0B 00 01                          // .READ...

            Name (TEMP, Zero)

 10B1C: 08 54 45 4D 50 00                                // .TEMP.

            Name (CACH, 
 10B22: 08 43 41 43 48                                   // .CACH

Package (0x02)
            {

 10B27: 12 43 0B 02                                      // .C..

                Package (0x10)
                {

 10B2B: 12 47 05 10                                      // .G..

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


 10B2F: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


 10B34: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


 10B39: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


 10B3E: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B44: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B49: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B4E: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


 10B53: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B59: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B5E: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B63: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


 10B68: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B6E: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B73: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B78: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }
                }, 


 10B7D: 12 05 02 0A 03 00                                // ......

                Package (0x10)
                {

 10B83: 12 47 05 10                                      // .G..

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


 10B87: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


 10B8C: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        Zero, 
                        Zero
                    }, 


 10B91: 12 04 02 00 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


 10B96: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10B9C: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BA1: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BA6: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


 10BAB: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BB1: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BB6: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BBB: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }, 


 10BC0: 12 05 02 0A 03 00                                // ......

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BC6: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BCB: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        One, 
                        Zero
                    }, 


 10BD0: 12 04 02 01 00                                   // .....

                    Package (0x02)
                    {
                        0x03, 
                        Zero
                    }
                }
            })

 10BD5: 12 05 02 0A 03 00                                // ......

            Method (W3DC, 4, NotSerialized)
            {

 10BDB: 14 17 57 33 44 43 04                             // ..W3DC.

                Store (Arg3, 
 10BE2: 70 6B                                            // pk

Index (DerefOf (
 10BE4: 88 83                                            // ..

Index (DerefOf (
 10BE6: 88 83                                            // ..

Index (CACH, Arg0)), Arg1)), Arg2))
            }


 10BE8: 88 43 41 43 48 68 00 69 00 6A 00                 // .CACHh.i.j.

            Method (R3DC, 3, NotSerialized)
            {

 10BF3: 14 17 52 33 44 43 03                             // ..R3DC.

                Return (
 10BFA: A4                                               // .

DerefOf (
 10BFB: 83                                               // .

Index (DerefOf (
 10BFC: 88 83                                            // ..

Index (DerefOf (
 10BFE: 88 83                                            // ..

Index (CACH, Arg0)), Arg1)), Arg2)))
            }


 10C00: 88 43 41 43 48 68 00 69 00 6A 00                 // .CACHh.i.j.

            Method (WREG, 4, Serialized)
            {
                Store (Add (Timer, 0xC350), Local1)
                Store (0x07, RST)
                Store (Zero, ENB)
                Store (RBCK, TEMP)
                Store (CLR, TEMP)
                Store (0x001C001C, HOLD)
                Store (0x0210, HCNT)
                Store (0x0280, LCNT)
                Store (Add (EXPA, Arg1), TAR)
                Store (0x65, ICON)
                Store (One, ENB)

 10C0B: 14 4B 0C 57 52 45 47 0C 70 72 5B 33 0B 50 C3 00  // .K.WREG.pr[3.P..
 10C1B: 61 70 0A 07 52 53 54 5F 70 00 45 4E 42 5F 70 52  // ap..RST_p.ENB_pR
 10C2B: 42 43 4B 54 45 4D 50 70 43 4C 52 5F 54 45 4D 50  // BCKTEMPpCLR_TEMP
 10C3B: 70 0C 1C 00 1C 00 48 4F 4C 44 70 0B 10 02 48 43  // p.....HOLDp...HC
 10C4B: 4E 54 70 0B 80 02 4C 43 4E 54 70 72 45 58 50 41  // NTp...LCNTprEXPA
 10C5B: 69 00 54 41 52 5F 70 0A 65 49 43 4F 4E 70 01 45  // i.TAR_p.eICONp.E
 10C6B: 4E 42 5F                                         // NB_

                While (
 10C6E: A2 10 92                                         // ...

LNotEqual (ENSB, One))
                {

 10C71: 93 45 4E 53 42 01                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

 10C77: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (Arg2, DATA)
                Store (Add (END, Arg3), DATA)

 10C7D: A4 00 70 6A 44 41 54 41 70 72 45 4E 44 5F 6B 00  // ..pjDATAprEND_k.
 10C8D: 44 41 54 41                                      // DATA

                While (
 10C91: A2 10 92                                         // ...

LNotEqual (ACTV, Zero))
                {

 10C94: 93 41 43 54 56 00                                // .ACTV.

                    If (LGreater (Timer, Local1))
                    {

 10C9A: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (Zero, ENB)

 10CA0: A4 00 70 00 45 4E 42 5F                          // ..p.ENB_

                While (
 10CA8: A2 10 92                                         // ...

LNotEqual (ENSB, Zero))
                {

 10CAB: 93 45 4E 53 42 00                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

 10CB1: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                W3DC (Arg1, Arg2, One, Arg3)

 10CB7: A4 00 57 33 44 43 69 6A 01 6B                    // ..W3DCij.k

                If (LEqual (R3DC (Arg1, Arg2, Zero), One))
                {
                    W3DC (Arg1, Arg2, Zero, 0x02)
                }


 10CC1: A0 13 93 52 33 44 43 69 6A 00 01 57 33 44 43 69  // ...R3DCij..W3DCi
 10CD1: 6A 00 0A 02                                      // j...

                Return (Zero)
            }


 10CD5: A4 00                                            // ..

            Method (RREG, 3, Serialized)
            {

 10CD7: 14 44 0D 52 52 45 47 0B                          // .D.RREG.

                If (LEqual (UCCH, One))
                {

 10CDF: A0 1B 93 55 43 43 48 01                          // ...UCCH.

                    If (LEqual (R3DC (Arg1, Arg2, Zero), 0x02))
                    {

 10CE7: A0 13 93 52 33 44 43 69 6A 00 0A 02              // ...R3DCij...

                        Return (R3DC (Arg1, Arg2, One))
                    }
                }

                Store (Add (Timer, 0xC350), Local1)
                Store (0x07, RST)
                Store (Zero, ENB)
                Store (RBCK, TEMP)
                Store (CLR, TEMP)
                Store (0x001C001C, HOLD)
                Store (0x0210, HCNT)
                Store (0x0280, LCNT)
                Store (Add (EXPA, Arg1), TAR)
                Store (0x65, ICON)
                Store (One, ENB)

 10CF3: A4 52 33 44 43 69 6A 01 70 72 5B 33 0B 50 C3 00  // .R3DCij.pr[3.P..
 10D03: 61 70 0A 07 52 53 54 5F 70 00 45 4E 42 5F 70 52  // ap..RST_p.ENB_pR
 10D13: 42 43 4B 54 45 4D 50 70 43 4C 52 5F 54 45 4D 50  // BCKTEMPpCLR_TEMP
 10D23: 70 0C 1C 00 1C 00 48 4F 4C 44 70 0B 10 02 48 43  // p.....HOLDp...HC
 10D33: 4E 54 70 0B 80 02 4C 43 4E 54 70 72 45 58 50 41  // NTp...LCNTprEXPA
 10D43: 69 00 54 41 52 5F 70 0A 65 49 43 4F 4E 70 01 45  // i.TAR_p.eICONp.E
 10D53: 4E 42 5F                                         // NB_

                While (
 10D56: A2 10 92                                         // ...

LNotEqual (ENSB, One))
                {

 10D59: 93 45 4E 53 42 01                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

 10D5F: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (Arg2, DATA)
                Store (Add (END, READ), DATA)

 10D65: A4 00 70 6A 44 41 54 41 70 72 45 4E 44 5F 52 45  // ..pjDATAprEND_RE
 10D75: 41 44 00 44 41 54 41                             // AD.DATA

                While (
 10D7C: A2 10 92                                         // ...

LNotEqual (ACTV, Zero))
                {

 10D7F: 93 41 43 54 56 00                                // .ACTV.

                    If (LGreater (Timer, Local1))
                    {

 10D85: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }

                Store (DATA, Local0)
                Store (Zero, ENB)

 10D8B: A4 00 70 44 41 54 41 60 70 00 45 4E 42 5F        // ..pDATA`p.ENB_

                While (
 10D99: A2 10 92                                         // ...

LNotEqual (ENSB, Zero))
                {

 10D9C: 93 45 4E 53 42 00                                // .ENSB.

                    If (LGreater (Timer, Local1))
                    {

 10DA2: A0 07 94 5B 33 61                                // ...[3a

                        Return (Zero)
                    }
                }


 10DA8: A4 00                                            // ..

                Return (Local0)
            }


 10DAA: A4 60                                            // .`

            Method (PS0, 1, Serialized)
            {

 10DAC: 14 2F 50 53 30 5F 09                             // ./PS0_.

                OperationRegion (BAR1, SystemMemory, Arg0, 0x88)

 10DB3: 5B 80 42 41 52 31 00 68 0A 88                    // [.BAR1.h..

                Field (BAR1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    D0D3,   2
                }

                Store (Zero, D0D3)

 10DBD: 5B 81 0E 42 41 52 31 03 00 40 42 44 30 44 33 02  // [..BAR1..@BD0D3.
 10DCD: 70 00 44 30 44 33                                // p.D0D3

                Store (D0D3, TEMP)
            }


 10DD3: 70 44 30 44 33 54 45 4D 50                       // pD0D3TEMP

            Method (PS3, 1, Serialized)
            {

 10DDC: 14 30 50 53 33 5F 09                             // .0PS3_.

                OperationRegion (BAR1, SystemMemory, Arg0, 0x88)

 10DE3: 5B 80 42 41 52 31 00 68 0A 88                    // [.BAR1.h..

                Field (BAR1, DWordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    D0D3,   2
                }

                Store (0x03, D0D3)

 10DED: 5B 81 0E 42 41 52 31 03 00 40 42 44 30 44 33 02  // [..BAR1..@BD0D3.
 10DFD: 70 0A 03 44 30 44 33                             // p..D0D3

                Store (D0D3, TEMP)
            }


 10E04: 70 44 30 44 33 54 45 4D 50                       // pD0D3TEMP

            Method (CSER, 5, Serialized)
            {

 10E0D: 14 45 20 43 53 45 52 0D                          // .E CSER.

                Name (SB1X, Zero)

 10E15: 08 53 42 31 58 00                                // .SB1X.

                Name (SB0X, Zero)

 10E1B: 08 53 42 30 58 00                                // .SB0X.

                Name (SMDX, Zero)

 10E21: 08 53 4D 44 58 00                                // .SMDX.

                Name (PINN, Zero)

 10E27: 08 50 49 4E 4E 00                                // .PINN.

                Name (REGN, Zero)

 10E2D: 08 52 45 47 4E 00                                // .REGN.

                Name (REGA, Zero)

 10E33: 08 52 45 47 41 00                                // .REGA.

                Name (OLDV, Zero)

 10E39: 08 4F 4C 44 56 00                                // .OLDV.

                Name (NEWV, Zero)

 10E3F: 08 4E 45 57 56 00                                // .NEWV.

                Name (RETV, Zero)

 10E45: 08 52 45 54 56 00                                // .RETV.

                If (LGreater (Arg0, 0x05))
                {

 10E4B: A0 07 94 68 0A 05                                // ...h..

                    Return (Zero)
                }


 10E51: A4 00                                            // ..

                If (LEqual (Arg0, Zero))
                {
                    Store (SB10, SB1X)
                    Store (SB00, SB0X)

 10E53: A0 1F 93 68 00 70 53 42 31 30 53 42 31 58 70 53  // ...h.pSB10SB1XpS
 10E63: 42 30 30 53 42 30 58                             // B00SB0X

                    Store (SMD0, SMDX)
                }


 10E6A: 70 53 4D 44 30 53 4D 44 58                       // pSMD0SMDX

                If (LEqual (Arg0, One))
                {
                    Store (SB11, SB1X)
                    Store (SB01, SB0X)

 10E73: A0 1F 93 68 01 70 53 42 31 31 53 42 31 58 70 53  // ...h.pSB11SB1XpS
 10E83: 42 30 31 53 42 30 58                             // B01SB0X

                    Store (SMD1, SMDX)
                }


 10E8A: 70 53 4D 44 31 53 4D 44 58                       // pSMD1SMDX

                If (LEqual (Arg0, 0x02))
                {
                    Store (SB12, SB1X)
                    Store (SB02, SB0X)

 10E93: A0 20 93 68 0A 02 70 53 42 31 32 53 42 31 58 70  // . .h..pSB12SB1Xp
 10EA3: 53 42 30 32 53 42 30 58                          // SB02SB0X

                    Store (SMD2, SMDX)
                }


 10EAB: 70 53 4D 44 32 53 4D 44 58                       // pSMD2SMDX

                If (LEqual (Arg0, 0x03))
                {
                    Store (SB13, SB1X)
                    Store (SB03, SB0X)

 10EB4: A0 20 93 68 0A 03 70 53 42 31 33 53 42 31 58 70  // . .h..pSB13SB1Xp
 10EC4: 53 42 30 33 53 42 30 58                          // SB03SB0X

                    Store (SMD3, SMDX)
                }


 10ECC: 70 53 4D 44 33 53 4D 44 58                       // pSMD3SMDX

                If (LEqual (Arg0, 0x04))
                {
                    Store (SB14, SB1X)
                    Store (SB04, SB0X)

 10ED5: A0 20 93 68 0A 04 70 53 42 31 34 53 42 31 58 70  // . .h..pSB14SB1Xp
 10EE5: 53 42 30 34 53 42 30 58                          // SB04SB0X

                    Store (SMD4, SMDX)
                }


 10EED: 70 53 4D 44 34 53 4D 44 58                       // pSMD4SMDX

                If (LEqual (Arg0, 0x05))
                {
                    Store (SB15, SB1X)
                    Store (SB05, SB0X)

 10EF6: A0 20 93 68 0A 05 70 53 42 31 35 53 42 31 58 70  // . .h..pSB15SB1Xp
 10F06: 53 42 30 35 53 42 30 58                          // SB05SB0X

                    Store (SMD5, SMDX)
                }


 10F0E: 70 53 4D 44 35 53 4D 44 58                       // pSMD5SMDX

                If (LGreater (Arg0, 0x05))
                {

 10F17: A0 07 94 68 0A 05                                // ...h..

                    Return (Zero)
                }


 10F1D: A4 00                                            // ..

                If (LGreater (Arg1, One))
                {

 10F1F: A0 06 94 69 01                                   // ...i.

                    Return (Zero)
                }


 10F24: A4 00                                            // ..

                If (LGreater (Arg2, 0x17))
                {

 10F26: A0 07 94 6A 0A 17                                // ...j..

                    Return (Zero)
                }


 10F2C: A4 00                                            // ..

                If (LGreater (Arg3, One))
                {

 10F2E: A0 06 94 6B 01                                   // ...k.

                    Return (Zero)
                }


 10F33: A4 00                                            // ..

                If (LGreater (Arg4, 0x02))
                {

 10F35: A0 07 94 6C 0A 02                                // ...l..

                    Return (Zero)
                }


 10F3B: A4 00                                            // ..

                If (
 10F3D: A0 0B 92                                         // ...

LNotEqual (SMDX, 0x03))
                {

 10F40: 93 53 4D 44 58 0A 03                             // .SMDX..

                    Return (Zero)
                }


 10F47: A4 00                                            // ..

                If (LEqual (Arg4, Zero))
                {

 10F49: A0 0A 93 6C 00                                   // ...l.

                    Store (OUTR, Local0)
                }


 10F4E: 70 4F 55 54 52 60                                // pOUTR`

                If (LEqual (Arg4, One))
                {

 10F54: A0 0A 93 6C 01                                   // ...l.

                    Store (CFGR, Local0)
                }


 10F59: 70 43 46 47 52 60                                // pCFGR`

                If (LEqual (Arg4, 0x02))
                {

 10F5F: A0 0B 93 6C 0A 02                                // ...l..

                    Store (INR, Local0)
                }


 10F65: 70 49 4E 52 5F 60                                // pINR_`

                If (LEqual (Arg4, 0x03))
                {

 10F6B: A0 0B 93 6C 0A 03                                // ...l..

                    Store (POLR, Local0)
                }

                PS0 (SB1X)
                Divide (Arg2, PPR, PINN, REGN)
                Store (DerefOf (
 10F71: 70 50 4F 4C 52 60 50 53 30 5F 53 42 31 58 78 6A  // pPOLR`PS0_SB1Xxj
 10F81: 50 50 52 5F 50 49 4E 4E 52 45 47 4E 70 83        // PPR_PINNREGNp.

Index (Local0, REGN)), REGA)
                Store (RREG (SB0X, Arg1, REGA), OLDV)

 10F8F: 88 60 52 45 47 4E 00 52 45 47 41 70 52 52 45 47  // .`REGN.REGApRREG
 10F9F: 53 42 30 58 69 52 45 47 41 4F 4C 44 56           // SB0XiREGAOLDV

                If (LEqual (Arg4, 0x02))
                {

 10FAC: A0 17 93 6C 0A 02                                // ...l..

                    Store (And (One, ShiftRight (OLDV, PINN)), RETV)
                }

 10FB2: 70 7B 01 7A 4F 4C 44 56 50 49 4E 4E 00 00 52 45  // p{.zOLDVPINN..RE
 10FC2: 54 56                                            // TV

                Else
                {
                    And (OLDV, Not (ShiftLeft (One, PINN)), NEWV)
                    Or (ShiftLeft (Arg3, PINN), NEWV, NEWV)

 10FC4: A1 41 04 7B 4F 4C 44 56 80 79 01 50 49 4E 4E 00  // .A.{OLDV.y.PINN.
 10FD4: 00 4E 45 57 56 7D 79 6B 50 49 4E 4E 00 4E 45 57  // .NEWV}ykPINN.NEW
 10FE4: 56 4E 45 57 56                                   // VNEWV

                    If (
 10FE9: A0 1C 92                                         // ...

LNotEqual (NEWV, OLDV))
                    {
                        WREG (SB0X, Arg1, REGA, NEWV)
                    }
                }

                PS3 (SB1X)

 10FEC: 93 4E 45 57 56 4F 4C 44 56 57 52 45 47 53 42 30  // .NEWVOLDVWREGSB0
 10FFC: 58 69 52 45 47 41 4E 45 57 56 50 53 33 5F 53 42  // XiREGANEWVPS3_SB
 1100C: 31 58                                            // 1X

                Return (RETV)
            }
        }
    }


 1100E: A4 52 45 54 56                                   // .RETV

    If (LEqual (PCHV (), SPTL))
    {

 11013: A0 4A 2D 93 50 43 48 56 53 50 54 4C              // .J-.PCHVSPTL

        Scope (_SB.PCI0)
        {

 1101F: 10 4E 2C 2E 5F 53 42 5F 50 43 49 30              // .N,._SB_PCI0

            Device (PEMC)
            {

 1102B: 5B 82 41 1A 50 45 4D 43                          // [.A.PEMC

                Name (_ADR, 0x001E0004)  // _ADR: Address

 11033: 08 5F 41 44 52 0C 04 00 1E 00                    // ._ADR.....

                OperationRegion (SCSR, PCI_Config, Zero, 0x0100)

 1103D: 5B 80 53 43 53 52 02 00 0B 00 01                 // [.SCSR.....

                Field (SCSR, WordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PSTA,   32, 
                    Offset (0xA2), 
                        ,   2, 
                    PGEN,   1
                }


 11048: 5B 81 18 53 43 53 52 02 00 40 42 50 53 54 41 20  // [..SCSR..@BPSTA 
 11058: 00 40 0D 00 02 50 47 45 4E 01                    // .@...PGEN.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    Store (Zero, PGEN)
                    PCRA (0xC0, 0x0600, 0x7FFFFFBA)
                    Sleep (0x02)
                    PCRO (0xC0, 0x0600, 0x80000045)
                    And (PSTA, 0xFFFFFFFC, PSTA)

 11062: 14 44 04 5F 50 53 30 08 70 00 50 47 45 4E 50 43  // .D._PS0.p.PGENPC
 11072: 52 41 0A C0 0B 00 06 0C BA FF FF 7F 5B 22 0A 02  // RA..........["..
 11082: 50 43 52 4F 0A C0 0B 00 06 0C 45 00 00 80 7B 50  // PCRO......E...{P
 11092: 53 54 41 0C FC FF FF FF 50 53 54 41              // STA.....PSTA

                    Store (PSTA, TEMP)
                }


 1109E: 70 50 53 54 41 54 45 4D 50                       // pPSTATEMP

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    Store (One, PGEN)
                    Or (PSTA, 0x03, PSTA)

 110A7: 14 20 5F 50 53 33 08 70 01 50 47 45 4E 7D 50 53  // . _PS3.p.PGEN}PS
 110B7: 54 41 0A 03 50 53 54 41                          // TA..PSTA

                    Store (PSTA, TEMP)
                }


 110BF: 70 50 53 54 41 54 45 4D 50                       // pPSTATEMP

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

 110C8: 14 4E 0E 5F 44 53 4D 0C                          // .N._DSM.


 110D0: 08 5F 54 5F 31 00                                // ._T_1.


 110D6: 08 5F 54 5F 30 00                                // ._T_0.

                    If (PCIC (Arg0))
                    {

 110DC: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }

                    ADBG (
 110E3: A4 50 43 49 44 68 69 6A 6B 41 44 42 47           // .PCIDhijkADBG

Concatenate ("EMH4=", ToDecimalString (EMH4)))

 110F0: 73 0D 45 4D 48 34 3D 00 97 45 4D 48 34 00 00     // s.EMH4=..EMH4..

                    If (LEqual (Arg0, 
 110FF: A0 42 0B 93 68                                   // .B..h

ToUUID ("f6c13ea5-65cd-461f-ab7a-29f7e8d5bd61")))
                    {

 11104: 11 13 0A 10 A5 3E C1 F6 CD 65 1F 46 AB 7A 29 F7  // .....>...e.F.z).
 11114: E8 D5 BD 61                                      // ...a

                        If (
 11118: A0 49 09 92                                      // .I..

LGreaterEqual (Arg1, Zero))
                        {

 1111C: 95 69 00                                         // .i.

                            Switch (ToInteger (Arg2))
                            {

 1111F: A2 42 09 01 70 99 6A 00 5F 54 5F 30              // .B..p.j._T_0

                                Case (Zero)
                                {

 1112B: A0 1D 93 5F 54 5F 30 00                          // ..._T_0.

                                    If (LEqual (EMH4, One))
                                    {

 11133: A0 0E 93 45 4D 48 34 01                          // ...EMH4.

                                        Return (
 1113B: A4                                               // .

Buffer (0x02)
                                        {
                                             0x61, 0x02                                     
                                        })
                                    }


 1113C: 11 05 0A 02 61 02                                // ....a.

                                    Return (
 11142: A4                                               // .

Buffer (0x02)
                                    {
                                         0x21, 0x02                                     
                                    })
                                }

 11143: 11 05 0A 02 21 02                                // ....!.

                                Case
 11149: A1 47 06                                         // .G.

 (0x05)
                                {

 1114C: A0 0D 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                    Return (
 11155: A4                                               // .

Buffer (One)
                                    {
                                         0x03                                           
                                    })
                                }

 11156: 11 03 01 03                                      // ....

                                Case
 1115A: A1 46 05                                         // .F.

 (0x06)
                                {

 1115D: A0 0D 93 5F 54 5F 30 0A 06                       // ..._T_0..

                                    Return (
 11166: A4                                               // .

Buffer (One)
                                    {
                                         0x05                                           
                                    })
                                }

 11167: 11 03 01 05                                      // ....

                                Case
 1116B: A1 45 04                                         // .E.

 (0x09)
                                {

 1116E: A0 42 04 93 5F 54 5F 30 0A 09                    // .B.._T_0..

                                    Switch (EMDS)
                                    {

 11178: A2 38 01 70 45 4D 44 53 5F 54 5F 31              // .8.pEMDS_T_1

                                        Case (Zero)
                                        {

 11184: A0 0C 93 5F 54 5F 31 00                          // ..._T_1.

                                            Return (
 1118C: A4                                               // .

Buffer (One)
                                            {
                                                 0x00                                           
                                            })
                                        }

 1118D: 11 03 01 00                                      // ....

                                        Case
 11191: A1 1E                                            // ..

 (One)
                                        {

 11193: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                                            Return (
 1119B: A4                                               // .

Buffer (One)
                                            {
                                                 0x01                                           
                                            })
                                        }

 1119C: 11 03 01 01                                      // ....

                                        Case
 111A0: A1 0F                                            // ..

 (0x04)
                                        {

 111A2: A0 0D 93 5F 54 5F 31 0A 04                       // ..._T_1..

                                            Return (
 111AB: A4                                               // .

Buffer (One)
                                            {
                                                 0x04                                           
                                            })
                                        }


 111AC: 11 03 01 04                                      // ....

                                    }
                                }


 111B0: A5                                               // .

                            }
                        }
                    }


 111B1: A5                                               // .

                    Return (
 111B2: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


 111B3: 11 03 01 00                                      // ....

                Device (CARD)
                {

 111B7: 5B 82 15 43 41 52 44                             // [..CARD

                    Name (_ADR, 0x08)  // _ADR: Address

 111BE: 08 5F 41 44 52 0A 08                             // ._ADR..

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

 111C5: 14 08 5F 52 4D 56 00                             // .._RMV.

                        Return (Zero)
                    }
                }
            }


 111CC: A4 00                                            // ..

            Device (PSDC)
            {

 111CE: 5B 82 4E 11 50 53 44 43                          // [.N.PSDC

                Name (_ADR, 0x001E0006)  // _ADR: Address

 111D6: 08 5F 41 44 52 0C 06 00 1E 00                    // ._ADR.....

                OperationRegion (SCSR, PCI_Config, Zero, 0x0100)

 111E0: 5B 80 53 43 53 52 02 00 0B 00 01                 // [.SCSR.....

                Field (SCSR, WordAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PSTA,   32, 
                    Offset (0xA2), 
                        ,   2, 
                    PGEN,   1
                }


 111EB: 5B 81 18 53 43 53 52 02 00 40 42 50 53 54 41 20  // [..SCSR..@BPSTA 
 111FB: 00 40 0D 00 02 50 47 45 4E 01                    // .@...PGEN.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    Store (Zero, PGEN)
                    PCRA (0xC0, 0x0600, 0xFFFFFE7A)
                    Sleep (0x02)
                    PCRO (0xC0, 0x0600, 0x0185)
                    And (PSTA, 0xFFFFFFFC, PSTA)

 11205: 14 42 04 5F 50 53 30 08 70 00 50 47 45 4E 50 43  // .B._PS0.p.PGENPC
 11215: 52 41 0A C0 0B 00 06 0C 7A FE FF FF 5B 22 0A 02  // RA......z...["..
 11225: 50 43 52 4F 0A C0 0B 00 06 0B 85 01 7B 50 53 54  // PCRO........{PST
 11235: 41 0C FC FF FF FF 50 53 54 41                    // A.....PSTA

                    Store (PSTA, TEMP)
                }


 1123F: 70 50 53 54 41 54 45 4D 50                       // pPSTATEMP

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    Store (One, PGEN)
                    Or (PSTA, 0x03, PSTA)

 11248: 14 20 5F 50 53 33 08 70 01 50 47 45 4E 7D 50 53  // . _PS3.p.PGEN}PS
 11258: 54 41 0A 03 50 53 54 41                          // TA..PSTA

                    Store (PSTA, TEMP)
                }


 11260: 70 50 53 54 41 54 45 4D 50                       // pPSTATEMP

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

 11269: 14 44 08 5F 44 53 4D 0C                          // .D._DSM.


 11271: 08 5F 54 5F 30 00                                // ._T_0.

                    If (PCIC (Arg0))
                    {

 11277: A0 0F 50 43 49 43 68                             // ..PCICh

                        Return (PCID (Arg0, Arg1, Arg2, Arg3))
                    }


 1127E: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                    If (LEqual (Arg0, 
 11287: A0 41 06 93 68                                   // .A..h

ToUUID ("f6c13ea5-65cd-461f-ab7a-29f7e8d5bd61")))
                    {

 1128C: 11 13 0A 10 A5 3E C1 F6 CD 65 1F 46 AB 7A 29 F7  // .....>...e.F.z).
 1129C: E8 D5 BD 61                                      // ...a

                        If (
 112A0: A0 48 04 92                                      // .H..

LGreaterEqual (Arg1, Zero))
                        {

 112A4: 95 69 00                                         // .i.

                            Switch (ToInteger (Arg2))
                            {

 112A7: A2 41 04 01 70 99 6A 00 5F 54 5F 30              // .A..p.j._T_0

                                Case (Zero)
                                {

 112B3: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                    Return (
 112BB: A4                                               // .

Buffer (One)
                                    {
                                         0x19                                           
                                    })
                                }

 112BC: 11 03 01 19                                      // ....

                                Case
 112C0: A1 27                                            // .'

 (0x03)
                                {
                                    Sleep (0x64)

 112C2: A0 11 93 5F 54 5F 30 0A 03 5B 22 0A 64           // ..._T_0..[".d

                                    Return (
 112CF: A4                                               // .

Buffer (One)
                                    {
                                         0x00                                           
                                    })
                                }

 112D0: 11 03 01 00                                      // ....

                                Case
 112D4: A1 13                                            // ..

 (0x04)
                                {
                                    Sleep (0x64)

 112D6: A0 11 93 5F 54 5F 30 0A 04 5B 22 0A 64           // ..._T_0..[".d

                                    Return (
 112E3: A4                                               // .

Buffer (One)
                                    {
                                         0x00                                           
                                    })
                                }


 112E4: 11 03 01 00                                      // ....

                            }
                        }
                    }


 112E8: A5                                               // .

                    Return (
 112E9: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }
        }
    }


 112EA: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

 112EE: 10 4B 05 2E 5F 53 42 5F 50 43 49 30              // .K.._SB_PCI0

        Device (ISHD)
        {

 112FA: 5B 82 4E 04 49 53 48 44                          // [.N.ISHD

            Name (_ADR, 0x00130000)  // _ADR: Address

 11302: 08 5F 41 44 52 0C 00 00 13 00                    // ._ADR.....

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

 1130C: 14 3D 5F 44 53 4D 04                             // .=_DSM.

                If (PCIC (Arg0))
                {

 11313: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


 1131A: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (CondRefOf (HIWC))
                {

 11323: A0 21 5B 12 48 49 57 43 00                       // .![.HIWC.

                    If (HIWC (Arg0))
                    {

 1132C: A0 18 48 49 57 43 68                             // ..HIWCh

                        If (CondRefOf (HIDW))
                        {

 11333: A0 11 5B 12 48 49 44 57 00                       // ..[.HIDW.

                            Return (HIDW (Arg0, Arg1, Arg2, Arg3))
                        }
                    }
                }


 1133C: A4 48 49 44 57 68 69 6A 6B                       // .HIDWhijk

                Return (
 11345: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


 11346: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {

 1134A: 10 4C 17 2E 5F 53 42 5F 50 43 49 30              // .L.._SB_PCI0

        Device (HECI)
        {

 11356: 5B 82 4F 16 48 45 43 49                          // [.O.HECI

            Name (_ADR, 0x00160000)  // _ADR: Address

 1135E: 08 5F 41 44 52 0C 00 00 16 00                    // ._ADR.....

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

 11368: 14 4E 15 5F 44 53 4D 04                          // .N._DSM.

                If (PCIC (Arg0))
                {

 11370: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


 11377: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                Method (HIDW, 4, Serialized)
                {

 11380: 14 4C 0F 48 49 44 57 0C                          // .L.HIDW.


 11388: 08 5F 54 5F 30 00                                // ._T_0.

                    If (LEqual (Arg0, 
 1138E: A0 47 0E 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
                    {

 11393: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 113A3: B6 A2 FE 37                                      // ...7

                        If (LEqual (Arg2, Zero))
                        {

 113A7: A0 12 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, Zero))
                            {

 113AC: A0 09 93 69 00                                   // ...i.

                                Return (
 113B1: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

 113B2: 11 03 01 03                                      // ....

                            Else
                            {

 113B6: A1 03                                            // ..

                                Return (Zero)
                            }
                        }


 113B8: A4 00                                            // ..

                        If (LEqual (Arg2, One))
                        {

 113BA: A0 47 0B 93 6A 01                                // .G..j.

                            Switch (ToInteger (DerefOf (
 113C0: A2 4F 0A 01 70 99 83                             // .O..p..

Index (Arg3, Zero))))
                            {

 113C7: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                                Case (Zero)
                                {

 113D0: A0 33 93 5F 54 5F 30 00                          // .3._T_0.

                                    If (CondRefOf (\_SB.HIDD))
                                    {
                                        Notify (^^^^HIDD, 0xCE)
                                        Notify (^^^^HIDD, 0xCF)
                                        P8XH (Zero, 0x5C)
                                    }
                                }

 113D8: A0 2B 5B 12 5C 2E 5F 53 42 5F 48 49 44 44 00 86  // .+[.\._SB_HIDD..
 113E8: 5E 5E 5E 5E 48 49 44 44 0A CE 86 5E 5E 5E 5E 48  // ^^^^HIDD...^^^^H
 113F8: 49 44 44 0A CF 50 38 58 48 00 0A 5C              // IDD..P8XH..\

                                Case
 11404: A1 4A 06                                         // .J.

 (One)
                                {

 11407: A0 24 93 5F 54 5F 30 01                          // .$._T_0.

                                    If (CondRefOf (\_SB.SBTN))
                                    {
                                        Notify (SBTN, 0x80)
                                        P8XH (Zero, 0x5D)
                                    }
                                }

 1140F: A0 1C 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00 86  // ..[.\._SB_SBTN..
 1141F: 53 42 54 4E 0A 80 50 38 58 48 00 0A 5D           // SBTN..P8XH..]

                                Case
 1142C: A1 42 04                                         // .B.

 (0x02)
                                {

 1142F: A0 1E 93 5F 54 5F 30 0A 02                       // ..._T_0..

                                    If (CondRefOf (\_SB.PBTN))
                                    {

 11438: A0 15 5B 12 5C 2E 5F 53 42 5F 50 42 54 4E 00     // ..[.\._SB_PBTN.

                                        Notify (PBTN, 0x02)
                                    }
                                }

 11447: 86 50 42 54 4E 0A 02                             // .PBTN..

                                Case
 1144E: A1 20                                            // . 

 (0x03)
                                {

 11450: A0 1E 93 5F 54 5F 30 0A 03                       // ..._T_0..

                                    If (CondRefOf (\_SB.PBTN))
                                    {

 11459: A0 15 5B 12 5C 2E 5F 53 42 5F 50 42 54 4E 00     // ..[.\._SB_PBTN.

                                        Notify (PBTN, 0x80)
                                    }
                                }


 11468: 86 50 42 54 4E 0A 80                             // .PBTN..

                            }


 1146F: A5                                               // .

                            Return (Zero)
                        }

 11470: A4 00                                            // ..

                        Else
                        {

 11472: A1 03                                            // ..

                            Return (Zero)
                        }
                    }

 11474: A4 00                                            // ..

                    Else
                    {

 11476: A1 06                                            // ..

                        Return (
 11478: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 11479: 11 03 01 00                                      // ....

                Method (HIWC, 1, NotSerialized)
                {

 1147D: 14 22 48 49 57 43 01                             // ."HIWC.

                    If (LEqual (Arg0, 
 11484: A0 19 93 68                                      // ...h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
                    {

 11488: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 11498: B6 A2 FE 37                                      // ...7

                        Return (One)
                    }


 1149C: A4 01                                            // ..

                    Return (Zero)
                }


 1149E: A4 00                                            // ..

                If (CondRefOf (HIWC))
                {

 114A0: A0 21 5B 12 48 49 57 43 00                       // .![.HIWC.

                    If (HIWC (Arg0))
                    {

 114A9: A0 18 48 49 57 43 68                             // ..HIWCh

                        If (CondRefOf (HIDW))
                        {

 114B0: A0 11 5B 12 48 49 44 57 00                       // ..[.HIDW.

                            Return (HIDW (Arg0, Arg1, Arg2, Arg3))
                        }
                    }
                }


 114B9: A4 48 49 44 57 68 69 6A 6B                       // .HIDWhijk

                Return (
 114C2: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


 114C3: 11 03 01 00                                      // ....

    Name (ECUP, One)

 114C7: 08 45 43 55 50 01                                // .ECUP.

    Mutex (EHLD, 0x00)

 114CD: 5B 01 45 48 4C 44 00                             // [.EHLD.

    Method (TBTD, 1, Serialized)
    {

 114D4: 14 4A 0C 54 42 54 44 09                          // .J.TBTD.

        ADBG ("TBTD")

 114DC: 08 5F 54 5F 30 00 41 44 42 47 0D 54 42 54 44 00  // ._T_0.ADBG.TBTD.

        Switch (ToInteger (Arg0))
        {

 114EC: A2 4C 09 01 70 99 68 00 5F 54 5F 30              // .L..p.h._T_0

            Case (
 114F8: A0 23 92 93 89                                   // .#...

Package (0x08)
                {
                    One, 
                    0x02, 
                    0x03, 
                    0x04, 
                    0x05, 
                    0x06, 
                    0x07, 
                    0x08
                }

)
            {

 114FD: 12 11 08 01 0A 02 0A 03 0A 04 0A 05 0A 06 0A 07  // ................
 1150D: 0A 08 01 5F 54 5F 30 00 00 00 FF                 // ..._T_0....

                Store (0x1C, Local0)
            }

 11518: 70 0A 1C 60                                      // p..`

            Case
 1151C: A1 4B 06                                         // .K.

 (
 1151F: A0 24 92 93 89                                   // .$...

Package (0x08)
                {
                    0x09, 
                    0x0A, 
                    0x0B, 
                    0x0C, 
                    0x0D, 
                    0x0E, 
                    0x0F, 
                    0x10
                }

)
            {

 11524: 12 12 08 0A 09 0A 0A 0A 0B 0A 0C 0A 0D 0A 0E 0A  // ................
 11534: 0F 0A 10 01 5F 54 5F 30 00 00 00 FF              // ...._T_0....

                Store (0x1D, Local0)
            }

 11540: 70 0A 1D 60                                      // p..`

            Case
 11544: A1 43 04                                         // .C.

 (
 11547: A0 24 92 93 89                                   // .$...

Package (0x08)
                {
                    0x11, 
                    0x12, 
                    0x13, 
                    0x14, 
                    0x15, 
                    0x16, 
                    0x17, 
                    0x18
                }

)
            {

 1154C: 12 12 08 0A 11 0A 12 0A 13 0A 14 0A 15 0A 16 0A  // ................
 1155C: 17 0A 18 01 5F 54 5F 30 00 00 00 FF              // ...._T_0....

                Store (0x1B, Local0)
            }

 11568: 70 0A 1B 60                                      // p..`

            Case
 1156C: A1 1B                                            // ..

 (
 1156E: A0 19 92 93 89                                   // .....

Package (0x03)
                {
                    0x19, 
                    0x1A, 
                    0x1B
                }

)
            {

 11573: 12 08 03 0A 19 0A 1A 0A 1B 01 5F 54 5F 30 00 00  // .........._T_0..
 11583: 00 FF                                            // ..

                Store (One, Local0)
            }


 11585: 70 01 60                                         // p.`

        }

        ADBG ("Device no")
        ADBG (Local0)

 11588: A5 41 44 42 47 0D 44 65 76 69 63 65 20 6E 6F 00  // .ADBG.Device no.
 11598: 41 44 42 47 60                                   // ADBG`

        Return (Local0)
    }


 1159D: A4 60                                            // .`

    Method (TBTF, 1, Serialized)
    {

 1159F: 14 42 27 54 42 54 46 09                          // .B'TBTF.

        ADBG ("TBTF")

 115A7: 08 5F 54 5F 30 00 41 44 42 47 0D 54 42 54 46 00  // ._T_0.ADBG.TBTF.

        Switch (ToInteger (Arg0))
        {

 115B7: A2 42 24 01 70 99 68 00 5F 54 5F 30              // .B$.p.h._T_0

            Case (One)
            {

 115C3: A0 11 93 5F 54 5F 30 01                          // ..._T_0.

                Store (And (RPA1, 0x0F), Local0)
            }

 115CB: 70 7B 52 50 41 31 0A 0F 00 60                    // p{RPA1...`

            Case
 115D5: A1 43 22                                         // .C"

 (0x02)
            {

 115D8: A0 12 93 5F 54 5F 30 0A 02                       // ..._T_0..

                Store (And (RPA2, 0x0F), Local0)
            }

 115E1: 70 7B 52 50 41 32 0A 0F 00 60                    // p{RPA2...`

            Case
 115EB: A1 4D 20                                         // .M 

 (0x03)
            {

 115EE: A0 12 93 5F 54 5F 30 0A 03                       // ..._T_0..

                Store (And (RPA3, 0x0F), Local0)
            }

 115F7: 70 7B 52 50 41 33 0A 0F 00 60                    // p{RPA3...`

            Case
 11601: A1 47 1F                                         // .G.

 (0x04)
            {

 11604: A0 12 93 5F 54 5F 30 0A 04                       // ..._T_0..

                Store (And (RPA4, 0x0F), Local0)
            }

 1160D: 70 7B 52 50 41 34 0A 0F 00 60                    // p{RPA4...`

            Case
 11617: A1 41 1E                                         // .A.

 (0x05)
            {

 1161A: A0 12 93 5F 54 5F 30 0A 05                       // ..._T_0..

                Store (And (RPA5, 0x0F), Local0)
            }

 11623: 70 7B 52 50 41 35 0A 0F 00 60                    // p{RPA5...`

            Case
 1162D: A1 4B 1C                                         // .K.

 (0x06)
            {

 11630: A0 12 93 5F 54 5F 30 0A 06                       // ..._T_0..

                Store (And (RPA6, 0x0F), Local0)
            }

 11639: 70 7B 52 50 41 36 0A 0F 00 60                    // p{RPA6...`

            Case
 11643: A1 45 1B                                         // .E.

 (0x07)
            {

 11646: A0 12 93 5F 54 5F 30 0A 07                       // ..._T_0..

                Store (And (RPA7, 0x0F), Local0)
            }

 1164F: 70 7B 52 50 41 37 0A 0F 00 60                    // p{RPA7...`

            Case
 11659: A1 4F 19                                         // .O.

 (0x08)
            {

 1165C: A0 12 93 5F 54 5F 30 0A 08                       // ..._T_0..

                Store (And (RPA8, 0x0F), Local0)
            }

 11665: 70 7B 52 50 41 38 0A 0F 00 60                    // p{RPA8...`

            Case
 1166F: A1 49 18                                         // .I.

 (0x09)
            {

 11672: A0 12 93 5F 54 5F 30 0A 09                       // ..._T_0..

                Store (And (RPA9, 0x0F), Local0)
            }

 1167B: 70 7B 52 50 41 39 0A 0F 00 60                    // p{RPA9...`

            Case
 11685: A1 43 17                                         // .C.

 (0x0A)
            {

 11688: A0 12 93 5F 54 5F 30 0A 0A                       // ..._T_0..

                Store (And (RPAA, 0x0F), Local0)
            }

 11691: 70 7B 52 50 41 41 0A 0F 00 60                    // p{RPAA...`

            Case
 1169B: A1 4D 15                                         // .M.

 (0x0B)
            {

 1169E: A0 12 93 5F 54 5F 30 0A 0B                       // ..._T_0..

                Store (And (RPAB, 0x0F), Local0)
            }

 116A7: 70 7B 52 50 41 42 0A 0F 00 60                    // p{RPAB...`

            Case
 116B1: A1 47 14                                         // .G.

 (0x0C)
            {

 116B4: A0 12 93 5F 54 5F 30 0A 0C                       // ..._T_0..

                Store (And (RPAC, 0x0F), Local0)
            }

 116BD: 70 7B 52 50 41 43 0A 0F 00 60                    // p{RPAC...`

            Case
 116C7: A1 41 13                                         // .A.

 (0x0D)
            {

 116CA: A0 12 93 5F 54 5F 30 0A 0D                       // ..._T_0..

                Store (And (RPAD, 0x0F), Local0)
            }

 116D3: 70 7B 52 50 41 44 0A 0F 00 60                    // p{RPAD...`

            Case
 116DD: A1 4B 11                                         // .K.

 (0x0E)
            {

 116E0: A0 12 93 5F 54 5F 30 0A 0E                       // ..._T_0..

                Store (And (RPAE, 0x0F), Local0)
            }

 116E9: 70 7B 52 50 41 45 0A 0F 00 60                    // p{RPAE...`

            Case
 116F3: A1 45 10                                         // .E.

 (0x0F)
            {

 116F6: A0 12 93 5F 54 5F 30 0A 0F                       // ..._T_0..

                Store (And (RPAF, 0x0F), Local0)
            }

 116FF: 70 7B 52 50 41 46 0A 0F 00 60                    // p{RPAF...`

            Case
 11709: A1 4F 0E                                         // .O.

 (0x10)
            {

 1170C: A0 12 93 5F 54 5F 30 0A 10                       // ..._T_0..

                Store (And (RPAG, 0x0F), Local0)
            }

 11715: 70 7B 52 50 41 47 0A 0F 00 60                    // p{RPAG...`

            Case
 1171F: A1 49 0D                                         // .I.

 (0x11)
            {

 11722: A0 12 93 5F 54 5F 30 0A 11                       // ..._T_0..

                Store (And (RPAH, 0x0F), Local0)
            }

 1172B: 70 7B 52 50 41 48 0A 0F 00 60                    // p{RPAH...`

            Case
 11735: A1 43 0C                                         // .C.

 (0x12)
            {

 11738: A0 12 93 5F 54 5F 30 0A 12                       // ..._T_0..

                Store (And (RPAI, 0x0F), Local0)
            }

 11741: 70 7B 52 50 41 49 0A 0F 00 60                    // p{RPAI...`

            Case
 1174B: A1 4D 0A                                         // .M.

 (0x13)
            {

 1174E: A0 12 93 5F 54 5F 30 0A 13                       // ..._T_0..

                Store (And (RPAJ, 0x0F), Local0)
            }

 11757: 70 7B 52 50 41 4A 0A 0F 00 60                    // p{RPAJ...`

            Case
 11761: A1 47 09                                         // .G.

 (0x14)
            {

 11764: A0 12 93 5F 54 5F 30 0A 14                       // ..._T_0..

                Store (And (RPAK, 0x0F), Local0)
            }

 1176D: 70 7B 52 50 41 4B 0A 0F 00 60                    // p{RPAK...`

            Case
 11777: A1 41 08                                         // .A.

 (0x15)
            {

 1177A: A0 12 93 5F 54 5F 30 0A 15                       // ..._T_0..

                Store (And (RPAL, 0x0F), Local0)
            }

 11783: 70 7B 52 50 41 4C 0A 0F 00 60                    // p{RPAL...`

            Case
 1178D: A1 4B 06                                         // .K.

 (0x16)
            {

 11790: A0 12 93 5F 54 5F 30 0A 16                       // ..._T_0..

                Store (And (RPAM, 0x0F), Local0)
            }

 11799: 70 7B 52 50 41 4D 0A 0F 00 60                    // p{RPAM...`

            Case
 117A3: A1 45 05                                         // .E.

 (0x17)
            {

 117A6: A0 12 93 5F 54 5F 30 0A 17                       // ..._T_0..

                Store (And (RPAN, 0x0F), Local0)
            }

 117AF: 70 7B 52 50 41 4E 0A 0F 00 60                    // p{RPAN...`

            Case
 117B9: A1 3F                                            // .?

 (0x18)
            {

 117BB: A0 12 93 5F 54 5F 30 0A 18                       // ..._T_0..

                Store (And (RPAO, 0x0F), Local0)
            }

 117C4: 70 7B 52 50 41 4F 0A 0F 00 60                    // p{RPAO...`

            Case
 117CE: A1 2A                                            // .*

 (0x19)
            {

 117D0: A0 0B 93 5F 54 5F 30 0A 19                       // ..._T_0..

                Store (Zero, Local0)
            }

 117D9: 70 00 60                                         // p.`

            Case
 117DC: A1 1C                                            // ..

 (0x1A)
            {

 117DE: A0 0B 93 5F 54 5F 30 0A 1A                       // ..._T_0..

                Store (One, Local0)
            }

 117E7: 70 01 60                                         // p.`

            Case
 117EA: A1 0E                                            // ..

 (0x1B)
            {

 117EC: A0 0C 93 5F 54 5F 30 0A 1B                       // ..._T_0..

                Store (0x02, Local0)
            }


 117F5: 70 0A 02 60                                      // p..`

        }

        ADBG ("Function no")
        ADBG (Local0)

 117F9: A5 41 44 42 47 0D 46 75 6E 63 74 69 6F 6E 20 6E  // .ADBG.Function n
 11809: 6F 00 41 44 42 47 60                             // o.ADBG`

        Return (Local0)
    }


 11810: A4 60                                            // .`

    Method (MMRP, 1, Serialized)
    {
        Store (\_SB.PCI0.GPCB (), Local0)
        Add (Local0, ShiftLeft (TBTD (Arg0), 0x0F), Local0)
        Add (Local0, ShiftLeft (TBTF (Arg0), 0x0C), Local0)

 11812: 14 31 4D 4D 52 50 09 70 5C 2F 03 5F 53 42 5F 50  // .1MMRP.p\/._SB_P
 11822: 43 49 30 47 50 43 42 60 72 60 79 54 42 54 44 68  // CI0GPCB`r`yTBTDh
 11832: 0A 0F 00 60 72 60 79 54 42 54 46 68 0A 0C 00 60  // ...`r`yTBTFh...`

        Return (Local0)
    }


 11842: A4 60                                            // .`

    Method (MMTB, 1, Serialized)
    {
        ADBG ("MMTB")
        Store (\_SB.PCI0.GPCB (), Local0)
        Add (Local0, ShiftLeft (TBTD (Arg0), 0x0F), Local0)
        Add (Local0, ShiftLeft (TBTF (Arg0), 0x0C), Local0)

 11844: 14 4E 08 4D 4D 54 42 09 41 44 42 47 0D 4D 4D 54  // .N.MMTB.ADBG.MMT
 11854: 42 00 70 5C 2F 03 5F 53 42 5F 50 43 49 30 47 50  // B.p\/._SB_PCI0GP
 11864: 43 42 60 72 60 79 54 42 54 44 68 0A 0F 00 60 72  // CB`r`yTBTDh...`r
 11874: 60 79 54 42 54 46 68 0A 0C 00 60                 // `yTBTFh...`

        OperationRegion (MMMM, SystemMemory, Local0, 0x1A)

 1187F: 5B 80 4D 4D 4D 4D 00 60 0A 1A                    // [.MMMM.`..

        Field (MMMM, AnyAcc, NoLock, Preserve)
        {
            Offset (0x19), 
            SBUS,   8
        }

        Store (SBUS, Local2)
        Store (\_SB.PCI0.GPCB (), Local0)
        Multiply (Local2, 0x00100000, Local2)
        Add (Local2, Local0, Local0)
        ADBG ("TBT-US-ADR")
        ADBG (Local0)

 11889: 5B 81 0E 4D 4D 4D 4D 00 00 48 0C 53 42 55 53 08  // [..MMMM..H.SBUS.
 11899: 70 53 42 55 53 62 70 5C 2F 03 5F 53 42 5F 50 43  // pSBUSbp\/._SB_PC
 118A9: 49 30 47 50 43 42 60 77 62 0C 00 00 10 00 62 72  // I0GPCB`wb.....br
 118B9: 62 60 60 41 44 42 47 0D 54 42 54 2D 55 53 2D 41  // b``ADBG.TBT-US-A
 118C9: 44 52 00 41 44 42 47 60                          // DR.ADBG`

        Return (Local0)
    }


 118D1: A4 60                                            // .`

    Method (FFTB, 1, Serialized)
    {
        ADBG ("FFTB")
        Add (MMTB (Arg0), 0x0548, Local0)

 118D3: 14 44 06 46 46 54 42 09 41 44 42 47 0D 46 46 54  // .D.FFTB.ADBG.FFT
 118E3: 42 00 72 4D 4D 54 42 68 0B 48 05 60              // B.rMMTBh.H.`

        OperationRegion (PXVD, SystemMemory, Local0, 0x08)

 118EF: 5B 80 50 58 56 44 00 60 0A 08                    // [.PXVD.`..

        Field (PXVD, DWordAcc, NoLock, Preserve)
        {
            TB2P,   32, 
            P2TB,   32
        }

        Store (TB2P, Local1)

 118F9: 5B 81 10 50 58 56 44 03 54 42 32 50 20 50 32 54  // [..PXVD.TB2P P2T
 11909: 42 20 70 54 42 32 50 61                          // B pTB2Pa

        If (LEqual (Local1, 0xFFFFFFFF))
        {
            ADBG ("FFTb 1")

 11911: A0 16 93 61 0C FF FF FF FF 41 44 42 47 0D 46 46  // ...a.....ADBG.FF
 11921: 54 62 20 31 00                                   // Tb 1.

            Return (One)
        }

 11926: A4 01                                            // ..

        Else
        {
            ADBG ("FFTb 0")

 11928: A1 0F 41 44 42 47 0D 46 46 54 62 20 30 00        // ..ADBG.FFTb 0.

            Return (Zero)
        }
    }


 11936: A4 00                                            // ..

    Scope (\)
    {

 11938: 10 44 0A 5C 00                                   // .D.\.

        Device (CHUB)
        {

 1193D: 5B 82 4E 09 43 48 55 42                          // [.N.CHUB

            Name (_HID, EisaId ("INT339B"))  // _HID: Hardware ID

 11945: 08 5F 48 49 44 0C 25 D4 33 9B                    // ._HID.%.3.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 1194F: 14 13 5F 53 54 41 00                             // .._STA.

                If (LEqual (CHEN, One))
                {

 11956: A0 0A 93 43 48 45 4E 01                          // ...CHEN.

                    Return (0x0F)
                }


 1195E: A4 0A 0F                                         // ...

                Return (Zero)
            }


 11961: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 11963: 14 49 07 5F 44 53 4D 0C                          // .I._DSM.


 1196B: 08 5F 54 5F 31 00                                // ._T_1.


 11971: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
 11977: A0 40 06 93 68                                   // .@..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
                {

 1197C: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1198C: B6 A2 FE 37                                      // ...7

                    If (
 11990: A0 45 04 92                                      // .E..

LGreaterEqual (ToInteger (Arg1), Zero))
                    {

 11994: 95 99 69 00 00                                   // ..i..

                        Switch (ToInteger (Arg2))
                        {

 11999: A2 3A 01 70 99 6A 00 5F 54 5F 30                 // .:.p.j._T_0

                            Case (Zero)
                            {

 119A4: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                                Return (
 119AC: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

 119AD: 11 03 01 03                                      // ....

                            Case
 119B1: A1 21                                            // .!

 (One)
                            {

 119B3: A0 1F 93 5F 54 5F 30 01                          // ..._T_0.

                                Switch (ToInteger (DerefOf (
 119BB: A2 17 01 70 99 83                                // ...p..

Index (Arg3, Zero))))
                                {

 119C1: 88 6B 00 00 00 5F 54 5F 31                       // .k..._T_1

                                    Case (
 119CA: A0 07                                            // ..

Zero)
                                    {
                                    }


 119CC: 93 5F 54 5F 31 00                                // ._T_1.

                                }
                            }


 119D2: A5                                               // .

                        }


 119D3: A5                                               // .

                        Return (Zero)
                    }


 119D4: A4 00                                            // ..

                    Return (Zero)
                }


 119D6: A4 00                                            // ..

                Return (
 119D8: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


 119D9: 11 03 01 00                                      // ....

    Scope (_SB)
    {

 119DD: 10 41 05 5F 53 42 5F                             // .A._SB_

        OperationRegion (ITSS, SystemMemory, 0xFDC43100, 0x0208)

 119E4: 5B 80 49 54 53 53 00 0C 00 31 C4 FD 0B 08 02     // [.ITSS...1.....

        Field (ITSS, ByteAcc, NoLock, Preserve)
        {
            PARC,   8, 
            PBRC,   8, 
            PCRC,   8, 
            PDRC,   8, 
            PERC,   8, 
            PFRC,   8, 
            PGRC,   8, 
            PHRC,   8, 
            Offset (0x200), 
                ,   1, 
                ,   1, 
            SCGE,   1
        }
    }


 119F3: 5B 81 3A 49 54 53 53 01 50 41 52 43 08 50 42 52  // [.:ITSS.PARC.PBR
 11A03: 43 08 50 43 52 43 08 50 44 52 43 08 50 45 52 43  // C.PCRC.PDRC.PERC
 11A13: 08 50 46 52 43 08 50 47 52 43 08 50 48 52 43 08  // .PFRC.PGRC.PHRC.
 11A23: 00 40 FC 00 01 00 01 53 43 47 45 01              // .@.....SCGE.

    Mutex (MUTX, 0x00)

 11A2F: 5B 01 4D 55 54 58 00                             // [.MUTX.

    Mutex (OSUM, 0x00)

 11A36: 5B 01 4F 53 55 4D 00                             // [.OSUM.

    Event (WFEV)

 11A3D: 5B 02 57 46 45 56                                // [.WFEV

    OperationRegion (PRT0, SystemIO, 0x80, 0x04)

 11A43: 5B 80 50 52 54 30 01 0A 80 0A 04                 // [.PRT0.....

    Field (PRT0, DWordAcc, Lock, Preserve)
    {
        P80H,   32
    }


 11A4E: 5B 81 0B 50 52 54 30 13 50 38 30 48 20           // [..PRT0.P80H 

    Method (D8XH, 2, Serialized)
    {

 11A5B: 14 4E 07 44 38 58 48 0A                          // .N.D8XH.

        If (LEqual (Arg0, Zero))
        {

 11A63: A0 17 93 68 00                                   // ...h.

            Store (Or (And (P80D, 0xFFFFFF00), Arg1), P80D)
        }


 11A68: 70 7D 7B 50 38 30 44 0C 00 FF FF FF 00 69 00 50  // p}{P80D......i.P
 11A78: 38 30 44                                         // 80D

        If (LEqual (Arg0, One))
        {

 11A7B: A0 1B 93 68 01                                   // ...h.

            Store (Or (And (P80D, 0xFFFF00FF), ShiftLeft (Arg1, 0x08)), P80D)
        }


 11A80: 70 7D 7B 50 38 30 44 0C FF 00 FF FF 00 79 69 0A  // p}{P80D......yi.
 11A90: 08 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x02))
        {

 11A97: A0 1C 93 68 0A 02                                // ...h..

            Store (Or (And (P80D, 0xFF00FFFF), ShiftLeft (Arg1, 0x10)), P80D)
        }


 11A9D: 70 7D 7B 50 38 30 44 0C FF FF 00 FF 00 79 69 0A  // p}{P80D......yi.
 11AAD: 10 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x03))
        {

 11AB4: A0 1C 93 68 0A 03                                // ...h..

            Store (Or (And (P80D, 0x00FFFFFF), ShiftLeft (Arg1, 0x18)), P80D)
        }


 11ABA: 70 7D 7B 50 38 30 44 0C FF FF FF 00 00 79 69 0A  // p}{P80D......yi.
 11ACA: 18 00 00 50 38 30 44                             // ...P80D

        Store (P80D, P80H)
    }


 11AD1: 70 50 38 30 44 50 38 30 48                       // pP80DP80H

    Method (P8XH, 2, Serialized)
    {

 11ADA: 14 15 50 38 58 48 0A                             // ..P8XH.

        If (CondRefOf (MDBG))
        {
            D8XH (Arg0, Arg1)
        }
    }


 11AE1: A0 0E 5B 12 4D 44 42 47 00 44 38 58 48 68 69     // ..[.MDBG.D8XHhi

    Method (ADBG, 1, Serialized)
    {

 11AF0: 14 17 41 44 42 47 09                             // ..ADBG.

        If (CondRefOf (MDBG))
        {

 11AF7: A0 0E 5B 12 4D 44 42 47 00                       // ..[.MDBG.

            Return (MDBG (Arg0))
        }


 11B00: A4 4D 44 42 47 68                                // .MDBGh

        Return (Zero)
    }


 11B06: A4 00                                            // ..

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)

 11B08: 5B 80 53 50 52 54 01 0A B2 0A 02                 // [.SPRT.....

    Field (SPRT, ByteAcc, Lock, Preserve)
    {
        SSMP,   8
    }


 11B13: 5B 81 0B 53 50 52 54 11 53 53 4D 50 08           // [..SPRT.SSMP.

    Name (WAKP, 
 11B20: 08 57 41 4B 50                                   // .WAKP

Package (0x02)
    {
        Zero, 
        Zero
    })

 11B25: 12 04 02 00 00                                   // .....

    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        Store (Arg0, GPIC)

 11B2A: 14 12 5F 50 49 43 01 70 68 47 50 49 43           // .._PIC.phGPIC

        Store (Arg0, PICM)
    }


 11B37: 70 68 50 49 43 4D                                // phPICM

    Method (RPTS, 1, NotSerialized)
    {
        Store (Zero, P80D)
        D8XH (Zero, Arg0)
        ADBG (
 11B3D: 14 44 0D 52 50 54 53 01 70 00 50 38 30 44 44 38  // .D.RPTS.p.P80DD8
 11B4D: 58 48 00 68 41 44 42 47                          // XH.hADBG

Concatenate ("_PTS=", ToHexString (Arg0)))

 11B55: 73 0D 5F 50 54 53 3D 00 98 68 00 00              // s._PTS=..h..

        If (LEqual (TBTS, One))
        {

 11B61: A0 0D 93 54 42 54 53 01                          // ...TBTS.

            Reset (WFEV)
        }


 11B69: 5B 26 57 46 45 56                                // [&WFEV

        If (LEqual (Arg0, 0x03))
        {
            \_SB.SGOV (0x0103000A, Zero)
            \_SB.SGOV (0x0103000C, Zero)

 11B6F: A0 40 05 93 68 0A 03 5C 2E 5F 53 42 5F 53 47 4F  // .@..h..\._SB_SGO
 11B7F: 56 0C 0A 00 03 01 00 5C 2E 5F 53 42 5F 53 47 4F  // V......\._SB_SGO
 11B8F: 56 0C 0C 00 03 01 00                             // V......

            If (CondRefOf (\_PR.DTSE))
            {

 11B96: A0 29 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .)[.\._PR_DTSE.

                If (LAnd (\_PR.DTSE, 
 11BA5: A0 1A 90 5C 2E 5F 50 52 5F 44 54 53 45           // ...\._PR_DTSE

LGreater (TCNT, One)))
                {
                    TRAP (0x02, 0x1E)
                }
            }
        }


 11BB2: 94 54 43 4E 54 01 54 52 41 50 0A 02 0A 1E        // .TCNT.TRAP....

        If (LEqual (IVCM, One))
        {
            \_SB.SGOV (0x02040000, Zero)
            \_SB.SGOV (0x02010002, Zero)
        }


 11BC0: A0 27 93 49 56 43 4D 01 5C 2E 5F 53 42 5F 53 47  // .'.IVCM.\._SB_SG
 11BD0: 4F 56 0C 00 00 04 02 00 5C 2E 5F 53 42 5F 53 47  // OV......\._SB_SG
 11BE0: 4F 56 0C 02 00 01 02 00                          // OV......

        If (CondRefOf (\_SB.TPM.PTS))
        {
            \_SB.TPM.PTS (Arg0)
        }

        EV1 (Arg0, Zero)
    }


 11BE8: A0 23 5B 12 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // .#[.\/._SB_TPM_P
 11BF8: 54 53 5F 00 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // TS_.\/._SB_TPM_P
 11C08: 54 53 5F 68 45 56 31 5F 68 00                    // TS_hEV1_h.

    Method (RWAK, 1, Serialized)
    {
        D8XH (One, 0xAB)
        ADBG ("_WAK")
        \_SB.PCI0.GEXP.INVC ()

 11C12: 14 4D 76 52 57 41 4B 09 44 38 58 48 01 0A AB 41  // .MvRWAK.D8XH...A
 11C22: 44 42 47 0D 5F 57 41 4B 00 5C 2F 04 5F 53 42 5F  // DBG._WAK.\/._SB_
 11C32: 50 43 49 30 47 45 58 50 49 4E 56 43              // PCI0GEXPINVC

        If (LEqual (Arg0, 0x03))
        {

 11C3E: A0 1A 93 68 0A 03                                // ...h..

            Store (One, \_SB.PCI0.SAT0.TFGF)
        }

 11C44: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // p.\/._SB_PCI0SAT
 11C54: 30 54 46 47 46                                   // 0TFGF

        Else
        {

 11C59: A1 16                                            // ..

            Store (Zero, \_SB.PCI0.SAT0.TFGF)
        }


 11C5B: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // p.\/._SB_PCI0SAT
 11C6B: 30 54 46 47 46                                   // 0TFGF

        If (LEqual (S0ID, One))
        {

 11C70: A0 13 93 53 30 49 44 01                          // ...S0ID.

            Store (One, \_SB.SCGE)
        }


 11C78: 70 01 5C 2E 5F 53 42 5F 53 43 47 45              // p.\._SB_SCGE

        If (NEXP)
        {

 11C84: A0 37 4E 45 58 50                                // .7NEXP

            If (And (OSCC, 0x02))
            {
                \_SB.PCI0.NHPG ()
            }


 11C8A: A0 18 7B 4F 53 43 43 0A 02 00 5C 2F 03 5F 53 42  // ..{OSCC...\/._SB
 11C9A: 5F 50 43 49 30 4E 48 50 47                       // _PCI0NHPG

            If (And (OSCC, 0x04))
            {
                \_SB.PCI0.NPME ()
            }
        }


 11CA3: A0 18 7B 4F 53 43 43 0A 04 00 5C 2F 03 5F 53 42  // ..{OSCC...\/._SB
 11CB3: 5F 50 43 49 30 4E 50 4D 45                       // _PCI0NPME

        If (LEqual (Arg0, 0x03))
        {

 11CBC: A0 0C 93 68 0A 03                                // ...h..

            Store (0x0E, SSMP)
        }


 11CC2: 70 0A 0E 53 53 4D 50                             // p..SSMP

        If (
 11CC9: A0 05                                            // ..

LEqual (Arg0, 0x03)){}

 11CCB: 93 68 0A 03                                      // .h..

        If (LAnd (LEqual (Arg0, 0x04), 
 11CCF: A0 4F 05 90 93 68 0A 04                          // .O...h..

LEqual (S0ID, One)))
        {
            ADBG ("Notify LID when S0idle enable")
            \_SB.PCI0.GFX0.GLID (\_SB.LID0._LID ())

 11CD7: 93 53 30 49 44 01 41 44 42 47 0D 4E 6F 74 69 66  // .S0ID.ADBG.Notif
 11CE7: 79 20 4C 49 44 20 77 68 65 6E 20 53 30 69 64 6C  // y LID when S0idl
 11CF7: 65 20 65 6E 61 62 6C 65 00 5C 2F 04 5F 53 42 5F  // e enable.\/._SB_
 11D07: 50 43 49 30 47 46 58 30 47 4C 49 44 5C 2F 03 5F  // PCI0GFX0GLID\/._
 11D17: 53 42 5F 4C 49 44 30 5F 4C 49 44                 // SB_LID0_LID

            Notify (\_SB.LID0, 0x80)
        }


 11D22: 86 5C 2E 5F 53 42 5F 4C 49 44 30 0A 80           // .\._SB_LID0..

        If (LOr (LEqual (Arg0, 0x03), 
 11D2F: A0 43 59 91 93 68 0A 03                          // .CY..h..

LEqual (Arg0, 0x04)))
        {

 11D37: 93 68 0A 04                                      // .h..

            OperationRegion (GPDA, SystemMemory, 0xFDAE0478, 0x04)

 11D3B: 5B 80 47 50 44 41 00 0C 78 04 AE FD 0A 04        // [.GPDA..x.....

            Field (GPDA, AnyAcc, NoLock, Preserve)
            {
                    ,   1, 
                C15I,   1, 
                Offset (0x04)
            }


 11D49: 5B 81 0F 47 50 44 41 00 00 01 43 31 35 49 01 00  // [..GPDA...C15I..
 11D59: 1E                                               // .

            If (LEqual (C15I, One))
            {

 11D5A: A0 20 93 43 31 35 49 01                          // . .C15I.

                Store (One, \_SB.PCI0.PEG0.PEGP.NHDA)
            }

 11D62: 70 01 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // p.\/._SB_PCI0PEG
 11D72: 30 50 45 47 50 4E 48 44 41                       // 0PEGPNHDA

            Else
            {

 11D7B: A1 1A                                            // ..

                Store (Zero, \_SB.PCI0.PEG0.PEGP.NHDA)
            }


 11D7D: 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // p.\/._SB_PCI0PEG
 11D8D: 30 50 45 47 50 4E 48 44 41                       // 0PEGPNHDA

            If (LEqual (IPFI, One))
            {

 11D96: A0 20 93 49 50 46 49 01                          // . .IPFI.

                Store (0x07FB1028, \_SB.PCI0.PEG0.NVID)
            }

 11D9E: 70 0C 28 10 FB 07 5C 2F 04 5F 53 42 5F 50 43 49  // p.(...\/._SB_PCI
 11DAE: 30 50 45 47 30 4E 56 49 44                       // 0PEG0NVID

            Else
            {

 11DB7: A1 1A                                            // ..

                Store (0x07FA1028, \_SB.PCI0.PEG0.NVID)
            }


 11DB9: 70 0C 28 10 FA 07 5C 2F 04 5F 53 42 5F 50 43 49  // p.(...\/._SB_PCI
 11DC9: 30 50 45 47 30 4E 56 49 44                       // 0PEG0NVID

            If (And (GBSX, 0x40))
            {
                \_SB.PCI0.GFX0.IUEH (0x06)
            }


 11DD2: A0 1E 7B 47 42 53 58 0A 40 00 5C 2F 04 5F 53 42  // ..{GBSX.@.\/._SB
 11DE2: 5F 50 43 49 30 47 46 58 30 49 55 45 48 0A 06     // _PCI0GFX0IUEH..

            If (And (GBSX, 0x80))
            {
                \_SB.PCI0.GFX0.IUEH (0x07)
            }


 11DF1: A0 1E 7B 47 42 53 58 0A 80 00 5C 2F 04 5F 53 42  // ..{GBSX...\/._SB
 11E01: 5F 50 43 49 30 47 46 58 30 49 55 45 48 0A 07     // _PCI0GFX0IUEH..

            If (CondRefOf (\_PR.DTSE))
            {

 11E10: A0 29 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .)[.\._PR_DTSE.

                If (LAnd (\_PR.DTSE, 
 11E1F: A0 1A 90 5C 2E 5F 50 52 5F 44 54 53 45           // ...\._PR_DTSE

LGreater (TCNT, One)))
                {
                    TRAP (0x02, 0x14)
                }
            }


 11E2C: 94 54 43 4E 54 01 54 52 41 50 0A 02 0A 14        // .TCNT.TRAP....

            If (LEqual (TBTS, One))
            {
                Acquire (OSUM, 0xFFFF)
                \_GPE.TINI (TBSE, Arg0)

 11E3A: A0 24 93 54 42 54 53 01 5B 23 4F 53 55 4D FF FF  // .$.TBTS.[#OSUM..
 11E4A: 5C 2E 5F 47 50 45 54 49 4E 49 54 42 53 45 68     // \._GPETINITBSEh

                Release (OSUM)
            }


 11E59: 5B 27 4F 53 55 4D                                // ['OSUM

            If (
 11E5F: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP01.VDID, 0xFFFFFFFF))
            {

 11E62: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
 11E72: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP01, Zero)
            }


 11E7B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
 11E8B: 00                                               // .

            If (
 11E8C: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP02.VDID, 0xFFFFFFFF))
            {

 11E8F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
 11E9F: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP02, Zero)
            }


 11EA8: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
 11EB8: 00                                               // .

            If (
 11EB9: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP03.VDID, 0xFFFFFFFF))
            {

 11EBC: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
 11ECC: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP03, Zero)
            }


 11ED5: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
 11EE5: 00                                               // .

            If (
 11EE6: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP04.VDID, 0xFFFFFFFF))
            {

 11EE9: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
 11EF9: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP04, Zero)
            }


 11F02: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
 11F12: 00                                               // .

            If (
 11F13: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP05.VDID, 0xFFFFFFFF))
            {

 11F16: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
 11F26: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP05, Zero)
            }


 11F2F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
 11F3F: 00                                               // .

            If (
 11F40: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP06.VDID, 0xFFFFFFFF))
            {

 11F43: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
 11F53: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP06, Zero)
            }


 11F5C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
 11F6C: 00                                               // .

            If (
 11F6D: A0 34 92                                         // .4.

LNotEqual (\_SB.PCI0.RP07.VDID, 0xFFFFFFFF))
            {

 11F70: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
 11F80: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                If (LEqual (DSTS, Zero))
                {

 11F89: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP07, Zero)
                }
            }


 11F91: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
 11FA1: 00                                               // .

            If (
 11FA2: A0 34 92                                         // .4.

LNotEqual (\_SB.PCI0.RP08.VDID, 0xFFFFFFFF))
            {

 11FA5: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
 11FB5: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                If (LEqual (DSTS, Zero))
                {

 11FBE: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP08, Zero)
                }
            }


 11FC6: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
 11FD6: 00                                               // .

            If (
 11FD7: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP09.VDID, 0xFFFFFFFF))
            {

 11FDA: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
 11FEA: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP09, Zero)
            }


 11FF3: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
 12003: 00                                               // .

            If (
 12004: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP10.VDID, 0xFFFFFFFF))
            {

 12007: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
 12017: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP10, Zero)
            }


 12020: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
 12030: 00                                               // .

            If (
 12031: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP11.VDID, 0xFFFFFFFF))
            {

 12034: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
 12044: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP11, Zero)
            }


 1204D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
 1205D: 00                                               // .

            If (
 1205E: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP12.VDID, 0xFFFFFFFF))
            {

 12061: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
 12071: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP12, Zero)
            }


 1207A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
 1208A: 00                                               // .

            If (
 1208B: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP13.VDID, 0xFFFFFFFF))
            {

 1208E: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
 1209E: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP13, Zero)
            }


 120A7: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
 120B7: 00                                               // .

            If (
 120B8: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP14.VDID, 0xFFFFFFFF))
            {

 120BB: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
 120CB: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP14, Zero)
            }


 120D4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
 120E4: 00                                               // .

            If (
 120E5: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP15.VDID, 0xFFFFFFFF))
            {

 120E8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
 120F8: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP15, Zero)
            }


 12101: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
 12111: 00                                               // .

            If (
 12112: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP16.VDID, 0xFFFFFFFF))
            {

 12115: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
 12125: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP16, Zero)
            }


 1212E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
 1213E: 00                                               // .

            If (
 1213F: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP17.VDID, 0xFFFFFFFF))
            {

 12142: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
 12152: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP17, Zero)
            }


 1215B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
 1216B: 00                                               // .

            If (
 1216C: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP18.VDID, 0xFFFFFFFF))
            {

 1216F: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
 1217F: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP18, Zero)
            }


 12188: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
 12198: 00                                               // .

            If (
 12199: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP19.VDID, 0xFFFFFFFF))
            {

 1219C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
 121AC: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP19, Zero)
            }


 121B5: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
 121C5: 00                                               // .

            If (
 121C6: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP20.VDID, 0xFFFFFFFF))
            {

 121C9: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
 121D9: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP20, Zero)
            }


 121E2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
 121F2: 00                                               // .

            If (
 121F3: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP21.VDID, 0xFFFFFFFF))
            {

 121F6: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 31  // .\/._SB_PCI0RP21
 12206: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP21, Zero)
            }


 1220F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 31  // .\/._SB_PCI0RP21
 1221F: 00                                               // .

            If (
 12220: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP22.VDID, 0xFFFFFFFF))
            {

 12223: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 32  // .\/._SB_PCI0RP22
 12233: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP22, Zero)
            }


 1223C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 32  // .\/._SB_PCI0RP22
 1224C: 00                                               // .

            If (
 1224D: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP23.VDID, 0xFFFFFFFF))
            {

 12250: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 33  // .\/._SB_PCI0RP23
 12260: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP23, Zero)
            }


 12269: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 33  // .\/._SB_PCI0RP23
 12279: 00                                               // .

            If (
 1227A: A0 2C 92                                         // .,.

LNotEqual (\_SB.PCI0.RP24.VDID, 0xFFFFFFFF))
            {

 1227D: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 34  // .\/._SB_PCI0RP24
 1228D: 56 44 49 44 0C FF FF FF FF                       // VDID.....

                Notify (\_SB.PCI0.RP24, Zero)
            }


 12296: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 34  // .\/._SB_PCI0RP24
 122A6: 00                                               // .

            If (CondRefOf (\_SB.VMEN))
            {

 122A7: A0 1B 5B 12 5C 2E 5F 53 42 5F 56 4D 45 4E 00     // ..[.\._SB_VMEN.

                Store (0xFF, \_SB.VMEN)
            }
        }


 122B6: 70 0A FF 5C 2E 5F 53 42 5F 56 4D 45 4E           // p..\._SB_VMEN

        If (LOr (LEqual (Arg0, 0x03), 
 122C3: A0 28 91 93 68 0A 03                             // .(..h..

LEqual (Arg0, 0x04)))
        {
            EV2 (Arg0, Zero)

 122CA: 93 68 0A 04 45 56 32 5F 68 00                    // .h..EV2_h.

            If (ECG4 ())
            {
                GENS (0x1C, One, Zero)
            }

 122D4: A0 0D 45 43 47 34 47 45 4E 53 0A 1C 01 00        // ..ECG4GENS....

            Else
            {
                GENS (0x1C, Zero, Zero)
            }
        }


 122E2: A1 09 47 45 4E 53 0A 1C 00 00                    // ..GENS....

        If (LAnd (LEqual (Arg0, 0x04), 
 122EC: A0 4F 07 90 93 68 0A 04                          // .O...h..

LEqual (S0ID, One)))
        {

 122F4: 93 53 30 49 44 01                                // .S0ID.

            If (CondRefOf (\_SB.HIDD))
            {
                ADBG ("Notify Intel HID Event Filter to WakeUp Systemm when S0idle enable")
                Notify (\_SB.HIDD, 0xCE)

 122FA: A0 41 07 5B 12 5C 2E 5F 53 42 5F 48 49 44 44 00  // .A.[.\._SB_HIDD.
 1230A: 41 44 42 47 0D 4E 6F 74 69 66 79 20 49 6E 74 65  // ADBG.Notify Inte
 1231A: 6C 20 48 49 44 20 45 76 65 6E 74 20 46 69 6C 74  // l HID Event Filt
 1232A: 65 72 20 74 6F 20 57 61 6B 65 55 70 20 53 79 73  // er to WakeUp Sys
 1233A: 74 65 6D 6D 20 77 68 65 6E 20 53 30 69 64 6C 65  // temm when S0idle
 1234A: 20 65 6E 61 62 6C 65 00 86 5C 2E 5F 53 42 5F 48  //  enable..\._SB_H
 1235A: 49 44 44 0A CE                                   // IDD..

                Notify (\_SB.HIDD, 0xCF)
            }
        }


 1235F: 86 5C 2E 5F 53 42 5F 48 49 44 44 0A CF           // .\._SB_HIDD..

        If (LEqual (TBTS, One))
        {

 1236C: A0 0D 93 54 42 54 53 01                          // ...TBTS.

            Signal (WFEV)
        }


 12374: 5B 24 57 46 45 56                                // [$WFEV

        Return (
 1237A: A4                                               // .

Package (0x02)
        {
            Zero, 
            Zero
        })
    }


 1237B: 12 04 02 00 00                                   // .....

    Method (GETB, 3, Serialized)
    {
        Multiply (Arg0, 0x08, Local0)
        Multiply (Arg1, 0x08, Local1)

 12380: 14 1E 47 45 54 42 0B 77 68 0A 08 60 77 69 0A 08  // ..GETB.wh..`wi..
 12390: 61                                               // a

        CreateField (Arg2, Local0, Local1, TBF3)

 12391: 5B 13 6A 60 61 54 42 46 33                       // [.j`aTBF3

        Return (TBF3)
    }


 1239A: A4 54 42 46 33                                   // .TBF3

    Method (PNOT, 0, Serialized)
    {

 1239F: 14 4A 40 50 4E 4F 54 08                          // .J@PNOT.

        If (LGreater (TCNT, One))
        {

 123A7: A0 48 17 94 54 43 4E 54 01                       // .H..TCNT.

            If (And (PC00, 0x08))
            {

 123B0: A0 16 7B 50 43 30 30 0A 08 00                    // ..{PC00...

                Notify (\_PR.PR00, 0x80)
            }


 123BA: 86 5C 2E 5F 50 52 5F 50 52 30 30 0A 80           // .\._PR_PR00..

            If (And (PC01, 0x08))
            {

 123C7: A0 16 7B 50 43 30 31 0A 08 00                    // ..{PC01...

                Notify (\_PR.PR01, 0x80)
            }


 123D1: 86 5C 2E 5F 50 52 5F 50 52 30 31 0A 80           // .\._PR_PR01..

            If (And (PC02, 0x08))
            {

 123DE: A0 16 7B 50 43 30 32 0A 08 00                    // ..{PC02...

                Notify (\_PR.PR02, 0x80)
            }


 123E8: 86 5C 2E 5F 50 52 5F 50 52 30 32 0A 80           // .\._PR_PR02..

            If (And (PC03, 0x08))
            {

 123F5: A0 16 7B 50 43 30 33 0A 08 00                    // ..{PC03...

                Notify (\_PR.PR03, 0x80)
            }


 123FF: 86 5C 2E 5F 50 52 5F 50 52 30 33 0A 80           // .\._PR_PR03..

            If (And (PC04, 0x08))
            {

 1240C: A0 16 7B 50 43 30 34 0A 08 00                    // ..{PC04...

                Notify (\_PR.PR04, 0x80)
            }


 12416: 86 5C 2E 5F 50 52 5F 50 52 30 34 0A 80           // .\._PR_PR04..

            If (And (PC05, 0x08))
            {

 12423: A0 16 7B 50 43 30 35 0A 08 00                    // ..{PC05...

                Notify (\_PR.PR05, 0x80)
            }


 1242D: 86 5C 2E 5F 50 52 5F 50 52 30 35 0A 80           // .\._PR_PR05..

            If (And (PC06, 0x08))
            {

 1243A: A0 16 7B 50 43 30 36 0A 08 00                    // ..{PC06...

                Notify (\_PR.PR06, 0x80)
            }


 12444: 86 5C 2E 5F 50 52 5F 50 52 30 36 0A 80           // .\._PR_PR06..

            If (And (PC07, 0x08))
            {

 12451: A0 16 7B 50 43 30 37 0A 08 00                    // ..{PC07...

                Notify (\_PR.PR07, 0x80)
            }


 1245B: 86 5C 2E 5F 50 52 5F 50 52 30 37 0A 80           // .\._PR_PR07..

            If (And (PC08, 0x08))
            {

 12468: A0 16 7B 50 43 30 38 0A 08 00                    // ..{PC08...

                Notify (\_PR.PR08, 0x80)
            }


 12472: 86 5C 2E 5F 50 52 5F 50 52 30 38 0A 80           // .\._PR_PR08..

            If (And (PC09, 0x08))
            {

 1247F: A0 16 7B 50 43 30 39 0A 08 00                    // ..{PC09...

                Notify (\_PR.PR09, 0x80)
            }


 12489: 86 5C 2E 5F 50 52 5F 50 52 30 39 0A 80           // .\._PR_PR09..

            If (And (PC10, 0x08))
            {

 12496: A0 16 7B 50 43 31 30 0A 08 00                    // ..{PC10...

                Notify (\_PR.PR10, 0x80)
            }


 124A0: 86 5C 2E 5F 50 52 5F 50 52 31 30 0A 80           // .\._PR_PR10..

            If (And (PC11, 0x08))
            {

 124AD: A0 16 7B 50 43 31 31 0A 08 00                    // ..{PC11...

                Notify (\_PR.PR11, 0x80)
            }


 124B7: 86 5C 2E 5F 50 52 5F 50 52 31 31 0A 80           // .\._PR_PR11..

            If (And (PC12, 0x08))
            {

 124C4: A0 16 7B 50 43 31 32 0A 08 00                    // ..{PC12...

                Notify (\_PR.PR12, 0x80)
            }


 124CE: 86 5C 2E 5F 50 52 5F 50 52 31 32 0A 80           // .\._PR_PR12..

            If (And (PC13, 0x08))
            {

 124DB: A0 16 7B 50 43 31 33 0A 08 00                    // ..{PC13...

                Notify (\_PR.PR13, 0x80)
            }


 124E5: 86 5C 2E 5F 50 52 5F 50 52 31 33 0A 80           // .\._PR_PR13..

            If (And (PC14, 0x08))
            {

 124F2: A0 16 7B 50 43 31 34 0A 08 00                    // ..{PC14...

                Notify (\_PR.PR14, 0x80)
            }


 124FC: 86 5C 2E 5F 50 52 5F 50 52 31 34 0A 80           // .\._PR_PR14..

            If (And (PC15, 0x08))
            {

 12509: A0 16 7B 50 43 31 35 0A 08 00                    // ..{PC15...

                Notify (\_PR.PR15, 0x80)
            }
        }

 12513: 86 5C 2E 5F 50 52 5F 50 52 31 35 0A 80           // .\._PR_PR15..

        Else
        {

 12520: A1 0E                                            // ..

            Notify (\_PR.PR00, 0x80)
        }


 12522: 86 5C 2E 5F 50 52 5F 50 52 30 30 0A 80           // .\._PR_PR00..

        If (LGreater (TCNT, One))
        {

 1252F: A0 48 20 94 54 43 4E 54 01                       // .H .TCNT.

            If (LAnd (And (PC00, 0x08), 
 12538: A0 1F 90 7B 50 43 30 30 0A 08 00                 // ...{PC00...

And (PC00, 0x10)))
            {

 12543: 7B 50 43 30 30 0A 10 00                          // {PC00...

                Notify (\_PR.PR00, 0x81)
            }


 1254B: 86 5C 2E 5F 50 52 5F 50 52 30 30 0A 81           // .\._PR_PR00..

            If (LAnd (And (PC01, 0x08), 
 12558: A0 1F 90 7B 50 43 30 31 0A 08 00                 // ...{PC01...

And (PC01, 0x10)))
            {

 12563: 7B 50 43 30 31 0A 10 00                          // {PC01...

                Notify (\_PR.PR01, 0x81)
            }


 1256B: 86 5C 2E 5F 50 52 5F 50 52 30 31 0A 81           // .\._PR_PR01..

            If (LAnd (And (PC02, 0x08), 
 12578: A0 1F 90 7B 50 43 30 32 0A 08 00                 // ...{PC02...

And (PC02, 0x10)))
            {

 12583: 7B 50 43 30 32 0A 10 00                          // {PC02...

                Notify (\_PR.PR02, 0x81)
            }


 1258B: 86 5C 2E 5F 50 52 5F 50 52 30 32 0A 81           // .\._PR_PR02..

            If (LAnd (And (PC03, 0x08), 
 12598: A0 1F 90 7B 50 43 30 33 0A 08 00                 // ...{PC03...

And (PC03, 0x10)))
            {

 125A3: 7B 50 43 30 33 0A 10 00                          // {PC03...

                Notify (\_PR.PR03, 0x81)
            }


 125AB: 86 5C 2E 5F 50 52 5F 50 52 30 33 0A 81           // .\._PR_PR03..

            If (LAnd (And (PC04, 0x08), 
 125B8: A0 1F 90 7B 50 43 30 34 0A 08 00                 // ...{PC04...

And (PC04, 0x10)))
            {

 125C3: 7B 50 43 30 34 0A 10 00                          // {PC04...

                Notify (\_PR.PR04, 0x81)
            }


 125CB: 86 5C 2E 5F 50 52 5F 50 52 30 34 0A 81           // .\._PR_PR04..

            If (LAnd (And (PC05, 0x08), 
 125D8: A0 1F 90 7B 50 43 30 35 0A 08 00                 // ...{PC05...

And (PC05, 0x10)))
            {

 125E3: 7B 50 43 30 35 0A 10 00                          // {PC05...

                Notify (\_PR.PR05, 0x81)
            }


 125EB: 86 5C 2E 5F 50 52 5F 50 52 30 35 0A 81           // .\._PR_PR05..

            If (LAnd (And (PC06, 0x08), 
 125F8: A0 1F 90 7B 50 43 30 36 0A 08 00                 // ...{PC06...

And (PC06, 0x10)))
            {

 12603: 7B 50 43 30 36 0A 10 00                          // {PC06...

                Notify (\_PR.PR06, 0x81)
            }


 1260B: 86 5C 2E 5F 50 52 5F 50 52 30 36 0A 81           // .\._PR_PR06..

            If (LAnd (And (PC07, 0x08), 
 12618: A0 1F 90 7B 50 43 30 37 0A 08 00                 // ...{PC07...

And (PC07, 0x10)))
            {

 12623: 7B 50 43 30 37 0A 10 00                          // {PC07...

                Notify (\_PR.PR07, 0x81)
            }


 1262B: 86 5C 2E 5F 50 52 5F 50 52 30 37 0A 81           // .\._PR_PR07..

            If (LAnd (And (PC08, 0x08), 
 12638: A0 1F 90 7B 50 43 30 38 0A 08 00                 // ...{PC08...

And (PC08, 0x10)))
            {

 12643: 7B 50 43 30 38 0A 10 00                          // {PC08...

                Notify (\_PR.PR08, 0x81)
            }


 1264B: 86 5C 2E 5F 50 52 5F 50 52 30 38 0A 81           // .\._PR_PR08..

            If (LAnd (And (PC09, 0x08), 
 12658: A0 1F 90 7B 50 43 30 39 0A 08 00                 // ...{PC09...

And (PC09, 0x10)))
            {

 12663: 7B 50 43 30 39 0A 10 00                          // {PC09...

                Notify (\_PR.PR09, 0x81)
            }


 1266B: 86 5C 2E 5F 50 52 5F 50 52 30 39 0A 81           // .\._PR_PR09..

            If (LAnd (And (PC10, 0x08), 
 12678: A0 1F 90 7B 50 43 31 30 0A 08 00                 // ...{PC10...

And (PC10, 0x10)))
            {

 12683: 7B 50 43 31 30 0A 10 00                          // {PC10...

                Notify (\_PR.PR10, 0x81)
            }


 1268B: 86 5C 2E 5F 50 52 5F 50 52 31 30 0A 81           // .\._PR_PR10..

            If (LAnd (And (PC11, 0x08), 
 12698: A0 1F 90 7B 50 43 31 31 0A 08 00                 // ...{PC11...

And (PC11, 0x10)))
            {

 126A3: 7B 50 43 31 31 0A 10 00                          // {PC11...

                Notify (\_PR.PR11, 0x81)
            }


 126AB: 86 5C 2E 5F 50 52 5F 50 52 31 31 0A 81           // .\._PR_PR11..

            If (LAnd (And (PC12, 0x08), 
 126B8: A0 1F 90 7B 50 43 31 32 0A 08 00                 // ...{PC12...

And (PC12, 0x10)))
            {

 126C3: 7B 50 43 31 32 0A 10 00                          // {PC12...

                Notify (\_PR.PR12, 0x81)
            }


 126CB: 86 5C 2E 5F 50 52 5F 50 52 31 32 0A 81           // .\._PR_PR12..

            If (LAnd (And (PC13, 0x08), 
 126D8: A0 1F 90 7B 50 43 31 33 0A 08 00                 // ...{PC13...

And (PC13, 0x10)))
            {

 126E3: 7B 50 43 31 33 0A 10 00                          // {PC13...

                Notify (\_PR.PR13, 0x81)
            }


 126EB: 86 5C 2E 5F 50 52 5F 50 52 31 33 0A 81           // .\._PR_PR13..

            If (LAnd (And (PC14, 0x08), 
 126F8: A0 1F 90 7B 50 43 31 34 0A 08 00                 // ...{PC14...

And (PC14, 0x10)))
            {

 12703: 7B 50 43 31 34 0A 10 00                          // {PC14...

                Notify (\_PR.PR14, 0x81)
            }


 1270B: 86 5C 2E 5F 50 52 5F 50 52 31 34 0A 81           // .\._PR_PR14..

            If (LAnd (And (PC15, 0x08), 
 12718: A0 1F 90 7B 50 43 31 35 0A 08 00                 // ...{PC15...

And (PC15, 0x10)))
            {

 12723: 7B 50 43 31 35 0A 10 00                          // {PC15...

                Notify (\_PR.PR15, 0x81)
            }
        }

 1272B: 86 5C 2E 5F 50 52 5F 50 52 31 35 0A 81           // .\._PR_PR15..

        Else
        {

 12738: A1 0E                                            // ..

            Notify (\_PR.PR00, 0x81)
        }


 1273A: 86 5C 2E 5F 50 52 5F 50 52 30 30 0A 81           // .\._PR_PR00..

        If (LEqual (DPTF, One))
        {

 12747: A0 42 06 93 44 50 54 46 01                       // .B..DPTF.

            If (CondRefOf (\_SB.IETM))
            {

 12750: A0 1B 5B 12 5C 2E 5F 53 42 5F 49 45 54 4D 00     // ..[.\._SB_IETM.

                Notify (\_SB.IETM, 0x86)
            }


 1275F: 86 5C 2E 5F 53 42 5F 49 45 54 4D 0A 86           // .\._SB_IETM..

            If (LEqual (CHGE, One))
            {

 1276C: A0 3D 93 43 48 47 45 01                          // .=.CHGE.

                If (CondRefOf (\_SB.PCI0.LPCB.H_EC.CHRG))
                {

 12774: A0 35 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .5[.\/._SB_PCI0L
 12784: 50 43 42 48 5F 45 43 43 48 52 47 00              // PCBH_ECCHRG.

                    Notify (\_SB.PCI0.LPCB.H_EC.CHRG, 0x80)
                }
            }
        }
    }


 12790: 86 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
 127A0: 48 5F 45 43 43 48 52 47 0A 80                    // H_ECCHRG..

    OperationRegion (MBAR, SystemMemory, Add (\_SB.PCI0.GMHB (), 0x5000), 0x1000)

 127AA: 5B 80 4D 42 41 52 00 72 5C 2F 03 5F 53 42 5F 50  // [.MBAR.r\/._SB_P
 127BA: 43 49 30 47 4D 48 42 0B 00 50 00 0B 00 10        // CI0GMHB..P....

    Field (MBAR, ByteAcc, NoLock, Preserve)
    {
        Offset (0x938), 
        PWRU,   4, 
        Offset (0x9A0), 
        PPL1,   15, 
        PL1E,   1, 
        CLP1,   1
    }


 127C8: 5B 81 21 4D 42 41 52 01 00 80 9C 04 50 57 52 55  // [.!MBAR.....PWRU
 127D8: 04 00 4C 33 50 50 4C 31 0F 50 4C 31 45 01 43 4C  // ..L3PPL1.PL1E.CL
 127E8: 50 31 01                                         // P1.

    Name (CLMP, Zero)

 127EB: 08 43 4C 4D 50 00                                // .CLMP.

    Name (PLEN, Zero)

 127F1: 08 50 4C 45 4E 00                                // .PLEN.

    Name (PLSV, 0x8000)

 127F7: 08 50 4C 53 56 0B 00 80                          // .PLSV...

    Name (CSEM, Zero)

 127FF: 08 43 53 45 4D 00                                // .CSEM.

    Method (SPL1, 0, Serialized)
    {

 12805: 14 47 07 53 50 4C 31 08                          // .G.SPL1.

        Name (PPUU, Zero)

 1280D: 08 50 50 55 55 00                                // .PPUU.

        If (LEqual (CSEM, One))
        {

 12813: A0 09 93 43 53 45 4D 01                          // ...CSEM.

            Return (Zero)
        }

        Store (One, CSEM)
        Store (PPL1, PLSV)
        Store (PL1E, PLEN)
        Store (CLP1, CLMP)

 1281B: A4 00 70 01 43 53 45 4D 70 50 50 4C 31 50 4C 53  // ..p.CSEMpPPL1PLS
 1282B: 56 70 50 4C 31 45 50 4C 45 4E 70 43 4C 50 31 43  // VpPL1EPLENpCLP1C
 1283B: 4C 4D 50                                         // LMP

        If (LEqual (PWRU, Zero))
        {

 1283E: A0 0D 93 50 57 52 55 00                          // ...PWRU.

            Store (One, PPUU)
        }

 12846: 70 01 50 50 55 55                                // p.PPUU

        Else
        {

 1284C: A1 0D                                            // ..

            ShiftLeft (Decrement (PWRU), 0x02, PPUU)
        }

        Multiply (PLVL, PPUU, Local0)
        Divide (Local0, 0x03E8, , Local1)
        Store (Local1, PPL1)
        Store (One, PL1E)

 1284E: 79 76 50 57 52 55 0A 02 50 50 55 55 77 50 4C 56  // yvPWRU..PPUUwPLV
 1285E: 4C 50 50 55 55 60 78 60 0B E8 03 00 61 70 61 50  // LPPUU`x`....apaP
 1286E: 50 4C 31 70 01 50 4C 31 45                       // PL1p.PL1E

        Store (One, CLP1)
    }


 12877: 70 01 43 4C 50 31                                // p.CLP1

    Method (RPL1, 0, Serialized)
    {
        Store (PLSV, PPL1)
        Store (PLEN, PL1E)
        Store (CLMP, CLP1)

 1287D: 14 27 52 50 4C 31 08 70 50 4C 53 56 50 50 4C 31  // .'RPL1.pPLSVPPL1
 1288D: 70 50 4C 45 4E 50 4C 31 45 70 43 4C 4D 50 43 4C  // pPLENPL1EpCLMPCL
 1289D: 50 31                                            // P1

        Store (Zero, CSEM)
    }


 1289F: 70 00 43 53 45 4D                                // p.CSEM

    Name (UAMS, Zero)

 128A5: 08 55 41 4D 53 00                                // .UAMS.

    Name (GLCK, Zero)

 128AB: 08 47 4C 43 4B 00                                // .GLCK.

    Method (GUAM, 1, Serialized)
    {

 128B1: 14 41 17 47 55 41 4D 09                          // .A.GUAM.


 128B9: 08 5F 54 5F 30 00                                // ._T_0.

        Switch (ToInteger (Arg0))
        {

 128BF: A2 43 15 01 70 99 68 00 5F 54 5F 30              // .C..p.h._T_0

            Case (Zero)
            {

 128CB: A0 48 07 93 5F 54 5F 30 00                       // .H.._T_0.

                If (LEqual (GLCK, One))
                {
                    Store (Zero, GLCK)
                    P8XH (Zero, 0xE1)
                    P8XH (One, 0xAB)
                    ADBG ("Exit Resiliency")
                    \_SB.DION ()

 128D4: A0 4F 06 93 47 4C 43 4B 01 70 00 47 4C 43 4B 50  // .O..GLCK.p.GLCKP
 128E4: 38 58 48 00 0A E1 50 38 58 48 01 0A AB 41 44 42  // 8XH...P8XH...ADB
 128F4: 47 0D 45 78 69 74 20 52 65 73 69 6C 69 65 6E 63  // G.Exit Resilienc
 12904: 79 00 5C 2E 5F 53 42 5F 44 49 4F 4E              // y.\._SB_DION

                    If (PSCP)
                    {

 12910: A0 29 50 53 43 50                                // .)PSCP

                        If (CondRefOf (\_PR.PR00._PPC))
                        {
                            Store (Zero, \_PR.CPPC)
                            PNOT ()
                        }
                    }


 12916: A0 23 5B 12 5C 2F 03 5F 50 52 5F 50 52 30 30 5F  // .#[.\/._PR_PR00_
 12926: 50 50 43 00 70 00 5C 2E 5F 50 52 5F 43 50 50 43  // PPC.p.\._PR_CPPC
 12936: 50 4E 4F 54                                      // PNOT

                    If (PLCS)
                    {
                        RPL1 ()
                    }
                }
            }

 1293A: A0 09 50 4C 43 53 52 50 4C 31                    // ..PLCSRPL1

            Case
 12944: A1 4D 0C                                         // .M.

 (One)
            {

 12947: A0 46 0C 93 5F 54 5F 30 01                       // .F.._T_0.

                If (LEqual (GLCK, Zero))
                {
                    Store (One, GLCK)
                    P8XH (Zero, 0xE0)
                    P8XH (One, Zero)
                    ADBG ("Enter Resiliency")
                    \_SB.DIOF ()

 12950: A0 4D 0B 93 47 4C 43 4B 00 70 01 47 4C 43 4B 50  // .M..GLCK.p.GLCKP
 12960: 38 58 48 00 0A E0 50 38 58 48 01 00 41 44 42 47  // 8XH...P8XH..ADBG
 12970: 0D 45 6E 74 65 72 20 52 65 73 69 6C 69 65 6E 63  // .Enter Resilienc
 12980: 79 00 5C 2E 5F 53 42 5F 44 49 4F 46              // y.\._SB_DIOF

                    If (PSCP)
                    {

 1298C: A0 47 07 50 53 43 50                             // .G.PSCP

                        If (LAnd (CondRefOf (\_PR.PR00._PSS), 
 12993: A0 40 07 90 5B 12 5C 2F 03 5F 50 52 5F 50 52 30  // .@..[.\/._PR_PR0
 129A3: 30 5F 50 53 53 00                                // 0_PSS.

CondRefOf (\_PR.PR00._PPC)))
                        {

 129A9: 5B 12 5C 2F 03 5F 50 52 5F 50 52 30 30 5F 50 50  // [.\/._PR_PR00_PP
 129B9: 43 00                                            // C.

                            If (And (PC00, 0x0400))
                            {

 129BB: A0 26 7B 50 43 30 30 0B 00 04 00                 // .&{PC00....

                                Subtract (SizeOf (\_PR.PR00.TPSS), One, \_PR.CPPC)
                            }

 129C6: 74 87 5C 2F 03 5F 50 52 5F 50 52 30 30 54 50 53  // t.\/._PR_PR00TPS
 129D6: 53 01 5C 2E 5F 50 52 5F 43 50 50 43              // S.\._PR_CPPC

                            Else
                            {

 129E2: A1 1D                                            // ..

                                Subtract (SizeOf (\_PR.PR00.LPSS), One, \_PR.CPPC)
                            }

                            PNOT ()
                        }
                    }


 129E4: 74 87 5C 2F 03 5F 50 52 5F 50 52 30 30 4C 50 53  // t.\/._PR_PR00LPS
 129F4: 53 01 5C 2E 5F 50 52 5F 43 50 50 43 50 4E 4F 54  // S.\._PR_CPPCPNOT

                    If (PLCS)
                    {
                        SPL1 ()
                    }
                }
            }

 12A04: A0 09 50 4C 43 53 53 50 4C 31                    // ..PLCSSPL1

            Default
            {

 12A0E: A1 03                                            // ..

                Return (Zero)
            }


 12A10: A4 00                                            // ..

        }

        Store (LAnd (Arg0, 
 12A12: A5 70 90 68                                      // .p.h

LNot (PWRS)), UAMS)
        P_CS ()
    }


 12A16: 92 50 57 52 53 55 41 4D 53 50 5F 43 53           // .PWRSUAMSP_CS

    Method (P_CS, 0, Serialized)
    {

 12A23: 14 47 06 50 5F 43 53 08                          // .G.P_CS.

        If (CondRefOf (\_SB.PCI0.PAUD.PUAM))
        {
            \_SB.PCI0.PAUD.PUAM ()
        }


 12A2B: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 50  // .*[.\/._SB_PCI0P
 12A3B: 41 55 44 50 55 41 4D 00 5C 2F 04 5F 53 42 5F 50  // AUDPUAM.\/._SB_P
 12A4B: 43 49 30 50 41 55 44 50 55 41 4D                 // CI0PAUDPUAM

        If (LEqual (OSYS, 0x07DC))
        {

 12A56: A0 34 93 4F 53 59 53 0B DC 07                    // .4.OSYS...

            If (CondRefOf (\_SB.PCI0.XHC.DUAM))
            {
                \_SB.PCI0.XHC.DUAM ()
            }
        }
    }


 12A60: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // .*[.\/._SB_PCI0X
 12A70: 48 43 5F 44 55 41 4D 00 5C 2F 04 5F 53 42 5F 50  // HC_DUAM.\/._SB_P
 12A80: 43 49 30 58 48 43 5F 44 55 41 4D                 // CI0XHC_DUAM

    Scope (\)
    {

 12A8B: 10 1C 5C 00                                      // ..\.

        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)

 12A8F: 5B 80 49 4F 5F 48 01 0B 00 10 0A 04              // [.IO_H......

        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }
    }


 12A9B: 5B 81 0B 49 4F 5F 48 01 54 52 50 48 08           // [..IO_H.TRPH.

    Method (TRAP, 2, Serialized)
    {
        Store (Arg1, SMIF)

 12AA8: 14 49 05 54 52 41 50 0A 70 69 53 4D 49 46        // .I.TRAP.piSMIF

        If (LEqual (Arg0, 0x02))
        {
            Store (Arg1, \_PR.DTSF)
            Store (Zero, \_PR.TRPD)

 12AB6: A0 28 93 68 0A 02 70 69 5C 2E 5F 50 52 5F 44 54  // .(.h..pi\._PR_DT
 12AC6: 53 46 70 00 5C 2E 5F 50 52 5F 54 52 50 44        // SFp.\._PR_TRPD

            Return (\_PR.DTSF)
        }


 12AD4: A4 5C 2E 5F 50 52 5F 44 54 53 46                 // .\._PR_DTSF

        If (LEqual (Arg0, 0x03))
        {

 12ADF: A0 0B 93 68 0A 03                                // ...h..

            Store (Zero, TRPH)
        }


 12AE5: 70 00 54 52 50 48                                // p.TRPH

        If (LEqual (Arg0, 0x04))
        {

 12AEB: A0 11 93 68 0A 04                                // ...h..

            Store (Zero, \_PR.TRPF)
        }


 12AF1: 70 00 5C 2E 5F 50 52 5F 54 52 50 46              // p.\._PR_TRPF

        Return (SMIF)
    }


 12AFD: A4 53 4D 49 46                                   // .SMIF

    Scope (_SB.PCI0)
    {

 12B02: 10 40 63 2E 5F 53 42 5F 50 43 49 30              // .@c._SB_PCI0

        Method (PTMA, 0, NotSerialized)
        {

 12B0E: 14 11 50 54 4D 41 00                             // ..PTMA.

            Return (\_PR.BGMA)
        }


 12B15: A4 5C 2E 5F 50 52 5F 42 47 4D 41                 // .\._PR_BGMA

        Method (PTMS, 0, NotSerialized)
        {

 12B20: 14 11 50 54 4D 53 00                             // ..PTMS.

            Return (\_PR.BGMS)
        }


 12B27: A4 5C 2E 5F 50 52 5F 42 47 4D 53                 // .\._PR_BGMS

        Method (PTIA, 0, NotSerialized)
        {

 12B32: 14 11 50 54 49 41 00                             // ..PTIA.

            Return (\_PR.BGIA)
        }


 12B39: A4 5C 2E 5F 50 52 5F 42 47 49 41                 // .\._PR_BGIA

        Method (_INI, 0, Serialized)  // _INI: Initialize
        {
            Store (0x07D0, OSYS)

 12B44: 14 4E 1B 5F 49 4E 49 08 70 0B D0 07 4F 53 59 53  // .N._INI.p...OSYS

            If (CondRefOf (\_OSI))
            {

 12B54: A0 4C 12 5B 12 5C 5F 4F 53 49 00                 // .L.[.\_OSI.

                If (_OSI ("Windows 2001"))
                {

 12B5F: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12B6F: 30 30 31 00                                      // 001.

                    Store (0x07D1, OSYS)
                }


 12B73: 70 0B D1 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001 SP1"))
                {

 12B7B: A0 1F 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12B8B: 30 30 31 20 53 50 31 00                          // 001 SP1.

                    Store (0x07D1, OSYS)
                }


 12B93: 70 0B D1 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001 SP2"))
                {

 12B9B: A0 1F 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12BAB: 30 30 31 20 53 50 32 00                          // 001 SP2.

                    Store (0x07D2, OSYS)
                }


 12BB3: 70 0B D2 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001.1"))
                {

 12BBB: A0 1D 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12BCB: 30 30 31 2E 31 00                                // 001.1.

                    Store (0x07D3, OSYS)
                }


 12BD1: 70 0B D3 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2006"))
                {

 12BD9: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12BE9: 30 30 36 00                                      // 006.

                    Store (0x07D6, OSYS)
                }


 12BED: 70 0B D6 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2009"))
                {

 12BF5: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12C05: 30 30 39 00                                      // 009.

                    Store (0x07D9, OSYS)
                }


 12C09: 70 0B D9 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2012"))
                {

 12C11: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12C21: 30 31 32 00                                      // 012.

                    Store (0x07DC, OSYS)
                }


 12C25: 70 0B DC 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2013"))
                {

 12C2D: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12C3D: 30 31 33 00                                      // 013.

                    Store (0x07DD, OSYS)
                }


 12C41: 70 0B DD 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2015"))
                {

 12C49: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12C59: 30 31 35 00                                      // 015.

                    Store (0x07DF, OSYS)
                }


 12C5D: 70 0B DF 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2017"))
                {

 12C65: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
 12C75: 30 31 37 00                                      // 017.

                    Store (0x07E1, OSYS)
                }
            }


 12C79: 70 0B E1 07 4F 53 59 53                          // p...OSYS

            If (CondRefOf (\_PR.DTSE))
            {

 12C81: A0 29 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .)[.\._PR_DTSE.

                If (
 12C90: A0 1A 92                                         // ...

LGreaterEqual (\_PR.DTSE, One))
                {

 12C93: 95 5C 2E 5F 50 52 5F 44 54 53 45 01              // .\._PR_DTSE.

                    Store (One, \_PR.DSAE)
                }
            }


 12C9F: 70 01 5C 2E 5F 50 52 5F 44 53 41 45              // p.\._PR_DSAE

            If (LEqual (TBTS, One))
            {
                Acquire (OSUM, 0xFFFF)
                P8XH (Zero, 0x51)
                \_GPE.TINI (TBSE, Zero)
                Release (OSUM)

 12CAB: A0 31 93 54 42 54 53 01 5B 23 4F 53 55 4D FF FF  // .1.TBTS.[#OSUM..
 12CBB: 50 38 58 48 00 0A 51 5C 2E 5F 47 50 45 54 49 4E  // P8XH..Q\._GPETIN
 12CCB: 49 54 42 53 45 00 5B 27 4F 53 55 4D              // ITBSE.['OSUM

                Signal (WFEV)
            }

            EV3 (0x02, Zero)

 12CD7: 5B 24 57 46 45 56 45 56 33 5F 0A 02 00           // [$WFEVEV3_...

            If (ECG3 ())
            {
                ^GFX0.GLID (0x03)
            }

 12CE4: A0 11 45 43 47 33 5E 2E 47 46 58 30 47 4C 49 44  // ..ECG3^.GFX0GLID
 12CF4: 0A 03                                            // ..

            Else
            {
                ^GFX0.GLID (Zero)
            }
        }


 12CF6: A1 0C 5E 2E 47 46 58 30 47 4C 49 44 00           // ..^.GFX0GLID.

        Method (NHPG, 0, Serialized)
        {
            Store (Zero, ^RP01.HPEX)
            Store (Zero, ^RP02.HPEX)
            Store (Zero, ^RP03.HPEX)
            Store (Zero, ^RP04.HPEX)
            Store (Zero, ^RP05.HPEX)
            Store (Zero, ^RP06.HPEX)
            Store (Zero, ^RP07.HPEX)
            Store (Zero, ^RP08.HPEX)
            Store (Zero, ^RP09.HPEX)
            Store (Zero, ^RP10.HPEX)
            Store (Zero, ^RP11.HPEX)
            Store (Zero, ^RP12.HPEX)
            Store (Zero, ^RP13.HPEX)
            Store (Zero, ^RP14.HPEX)
            Store (Zero, ^RP15.HPEX)
            Store (Zero, ^RP16.HPEX)
            Store (Zero, ^RP17.HPEX)
            Store (Zero, ^RP18.HPEX)
            Store (Zero, ^RP19.HPEX)
            Store (Zero, ^RP20.HPEX)
            Store (One, ^RP01.HPSX)
            Store (One, ^RP02.HPSX)
            Store (One, ^RP03.HPSX)
            Store (One, ^RP04.HPSX)
            Store (One, ^RP05.HPSX)
            Store (One, ^RP06.HPSX)
            Store (One, ^RP07.HPSX)
            Store (One, ^RP08.HPSX)
            Store (One, ^RP09.HPSX)
            Store (One, ^RP10.HPSX)
            Store (One, ^RP11.HPSX)
            Store (One, ^RP12.HPSX)
            Store (One, ^RP13.HPSX)
            Store (One, ^RP14.HPSX)
            Store (One, ^RP15.HPSX)
            Store (One, ^RP16.HPSX)
            Store (One, ^RP17.HPSX)
            Store (One, ^RP18.HPSX)
            Store (One, ^RP19.HPSX)
            Store (One, ^RP20.HPSX)
            Store (One, ^RP21.HPSX)
            Store (One, ^RP22.HPSX)
            Store (One, ^RP23.HPSX)

 12D03: 14 47 21 4E 48 50 47 08 70 00 5E 2E 52 50 30 31  // .G!NHPG.p.^.RP01
 12D13: 48 50 45 58 70 00 5E 2E 52 50 30 32 48 50 45 58  // HPEXp.^.RP02HPEX
 12D23: 70 00 5E 2E 52 50 30 33 48 50 45 58 70 00 5E 2E  // p.^.RP03HPEXp.^.
 12D33: 52 50 30 34 48 50 45 58 70 00 5E 2E 52 50 30 35  // RP04HPEXp.^.RP05
 12D43: 48 50 45 58 70 00 5E 2E 52 50 30 36 48 50 45 58  // HPEXp.^.RP06HPEX
 12D53: 70 00 5E 2E 52 50 30 37 48 50 45 58 70 00 5E 2E  // p.^.RP07HPEXp.^.
 12D63: 52 50 30 38 48 50 45 58 70 00 5E 2E 52 50 30 39  // RP08HPEXp.^.RP09
 12D73: 48 50 45 58 70 00 5E 2E 52 50 31 30 48 50 45 58  // HPEXp.^.RP10HPEX
 12D83: 70 00 5E 2E 52 50 31 31 48 50 45 58 70 00 5E 2E  // p.^.RP11HPEXp.^.
 12D93: 52 50 31 32 48 50 45 58 70 00 5E 2E 52 50 31 33  // RP12HPEXp.^.RP13
 12DA3: 48 50 45 58 70 00 5E 2E 52 50 31 34 48 50 45 58  // HPEXp.^.RP14HPEX
 12DB3: 70 00 5E 2E 52 50 31 35 48 50 45 58 70 00 5E 2E  // p.^.RP15HPEXp.^.
 12DC3: 52 50 31 36 48 50 45 58 70 00 5E 2E 52 50 31 37  // RP16HPEXp.^.RP17
 12DD3: 48 50 45 58 70 00 5E 2E 52 50 31 38 48 50 45 58  // HPEXp.^.RP18HPEX
 12DE3: 70 00 5E 2E 52 50 31 39 48 50 45 58 70 00 5E 2E  // p.^.RP19HPEXp.^.
 12DF3: 52 50 32 30 48 50 45 58 70 01 5E 2E 52 50 30 31  // RP20HPEXp.^.RP01
 12E03: 48 50 53 58 70 01 5E 2E 52 50 30 32 48 50 53 58  // HPSXp.^.RP02HPSX
 12E13: 70 01 5E 2E 52 50 30 33 48 50 53 58 70 01 5E 2E  // p.^.RP03HPSXp.^.
 12E23: 52 50 30 34 48 50 53 58 70 01 5E 2E 52 50 30 35  // RP04HPSXp.^.RP05
 12E33: 48 50 53 58 70 01 5E 2E 52 50 30 36 48 50 53 58  // HPSXp.^.RP06HPSX
 12E43: 70 01 5E 2E 52 50 30 37 48 50 53 58 70 01 5E 2E  // p.^.RP07HPSXp.^.
 12E53: 52 50 30 38 48 50 53 58 70 01 5E 2E 52 50 30 39  // RP08HPSXp.^.RP09
 12E63: 48 50 53 58 70 01 5E 2E 52 50 31 30 48 50 53 58  // HPSXp.^.RP10HPSX
 12E73: 70 01 5E 2E 52 50 31 31 48 50 53 58 70 01 5E 2E  // p.^.RP11HPSXp.^.
 12E83: 52 50 31 32 48 50 53 58 70 01 5E 2E 52 50 31 33  // RP12HPSXp.^.RP13
 12E93: 48 50 53 58 70 01 5E 2E 52 50 31 34 48 50 53 58  // HPSXp.^.RP14HPSX
 12EA3: 70 01 5E 2E 52 50 31 35 48 50 53 58 70 01 5E 2E  // p.^.RP15HPSXp.^.
 12EB3: 52 50 31 36 48 50 53 58 70 01 5E 2E 52 50 31 37  // RP16HPSXp.^.RP17
 12EC3: 48 50 53 58 70 01 5E 2E 52 50 31 38 48 50 53 58  // HPSXp.^.RP18HPSX
 12ED3: 70 01 5E 2E 52 50 31 39 48 50 53 58 70 01 5E 2E  // p.^.RP19HPSXp.^.
 12EE3: 52 50 32 30 48 50 53 58 70 01 5E 2E 52 50 32 31  // RP20HPSXp.^.RP21
 12EF3: 48 50 53 58 70 01 5E 2E 52 50 32 32 48 50 53 58  // HPSXp.^.RP22HPSX
 12F03: 70 01 5E 2E 52 50 32 33 48 50 53 58              // p.^.RP23HPSX

            Store (One, ^RP24.HPSX)
        }


 12F0F: 70 01 5E 2E 52 50 32 34 48 50 53 58              // p.^.RP24HPSX

        Method (NPME, 0, Serialized)
        {
            Store (Zero, ^RP01.PMEX)
            Store (Zero, ^RP02.PMEX)
            Store (Zero, ^RP03.PMEX)
            Store (Zero, ^RP04.PMEX)
            Store (Zero, ^RP05.PMEX)
            Store (Zero, ^RP06.PMEX)
            Store (Zero, ^RP07.PMEX)
            Store (Zero, ^RP08.PMEX)
            Store (Zero, ^RP09.PMEX)
            Store (Zero, ^RP10.PMEX)
            Store (Zero, ^RP11.PMEX)
            Store (Zero, ^RP12.PMEX)
            Store (Zero, ^RP13.PMEX)
            Store (Zero, ^RP14.PMEX)
            Store (Zero, ^RP15.PMEX)
            Store (Zero, ^RP16.PMEX)
            Store (Zero, ^RP17.PMEX)
            Store (Zero, ^RP18.PMEX)
            Store (Zero, ^RP19.PMEX)
            Store (Zero, ^RP20.PMEX)
            Store (One, ^RP01.PMSX)
            Store (One, ^RP02.PMSX)
            Store (One, ^RP03.PMSX)
            Store (One, ^RP04.PMSX)
            Store (One, ^RP05.PMSX)
            Store (One, ^RP06.PMSX)
            Store (One, ^RP07.PMSX)
            Store (One, ^RP08.PMSX)
            Store (One, ^RP09.PMSX)
            Store (One, ^RP10.PMSX)
            Store (One, ^RP11.PMSX)
            Store (One, ^RP12.PMSX)
            Store (One, ^RP13.PMSX)
            Store (One, ^RP14.PMSX)
            Store (One, ^RP15.PMSX)
            Store (One, ^RP16.PMSX)
            Store (One, ^RP17.PMSX)
            Store (One, ^RP18.PMSX)
            Store (One, ^RP19.PMSX)
            Store (One, ^RP20.PMSX)
            Store (One, ^RP21.PMSX)
            Store (One, ^RP22.PMSX)
            Store (One, ^RP23.PMSX)

 12F1B: 14 47 21 4E 50 4D 45 08 70 00 5E 2E 52 50 30 31  // .G!NPME.p.^.RP01
 12F2B: 50 4D 45 58 70 00 5E 2E 52 50 30 32 50 4D 45 58  // PMEXp.^.RP02PMEX
 12F3B: 70 00 5E 2E 52 50 30 33 50 4D 45 58 70 00 5E 2E  // p.^.RP03PMEXp.^.
 12F4B: 52 50 30 34 50 4D 45 58 70 00 5E 2E 52 50 30 35  // RP04PMEXp.^.RP05
 12F5B: 50 4D 45 58 70 00 5E 2E 52 50 30 36 50 4D 45 58  // PMEXp.^.RP06PMEX
 12F6B: 70 00 5E 2E 52 50 30 37 50 4D 45 58 70 00 5E 2E  // p.^.RP07PMEXp.^.
 12F7B: 52 50 30 38 50 4D 45 58 70 00 5E 2E 52 50 30 39  // RP08PMEXp.^.RP09
 12F8B: 50 4D 45 58 70 00 5E 2E 52 50 31 30 50 4D 45 58  // PMEXp.^.RP10PMEX
 12F9B: 70 00 5E 2E 52 50 31 31 50 4D 45 58 70 00 5E 2E  // p.^.RP11PMEXp.^.
 12FAB: 52 50 31 32 50 4D 45 58 70 00 5E 2E 52 50 31 33  // RP12PMEXp.^.RP13
 12FBB: 50 4D 45 58 70 00 5E 2E 52 50 31 34 50 4D 45 58  // PMEXp.^.RP14PMEX
 12FCB: 70 00 5E 2E 52 50 31 35 50 4D 45 58 70 00 5E 2E  // p.^.RP15PMEXp.^.
 12FDB: 52 50 31 36 50 4D 45 58 70 00 5E 2E 52 50 31 37  // RP16PMEXp.^.RP17
 12FEB: 50 4D 45 58 70 00 5E 2E 52 50 31 38 50 4D 45 58  // PMEXp.^.RP18PMEX
 12FFB: 70 00 5E 2E 52 50 31 39 50 4D 45 58 70 00 5E 2E  // p.^.RP19PMEXp.^.
 1300B: 52 50 32 30 50 4D 45 58 70 01 5E 2E 52 50 30 31  // RP20PMEXp.^.RP01
 1301B: 50 4D 53 58 70 01 5E 2E 52 50 30 32 50 4D 53 58  // PMSXp.^.RP02PMSX
 1302B: 70 01 5E 2E 52 50 30 33 50 4D 53 58 70 01 5E 2E  // p.^.RP03PMSXp.^.
 1303B: 52 50 30 34 50 4D 53 58 70 01 5E 2E 52 50 30 35  // RP04PMSXp.^.RP05
 1304B: 50 4D 53 58 70 01 5E 2E 52 50 30 36 50 4D 53 58  // PMSXp.^.RP06PMSX
 1305B: 70 01 5E 2E 52 50 30 37 50 4D 53 58 70 01 5E 2E  // p.^.RP07PMSXp.^.
 1306B: 52 50 30 38 50 4D 53 58 70 01 5E 2E 52 50 30 39  // RP08PMSXp.^.RP09
 1307B: 50 4D 53 58 70 01 5E 2E 52 50 31 30 50 4D 53 58  // PMSXp.^.RP10PMSX
 1308B: 70 01 5E 2E 52 50 31 31 50 4D 53 58 70 01 5E 2E  // p.^.RP11PMSXp.^.
 1309B: 52 50 31 32 50 4D 53 58 70 01 5E 2E 52 50 31 33  // RP12PMSXp.^.RP13
 130AB: 50 4D 53 58 70 01 5E 2E 52 50 31 34 50 4D 53 58  // PMSXp.^.RP14PMSX
 130BB: 70 01 5E 2E 52 50 31 35 50 4D 53 58 70 01 5E 2E  // p.^.RP15PMSXp.^.
 130CB: 52 50 31 36 50 4D 53 58 70 01 5E 2E 52 50 31 37  // RP16PMSXp.^.RP17
 130DB: 50 4D 53 58 70 01 5E 2E 52 50 31 38 50 4D 53 58  // PMSXp.^.RP18PMSX
 130EB: 70 01 5E 2E 52 50 31 39 50 4D 53 58 70 01 5E 2E  // p.^.RP19PMSXp.^.
 130FB: 52 50 32 30 50 4D 53 58 70 01 5E 2E 52 50 32 31  // RP20PMSXp.^.RP21
 1310B: 50 4D 53 58 70 01 5E 2E 52 50 32 32 50 4D 53 58  // PMSXp.^.RP22PMSX
 1311B: 70 01 5E 2E 52 50 32 33 50 4D 53 58              // p.^.RP23PMSX

            Store (One, ^RP24.PMSX)
        }
    }


 13127: 70 01 5E 2E 52 50 32 34 50 4D 53 58              // p.^.RP24PMSX

    Scope (\)
    {

 13133: 10 45 07 5C 00                                   // .E.\.

        Name (PICM, Zero)

 13138: 08 50 49 43 4D 00                                // .PICM.

        Name (PRWP, 
 1313E: 08 50 52 57 50                                   // .PRWP

Package (0x02)
        {
            Zero, 
            Zero
        })

 13143: 12 04 02 00 00                                   // .....

        Method (GPRW, 2, NotSerialized)
        {
            Store (Arg0, 
 13148: 14 40 06 47 50 52 57 02 70 68                    // .@.GPRW.ph

Index (PRWP, Zero))
            Store (ShiftLeft (SS1, One), Local0)
            Or (Local0, ShiftLeft (SS2, 0x02), Local0)
            Or (Local0, ShiftLeft (SS3, 0x03), Local0)
            Or (Local0, ShiftLeft (SS4, 0x04), Local0)

 13152: 88 50 52 57 50 00 00 70 79 53 53 31 5F 01 00 60  // .PRWP..pySS1_..`
 13162: 7D 60 79 53 53 32 5F 0A 02 00 60 7D 60 79 53 53  // }`ySS2_...`}`ySS
 13172: 33 5F 0A 03 00 60 7D 60 79 53 53 34 5F 0A 04 00  // 3_...`}`ySS4_...
 13182: 60                                               // `

            If (And (ShiftLeft (One, Arg1), Local0))
            {

 13183: A0 11 7B 79 01 69 00 60 00                       // ..{y.i.`.

                Store (Arg1, 
 1318C: 70 69                                            // pi

Index (PRWP, One))
            }

 1318E: 88 50 52 57 50 01 00                             // .PRWP..

            Else
            {
                ShiftRight (Local0, One, Local0)

 13195: A1 0E 7A 60 01 60                                // ..z`.`

                FindSetLeftBit (Local0, 
 1319B: 81 60                                            // .`

Index (PRWP, One))
            }


 1319D: 88 50 52 57 50 01 00                             // .PRWP..

            Return (PRWP)
        }
    }


 131A4: A4 50 52 57 50                                   // .PRWP

    Scope (_SB)
    {

 131A9: 10 40 22 5F 53 42 5F                             // .@"_SB_

        Name (OSCI, Zero)

 131B0: 08 4F 53 43 49 00                                // .OSCI.

        Name (OSCO, Zero)

 131B6: 08 4F 53 43 4F 00                                // .OSCO.

        Name (OSCP, Zero)

 131BC: 08 4F 53 43 50 00                                // .OSCP.

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {

 131C2: 14 41 0C 5F 4F 53 43 0C                          // .A._OSC.

            CreateDWordField (Arg3, Zero, STS0)

 131CA: 8A 6B 00 53 54 53 30                             // .k.STS0

            CreateDWordField (Arg3, 0x04, CAP0)

 131D1: 8A 6B 0A 04 43 41 50 30                          // .k..CAP0

            If (LEqual (S0ID, One))
            {

 131D9: A0 0D 93 53 30 49 44 01                          // ...S0ID.

                Store (One, SCGE)
            }


 131E1: 70 01 53 43 47 45                                // p.SCGE

            If (LEqual (Arg0, 
 131E7: A0 4F 07 93 68                                   // .O..h

ToUUID ("0811b06e-4a27-44f9-8d60-3cbbc22e7b48") /* Platform-wide Capabilities */))
            {

 131EC: 11 13 0A 10 6E B0 11 08 27 4A F9 44 8D 60 3C BB  // ....n...'J.D.`<.
 131FC: C2 2E 7B 48                                      // ..{H

                If (LEqual (Arg1, One))
                {
                    Store (CAP0, OSCP)

 13200: A0 4B 04 93 69 01 70 43 41 50 30 4F 53 43 50     // .K..i.pCAP0OSCP

                    If (And (CAP0, 0x04))
                    {
                        Store (0x04, OSCO)

 1320F: A0 3C 7B 43 41 50 30 0A 04 00 70 0A 04 4F 53 43  // .<{CAP0...p..OSC
 1321F: 4F                                               // O

                        If (
 13220: A0 2B 92                                         // .+.

LNotEqual (And (SGMD, 0x0F), 0x02))
                        {

 13223: 93 7B 53 47 4D 44 0A 0F 00 0A 02                 // .{SGMD.....

                            If (LEqual (RTD3, Zero))
                            {
                                And (CAP0, 0x3B, CAP0)

 1322E: A0 1D 93 52 54 44 33 00 7B 43 41 50 30 0A 3B 43  // ...RTD3.{CAP0.;C
 1323E: 41 50 30                                         // AP0

                                Or (STS0, 0x10, STS0)
                            }
                        }
                    }
                }

 13241: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                Else
                {
                    And (STS0, 0xFFFFFF00, STS0)

 1324C: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                    Or (STS0, 0x0A, STS0)
                }
            }

 1325C: 7D 53 54 53 30 0A 0A 53 54 53 30                 // }STS0..STS0

            Else
            {
                And (STS0, 0xFFFFFF00, STS0)

 13267: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                Or (STS0, 0x06, STS0)
            }


 13277: 7D 53 54 53 30 0A 06 53 54 53 30                 // }STS0..STS0

            Return (Arg3)
        }


 13282: A4 6B                                            // .k

        Device (EPC)
        {

 13284: 5B 82 44 14 45 50 43 5F                          // [.D.EPC_

            Name (_HID, EisaId ("INT0E0C"))  // _HID: Hardware ID

 1328C: 08 5F 48 49 44 0C 25 D4 0E 0C                    // ._HID.%...

            Name (_STR, 
 13296: 08 5F 53 54 52                                   // ._STR

Unicode ("Enclave Page Cache 1.0"))  // _STR: Description String

 1329B: 11 31 0A 2E 45 00 6E 00 63 00 6C 00 61 00 76 00  // .1..E.n.c.l.a.v.
 132AB: 65 00 20 00 50 00 61 00 67 00 65 00 20 00 43 00  // e. .P.a.g.e. .C.
 132BB: 61 00 63 00 68 00 65 00 20 00 31 00 2E 00 30 00  // a.c.h.e. .1...0.
 132CB: 00 00                                            // ..

            Name (_MLS, 
 132CD: 08 5F 4D 4C 53                                   // ._MLS

Package (0x01)  // _MLS: Multiple Language String
            {

 132D2: 12 3B 01                                         // .;.

                Package (0x02)
                {
                    "en", 

 132D5: 12 38 02 0D 65 6E 00                             // .8..en.

                    Unicode ("Enclave Page Cache 1.0")
                }
            })

 132DC: 11 31 0A 2E 45 00 6E 00 63 00 6C 00 61 00 76 00  // .1..E.n.c.l.a.v.
 132EC: 65 00 20 00 50 00 61 00 67 00 65 00 20 00 43 00  // e. .P.a.g.e. .C.
 132FC: 61 00 63 00 68 00 65 00 20 00 31 00 2E 00 30 00  // a.c.h.e. .1...0.
 1330C: 00 00                                            // ..

            Name (RBUF, 
 1330E: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                QWordMemory (ResourceConsumer, PosDecode, MinNotFixed, MaxNotFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000000000, // Range Minimum
                    0x0000000000000000, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000000001, // Length
                    ,, _Y31, AddressRangeMemory, TypeStatic)
            })

 13313: 11 33 0A 30 8A 2B 00 00 01 01 00 00 00 00 00 00  // .3.0.+..........
 13323: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
 13333: 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00  // ................
 13343: 00 00 79 00                                      // ..y.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

 13347: 14 47 06 5F 43 52 53 00                          // .G._CRS.

                CreateQWordField (RBUF, \_SB.EPC._Y31._MIN, EMIN)  // _MIN: Minimum Base Address

 1334F: 8F 52 42 55 46 0A 0E 45 4D 49 4E                 // .RBUF..EMIN

                CreateQWordField (RBUF, \_SB.EPC._Y31._MAX, EMAX)  // _MAX: Maximum Base Address

 1335A: 8F 52 42 55 46 0A 16 45 4D 41 58                 // .RBUF..EMAX

                CreateQWordField (RBUF, \_SB.EPC._Y31._LEN, ELEN)  // _LEN: Length
                Store (\_PR.EMNA, EMIN)
                Store (\_PR.ELNG, ELEN)
                Subtract (Add (\_PR.EMNA, \_PR.ELNG), One, EMAX)

 13365: 8F 52 42 55 46 0A 26 45 4C 45 4E 70 5C 2E 5F 50  // .RBUF.&ELENp\._P
 13375: 52 5F 45 4D 4E 41 45 4D 49 4E 70 5C 2E 5F 50 52  // R_EMNAEMINp\._PR
 13385: 5F 45 4C 4E 47 45 4C 45 4E 74 72 5C 2E 5F 50 52  // _ELNGELENtr\._PR
 13395: 5F 45 4D 4E 41 5C 2E 5F 50 52 5F 45 4C 4E 47 00  // _EMNA\._PR_ELNG.
 133A5: 01 45 4D 41 58                                   // .EMAX

                Return (RBUF)
            }


 133AA: A4 52 42 55 46                                   // .RBUF

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 133AF: 14 1A 5F 53 54 41 00                             // .._STA.

                If (
 133B6: A0 11 92                                         // ...

LNotEqual (\_PR.EPCS, Zero))
                {

 133B9: 93 5C 2E 5F 50 52 5F 45 50 43 53 00              // .\._PR_EPCS.

                    Return (0x0F)
                }


 133C5: A4 0A 0F                                         // ...

                Return (Zero)
            }
        }
    }


 133C8: A4 00                                            // ..

    Scope (_SB)
    {

 133CA: 10 38 5F 53 42 5F                                // .8_SB_

        Device (BTKL)
        {

 133D0: 5B 82 31 42 54 4B 4C                             // [.1BTKL

            Name (_HID, "INT3420")  // _HID: Hardware ID

 133D7: 08 5F 48 49 44 0D 49 4E 54 33 34 32 30 00        // ._HID.INT3420.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 133E5: 14 08 5F 53 54 41 00                             // .._STA.

                Return (Zero)
            }


 133EC: A4 00                                            // ..

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
            }


 133EE: 14 06 5F 50 53 30 08                             // .._PS0.

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
            }


 133F5: 14 06 5F 50 53 33 08                             // .._PS3.

            Method (PSTS, 0, NotSerialized)
            {
            }
        }
    }


 133FC: 14 06 50 53 54 53 00                             // ..PSTS.

    If (LEqual (RTVM, One))
    {

 13403: A0 43 04 93 52 54 56 4D 01                       // .C..RTVM.

        Scope (_SB)
        {

 1340C: 10 3A 5F 53 42 5F                                // .:_SB_

            Name (VMEN, 0xFF)

 13412: 08 56 4D 45 4E 0A FF                             // .VMEN..

            Method (VMON, 0, Serialized)
            {

 13419: 14 16 56 4D 4F 4E 08                             // ..VMON.

                If (LEqual (VMEN, One))
                {

 13420: A0 09 93 56 4D 45 4E 01                          // ...VMEN.

                    Return (Zero)
                }


 13428: A4 00                                            // ..

                Store (One, VMEN)
            }


 1342A: 70 01 56 4D 45 4E                                // p.VMEN

            Method (VMOF, 0, Serialized)
            {

 13430: 14 16 56 4D 4F 46 08                             // ..VMOF.

                If (LEqual (VMEN, Zero))
                {

 13437: A0 09 93 56 4D 45 4E 00                          // ...VMEN.

                    Return (Zero)
                }


 1343F: A4 00                                            // ..

                Store (Zero, VMEN)
            }
        }
    }


 13441: 70 00 56 4D 45 4E                                // p.VMEN

    If (LAnd (LEqual (RTD3, Zero), 
 13447: A0 41 05 90 93 52 54 44 33 00                    // .A...RTD3.

LEqual (PEWE, One)))
    {

 13451: 93 50 45 57 45 01                                // .PEWE.

        Scope (_SB.PCI0.RP12.PXSX)
        {

 13457: 10 41 04 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .A./._SB_PCI0RP1
 13467: 32 50 58 53 58                                   // 2PXSX

            PowerResource (PXP, 0x00, 0x0000)
            {

 1346C: 5B 84 1F 50 58 50 5F 00 00 00                    // [..PXP_...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

 13476: 14 08 5F 53 54 41 00                             // .._STA.

                    Return (One)
                }


 1347D: A4 01                                            // ..

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                }


 1347F: 14 06 5F 4F 4E 5F 00                             // .._ON_.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                }
            }


 13486: 14 06 5F 4F 46 46 00                             // .._OFF.

            Name (_PR0, 
 1348D: 08 5F 50 52 30                                   // ._PR0

Package (0x01)  // _PR0: Power Resources for D0
            {
                PXP
            })
        }
    }


 13492: 12 06 01 50 58 50 5F                             // ...PXP_

    Name (TDMA, 0x682C4000)

 13499: 08 54 44 4D 41 0C 00 40 2C 68                    // .TDMA..@,h

    Name (TDPG, 0x80000000)

 134A3: 08 54 44 50 47 0C 00 00 00 80                    // .TDPG.....

    Name (TDTI, 0x80000000)

 134AD: 08 54 44 54 49 0C 00 00 00 80                    // .TDTI.....

    Scope (_GPE)
    {

 134B7: 10 49 F8 5F 47 50 45                             // .I._GPE

        Method (OSUP, 1, Serialized)
        {
            ADBG (
 134BE: 14 4B 0B 4F 53 55 50 09 41 44 42 47              // .K.OSUP.ADBG

Concatenate ("OSUP=", ToHexString (Arg0)))
            Add (Arg0, 0x0548, Local0)

 134CA: 73 0D 4F 53 55 50 3D 00 98 68 00 00 72 68 0B 48  // s.OSUP=..h..rh.H
 134DA: 05 60                                            // .`

            OperationRegion (PXVD, SystemMemory, Local0, 0x08)

 134DC: 5B 80 50 58 56 44 00 60 0A 08                    // [.PXVD.`..

            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                TB2P,   32, 
                P2TB,   32
            }

            Store (0x64, Local1)
            Store (0x0D, P2TB)

 134E6: 5B 81 10 50 58 56 44 03 54 42 32 50 20 50 32 54  // [..PXVD.TB2P P2T
 134F6: 42 20 70 0A 64 61 70 0A 0D 50 32 54 42           // B p.dap..P2TB

            While (LGreater (Local1, Zero))
            {
                Store (Subtract (Local1, One), Local1)
                Store (TB2P, Local2)

 13503: A2 4C 04 94 61 00 70 74 61 01 00 61 70 54 42 32  // .L..a.pta..apTB2
 13513: 50 62                                            // Pb

                If (LEqual (Local2, 0xFFFFFFFF))
                {
                    ADBG ("Dev gone")

 13515: A0 19 93 62 0C FF FF FF FF 41 44 42 47 0D 44 65  // ...b.....ADBG.De
 13525: 76 20 67 6F 6E 65 00                             // v gone.

                    Return (0x02)
                }


 1352C: A4 0A 02                                         // ...

                If (And (Local2, One))
                {
                    ADBG ("Cmd acknowledged")

 1352F: A0 1C 7B 62 01 00 41 44 42 47 0D 43 6D 64 20 61  // ..{b..ADBG.Cmd a
 1353F: 63 6B 6E 6F 77 6C 65 64 67 65 64 00              // cknowledged.

                    Break
                }


 1354B: A5                                               // .

                Sleep (0x32)
            }


 1354C: 5B 22 0A 32                                      // [".2

            If (LEqual (TRWA, One))
            {

 13550: A0 0E 93 54 52 57 41 01                          // ...TRWA.

                Store (0x0C, P2TB)
            }

 13558: 70 0A 0C 50 32 54 42                             // p..P2TB

            Else
            {

 1355F: A1 07                                            // ..

                Store (Zero, P2TB)
            }

            ADBG ("End-of-OSUP")

 13561: 70 00 50 32 54 42 41 44 42 47 0D 45 6E 64 2D 6F  // p.P2TBADBG.End-o
 13571: 66 2D 4F 53 55 50 00                             // f-OSUP.

            Return (One)
        }


 13578: A4 01                                            // ..

        Method (PGWA, 1, Serialized)
        {
            ADBG ("PGWA")

 1357A: 14 41 0F 50 47 57 41 09 41 44 42 47 0D 50 47 57  // .A.PGWA.ADBG.PGW
 1358A: 41 00                                            // A.

            If (
 1358C: A0 4F 0D 92                                      // .O..

LGreaterEqual (Arg0, 0x19))
            {
                Store (\_SB.PCI0.GPCB (), Local0)
                Add (Local0, ShiftLeft (TBTD (Arg0), 0x0F), Local0)
                Add (Local0, ShiftLeft (TBTF (Arg0), 0x0C), Local0)
                ADBG (Local0)

 13590: 95 68 0A 19 70 5C 2F 03 5F 53 42 5F 50 43 49 30  // .h..p\/._SB_PCI0
 135A0: 47 50 43 42 60 72 60 79 54 42 54 44 68 0A 0F 00  // GPCB`r`yTBTDh...
 135B0: 60 72 60 79 54 42 54 46 68 0A 0C 00 60 41 44 42  // `r`yTBTFh...`ADB
 135C0: 47 60                                            // G`

                OperationRegion (ABCD, SystemMemory, Local0, 0x1000)

 135C2: 5B 80 41 42 43 44 00 60 0B 00 10                 // [.ABCD.`...

                Field (ABCD, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x84), 
                    PWRS,   2, 
                    Offset (0xB0), 
                        ,   4, 
                    LNKD,   1, 
                    Offset (0x11A), 
                        ,   1, 
                    VCNP,   1, 
                    Offset (0x508), 
                    TREN,   1
                }


 135CD: 5B 81 2B 41 42 43 44 00 00 40 42 50 57 52 53 02  // [.+ABCD..@BPWRS.
 135DD: 00 4E 15 00 04 4C 4E 4B 44 01 00 4B 34 00 01 56  // .N...LNKD..K4..V
 135ED: 43 4E 50 01 00 8E F6 01 54 52 45 4E 01           // CNP.....TREN.

                If (
 135FA: A0 2C 92                                         // .,.

LNotEqual (PWRS, Zero))
                {
                    ADBG ("Force D0")
                    Store (Zero, PWRS)
                    Store (Zero, \_PR.POWS)

 135FD: 93 50 57 52 53 00 41 44 42 47 0D 46 6F 72 63 65  // .PWRS.ADBG.Force
 1360D: 20 44 30 00 70 00 50 57 52 53 70 00 5C 2E 5F 50  //  D0.p.PWRSp.\._P
 1361D: 52 5F 50 4F 57 53                                // R_POWS

                    Sleep (0x10)
                }


 13623: 5B 22 0A 10                                      // ["..

                If (
 13627: A0 44 04 92                                      // .D..

LNotEqual (LNKD, Zero))
                {
                    ADBG ("Link Enable")
                    Store (Zero, LNKD)
                    Store (One, TREN)
                    Store (Zero, Local6)
                    Store (0x64, Local7)

 1362B: 93 4C 4E 4B 44 00 41 44 42 47 0D 4C 69 6E 6B 20  // .LNKD.ADBG.Link 
 1363B: 45 6E 61 62 6C 65 00 70 00 4C 4E 4B 44 70 01 54  // Enable.p.LNKDp.T
 1364B: 52 45 4E 70 00 66 70 0A 64 67                    // RENp.fp.dg

                    While (LLess (Local6, Local7))
                    {

 13655: A2 16 95 66 67                                   // ...fg

                        If (LEqual (VCNP, Zero))
                        {

 1365A: A0 08 93 56 43 4E 50 00                          // ...VCNP.

                            Break
                        }

                        Sleep (0x10)

 13662: A5 5B 22 0A 10                                   // .["..

                        Add (Local6, 0x10, Local6)
                    }
                }
            }
        }


 13667: 72 66 0A 10 66                                   // rf..f

        Method (TBFF, 1, Serialized)
        {
            ADBG ("TBFF")
            Store (MMTB (Arg0), Local0)

 1366C: 14 49 05 54 42 46 46 09 41 44 42 47 0D 54 42 46  // .I.TBFF.ADBG.TBF
 1367C: 46 00 70 4D 4D 54 42 68 60                       // F.pMMTBh`

            OperationRegion (PXVD, SystemMemory, Local0, 0x04)

 13685: 5B 80 50 58 56 44 00 60 0A 04                    // [.PXVD.`..

            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                VEDI,   32
            }

            Store (VEDI, Local1)

 1368F: 5B 81 0B 50 58 56 44 03 56 45 44 49 20 70 56 45  // [..PXVD.VEDI pVE
 1369F: 44 49 61                                         // DIa

            If (LEqual (Local1, 0xFFFFFFFF))
            {

 136A2: A0 0E 93 61 0C FF FF FF FF                       // ...a.....

                Return (OSUP (Local0))
            }

 136AB: A4 4F 53 55 50 60                                // .OSUP`

            Else
            {
                ADBG ("Dev Present")

 136B1: A1 14 41 44 42 47 0D 44 65 76 20 50 72 65 73 65  // ..ADBG.Dev Prese
 136C1: 6E 74 00                                         // nt.

                Return (Zero)
            }
        }


 136C4: A4 00                                            // ..

        Method (TSUB, 1, Serialized)
        {
            ADBG ("TSUB")
            Store (\_SB.PCI0.GPCB (), Local0)
            Add (Local0, ShiftLeft (TBTD (Arg0), 0x0F), Local0)
            Add (Local0, ShiftLeft (TBTF (Arg0), 0x0C), Local0)
            ADBG ("ADR")
            ADBG (Local0)

 136C6: 14 4C 07 54 53 55 42 09 41 44 42 47 0D 54 53 55  // .L.TSUB.ADBG.TSU
 136D6: 42 00 70 5C 2F 03 5F 53 42 5F 50 43 49 30 47 50  // B.p\/._SB_PCI0GP
 136E6: 43 42 60 72 60 79 54 42 54 44 68 0A 0F 00 60 72  // CB`r`yTBTDh...`r
 136F6: 60 79 54 42 54 46 68 0A 0C 00 60 41 44 42 47 0D  // `yTBTFh...`ADBG.
 13706: 41 44 52 00 41 44 42 47 60                       // ADR.ADBG`

            OperationRegion (MMMM, SystemMemory, Local0, 0x1A)

 1370F: 5B 80 4D 4D 4D 4D 00 60 0A 1A                    // [.MMMM.`..

            Field (MMMM, AnyAcc, NoLock, Preserve)
            {
                Offset (0x19), 
                SBUS,   8
            }

            ADBG ("Sec Bus")
            ADBG (SBUS)

 13719: 5B 81 0E 4D 4D 4D 4D 00 00 48 0C 53 42 55 53 08  // [..MMMM..H.SBUS.
 13729: 41 44 42 47 0D 53 65 63 20 42 75 73 00 41 44 42  // ADBG.Sec Bus.ADB
 13739: 47 53 42 55 53                                   // GSBUS

            Return (SBUS)
        }


 1373E: A4 53 42 55 53                                   // .SBUS

        Method (WSUB, 1, Serialized)
        {
            ADBG ("WSUB")
            Store (Zero, Local0)
            Store (Zero, Local1)

 13743: 14 44 06 57 53 55 42 09 41 44 42 47 0D 57 53 55  // .D.WSUB.ADBG.WSU
 13753: 42 00 70 00 60 70 00 61                          // B.p.`p.a

            While (One)
            {
                Store (TSUB (Arg0), Local1)

 1375B: A2 4C 04 01 70 54 53 55 42 68 61                 // .L..pTSUBha

                If (Local1)
                {
                    ADBG ("WSUB-Finished")

 13766: A0 16 61 41 44 42 47 0D 57 53 55 42 2D 46 69 6E  // ..aADBG.WSUB-Fin
 13776: 69 73 68 65 64 00                                // ished.

                    Break
                }

 1377C: A5                                               // .

                Else
                {
                    Add (Local0, One, Local0)

 1377D: A1 2A 72 60 01 60                                // .*r`.`

                    If (LGreater (Local0, 0x03E8))
                    {
                        Sleep (0x03E8)
                        ADBG ("WSUB-Deadlock")
                    }

 13783: A0 1E 94 60 0B E8 03 5B 22 0B E8 03 41 44 42 47  // ...`...["...ADBG
 13793: 0D 57 53 55 42 2D 44 65 61 64 6C 6F 63 6B 00     // .WSUB-Deadlock.

                    Else
                    {

 137A2: A1 05                                            // ..

                        Sleep (0x10)
                    }
                }
            }
        }


 137A4: 5B 22 0A 10                                      // ["..

        Method (WWAK, 0, NotSerialized)
        {
            ADBG ("WWAK")
            Wait (WFEV, 0xFFFF)

 137A8: 14 1F 57 57 41 4B 00 41 44 42 47 0D 57 57 41 4B  // ..WWAK.ADBG.WWAK
 137B8: 00 5B 25 57 46 45 56 0B FF FF                    // .[%WFEV...

            Signal (WFEV)
        }


 137C2: 5B 24 57 46 45 56                                // [$WFEV

        Method (NTFY, 1, Serialized)
        {

 137C8: 14 42 50 4E 54 46 59 09                          // .BPNTFY.

            ADBG ("NTFY")

 137D0: 08 5F 54 5F 30 00 41 44 42 47 0D 4E 54 46 59 00  // ._T_0.ADBG.NTFY.

            If (LEqual (NOHP, One))
            {

 137E0: A0 4A 4E 93 4E 4F 48 50 01                       // .JN.NOHP.

                Switch (ToInteger (Arg0))
                {

 137E9: A2 41 4E 01 70 99 68 00 5F 54 5F 30              // .AN.p.h._T_0

                    Case (One)
                    {
                        ADBG ("Notify RP01")

 137F5: A0 29 93 5F 54 5F 30 01 41 44 42 47 0D 4E 6F 74  // .)._T_0.ADBG.Not
 13805: 69 66 79 20 52 50 30 31 00                       // ify RP01.

                        Notify (\_SB.PCI0.RP01, Zero)
                    }

 1380E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
 1381E: 00                                               // .

                    Case
 1381F: A1 4A 4A                                         // .JJ

 (0x02)
                    {
                        ADBG ("Notify RP02")

 13822: A0 2A 93 5F 54 5F 30 0A 02 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13832: 74 69 66 79 20 52 50 30 32 00                    // tify RP02.

                        Notify (\_SB.PCI0.RP02, Zero)
                    }

 1383C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
 1384C: 00                                               // .

                    Case
 1384D: A1 4C 47                                         // .LG

 (0x03)
                    {
                        ADBG ("Notify RP03")

 13850: A0 2A 93 5F 54 5F 30 0A 03 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13860: 74 69 66 79 20 52 50 30 33 00                    // tify RP03.

                        Notify (\_SB.PCI0.RP03, Zero)
                    }

 1386A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
 1387A: 00                                               // .

                    Case
 1387B: A1 4E 44                                         // .ND

 (0x04)
                    {
                        ADBG ("Notify RP04")

 1387E: A0 2A 93 5F 54 5F 30 0A 04 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 1388E: 74 69 66 79 20 52 50 30 34 00                    // tify RP04.

                        Notify (\_SB.PCI0.RP04, Zero)
                    }

 13898: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
 138A8: 00                                               // .

                    Case
 138A9: A1 40 42                                         // .@B

 (0x05)
                    {
                        ADBG ("Notify RP05")

 138AC: A0 2A 93 5F 54 5F 30 0A 05 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 138BC: 74 69 66 79 20 52 50 30 35 00                    // tify RP05.

                        Notify (\_SB.PCI0.RP05, Zero)
                    }

 138C6: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
 138D6: 00                                               // .

                    Case
 138D7: A1 42 3F                                         // .B?

 (0x06)
                    {
                        ADBG ("Notify RP06")

 138DA: A0 2A 93 5F 54 5F 30 0A 06 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 138EA: 74 69 66 79 20 52 50 30 36 00                    // tify RP06.

                        Notify (\_SB.PCI0.RP06, Zero)
                    }

 138F4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
 13904: 00                                               // .

                    Case
 13905: A1 44 3C                                         // .D<

 (0x07)
                    {
                        ADBG ("Notify RP07")

 13908: A0 2A 93 5F 54 5F 30 0A 07 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13918: 74 69 66 79 20 52 50 30 37 00                    // tify RP07.

                        Notify (\_SB.PCI0.RP07, Zero)
                    }

 13922: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
 13932: 00                                               // .

                    Case
 13933: A1 46 39                                         // .F9

 (0x08)
                    {
                        ADBG ("Notify RP08")

 13936: A0 2A 93 5F 54 5F 30 0A 08 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13946: 74 69 66 79 20 52 50 30 38 00                    // tify RP08.

                        Notify (\_SB.PCI0.RP08, Zero)
                    }

 13950: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
 13960: 00                                               // .

                    Case
 13961: A1 48 36                                         // .H6

 (0x09)
                    {
                        ADBG ("Notify RP09")

 13964: A0 2A 93 5F 54 5F 30 0A 09 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13974: 74 69 66 79 20 52 50 30 39 00                    // tify RP09.

                        Notify (\_SB.PCI0.RP09, Zero)
                    }

 1397E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
 1398E: 00                                               // .

                    Case
 1398F: A1 4A 33                                         // .J3

 (0x0A)
                    {
                        ADBG ("Notify RP10")

 13992: A0 2A 93 5F 54 5F 30 0A 0A 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 139A2: 74 69 66 79 20 52 50 31 30 00                    // tify RP10.

                        Notify (\_SB.PCI0.RP10, Zero)
                    }

 139AC: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
 139BC: 00                                               // .

                    Case
 139BD: A1 4C 30                                         // .L0

 (0x0B)
                    {
                        ADBG ("Notify RP11")

 139C0: A0 2A 93 5F 54 5F 30 0A 0B 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 139D0: 74 69 66 79 20 52 50 31 31 00                    // tify RP11.

                        Notify (\_SB.PCI0.RP11, Zero)
                    }

 139DA: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
 139EA: 00                                               // .

                    Case
 139EB: A1 4E 2D                                         // .N-

 (0x0C)
                    {
                        ADBG ("Notify RP12")

 139EE: A0 2A 93 5F 54 5F 30 0A 0C 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 139FE: 74 69 66 79 20 52 50 31 32 00                    // tify RP12.

                        Notify (\_SB.PCI0.RP12, Zero)
                    }

 13A08: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
 13A18: 00                                               // .

                    Case
 13A19: A1 40 2B                                         // .@+

 (0x0D)
                    {
                        ADBG ("Notify RP13")

 13A1C: A0 2A 93 5F 54 5F 30 0A 0D 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13A2C: 74 69 66 79 20 52 50 31 33 00                    // tify RP13.

                        Notify (\_SB.PCI0.RP13, Zero)
                    }

 13A36: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
 13A46: 00                                               // .

                    Case
 13A47: A1 42 28                                         // .B(

 (0x0E)
                    {
                        ADBG ("Notify RP14")

 13A4A: A0 2A 93 5F 54 5F 30 0A 0E 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13A5A: 74 69 66 79 20 52 50 31 34 00                    // tify RP14.

                        Notify (\_SB.PCI0.RP14, Zero)
                    }

 13A64: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
 13A74: 00                                               // .

                    Case
 13A75: A1 44 25                                         // .D%

 (0x0F)
                    {
                        ADBG ("Notify RP15")

 13A78: A0 2A 93 5F 54 5F 30 0A 0F 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13A88: 74 69 66 79 20 52 50 31 35 00                    // tify RP15.

                        Notify (\_SB.PCI0.RP15, Zero)
                    }

 13A92: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
 13AA2: 00                                               // .

                    Case
 13AA3: A1 46 22                                         // .F"

 (0x10)
                    {
                        ADBG ("Notify RP16")

 13AA6: A0 2A 93 5F 54 5F 30 0A 10 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13AB6: 74 69 66 79 20 52 50 31 36 00                    // tify RP16.

                        Notify (\_SB.PCI0.RP16, Zero)
                    }

 13AC0: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
 13AD0: 00                                               // .

                    Case
 13AD1: A1 48 1F                                         // .H.

 (0x11)
                    {
                        ADBG ("Notify RP17")

 13AD4: A0 2A 93 5F 54 5F 30 0A 11 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13AE4: 74 69 66 79 20 52 50 31 37 00                    // tify RP17.

                        Notify (\_SB.PCI0.RP17, Zero)
                    }

 13AEE: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
 13AFE: 00                                               // .

                    Case
 13AFF: A1 4A 1C                                         // .J.

 (0x12)
                    {
                        ADBG ("Notify RP18")

 13B02: A0 2A 93 5F 54 5F 30 0A 12 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13B12: 74 69 66 79 20 52 50 31 38 00                    // tify RP18.

                        Notify (\_SB.PCI0.RP18, Zero)
                    }

 13B1C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
 13B2C: 00                                               // .

                    Case
 13B2D: A1 4C 19                                         // .L.

 (0x13)
                    {
                        ADBG ("Notify RP19")

 13B30: A0 2A 93 5F 54 5F 30 0A 13 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13B40: 74 69 66 79 20 52 50 31 39 00                    // tify RP19.

                        Notify (\_SB.PCI0.RP19, Zero)
                    }

 13B4A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
 13B5A: 00                                               // .

                    Case
 13B5B: A1 4E 16                                         // .N.

 (0x14)
                    {
                        ADBG ("Notify RP20")

 13B5E: A0 2A 93 5F 54 5F 30 0A 14 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13B6E: 74 69 66 79 20 52 50 32 30 00                    // tify RP20.

                        Notify (\_SB.PCI0.RP20, Zero)
                    }

 13B78: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
 13B88: 00                                               // .

                    Case
 13B89: A1 40 14                                         // .@.

 (0x15)
                    {
                        ADBG ("Notify RP21")

 13B8C: A0 2A 93 5F 54 5F 30 0A 15 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13B9C: 74 69 66 79 20 52 50 32 31 00                    // tify RP21.

                        Notify (\_SB.PCI0.RP21, Zero)
                    }

 13BA6: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 31  // .\/._SB_PCI0RP21
 13BB6: 00                                               // .

                    Case
 13BB7: A1 42 11                                         // .B.

 (0x16)
                    {
                        ADBG ("Notify RP22")

 13BBA: A0 2A 93 5F 54 5F 30 0A 16 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13BCA: 74 69 66 79 20 52 50 32 32 00                    // tify RP22.

                        Notify (\_SB.PCI0.RP22, Zero)
                    }

 13BD4: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 32  // .\/._SB_PCI0RP22
 13BE4: 00                                               // .

                    Case
 13BE5: A1 44 0E                                         // .D.

 (0x17)
                    {
                        ADBG ("Notify RP23")

 13BE8: A0 2A 93 5F 54 5F 30 0A 17 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13BF8: 74 69 66 79 20 52 50 32 33 00                    // tify RP23.

                        Notify (\_SB.PCI0.RP23, Zero)
                    }

 13C02: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 33  // .\/._SB_PCI0RP23
 13C12: 00                                               // .

                    Case
 13C13: A1 46 0B                                         // .F.

 (0x18)
                    {
                        ADBG ("Notify RP24")

 13C16: A0 2A 93 5F 54 5F 30 0A 18 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13C26: 74 69 66 79 20 52 50 32 34 00                    // tify RP24.

                        Notify (\_SB.PCI0.RP24, Zero)
                    }

 13C30: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 34  // .\/._SB_PCI0RP24
 13C40: 00                                               // .

                    Case
 13C41: A1 48 08                                         // .H.

 (0x19)
                    {
                        ADBG ("Notify PEG0")

 13C44: A0 2A 93 5F 54 5F 30 0A 19 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13C54: 74 69 66 79 20 50 45 47 30 00                    // tify PEG0.

                        Notify (\_SB.PCI0.PEG0, Zero)
                    }

 13C5E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 13C6E: 00                                               // .

                    Case
 13C6F: A1 4A 05                                         // .J.

 (0x1A)
                    {
                        ADBG ("Notify PEG1")

 13C72: A0 2A 93 5F 54 5F 30 0A 1A 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13C82: 74 69 66 79 20 50 45 47 31 00                    // tify PEG1.

                        Notify (\_SB.PCI0.PEG1, Zero)
                    }

 13C8C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 31  // .\/._SB_PCI0PEG1
 13C9C: 00                                               // .

                    Case
 13C9D: A1 2C                                            // .,

 (0x1B)
                    {
                        ADBG ("Notify PEG2")

 13C9F: A0 2A 93 5F 54 5F 30 0A 1B 41 44 42 47 0D 4E 6F  // .*._T_0..ADBG.No
 13CAF: 74 69 66 79 20 50 45 47 32 00                    // tify PEG2.

                        Notify (\_SB.PCI0.PEG2, Zero)
                    }


 13CB9: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 32  // .\/._SB_PCI0PEG2
 13CC9: 00                                               // .

                }
            }
        }


 13CCA: A5                                               // .

        Method (NFYG, 0, NotSerialized)
        {
            ADBG ("NFYG")

 13CCB: 14 4E 06 4E 46 59 47 00 41 44 42 47 0D 4E 46 59  // .N.NFYG.ADBG.NFY
 13CDB: 47 00                                            // G.

            If (LEqual (TDGS, One))
            {

 13CDD: A0 4C 05 93 54 44 47 53 01                       // .L..TDGS.

                If (LEqual (DCKE, One))
                {
                    ADBG ("NFYG.DCKE")

 13CE6: A0 28 93 44 43 4B 45 01 41 44 42 47 0D 4E 46 59  // .(.DCKE.ADBG.NFY
 13CF6: 47 2E 44 43 4B 45 00                             // G.DCKE.

                    Notify (\_SB.PCI0.GFX0, 0x81)
                }

 13CFD: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
 13D0D: 0A 81                                            // ..

                ElseIf
 13D0F: A1 2A                                            // .*

 (LEqual (SUDK, One))
                {
                    ADBG ("NFYG.SUDK")

 13D11: A0 28 93 53 55 44 4B 01 41 44 42 47 0D 4E 46 59  // .(.SUDK.ADBG.NFY
 13D21: 47 2E 53 55 44 4B 00                             // G.SUDK.

                    Notify (\_SB.PCI0.GFX0, 0x81)
                }
            }
        }


 13D28: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
 13D38: 0A 81                                            // ..

        Method (TFPS, 0, NotSerialized)
        {
            ADBG ("TFPS")
            Store (\_SB.CGRD (FPAT, FPEN, FPGN, Zero), Local0)

 13D3A: 14 41 05 54 46 50 53 00 41 44 42 47 0D 54 46 50  // .A.TFPS.ADBG.TFP
 13D4A: 53 00 70 5C 2E 5F 53 42 5F 43 47 52 44 46 50 41  // S.p\._SB_CGRDFPA
 13D5A: 54 46 50 45 4E 46 50 47 4E 00 60                 // TFPENFPGN.`

            If (Local0)
            {
                ADBG ("ExtFrcPwr1")
            }

 13D65: A0 12 60 41 44 42 47 0D 45 78 74 46 72 63 50 77  // ..`ADBG.ExtFrcPw
 13D75: 72 31 00                                         // r1.

            Else
            {
                ADBG ("ExtFrcPwr0")
            }


 13D78: A1 11 41 44 42 47 0D 45 78 74 46 72 63 50 77 72  // ..ADBG.ExtFrcPwr
 13D88: 30 00                                            // 0.

            Return (Local0)
        }


 13D8A: A4 60                                            // .`

        Method (CNCT, 0, NotSerialized)
        {
            ADBG ("CNCT")
            ADBG ("Read")
            ADBG ("ACPI_GPE_STS")
            Store (CPAD, Local7)
            Store (CPAB, Local6)

 13D8C: 14 4E 06 43 4E 43 54 00 41 44 42 47 0D 43 4E 43  // .N.CNCT.ADBG.CNC
 13D9C: 54 00 41 44 42 47 0D 52 65 61 64 00 41 44 42 47  // T.ADBG.Read.ADBG
 13DAC: 0D 41 43 50 49 5F 47 50 45 5F 53 54 53 00 70 43  // .ACPI_GPE_STS.pC
 13DBC: 50 41 44 67 70 43 50 41 42 66                    // PADgpCPABf

            While (LGreater (Local6, 0x08))
            {
                Add (Local7, One, Local7)

 13DC6: A2 0E 94 66 0A 08 72 67 01 67                    // ...f..rg.g

                Subtract (Local6, 0x08, Local6)
            }


 13DD0: 74 66 0A 08 66                                   // tf..f

            OperationRegion (GPE0, SystemIO, Local7, One)

 13DD5: 5B 80 47 50 45 30 01 67 01                       // [.GPE0.g.

            Field (GPE0, ByteAcc, Lock, Preserve)
            {
                TEMP,   8
            }

            Store (TEMP, Local0)
            ShiftRight (Local0, Local6, Local0)
            And (Local0, One, Local0)

 13DDE: 5B 81 0B 47 50 45 30 11 54 45 4D 50 08 70 54 45  // [..GPE0.TEMP.pTE
 13DEE: 4D 50 60 7A 60 66 60 7B 60 01 60                 // MP`z`f`{`.`

            Return (Local0)
        }


 13DF9: A4 60                                            // .`

        Method (CLNE, 0, NotSerialized)
        {
            ADBG ("CLNE")
            ADBG ("Clear")
            ADBG ("ACPI_GPE_STS")
            Store (CPAD, Local7)
            Store (CPAB, Local6)

 13DFB: 14 4D 06 43 4C 4E 45 00 41 44 42 47 0D 43 4C 4E  // .M.CLNE.ADBG.CLN
 13E0B: 45 00 41 44 42 47 0D 43 6C 65 61 72 00 41 44 42  // E.ADBG.Clear.ADB
 13E1B: 47 0D 41 43 50 49 5F 47 50 45 5F 53 54 53 00 70  // G.ACPI_GPE_STS.p
 13E2B: 43 50 41 44 67 70 43 50 41 42 66                 // CPADgpCPABf

            While (LGreater (Local6, 0x08))
            {
                Add (Local7, One, Local7)

 13E36: A2 0E 94 66 0A 08 72 67 01 67                    // ...f..rg.g

                Subtract (Local6, 0x08, Local6)
            }


 13E40: 74 66 0A 08 66                                   // tf..f

            OperationRegion (GPE0, SystemIO, Local7, One)

 13E45: 5B 80 47 50 45 30 01 67 01                       // [.GPE0.g.

            Field (GPE0, ByteAcc, Lock, Preserve)
            {
                TEMP,   8
            }

            ShiftLeft (One, Local6, Local6)

 13E4E: 5B 81 0B 47 50 45 30 11 54 45 4D 50 08 79 01 66  // [..GPE0.TEMP.y.f
 13E5E: 66                                               // f

            Or (TEMP, Local6, TEMP)
        }


 13E5F: 7D 54 45 4D 50 66 54 45 4D 50                    // }TEMPfTEMP

        Method (DRPM, 1, Serialized)
        {
            ADBG ("DRPM")
            Store (\_SB.STDC (\_SB.PCI0.GPCB (), Zero, TBTD (Arg0), TBTF (Arg0), 0x05), Local7)
            Store (MMRP (Arg0), Local6)
            Add (Local7, Local6, Local0)

 13E69: 14 41 06 44 52 50 4D 09 41 44 42 47 0D 44 52 50  // .A.DRPM.ADBG.DRP
 13E79: 4D 00 70 5C 2E 5F 53 42 5F 53 54 44 43 5C 2F 03  // M.p\._SB_STDC\/.
 13E89: 5F 53 42 5F 50 43 49 30 47 50 43 42 00 54 42 54  // _SB_PCI0GPCB.TBT
 13E99: 44 68 54 42 54 46 68 0A 05 67 70 4D 4D 52 50 68  // DhTBTFh..gpMMRPh
 13EA9: 66 72 67 66 60                                   // frgf`

            OperationRegion (MMMS, SystemMemory, Local0, 0x02)

 13EAE: 5B 80 4D 4D 4D 53 00 60 0A 02                    // [.MMMS.`..

            Field (MMMS, WordAcc, NoLock, Preserve)
            {
                MSIC,   1
            }


 13EB8: 5B 81 0B 4D 4D 4D 53 02 4D 53 49 43 01           // [..MMMS.MSIC.

            Store (Zero, MSIC)
        }


 13EC5: 70 00 4D 53 49 43                                // p.MSIC

        Method (DMSI, 1, Serialized)
        {
            ADBG ("DMSI")
            Add (MMTB (Arg0), 0x0548, Local0)

 13ECB: 14 4D 0D 44 4D 53 49 09 41 44 42 47 0D 44 4D 53  // .M.DMSI.ADBG.DMS
 13EDB: 49 00 72 4D 4D 54 42 68 0B 48 05 60              // I.rMMTBh.H.`

            OperationRegion (PXVD, SystemMemory, Local0, 0x08)

 13EE7: 5B 80 50 58 56 44 00 60 0A 08                    // [.PXVD.`..

            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                TB2P,   32, 
                P2TB,   32
            }


 13EF1: 5B 81 10 50 58 56 44 03 54 42 32 50 20 50 32 54  // [..PXVD.TB2P P2T
 13F01: 42 20                                            // B 

            OperationRegion (SPRT, SystemIO, 0xB2, 0x02)

 13F03: 5B 80 53 50 52 54 01 0A B2 0A 02                 // [.SPRT.....

            Field (SPRT, ByteAcc, Lock, Preserve)
            {
                SSMP,   8
            }

            Store (TB2P, Local1)

 13F0E: 5B 81 0B 53 50 52 54 11 53 53 4D 50 08 70 54 42  // [..SPRT.SSMP.pTB
 13F1E: 32 50 61                                         // 2Pa

            If (LEqual (Local1, 0x25))
            {
                Store (TBDM, TBSF)
                Store (TBSW, SSMP)
                ADBG ("0x25->P2TB")
                Store (0x25, P2TB)
                Store (0x64, Local2)

 13F21: A0 49 07 93 61 0A 25 70 54 42 44 4D 54 42 53 46  // .I..a.%pTBDMTBSF
 13F31: 70 54 42 53 57 53 53 4D 50 41 44 42 47 0D 30 78  // pTBSWSSMPADBG.0x
 13F41: 32 35 2D 3E 50 32 54 42 00 70 0A 25 50 32 54 42  // 25->P2TB.p.%P2TB
 13F51: 70 0A 64 62                                      // p.db

                While (LGreater (Local2, Zero))
                {
                    Store (Subtract (Local2, One), Local2)
                    Store (TB2P, Local1)

 13F55: A2 31 94 62 00 70 74 62 01 00 62 70 54 42 32 50  // .1.b.ptb..bpTB2P
 13F65: 61                                               // a

                    If (LEqual (Local1, 0xFFFFFFFF))
                    {
                        ADBG ("DMSiF")

 13F66: A0 15 93 61 0C FF FF FF FF 41 44 42 47 0D 44 4D  // ...a.....ADBG.DM
 13F76: 53 69 46 00                                      // SiF.

                        Return (Zero)
                    }


 13F7A: A4 00                                            // ..

                    If (LEqual (Local1, 0x24))
                    {

 13F7C: A0 06 93 61 0A 24                                // ...a.$

                        Break
                    }


 13F82: A5                                               // .

                    Sleep (0x32)
                }

                Store (Zero, P2TB)
                ADBG ("DMSi 1")

 13F83: 5B 22 0A 32 70 00 50 32 54 42 41 44 42 47 0D 44  // [".2p.P2TBADBG.D
 13F93: 4D 53 69 20 31 00                                // MSi 1.

                Return (One)
            }

            ADBG ("DMSi 0")

 13F99: A4 01 41 44 42 47 0D 44 4D 53 69 20 30 00        // ..ADBG.DMSi 0.

            Return (Zero)
        }


 13FA7: A4 00                                            // ..

        Method (RSMI, 1, Serialized)
        {
            ADBG ("RSMI")
            Store (TFPS (), Local0)
            Add (MMTB (Arg0), Zero, Local1)

 13FA9: 14 4F 12 52 53 4D 49 09 41 44 42 47 0D 52 53 4D  // .O.RSMI.ADBG.RSM
 13FB9: 49 00 70 54 46 50 53 60 72 4D 4D 54 42 68 00 61  // I.pTFPS`rMMTBh.a

            OperationRegion (PXVD, SystemMemory, Local1, 0x0550)

 13FC9: 5B 80 50 58 56 44 00 61 0B 50 05                 // [.PXVD.a.P.

            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                VIDI,   32, 
                Offset (0x548), 
                TB2P,   32, 
                P2TB,   32
            }

            Store (TB2P, Local2)

 13FD4: 5B 81 19 50 58 56 44 03 56 49 44 49 20 00 80 A2  // [..PXVD.VIDI ...
 13FE4: 02 54 42 32 50 20 50 32 54 42 20 70 54 42 32 50  // .TB2P P2TB pTB2P
 13FF4: 62                                               // b

            If (
 13FF5: A0 17 92                                         // ...

LNotEqual (Local2, 0xFFFFFFFF))
            {
                ADBG ("RSMi 1")

 13FF8: 93 62 0C FF FF FF FF 41 44 42 47 0D 52 53 4D 69  // .b.....ADBG.RSMi
 14008: 20 31 00                                         //  1.

                Return (One)
            }


 1400B: A4 01                                            // ..

            If (LNot (CNCT ()))
            {
                ADBG ("RSMi 2")

 1400D: A0 15 92 43 4E 43 54 41 44 42 47 0D 52 53 4D 69  // ...CNCTADBG.RSMi
 1401D: 20 32 00                                         //  2.

                Return (0x02)
            }

            DRPM (Arg0)

 14020: A4 0A 02 44 52 50 4D 68                          // ...DRPMh

            If (Local0)
            {
                \_SB.TBFP (Zero)
            }

 14028: A0 0D 60 5C 2E 5F 53 42 5F 54 42 46 50 00        // ..`\._SB_TBFP.

            Else
            {
                \_SB.TBFP (One)
            }

            Store (Zero, Local3)

 14036: A1 0C 5C 2E 5F 53 42 5F 54 42 46 50 01 70 00 63  // ..\._SB_TBFP.p.c

            While (LOr (FFTB (Arg0), CNCT ()))
            {
                Sleep (0x05)
                CLNE ()
                Add (Local3, One, Local3)

 14046: A2 49 06 91 46 46 54 42 68 43 4E 43 54 5B 22 0A  // .I..FFTBhCNCT[".
 14056: 05 43 4C 4E 45 72 63 01 63                       // .CLNErc.c

                If (LGreater (Local3, 0x14))
                {
                    Sleep (0x03E8)
                    ADBG ("RSMi PCIe down")
                }


 1405F: A0 1E 94 63 0A 14 5B 22 0B E8 03 41 44 42 47 0D  // ...c..["...ADBG.
 1406F: 52 53 4D 69 20 50 43 49 65 20 64 6F 77 6E 00     // RSMi PCIe down.

                If (LGreater (Local3, 0x19))
                {
                    ADBG ("RSMi Oops")

 1407E: A0 31 94 63 0A 19 41 44 42 47 0D 52 53 4D 69 20  // .1.c..ADBG.RSMi 
 1408E: 4F 6F 70 73 00                                   // Oops.

                    If (Local0)
                    {
                        \_SB.TBFP (One)
                    }

 14093: A0 0D 60 5C 2E 5F 53 42 5F 54 42 46 50 01        // ..`\._SB_TBFP.

                    Else
                    {
                        \_SB.TBFP (Zero)
                    }


 140A1: A1 0C 5C 2E 5F 53 42 5F 54 42 46 50 00           // ..\._SB_TBFP.

                    Return (Zero)
                }
            }


 140AE: A4 00                                            // ..

            If (Local0)
            {
                \_SB.TBFP (One)
            }

 140B0: A0 0D 60 5C 2E 5F 53 42 5F 54 42 46 50 01        // ..`\._SB_TBFP.

            Else
            {
                \_SB.TBFP (Zero)
            }

            ADBG ("RSMi 0")

 140BE: A1 0C 5C 2E 5F 53 42 5F 54 42 46 50 00 41 44 42  // ..\._SB_TBFP.ADB
 140CE: 47 0D 52 53 4D 69 20 30 00                       // G.RSMi 0.

            Return (Zero)
        }


 140D7: A4 00                                            // ..

        Method (GNIS, 1, Serialized)
        {
            ADBG ("GNIS")

 140D9: 14 4D 0B 47 4E 49 53 09 41 44 42 47 0D 47 4E 49  // .M.GNIS.ADBG.GNI
 140E9: 53 00                                            // S.

            If (LEqual (GP5F, Zero))
            {
                ADBG ("GNIS_Dis=0")

 140EB: A0 19 93 47 50 35 46 00 41 44 42 47 0D 47 4E 49  // ...GP5F.ADBG.GNI
 140FB: 53 5F 44 69 73 3D 30 00                          // S_Dis=0.

                Return (Zero)
            }

            Add (MMTB (Arg0), 0x0544, Local0)

 14103: A4 00 72 4D 4D 54 42 68 0B 44 05 60              // ..rMMTBh.D.`

            OperationRegion (PXVD, SystemMemory, Local0, 0x08)

 1410F: 5B 80 50 58 56 44 00 60 0A 08                    // [.PXVD.`..

            Field (PXVD, DWordAcc, NoLock, Preserve)
            {
                HPFI,   1, 
                Offset (0x04), 
                TB2P,   32
            }

            Store (TB2P, Local1)
            ADBG (
 14119: 5B 81 12 50 58 56 44 03 48 50 46 49 01 00 1F 54  // [..PXVD.HPFI...T
 14129: 42 32 50 20 70 54 42 32 50 61 41 44 42 47        // B2P pTB2PaADBG

Concatenate ("TB2P=", ToHexString (Local1)))

 14137: 73 0D 54 42 32 50 3D 00 98 61 00 00              // s.TB2P=..a..

            If (LEqual (Local1, 0xFFFFFFFF))
            {
                ADBG ("GNIS=0")

 14143: A0 16 93 61 0C FF FF FF FF 41 44 42 47 0D 47 4E  // ...a.....ADBG.GN
 14153: 49 53 3D 30 00                                   // IS=0.

                Return (Zero)
            }

            Store (HPFI, Local2)
            ADBG (
 14158: A4 00 70 48 50 46 49 62 41 44 42 47              // ..pHPFIbADBG

Concatenate ("HPFI=", ToHexString (Local2)))

 14164: 73 0D 48 50 46 49 3D 00 98 62 00 00              // s.HPFI=..b..

            If (LEqual (Local2, One))
            {
                Store (Zero, HPFI)
                ADBG ("GNIS=0")

 14170: A0 18 93 62 01 70 00 48 50 46 49 41 44 42 47 0D  // ...b.p.HPFIADBG.
 14180: 47 4E 49 53 3D 30 00                             // GNIS=0.

                Return (Zero)
            }

            ADBG ("GNIS=1")

 14187: A4 00 41 44 42 47 0D 47 4E 49 53 3D 31 00        // ..ADBG.GNIS=1.

            Return (One)
        }


 14195: A4 01                                            // ..

        Method (XTBT, 2, Serialized)
        {
            ADBG ("XTBT")

 14197: 14 48 1E 58 54 42 54 0A 41 44 42 47 0D 58 54 42  // .H.XTBT.ADBG.XTB
 141A7: 54 00                                            // T.

            If (LEqual (CF2T, One))
            {
                ADBG ("Clear")
                ADBG ("GPI_GPE_STS")
                \_SB.CAGS (Arg1)
            }

            WWAK ()
            WSUB (Arg0)

 141A9: A0 2E 93 43 46 32 54 01 41 44 42 47 0D 43 6C 65  // ...CF2T.ADBG.Cle
 141B9: 61 72 00 41 44 42 47 0D 47 50 49 5F 47 50 45 5F  // ar.ADBG.GPI_GPE_
 141C9: 53 54 53 00 5C 2E 5F 53 42 5F 43 41 47 53 69 57  // STS.\._SB_CAGSiW
 141D9: 57 41 4B 57 53 55 42 68                          // WAKWSUBh

            If (LEqual (TNAT, One))
            {
                Store (RSMI (Arg0), Local0)

 141E1: A0 1D 93 54 4E 41 54 01 70 52 53 4D 49 68 60     // ...TNAT.pRSMIh`

                If (LNot (Local0))
                {

 141F0: A0 05 92 60                                      // ...`

                    Return (Zero)
                }


 141F4: A4 00                                            // ..

                If (DMSI (Arg0))
                {

 141F6: A0 08 44 4D 53 49 68                             // ..DMSIh

                    Return (Zero)
                }
            }


 141FD: A4 00                                            // ..

            If (GNIS (Arg0))
            {

 141FF: A0 08 47 4E 49 53 68                             // ..GNISh

                Return (Zero)
            }


 14206: A4 00                                            // ..

            OperationRegion (SPRT, SystemIO, 0xB2, 0x02)

 14208: 5B 80 53 50 52 54 01 0A B2 0A 02                 // [.SPRT.....

            Field (SPRT, ByteAcc, Lock, Preserve)
            {
                SSMP,   8
            }

            ADBG ("TBT-HP-Handler")
            ADBG ("PEG WorkAround")
            PGWA (Arg0)
            Acquire (OSUM, 0xFFFF)
            Store (TBFF (Arg0), Local1)

 14213: 5B 81 0B 53 50 52 54 11 53 53 4D 50 08 41 44 42  // [..SPRT.SSMP.ADB
 14223: 47 0D 54 42 54 2D 48 50 2D 48 61 6E 64 6C 65 72  // G.TBT-HP-Handler
 14233: 00 41 44 42 47 0D 50 45 47 20 57 6F 72 6B 41 72  // .ADBG.PEG WorkAr
 14243: 6F 75 6E 64 00 50 47 57 41 68 5B 23 4F 53 55 4D  // ound.PGWAh[#OSUM
 14253: FF FF 70 54 42 46 46 68 61                       // ..pTBFFha

            If (LEqual (Local1, One))
            {
                Sleep (0x10)
                Release (OSUM)
                ADBG ("OS_Up_Received")

 1425C: A0 4B 04 93 61 01 5B 22 0A 10 5B 27 4F 53 55 4D  // .K..a.["..['OSUM
 1426C: 41 44 42 47 0D 4F 53 5F 55 70 5F 52 65 63 65 69  // ADBG.OS_Up_Recei
 1427C: 76 65 64 00                                      // ved.

                If (LAnd (LEqual (DPTF, One), 
 14280: A0 25 90 93 44 50 54 46 01                       // .%..DPTF.

LEqual (DDDR, One)))
                {

 14289: 93 44 44 44 52 01                                // .DDDR.

                    If (LEqual (_REV, 0x05))
                    {

 1428F: A0 0A 93 5F 52 45 56 0A 05                       // ..._REV..

                        Return (Zero)
                    }

                    XTBT (TBSE, CPGN)
                }


 14298: A4 00 58 54 42 54 54 42 53 45 43 50 47 4E        // ..XTBTTBSECPGN

                Return (Zero)
            }


 142A6: A4 00                                            // ..

            If (LEqual (Local1, 0x02))
            {
                ADBG ("Disconnect")

 142A8: A0 42 05 93 61 0A 02 41 44 42 47 0D 44 69 73 63  // .B..a..ADBG.Disc
 142B8: 6F 6E 6E 65 63 74 00                             // onnect.

                If (LEqual (OHPN, One))
                {
                    NTFY (Arg0)
                }


 142BF: A0 0C 93 4F 48 50 4E 01 4E 54 46 59 68           // ...OHPN.NTFYh

                If (LEqual (GHPN, One))
                {
                    NFYG ()
                }

                Sleep (0x10)
                Release (OSUM)
                P8XH (Zero, 0x7D)
                ADBG ("Disconnect")

 142CC: A0 0B 93 47 48 50 4E 01 4E 46 59 47 5B 22 0A 10  // ...GHPN.NFYG["..
 142DC: 5B 27 4F 53 55 4D 50 38 58 48 00 0A 7D 41 44 42  // ['OSUMP8XH..}ADB
 142EC: 47 0D 44 69 73 63 6F 6E 6E 65 63 74 00           // G.Disconnect.

                Return (Zero)
            }


 142F9: A4 00                                            // ..

            If (LEqual (SOHP, One))
            {
                ADBG ("TBT SW SMI")
                Store (TBEF, TBSF)
                Store (TBSW, SSMP)
                Store (TEC0, TBSF)

 142FB: A0 3B 93 53 4F 48 50 01 41 44 42 47 0D 54 42 54  // .;.SOHP.ADBG.TBT
 1430B: 20 53 57 20 53 4D 49 00 70 54 42 45 46 54 42 53  //  SW SMI.pTBEFTBS
 1431B: 46 70 54 42 53 57 53 53 4D 50 70 54 45 43 30 54  // FpTBSWSSMPpTEC0T
 1432B: 42 53 46                                         // BSF

                Store (TBSW, SSMP)
            }


 1432E: 70 54 42 53 57 53 53 4D 50                       // pTBSWSSMP

            If (LEqual (OHPN, One))
            {
                NTFY (Arg0)
            }


 14337: A0 0C 93 4F 48 50 4E 01 4E 54 46 59 68           // ...OHPN.NTFYh

            If (LEqual (GHPN, One))
            {
                NFYG ()
            }


 14344: A0 0B 93 47 48 50 4E 01 4E 46 59 47              // ...GHPN.NFYG

            If (LEqual (S0ID, One))
            {

 14350: A0 14 93 53 30 49 44 01                          // ...S0ID.

                Notify (\_SB.LID0, 0x80)
            }

            Sleep (0x10)
            Release (OSUM)
            ADBG ("End-of-XTBT")
        }


 14358: 86 5C 2E 5F 53 42 5F 4C 49 44 30 0A 80 5B 22 0A  // .\._SB_LID0..[".
 14368: 10 5B 27 4F 53 55 4D 41 44 42 47 0D 45 6E 64 2D  // .['OSUMADBG.End-
 14378: 6F 66 2D 58 54 42 54 00                          // of-XTBT.

        Method (_E42, 0, NotSerialized)  // _Exx: Edge-Triggered GPE
        {
            ADBG ("_E42")
            XTBT (TBSE, CPGN)
            ADBG ("End-of-_E42")
        }


 14380: 14 2D 5F 45 34 32 00 41 44 42 47 0D 5F 45 34 32  // .-_E42.ADBG._E42
 14390: 00 58 54 42 54 54 42 53 45 43 50 47 4E 41 44 42  // .XTBTTBSECPGNADB
 143A0: 47 0D 45 6E 64 2D 6F 66 2D 5F 45 34 32 00        // G.End-of-_E42.

        Method (TINI, 2, Serialized)
        {
            ADBG ("TINI")

 143AE: 14 42 09 54 49 4E 49 0A 41 44 42 47 0D 54 49 4E  // .B.TINI.ADBG.TIN
 143BE: 49 00                                            // I.

            If (LEqual (Arg1, 0x03))
            {
                Store (MMRP (Arg0), Local0)

 143C0: A0 47 05 93 69 0A 03 70 4D 4D 52 50 68 60        // .G..i..pMMRPh`

                OperationRegion (RP_X, SystemMemory, Local0, 0x20)

 143CE: 5B 80 52 50 5F 58 00 60 0A 20                    // [.RP_X.`. 

                Field (RP_X, DWordAcc, NoLock, Preserve)
                {
                    REG0,   32, 
                    REG1,   32, 
                    REG2,   32, 
                    REG3,   32, 
                    REG4,   32, 
                    REG5,   32, 
                    REG6,   32, 
                    REG7,   32
                }

                Store (REG6, Local1)

 143D8: 5B 81 2E 52 50 5F 58 03 52 45 47 30 20 52 45 47  // [..RP_X.REG0 REG
 143E8: 31 20 52 45 47 32 20 52 45 47 33 20 52 45 47 34  // 1 REG2 REG3 REG4
 143F8: 20 52 45 47 35 20 52 45 47 36 20 52 45 47 37 20  //  REG5 REG6 REG7 
 14408: 70 52 45 47 36 61                                // pREG6a

                Store (0x00707000, REG6)
            }

            Store (MMTB (Arg0), Local2)
            OSUP (Local2)

 1440E: 70 0C 00 70 70 00 52 45 47 36 70 4D 4D 54 42 68  // p..pp.REG6pMMTBh
 1441E: 62 4F 53 55 50 62                                // bOSUPb

            If (LEqual (Arg1, 0x03))
            {

 14424: A0 0B 93 69 0A 03                                // ...i..

                Store (Local1, REG6)
            }

            ADBG ("End-of-TINI")
        }
    }


 1442A: 70 61 52 45 47 36 41 44 42 47 0D 45 6E 64 2D 6F  // paREG6ADBG.End-o
 1443A: 66 2D 54 49 4E 49 00                             // f-TINI.

    Scope (_SB)
    {

 14441: 10 22 5F 53 42 5F                                // ."_SB_

        Method (THDR, 2, Serialized)
        {
            ADBG ("THDR")
            \_GPE.XTBT (Arg0, Arg1)
        }
    }


 14447: 14 1C 54 48 44 52 0A 41 44 42 47 0D 54 48 44 52  // ..THDR.ADBG.THDR
 14457: 00 5C 2E 5F 47 50 45 58 54 42 54 68 69           // .\._GPEXTBThi

    Scope (_SB)
    {

 14464: 10 40 19 5F 53 42 5F                             // .@._SB_

        Method (CGWR, 4, Serialized)
        {

 1446B: 14 43 05 43 47 57 52 0C                          // .C.CGWR.

            If (LEqual (Arg0, One))
            {

 14473: A0 19 93 68 01                                   // ...h.

                If (CondRefOf (\_SB.SGOV))
                {
                    SGOV (Arg2, Arg3)
                }
            }

 14478: A0 14 5B 12 5C 2E 5F 53 42 5F 53 47 4F 56 00 53  // ..[.\._SB_SGOV.S
 14488: 47 4F 56 6A 6B                                   // GOVjk

            ElseIf
 1448D: A1 31                                            // .1

 (LEqual (Arg0, 0x02))
            {

 1448F: A0 2F 93 68 0A 02                                // ./.h..

                If (CondRefOf (\_SB.PCI0.GEXP.SGEP))
                {
                    ^PCI0.GEXP.SGEP (Arg1, Arg2, Arg3)
                }
            }
        }


 14495: A0 29 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 47  // .)[.\/._SB_PCI0G
 144A5: 45 58 50 53 47 45 50 00 5E 2F 03 50 43 49 30 47  // EXPSGEP.^/.PCI0G
 144B5: 45 58 50 53 47 45 50 69 6A 6B                    // EXPSGEPijk

        Method (CGRD, 4, Serialized)
        {
            Store (One, Local0)

 144BF: 14 4C 07 43 47 52 44 0C 70 01 60                 // .L.CGRD.p.`

            If (LEqual (Arg0, One))
            {

 144CA: A0 3C 93 68 01                                   // .<.h.

                If (LEqual (Arg3, Zero))
                {

 144CF: A0 1A 93 6B 00                                   // ...k.

                    If (CondRefOf (\_SB.GGOV))
                    {

 144D4: A0 15 5B 12 5C 2E 5F 53 42 5F 47 47 4F 56 00     // ..[.\._SB_GGOV.

                        Store (GGOV (Arg2), Local0)
                    }
                }

 144E3: 70 47 47 4F 56 6A 60                             // pGGOVj`

                ElseIf
 144EA: A1 1C                                            // ..

 (LEqual (Arg3, One))
                {

 144EC: A0 1A 93 6B 01                                   // ...k.

                    If (CondRefOf (\_SB.GGIV))
                    {

 144F1: A0 15 5B 12 5C 2E 5F 53 42 5F 47 47 49 56 00     // ..[.\._SB_GGIV.

                        Store (GGIV (Arg2), Local0)
                    }
                }
            }

 14500: 70 47 47 49 56 6A 60                             // pGGIVj`

            ElseIf
 14507: A1 32                                            // .2

 (LEqual (Arg0, 0x02))
            {

 14509: A0 30 93 68 0A 02                                // .0.h..

                If (CondRefOf (\_SB.PCI0.GEXP.GEPS))
                {

 1450F: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 47  // .*[.\/._SB_PCI0G
 1451F: 45 58 50 47 45 50 53 00                          // EXPGEPS.

                    Store (^PCI0.GEXP.GEPS (Arg1, Arg2), Local0)
                }
            }


 14527: 70 5E 2F 03 50 43 49 30 47 45 58 50 47 45 50 53  // p^/.PCI0GEXPGEPS
 14537: 69 6A 60                                         // ij`

            Return (Local0)
        }


 1453A: A4 60                                            // .`

        Method (WRGP, 2, Serialized)
        {
            Store (Arg0, Local0)
            Store (Arg0, Local1)
            And (Local0, 0xFFFFFFFF, Local0)
            ShiftRight (Local1, 0x20, Local1)

 1453C: 14 47 05 57 52 47 50 0A 70 68 60 70 68 61 7B 60  // .G.WRGP.ph`pha{`
 1454C: 0C FF FF FF FF 60 7A 61 0A 20 61                 // .....`za. a

            If (LEqual (And (Local0, 0xFF), One))
            {
                CGWR (And (Local0, 0xFF), ShiftRight (Local1, 0x18), Local1, Arg1)
            }

 14557: A0 18 93 7B 60 0A FF 00 01 43 47 57 52 7B 60 0A  // ...{`....CGWR{`.
 14567: FF 00 7A 61 0A 18 00 61 69                       // ..za...ai

            ElseIf
 14570: A1 23                                            // .#

 (LEqual (And (Local0, 0xFF), 0x02))
            {
                CGWR (And (Local0, 0xFF), ShiftRight (Local1, 0x18), ShiftRight (ShiftLeft (Local1, 0x08), 0x18), Arg1)
            }
        }


 14572: A0 21 93 7B 60 0A FF 00 0A 02 43 47 57 52 7B 60  // .!.{`.....CGWR{`
 14582: 0A FF 00 7A 61 0A 18 00 7A 79 61 0A 08 00 0A 18  // ...za...zya.....
 14592: 00 69                                            // .i

        Method (RDGP, 2, Serialized)
        {
            Store (One, Local7)
            Store (Arg0, Local0)
            Store (Arg0, Local1)
            And (Local0, 0xFFFFFFFF, Local0)
            ShiftRight (Local1, 0x20, Local1)

 14594: 14 40 06 52 44 47 50 0A 70 01 67 70 68 60 70 68  // .@.RDGP.p.gph`ph
 145A4: 61 7B 60 0C FF FF FF FF 60 7A 61 0A 20 61        // a{`.....`za. a

            If (LEqual (And (Local0, 0xFF), One))
            {

 145B2: A0 1A 93 7B 60 0A FF 00 01                       // ...{`....

                Store (CGRD (And (Local0, 0xFF), ShiftRight (Local1, 0x18), Local1, Arg1), Local7)
            }

 145BB: 70 43 47 52 44 7B 60 0A FF 00 7A 61 0A 18 00 61  // pCGRD{`...za...a
 145CB: 69 67                                            // ig

            ElseIf
 145CD: A1 25                                            // .%

 (LEqual (And (Local0, 0xFF), 0x02))
            {

 145CF: A0 23 93 7B 60 0A FF 00 0A 02                    // .#.{`.....

                Store (CGRD (And (Local0, 0xFF), ShiftRight (Local1, 0x18), ShiftRight (ShiftLeft (Local1, 0x08), 0x18), Arg1), Local7)
            }


 145D9: 70 43 47 52 44 7B 60 0A FF 00 7A 61 0A 18 00 7A  // pCGRD{`...za...z
 145E9: 79 61 0A 08 00 0A 18 00 69 67                    // ya......ig

            Return (Local7)
        }
    }


 145F3: A4 67                                            // .g

    Scope (_SB)
    {

 145F5: 10 49 09 5F 53 42 5F                             // .I._SB_

        Method (TBFP, 1, NotSerialized)
        {

 145FC: 14 34 54 42 46 50 01                             // .4TBFP.

            If (Arg0)
            {
                CGWR (FPAT, FPEN, FPGN, FPLV)
            }

 14603: A0 16 68 43 47 57 52 46 50 41 54 46 50 45 4E 46  // ..hCGWRFPATFPENF
 14613: 50 47 4E 46 50 4C 56                             // PGNFPLV

            Else
            {
                CGWR (FPAT, FPEN, FPGN, 
 1461A: A1 16 43 47 57 52 46 50 41 54 46 50 45 4E 46 50  // ..CGWRFPATFPENFP
 1462A: 47 4E                                            // GN

LNot (FPLV))
            }
        }


 1462C: 92 46 50 4C 56                                   // .FPLV

        Device (WTBT)
        {

 14631: 5B 82 4C 05 57 54 42 54                          // [.L.WTBT

            Name (_HID, "PNP0C14")  // _HID: Hardware ID

 14639: 08 5F 48 49 44 0D 50 4E 50 30 43 31 34 00        // ._HID.PNP0C14.

            Name (_UID, "TBFP")  // _UID: Unique ID

 14647: 08 5F 55 49 44 0D 54 42 46 50 00                 // ._UID.TBFP.

            Name (_WDG, 
 14652: 08 5F 57 44 47                                   // ._WDG

Buffer (0x14)
            {
                /* 0000 */  0x48, 0xFD, 0xCC, 0x86, 0x5E, 0x20, 0x77, 0x4A,
                /* 0008 */  0x9C, 0x48, 0x20, 0x21, 0xCB, 0xED, 0xE3, 0x41,
                /* 0010 */  0x54, 0x46, 0x01, 0x02                         
            })

 14657: 11 17 0A 14 48 FD CC 86 5E 20 77 4A 9C 48 20 21  // ....H...^ wJ.H !
 14667: CB ED E3 41 54 46 01 02                          // ...ATF..

            Method (WMTF, 3, NotSerialized)
            {

 1466F: 14 1F 57 4D 54 46 03                             // ..WMTF.

                CreateByteField (Arg2, Zero, FP)

 14676: 8C 6A 00 46 50 5F 5F                             // .j.FP__

                If (FP)
                {
                    TBFP (One)
                }

 1467D: A0 0A 46 50 5F 5F 54 42 46 50 01                 // ..FP__TBFP.

                Else
                {
                    TBFP (Zero)
                }
            }
        }
    }


 14688: A1 06 54 42 46 50 00                             // ..TBFP.

    Scope (_SB)
    {

 1468F: 10 41 42 5F 53 42 5F                             // .AB_SB_

        Method (R008, 1, Serialized)
        {
            ADBG ("R008")
            Store (Arg0, Local7)

 14696: 14 2E 52 30 30 38 09 41 44 42 47 0D 52 30 30 38  // ..R008.ADBG.R008
 146A6: 00 70 68 67                                      // .phg

            OperationRegion (MEM0, SystemMemory, Local7, One)

 146AA: 5B 80 4D 45 4D 30 00 67 01                       // [.MEM0.g.

            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }


 146B3: 5B 81 0B 4D 45 4D 30 01 54 45 4D 50 08           // [..MEM0.TEMP.

            Return (TEMP)
        }


 146C0: A4 54 45 4D 50                                   // .TEMP

        Method (W008, 2, Serialized)
        {
            ADBG ("W008")
            Store (Arg0, Local7)

 146C5: 14 2F 57 30 30 38 0A 41 44 42 47 0D 57 30 30 38  // ./W008.ADBG.W008
 146D5: 00 70 68 67                                      // .phg

            OperationRegion (MEM0, SystemMemory, Local7, One)

 146D9: 5B 80 4D 45 4D 30 00 67 01                       // [.MEM0.g.

            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }


 146E2: 5B 81 0B 4D 45 4D 30 01 54 45 4D 50 08           // [..MEM0.TEMP.

            Store (Arg1, TEMP)
        }


 146EF: 70 69 54 45 4D 50                                // piTEMP

        Method (R016, 1, Serialized)
        {
            ADBG ("R016")
            Store (Arg0, Local7)

 146F5: 14 2F 52 30 31 36 09 41 44 42 47 0D 52 30 31 36  // ./R016.ADBG.R016
 14705: 00 70 68 67                                      // .phg

            OperationRegion (MEM0, SystemMemory, Local7, 0x02)

 14709: 5B 80 4D 45 4D 30 00 67 0A 02                    // [.MEM0.g..

            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }


 14713: 5B 81 0B 4D 45 4D 30 01 54 45 4D 50 10           // [..MEM0.TEMP.

            Return (TEMP)
        }


 14720: A4 54 45 4D 50                                   // .TEMP

        Method (W016, 2, Serialized)
        {
            ADBG ("W016")
            Store (Arg0, Local7)

 14725: 14 30 57 30 31 36 0A 41 44 42 47 0D 57 30 31 36  // .0W016.ADBG.W016
 14735: 00 70 68 67                                      // .phg

            OperationRegion (MEM0, SystemMemory, Local7, 0x02)

 14739: 5B 80 4D 45 4D 30 00 67 0A 02                    // [.MEM0.g..

            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }


 14743: 5B 81 0B 4D 45 4D 30 01 54 45 4D 50 10           // [..MEM0.TEMP.

            Store (Arg1, TEMP)
        }


 14750: 70 69 54 45 4D 50                                // piTEMP

        Method (R032, 1, Serialized)
        {
            ADBG ("R032")
            Store (Arg0, Local7)

 14756: 14 2F 52 30 33 32 09 41 44 42 47 0D 52 30 33 32  // ./R032.ADBG.R032
 14766: 00 70 68 67                                      // .phg

            OperationRegion (MEM0, SystemMemory, Local7, 0x04)

 1476A: 5B 80 4D 45 4D 30 00 67 0A 04                    // [.MEM0.g..

            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


 14774: 5B 81 0B 4D 45 4D 30 01 54 45 4D 50 20           // [..MEM0.TEMP 

            Return (TEMP)
        }


 14781: A4 54 45 4D 50                                   // .TEMP

        Method (W032, 2, Serialized)
        {
            ADBG ("W032")
            Store (Arg0, Local7)

 14786: 14 30 57 30 33 32 0A 41 44 42 47 0D 57 30 33 32  // .0W032.ADBG.W032
 14796: 00 70 68 67                                      // .phg

            OperationRegion (MEM0, SystemMemory, Local7, 0x04)

 1479A: 5B 80 4D 45 4D 30 00 67 0A 04                    // [.MEM0.g..

            Field (MEM0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


 147A4: 5B 81 0B 4D 45 4D 30 01 54 45 4D 50 20           // [..MEM0.TEMP 

            Store (Arg1, TEMP)
        }


 147B1: 70 69 54 45 4D 50                                // piTEMP

        Method (PERB, 5, Serialized)
        {
            ADBG ("PERB")
            Store (Arg0, Local7)
            Or (Local7, ShiftLeft (Arg1, 0x14), Local7)
            Or (Local7, ShiftLeft (Arg2, 0x0F), Local7)
            Or (Local7, ShiftLeft (Arg3, 0x0C), Local7)
            Or (Local7, Arg4, Local7)

 147B7: 14 4B 04 50 45 52 42 0D 41 44 42 47 0D 50 45 52  // .K.PERB.ADBG.PER
 147C7: 42 00 70 68 67 7D 67 79 69 0A 14 00 67 7D 67 79  // B.phg}gyi...g}gy
 147D7: 6A 0A 0F 00 67 7D 67 79 6B 0A 0C 00 67 7D 67 6C  // j...g}gyk...g}gl
 147E7: 67                                               // g

            OperationRegion (PCI0, SystemMemory, Local7, One)

 147E8: 5B 80 50 43 49 30 00 67 01                       // [.PCI0.g.

            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }


 147F1: 5B 81 0B 50 43 49 30 01 54 45 4D 50 08           // [..PCI0.TEMP.

            Return (TEMP)
        }


 147FE: A4 54 45 4D 50                                   // .TEMP

        Method (PEWB, 6, Serialized)
        {
            ADBG ("PEWB")
            Store (Arg0, Local7)
            Or (Local7, ShiftLeft (Arg1, 0x14), Local7)
            Or (Local7, ShiftLeft (Arg2, 0x0F), Local7)
            Or (Local7, ShiftLeft (Arg3, 0x0C), Local7)
            Or (Local7, Arg4, Local7)

 14803: 14 4C 04 50 45 57 42 0E 41 44 42 47 0D 50 45 57  // .L.PEWB.ADBG.PEW
 14813: 42 00 70 68 67 7D 67 79 69 0A 14 00 67 7D 67 79  // B.phg}gyi...g}gy
 14823: 6A 0A 0F 00 67 7D 67 79 6B 0A 0C 00 67 7D 67 6C  // j...g}gyk...g}gl
 14833: 67                                               // g

            OperationRegion (PCI0, SystemMemory, Local7, One)

 14834: 5B 80 50 43 49 30 00 67 01                       // [.PCI0.g.

            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   8
            }


 1483D: 5B 81 0B 50 43 49 30 01 54 45 4D 50 08           // [..PCI0.TEMP.

            Store (Arg5, TEMP)
        }


 1484A: 70 6D 54 45 4D 50                                // pmTEMP

        Method (PERW, 5, Serialized)
        {
            ADBG ("PERW")
            Store (Arg0, Local7)
            Or (Local7, ShiftLeft (Arg1, 0x14), Local7)
            Or (Local7, ShiftLeft (Arg2, 0x0F), Local7)
            Or (Local7, ShiftLeft (Arg3, 0x0C), Local7)
            Or (Local7, Arg4, Local7)

 14850: 14 4C 04 50 45 52 57 0D 41 44 42 47 0D 50 45 52  // .L.PERW.ADBG.PER
 14860: 57 00 70 68 67 7D 67 79 69 0A 14 00 67 7D 67 79  // W.phg}gyi...g}gy
 14870: 6A 0A 0F 00 67 7D 67 79 6B 0A 0C 00 67 7D 67 6C  // j...g}gyk...g}gl
 14880: 67                                               // g

            OperationRegion (PCI0, SystemMemory, Local7, 0x02)

 14881: 5B 80 50 43 49 30 00 67 0A 02                    // [.PCI0.g..

            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }


 1488B: 5B 81 0B 50 43 49 30 01 54 45 4D 50 10           // [..PCI0.TEMP.

            Return (TEMP)
        }


 14898: A4 54 45 4D 50                                   // .TEMP

        Method (PEWW, 6, Serialized)
        {
            ADBG ("PEWW")
            Store (Arg0, Local7)
            Or (Local7, ShiftLeft (Arg1, 0x14), Local7)
            Or (Local7, ShiftLeft (Arg2, 0x0F), Local7)
            Or (Local7, ShiftLeft (Arg3, 0x0C), Local7)
            Or (Local7, Arg4, Local7)

 1489D: 14 4D 04 50 45 57 57 0E 41 44 42 47 0D 50 45 57  // .M.PEWW.ADBG.PEW
 148AD: 57 00 70 68 67 7D 67 79 69 0A 14 00 67 7D 67 79  // W.phg}gyi...g}gy
 148BD: 6A 0A 0F 00 67 7D 67 79 6B 0A 0C 00 67 7D 67 6C  // j...g}gyk...g}gl
 148CD: 67                                               // g

            OperationRegion (PCI0, SystemMemory, Local7, 0x02)

 148CE: 5B 80 50 43 49 30 00 67 0A 02                    // [.PCI0.g..

            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   16
            }


 148D8: 5B 81 0B 50 43 49 30 01 54 45 4D 50 10           // [..PCI0.TEMP.

            Store (Arg5, TEMP)
        }


 148E5: 70 6D 54 45 4D 50                                // pmTEMP

        Method (PERD, 5, Serialized)
        {
            ADBG ("PERD")
            Store (Arg0, Local7)
            Or (Local7, ShiftLeft (Arg1, 0x14), Local7)
            Or (Local7, ShiftLeft (Arg2, 0x0F), Local7)
            Or (Local7, ShiftLeft (Arg3, 0x0C), Local7)
            Or (Local7, Arg4, Local7)

 148EB: 14 4C 04 50 45 52 44 0D 41 44 42 47 0D 50 45 52  // .L.PERD.ADBG.PER
 148FB: 44 00 70 68 67 7D 67 79 69 0A 14 00 67 7D 67 79  // D.phg}gyi...g}gy
 1490B: 6A 0A 0F 00 67 7D 67 79 6B 0A 0C 00 67 7D 67 6C  // j...g}gyk...g}gl
 1491B: 67                                               // g

            OperationRegion (PCI0, SystemMemory, Local7, 0x04)

 1491C: 5B 80 50 43 49 30 00 67 0A 04                    // [.PCI0.g..

            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


 14926: 5B 81 0B 50 43 49 30 01 54 45 4D 50 20           // [..PCI0.TEMP 

            Return (TEMP)
        }


 14933: A4 54 45 4D 50                                   // .TEMP

        Method (PEWD, 6, Serialized)
        {
            ADBG ("PEWD")
            Store (Arg0, Local7)
            Or (Local7, ShiftLeft (Arg1, 0x14), Local7)
            Or (Local7, ShiftLeft (Arg2, 0x0F), Local7)
            Or (Local7, ShiftLeft (Arg3, 0x0C), Local7)
            Or (Local7, Arg4, Local7)

 14938: 14 4D 04 50 45 57 44 0E 41 44 42 47 0D 50 45 57  // .M.PEWD.ADBG.PEW
 14948: 44 00 70 68 67 7D 67 79 69 0A 14 00 67 7D 67 79  // D.phg}gyi...g}gy
 14958: 6A 0A 0F 00 67 7D 67 79 6B 0A 0C 00 67 7D 67 6C  // j...g}gyk...g}gl
 14968: 67                                               // g

            OperationRegion (PCI0, SystemMemory, Local7, 0x04)

 14969: 5B 80 50 43 49 30 00 67 0A 04                    // [.PCI0.g..

            Field (PCI0, ByteAcc, NoLock, Preserve)
            {
                TEMP,   32
            }


 14973: 5B 81 0B 50 43 49 30 01 54 45 4D 50 20           // [..PCI0.TEMP 

            Store (Arg5, TEMP)
        }


 14980: 70 6D 54 45 4D 50                                // pmTEMP

        Method (STDC, 5, Serialized)
        {
            ADBG ("STDC")
            Store (PERW (Arg0, Arg1, Arg2, Arg3, Zero), Local7)

 14986: 14 4A 12 53 54 44 43 0D 41 44 42 47 0D 53 54 44  // .J.STDC.ADBG.STD
 14996: 43 00 70 50 45 52 57 68 69 6A 6B 00 67           // C.pPERWhijk.g

            If (LEqual (Local7, 0xFFFF))
            {
                ADBG ("Referenced device is not present")

 149A3: A0 2E 93 67 0B FF FF 41 44 42 47 0D 52 65 66 65  // ...g...ADBG.Refe
 149B3: 72 65 6E 63 65 64 20 64 65 76 69 63 65 20 69 73  // renced device is
 149C3: 20 6E 6F 74 20 70 72 65 73 65 6E 74 00           //  not present.

                Return (Zero)
            }

            Store (PERW (Arg0, Arg1, Arg2, Arg3, 0x06), Local0)

 149D0: A4 00 70 50 45 52 57 68 69 6A 6B 0A 06 60        // ..pPERWhijk..`

            If (LEqual (And (Local0, 0x10), Zero))
            {
                ADBG ("No Capabilities linked list is available")

 149DE: A0 38 93 7B 60 0A 10 00 00 41 44 42 47 0D 4E 6F  // .8.{`....ADBG.No
 149EE: 20 43 61 70 61 62 69 6C 69 74 69 65 73 20 6C 69  //  Capabilities li
 149FE: 6E 6B 65 64 20 6C 69 73 74 20 69 73 20 61 76 61  // nked list is ava
 14A0E: 69 6C 61 62 6C 65 00                             // ilable.

                Return (Zero)
            }

            Store (PERB (Arg0, Arg1, Arg2, Arg3, 0x34), Local2)

 14A15: A4 00 70 50 45 52 42 68 69 6A 6B 0A 34 62        // ..pPERBhijk.4b

            While (One)
            {
                And (Local2, 0xFC, Local2)

 14A23: A2 4D 08 01 7B 62 0A FC 62                       // .M..{b..b

                If (LEqual (Local2, Zero))
                {
                    ADBG ("Capability ID is not found")

 14A2C: A0 26 93 62 00 41 44 42 47 0D 43 61 70 61 62 69  // .&.b.ADBG.Capabi
 14A3C: 6C 69 74 79 20 49 44 20 69 73 20 6E 6F 74 20 66  // lity ID is not f
 14A4C: 6F 75 6E 64 00                                   // ound.

                    Return (Zero)
                }

                Store (PERB (Arg0, Arg1, Arg2, Arg3, Local2), Local1)

 14A51: A4 00 70 50 45 52 42 68 69 6A 6B 62 61           // ..pPERBhijkba

                If (LEqual (Arg4, Local1))
                {
                    ADBG ("Capability ID is found")
                    ADBG ("Capability Offset : ")
                    ADBG (Local2)

 14A5E: A0 42 04 93 6C 61 41 44 42 47 0D 43 61 70 61 62  // .B..laADBG.Capab
 14A6E: 69 6C 69 74 79 20 49 44 20 69 73 20 66 6F 75 6E  // ility ID is foun
 14A7E: 64 00 41 44 42 47 0D 43 61 70 61 62 69 6C 69 74  // d.ADBG.Capabilit
 14A8E: 79 20 4F 66 66 73 65 74 20 3A 20 00 41 44 42 47  // y Offset : .ADBG
 14A9E: 62                                               // b

                    Return (Local2)
                }

                Store (PERB (Arg0, Arg1, Arg2, Arg3, 
 14A9F: A4 62 70 50 45 52 42 68 69 6A 6B                 // .bpPERBhijk

Add (Local2, One)), Local2)

 14AAA: 72 62 01 00 62                                   // rb..b

                Return (Zero)
            }
        }
    }


 14AAF: A4 00                                            // ..

    Method (RDCM, 1, Serialized)
    {
        ADBG ("RDCM")
        ADBG ("CMOS Offset")
        ADBG (Arg0)

 14AB1: 14 4C 08 52 44 43 4D 09 41 44 42 47 0D 52 44 43  // .L.RDCM.ADBG.RDC
 14AC1: 4D 00 41 44 42 47 0D 43 4D 4F 53 20 4F 66 66 73  // M.ADBG.CMOS Offs
 14AD1: 65 74 00 41 44 42 47 68                          // et.ADBGh

        OperationRegion (CMOS, SystemIO, 0x70, 0x04)

 14AD9: 5B 80 43 4D 4F 53 01 0A 70 0A 04                 // [.CMOS..p..

        Field (CMOS, AnyAcc, NoLock, Preserve)
        {
            LIND,   8, 
            LDAT,   8, 
            HIND,   8, 
            HDAT,   8
        }


 14AE4: 5B 81 1A 43 4D 4F 53 00 4C 49 4E 44 08 4C 44 41  // [..CMOS.LIND.LDA
 14AF4: 54 08 48 49 4E 44 08 48 44 41 54 08              // T.HIND.HDAT.

        If (
 14B00: A0 12 92                                         // ...

LLessEqual (Arg0, 0x7F))
        {
            Store (Arg0, LIND)

 14B03: 94 68 0A 7F 70 68 4C 49 4E 44                    // .h..phLIND

            Store (LDAT, Local0)
        }

 14B0D: 70 4C 44 41 54 60                                // pLDAT`

        ElseIf
 14B13: A1 14                                            // ..

 (
 14B15: A0 12 92                                         // ...

LLessEqual (Arg0, 0xFF))
        {
            Store (Arg0, HIND)

 14B18: 94 68 0A FF 70 68 48 49 4E 44                    // .h..phHIND

            Store (HDAT, Local0)
        }

        ADBG ("CMOS Data")
        ADBG (Local0)

 14B22: 70 48 44 41 54 60 41 44 42 47 0D 43 4D 4F 53 20  // pHDAT`ADBG.CMOS 
 14B32: 44 61 74 61 00 41 44 42 47 60                    // Data.ADBG`

        Return (Local0)
    }


 14B3C: A4 60                                            // .`

    Method (WRCM, 2, Serialized)
    {
        ADBG ("WRCM")
        ADBG ("CMOS Offset")
        ADBG (Arg0)
        ADBG ("CMOS Data")
        ADBG (Arg1)

 14B3E: 14 4A 08 57 52 43 4D 0A 41 44 42 47 0D 57 52 43  // .J.WRCM.ADBG.WRC
 14B4E: 4D 00 41 44 42 47 0D 43 4D 4F 53 20 4F 66 66 73  // M.ADBG.CMOS Offs
 14B5E: 65 74 00 41 44 42 47 68 41 44 42 47 0D 43 4D 4F  // et.ADBGhADBG.CMO
 14B6E: 53 20 44 61 74 61 00 41 44 42 47 69              // S Data.ADBGi

        OperationRegion (CMOS, SystemIO, 0x70, 0x04)

 14B7A: 5B 80 43 4D 4F 53 01 0A 70 0A 04                 // [.CMOS..p..

        Field (CMOS, AnyAcc, NoLock, Preserve)
        {
            LIND,   8, 
            LDAT,   8, 
            HIND,   8, 
            HDAT,   8
        }


 14B85: 5B 81 1A 43 4D 4F 53 00 4C 49 4E 44 08 4C 44 41  // [..CMOS.LIND.LDA
 14B95: 54 08 48 49 4E 44 08 48 44 41 54 08              // T.HIND.HDAT.

        If (
 14BA1: A0 12 92                                         // ...

LLessEqual (Arg0, 0x7F))
        {
            Store (Arg0, LIND)

 14BA4: 94 68 0A 7F 70 68 4C 49 4E 44                    // .h..phLIND

            Store (Arg1, LDAT)
        }

 14BAE: 70 69 4C 44 41 54                                // piLDAT

        ElseIf
 14BB4: A1 14                                            // ..

 (
 14BB6: A0 12 92                                         // ...

LLessEqual (Arg0, 0xFF))
        {
            Store (Arg0, HIND)

 14BB9: 94 68 0A FF 70 68 48 49 4E 44                    // .h..phHIND

            Store (Arg1, HDAT)
        }
    }


 14BC3: 70 69 48 44 41 54                                // piHDAT

    OperationRegion (_SB.PCI0.LPCB.LPCR, PCI_Config, 0x80, 0x04)

 14BC9: 5B 80 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43 42  // [./._SB_PCI0LPCB
 14BD9: 4C 50 43 52 02 0A 80 0A 04                       // LPCR.....

    Field (\_SB.PCI0.LPCB.LPCR, ByteAcc, NoLock, Preserve)
    {
        CARN,   3, 
            ,   1, 
        CBDR,   3, 
        Offset (0x01), 
        LTDR,   2, 
            ,   2, 
        FDDR,   1, 
        Offset (0x02), 
        CALE,   1, 
        CBLE,   1, 
        LTLE,   1, 
        FDLE,   1, 
        Offset (0x03), 
        GLLE,   1, 
        GHLE,   1, 
        KCLE,   1, 
        MCLE,   1, 
        C1LE,   1, 
        C2LE,   1, 
        Offset (0x04)
    }


 14BE2: 5B 81 48 06 5C 2F 04 5F 53 42 5F 50 43 49 30 4C  // [.H.\/._SB_PCI0L
 14BF2: 50 43 42 4C 50 43 52 01 43 41 52 4E 03 00 01 43  // PCBLPCR.CARN...C
 14C02: 42 44 52 03 00 01 4C 54 44 52 02 00 02 46 44 44  // BDR...LTDR...FDD
 14C12: 52 01 00 03 43 41 4C 45 01 43 42 4C 45 01 4C 54  // R...CALE.CBLE.LT
 14C22: 4C 45 01 46 44 4C 45 01 00 04 47 4C 4C 45 01 47  // LE.FDLE...GLLE.G
 14C32: 48 4C 45 01 4B 43 4C 45 01 4D 43 4C 45 01 43 31  // HLE.KCLE.MCLE.C1
 14C42: 4C 45 01 43 32 4C 45 01 00 02                    // LE.C2LE...

    Method (UXDV, 1, Serialized)
    {

 14C4C: 14 40 0A 55 58 44 56 09                          // .@.UXDV.

        Store (0xFF, Local0)

 14C54: 08 5F 54 5F 30 00 70 0A FF 60                    // ._T_0.p..`

        Switch (Add (Arg0, Zero))
        {

 14C5E: A2 4C 08 01 70 72 68 00 00 5F 54 5F 30           // .L..prh.._T_0

            Case (0x03F8)
            {

 14C6B: A0 0C 93 5F 54 5F 30 0B F8 03                    // ..._T_0...

                Store (Zero, Local0)
            }

 14C75: 70 00 60                                         // p.`

            Case
 14C78: A1 41 07                                         // .A.

 (0x02F8)
            {

 14C7B: A0 0C 93 5F 54 5F 30 0B F8 02                    // ..._T_0...

                Store (One, Local0)
            }

 14C85: 70 01 60                                         // p.`

            Case
 14C88: A1 41 06                                         // .A.

 (0x0220)
            {

 14C8B: A0 0D 93 5F 54 5F 30 0B 20 02                    // ..._T_0. .

                Store (0x02, Local0)
            }

 14C95: 70 0A 02 60                                      // p..`

            Case
 14C99: A1 40 05                                         // .@.

 (0x0228)
            {

 14C9C: A0 0D 93 5F 54 5F 30 0B 28 02                    // ..._T_0.(.

                Store (0x03, Local0)
            }

 14CA6: 70 0A 03 60                                      // p..`

            Case
 14CAA: A1 3F                                            // .?

 (0x0238)
            {

 14CAC: A0 0D 93 5F 54 5F 30 0B 38 02                    // ..._T_0.8.

                Store (0x04, Local0)
            }

 14CB6: 70 0A 04 60                                      // p..`

            Case
 14CBA: A1 2F                                            // ./

 (0x02E8)
            {

 14CBC: A0 0D 93 5F 54 5F 30 0B E8 02                    // ..._T_0...

                Store (0x05, Local0)
            }

 14CC6: 70 0A 05 60                                      // p..`

            Case
 14CCA: A1 1F                                            // ..

 (0x0338)
            {

 14CCC: A0 0D 93 5F 54 5F 30 0B 38 03                    // ..._T_0.8.

                Store (0x06, Local0)
            }

 14CD6: 70 0A 06 60                                      // p..`

            Case
 14CDA: A1 0F                                            // ..

 (0x03E8)
            {

 14CDC: A0 0D 93 5F 54 5F 30 0B E8 03                    // ..._T_0...

                Store (0x07, Local0)
            }


 14CE6: 70 0A 07 60                                      // p..`

        }


 14CEA: A5                                               // .

        Return (Local0)
    }


 14CEB: A4 60                                            // .`

    Method (RRIO, 4, Serialized)
    {

 14CED: 14 47 22 52 52 49 4F 0C                          // .G"RRIO.


 14CF5: 08 5F 54 5F 30 00                                // ._T_0.

        Switch (Add (Arg0, Zero))
        {

 14CFB: A2 49 21 01 70 72 68 00 00 5F 54 5F 30           // .I!.prh.._T_0

            Case (Zero)
            {
                Store (Zero, CALE)
                Store (UXDV (Arg2), Local0)

 14D08: A0 2A 93 5F 54 5F 30 00 70 00 43 41 4C 45 70 55  // .*._T_0.p.CALEpU
 14D18: 58 44 56 6A 60                                   // XDVj`

                If (
 14D1D: A0 0C 92                                         // ...

LNotEqual (Local0, 0xFF))
                {

 14D20: 93 60 0A FF                                      // .`..

                    Store (Local0, CARN)
                }


 14D24: 70 60 43 41 52 4E                                // p`CARN

                If (Arg1)
                {

 14D2A: A0 08 69                                         // ..i

                    Store (One, CALE)
                }
            }

 14D2D: 70 01 43 41 4C 45                                // p.CALE

            Case
 14D33: A1 40 1E                                         // .@.

 (One)
            {
                Store (Zero, CBLE)
                Store (UXDV (Arg2), Local0)

 14D36: A0 2A 93 5F 54 5F 30 01 70 00 43 42 4C 45 70 55  // .*._T_0.p.CBLEpU
 14D46: 58 44 56 6A 60                                   // XDVj`

                If (
 14D4B: A0 0C 92                                         // ...

LNotEqual (Local0, 0xFF))
                {

 14D4E: 93 60 0A FF                                      // .`..

                    Store (Local0, CBDR)
                }


 14D52: 70 60 43 42 44 52                                // p`CBDR

                If (Arg1)
                {

 14D58: A0 08 69                                         // ..i

                    Store (One, CBLE)
                }
            }

 14D5B: 70 01 43 42 4C 45                                // p.CBLE

            Case
 14D61: A1 42 1B                                         // .B.

 (0x02)
            {
                Store (Zero, LTLE)

 14D64: A0 3F 93 5F 54 5F 30 0A 02 70 00 4C 54 4C 45     // .?._T_0..p.LTLE

                If (LEqual (Arg2, 0x0378))
                {

 14D73: A0 0C 93 6A 0B 78 03                             // ...j.x.

                    Store (Zero, LTDR)
                }


 14D7A: 70 00 4C 54 44 52                                // p.LTDR

                If (LEqual (Arg2, 0x0278))
                {

 14D80: A0 0C 93 6A 0B 78 02                             // ...j.x.

                    Store (One, LTDR)
                }


 14D87: 70 01 4C 54 44 52                                // p.LTDR

                If (LEqual (Arg2, 0x03BC))
                {

 14D8D: A0 0D 93 6A 0B BC 03                             // ...j...

                    Store (0x02, LTDR)
                }


 14D94: 70 0A 02 4C 54 44 52                             // p..LTDR

                If (Arg1)
                {

 14D9B: A0 08 69                                         // ..i

                    Store (One, LTLE)
                }
            }

 14D9E: 70 01 4C 54 4C 45                                // p.LTLE

            Case
 14DA4: A1 4F 16                                         // .O.

 (0x03)
            {
                Store (Zero, FDLE)

 14DA7: A0 31 93 5F 54 5F 30 0A 03 70 00 46 44 4C 45     // .1._T_0..p.FDLE

                If (LEqual (Arg2, 0x03F0))
                {

 14DB6: A0 0C 93 6A 0B F0 03                             // ...j...

                    Store (Zero, FDDR)
                }


 14DBD: 70 00 46 44 44 52                                // p.FDDR

                If (LEqual (Arg2, 0x0370))
                {

 14DC3: A0 0C 93 6A 0B 70 03                             // ...j.p.

                    Store (One, FDDR)
                }


 14DCA: 70 01 46 44 44 52                                // p.FDDR

                If (Arg1)
                {

 14DD0: A0 08 69                                         // ..i

                    Store (One, FDLE)
                }
            }

 14DD3: 70 01 46 44 4C 45                                // p.FDLE

            Case
 14DD9: A1 4A 13                                         // .J.

 (0x08)
            {

 14DDC: A0 38 93 5F 54 5F 30 0A 08                       // .8._T_0..

                If (LEqual (Arg2, 0x0200))
                {

 14DE5: A0 17 93 6A 0B 00 02                             // ...j...

                    If (Arg1)
                    {

 14DEC: A0 08 69                                         // ..i

                        Store (One, GLLE)
                    }

 14DEF: 70 01 47 4C 4C 45                                // p.GLLE

                    Else
                    {

 14DF5: A1 07                                            // ..

                        Store (Zero, GLLE)
                    }
                }


 14DF7: 70 00 47 4C 4C 45                                // p.GLLE

                If (LEqual (Arg2, 0x0208))
                {

 14DFD: A0 17 93 6A 0B 08 02                             // ...j...

                    If (Arg1)
                    {

 14E04: A0 08 69                                         // ..i

                        Store (One, GHLE)
                    }

 14E07: 70 01 47 48 4C 45                                // p.GHLE

                    Else
                    {

 14E0D: A1 07                                            // ..

                        Store (Zero, GHLE)
                    }
                }
            }

 14E0F: 70 00 47 48 4C 45                                // p.GHLE

            Case
 14E15: A1 4E 0F                                         // .N.

 (0x09)
            {

 14E18: A0 38 93 5F 54 5F 30 0A 09                       // .8._T_0..

                If (LEqual (Arg2, 0x0200))
                {

 14E21: A0 17 93 6A 0B 00 02                             // ...j...

                    If (Arg1)
                    {

 14E28: A0 08 69                                         // ..i

                        Store (One, GLLE)
                    }

 14E2B: 70 01 47 4C 4C 45                                // p.GLLE

                    Else
                    {

 14E31: A1 07                                            // ..

                        Store (Zero, GLLE)
                    }
                }


 14E33: 70 00 47 4C 4C 45                                // p.GLLE

                If (LEqual (Arg2, 0x0208))
                {

 14E39: A0 17 93 6A 0B 08 02                             // ...j...

                    If (Arg1)
                    {

 14E40: A0 08 69                                         // ..i

                        Store (One, GHLE)
                    }

 14E43: 70 01 47 48 4C 45                                // p.GHLE

                    Else
                    {

 14E49: A1 07                                            // ..

                        Store (Zero, GHLE)
                    }
                }
            }

 14E4B: 70 00 47 48 4C 45                                // p.GHLE

            Case
 14E51: A1 42 0C                                         // .B.

 (0x0A)
            {

 14E54: A0 24 93 5F 54 5F 30 0A 0A                       // .$._T_0..

                If (LOr (LEqual (Arg2, 0x60), 
 14E5D: A0 1B 91 93 6A 0A 60                             // ....j.`

LEqual (Arg2, 0x64)))
                {

 14E64: 93 6A 0A 64                                      // .j.d

                    If (Arg1)
                    {

 14E68: A0 08 69                                         // ..i

                        Store (One, KCLE)
                    }

 14E6B: 70 01 4B 43 4C 45                                // p.KCLE

                    Else
                    {

 14E71: A1 07                                            // ..

                        Store (Zero, KCLE)
                    }
                }
            }

 14E73: 70 00 4B 43 4C 45                                // p.KCLE

            Case
 14E79: A1 4A 09                                         // .J.

 (0x0B)
            {

 14E7C: A0 24 93 5F 54 5F 30 0A 0B                       // .$._T_0..

                If (LOr (LEqual (Arg2, 0x62), 
 14E85: A0 1B 91 93 6A 0A 62                             // ....j.b

LEqual (Arg2, 0x66)))
                {

 14E8C: 93 6A 0A 66                                      // .j.f

                    If (Arg1)
                    {

 14E90: A0 08 69                                         // ..i

                        Store (One, MCLE)
                    }

 14E93: 70 01 4D 43 4C 45                                // p.MCLE

                    Else
                    {

 14E99: A1 07                                            // ..

                        Store (Zero, MCLE)
                    }
                }
            }

 14E9B: 70 00 4D 43 4C 45                                // p.MCLE

            Case
 14EA1: A1 42 07                                         // .B.

 (0x0C)
            {

 14EA4: A0 36 93 5F 54 5F 30 0A 0C                       // .6._T_0..

                If (LEqual (Arg2, 0x2E))
                {

 14EAD: A0 16 93 6A 0A 2E                                // ...j..

                    If (Arg1)
                    {

 14EB3: A0 08 69                                         // ..i

                        Store (One, C1LE)
                    }

 14EB6: 70 01 43 31 4C 45                                // p.C1LE

                    Else
                    {

 14EBC: A1 07                                            // ..

                        Store (Zero, C1LE)
                    }
                }


 14EBE: 70 00 43 31 4C 45                                // p.C1LE

                If (LEqual (Arg2, 0x4E))
                {

 14EC4: A0 16 93 6A 0A 4E                                // ...j.N

                    If (Arg1)
                    {

 14ECA: A0 08 69                                         // ..i

                        Store (One, C2LE)
                    }

 14ECD: 70 01 43 32 4C 45                                // p.C2LE

                    Else
                    {

 14ED3: A1 07                                            // ..

                        Store (Zero, C2LE)
                    }
                }
            }

 14ED5: 70 00 43 32 4C 45                                // p.C2LE

            Case
 14EDB: A1 38                                            // .8

 (0x0D)
            {

 14EDD: A0 36 93 5F 54 5F 30 0A 0D                       // .6._T_0..

                If (LEqual (Arg2, 0x2E))
                {

 14EE6: A0 16 93 6A 0A 2E                                // ...j..

                    If (Arg1)
                    {

 14EEC: A0 08 69                                         // ..i

                        Store (One, C1LE)
                    }

 14EEF: 70 01 43 31 4C 45                                // p.C1LE

                    Else
                    {

 14EF5: A1 07                                            // ..

                        Store (Zero, C1LE)
                    }
                }


 14EF7: 70 00 43 31 4C 45                                // p.C1LE

                If (LEqual (Arg2, 0x4E))
                {

 14EFD: A0 16 93 6A 0A 4E                                // ...j.N

                    If (Arg1)
                    {

 14F03: A0 08 69                                         // ..i

                        Store (One, C2LE)
                    }

 14F06: 70 01 43 32 4C 45                                // p.C2LE

                    Else
                    {

 14F0C: A1 07                                            // ..

                        Store (Zero, C2LE)
                    }
                }
            }


 14F0E: 70 00 43 32 4C 45                                // p.C2LE

        }
    }


 14F14: A5                                               // .

    Method (RDMA, 3, NotSerialized)
    {
    }


 14F15: 14 06 52 44 4D 41 03                             // ..RDMA.

    Scope (_GPE)
    {

 14F1C: 10 8E A4 01 5F 47 50 45                          // ...._GPE

        Method (_L69, 0, Serialized)  // _Lxx: Level-Triggered GPE
        {
            \_SB.PCI0.RP01.HPME ()
            \_SB.PCI0.RP02.HPME ()
            \_SB.PCI0.RP03.HPME ()
            \_SB.PCI0.RP04.HPME ()
            \_SB.PCI0.RP05.HPME ()
            \_SB.PCI0.RP06.HPME ()
            \_SB.PCI0.RP07.HPME ()
            \_SB.PCI0.RP08.HPME ()
            \_SB.PCI0.RP09.HPME ()
            \_SB.PCI0.RP10.HPME ()
            \_SB.PCI0.RP11.HPME ()
            \_SB.PCI0.RP12.HPME ()
            \_SB.PCI0.RP13.HPME ()
            \_SB.PCI0.RP14.HPME ()
            \_SB.PCI0.RP15.HPME ()
            \_SB.PCI0.RP16.HPME ()
            \_SB.PCI0.RP17.HPME ()
            \_SB.PCI0.RP18.HPME ()
            \_SB.PCI0.RP19.HPME ()
            \_SB.PCI0.RP20.HPME ()
            \_SB.PCI0.RP21.HPME ()
            \_SB.PCI0.RP22.HPME ()
            \_SB.PCI0.RP23.HPME ()
            \_SB.PCI0.RP24.HPME ()

 14F24: 14 4E 28 5F 4C 36 39 08 5C 2F 04 5F 53 42 5F 50  // .N(_L69.\/._SB_P
 14F34: 43 49 30 52 50 30 31 48 50 4D 45 5C 2F 04 5F 53  // CI0RP01HPME\/._S
 14F44: 42 5F 50 43 49 30 52 50 30 32 48 50 4D 45 5C 2F  // B_PCI0RP02HPME\/
 14F54: 04 5F 53 42 5F 50 43 49 30 52 50 30 33 48 50 4D  // ._SB_PCI0RP03HPM
 14F64: 45 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // E\/._SB_PCI0RP04
 14F74: 48 50 4D 45 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // HPME\/._SB_PCI0R
 14F84: 50 30 35 48 50 4D 45 5C 2F 04 5F 53 42 5F 50 43  // P05HPME\/._SB_PC
 14F94: 49 30 52 50 30 36 48 50 4D 45 5C 2F 04 5F 53 42  // I0RP06HPME\/._SB
 14FA4: 5F 50 43 49 30 52 50 30 37 48 50 4D 45 5C 2F 04  // _PCI0RP07HPME\/.
 14FB4: 5F 53 42 5F 50 43 49 30 52 50 30 38 48 50 4D 45  // _SB_PCI0RP08HPME
 14FC4: 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39 48  // \/._SB_PCI0RP09H
 14FD4: 50 4D 45 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // PME\/._SB_PCI0RP
 14FE4: 31 30 48 50 4D 45 5C 2F 04 5F 53 42 5F 50 43 49  // 10HPME\/._SB_PCI
 14FF4: 30 52 50 31 31 48 50 4D 45 5C 2F 04 5F 53 42 5F  // 0RP11HPME\/._SB_
 15004: 50 43 49 30 52 50 31 32 48 50 4D 45 5C 2F 04 5F  // PCI0RP12HPME\/._
 15014: 53 42 5F 50 43 49 30 52 50 31 33 48 50 4D 45 5C  // SB_PCI0RP13HPME\
 15024: 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34 48 50  // /._SB_PCI0RP14HP
 15034: 4D 45 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // ME\/._SB_PCI0RP1
 15044: 35 48 50 4D 45 5C 2F 04 5F 53 42 5F 50 43 49 30  // 5HPME\/._SB_PCI0
 15054: 52 50 31 36 48 50 4D 45 5C 2F 04 5F 53 42 5F 50  // RP16HPME\/._SB_P
 15064: 43 49 30 52 50 31 37 48 50 4D 45 5C 2F 04 5F 53  // CI0RP17HPME\/._S
 15074: 42 5F 50 43 49 30 52 50 31 38 48 50 4D 45 5C 2F  // B_PCI0RP18HPME\/
 15084: 04 5F 53 42 5F 50 43 49 30 52 50 31 39 48 50 4D  // ._SB_PCI0RP19HPM
 15094: 45 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // E\/._SB_PCI0RP20
 150A4: 48 50 4D 45 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // HPME\/._SB_PCI0R
 150B4: 50 32 31 48 50 4D 45 5C 2F 04 5F 53 42 5F 50 43  // P21HPME\/._SB_PC
 150C4: 49 30 52 50 32 32 48 50 4D 45 5C 2F 04 5F 53 42  // I0RP22HPME\/._SB
 150D4: 5F 50 43 49 30 52 50 32 33 48 50 4D 45 5C 2F 04  // _PCI0RP23HPME\/.
 150E4: 5F 53 42 5F 50 43 49 30 52 50 32 34 48 50 4D 45  // _SB_PCI0RP24HPME

            If (LEqual (\_SB.PCI0.D1F0, One))
            {
                \_SB.PCI0.PEG0.HPME ()
                Notify (\_SB.PCI0.PEG0, 0x02)

 150F4: A0 4E 04 93 5C 2F 03 5F 53 42 5F 50 43 49 30 44  // .N..\/._SB_PCI0D
 15104: 31 46 30 01 5C 2F 04 5F 53 42 5F 50 43 49 30 50  // 1F0.\/._SB_PCI0P
 15114: 45 47 30 48 50 4D 45 86 5C 2F 03 5F 53 42 5F 50  // EG0HPME.\/._SB_P
 15124: 43 49 30 50 45 47 30 0A 02                       // CI0PEG0..

                Notify (\_SB.PCI0.PEG0.PEGP, 0x02)
            }


 1512D: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 1513D: 50 45 47 50 0A 02                                // PEGP..

            If (LEqual (\_SB.PCI0.D1F1, One))
            {
                \_SB.PCI0.PEG1.HPME ()

 15143: A0 37 93 5C 2F 03 5F 53 42 5F 50 43 49 30 44 31  // .7.\/._SB_PCI0D1
 15153: 46 31 01 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45  // F1.\/._SB_PCI0PE
 15163: 47 31 48 50 4D 45                                // G1HPME

                Notify (\_SB.PCI0.PEG1, 0x02)
            }


 15169: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 31  // .\/._SB_PCI0PEG1
 15179: 0A 02                                            // ..

            If (LEqual (\_SB.PCI0.D1F2, One))
            {
                \_SB.PCI0.PEG2.HPME ()

 1517B: A0 37 93 5C 2F 03 5F 53 42 5F 50 43 49 30 44 31  // .7.\/._SB_PCI0D1
 1518B: 46 32 01 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45  // F2.\/._SB_PCI0PE
 1519B: 47 32 48 50 4D 45                                // G2HPME

                Notify (\_SB.PCI0.PEG2, 0x02)
            }
        }


 151A1: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 32  // .\/._SB_PCI0PEG2
 151B1: 0A 02                                            // ..

        Method (_L61, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Add (L01C, One, L01C)
            P8XH (One, L01C)

 151B3: 14 8F 64 01 5F 4C 36 31 00 72 4C 30 31 43 01 4C  // ..d._L61.rL01C.L
 151C3: 30 31 43 50 38 58 48 01 4C 30 31 43              // 01CP8XH.L01C

            If (LAnd (
 151CF: A0 49 0E 90 92                                   // .I...

LNotEqual (\_SB.PCI0.RP01.VDID, 0xFFFFFFFF), \_SB.PCI0.RP01.HPSX))
            {

 151D4: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
 151E4: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 151F4: 50 43 49 30 52 50 30 31 48 50 53 58              // PCI0RP01HPSX

                If (LOr (
 15200: A0 14 91 92                                      // ....

LNotEqual (TBTS, One), 
 15204: 93 54 42 54 53 01                                // .TBTS.


 1520A: 92                                               // .

LNotEqual (TBSE, One)))
                {

 1520B: 93 54 42 53 45 01                                // .TBSE.

                    Sleep (0x64)
                }


 15211: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP01.PDCX)
                {
                    Store (One, \_SB.PCI0.RP01.PDCX)
                    Store (One, \_SB.PCI0.RP01.HPSX)

 15215: A0 4C 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .L.\/._SB_PCI0RP
 15225: 30 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 01PDCXp.\/._SB_P
 15235: 43 49 30 52 50 30 31 50 44 43 58 70 01 5C 2F 04  // CI0RP01PDCXp.\/.
 15245: 5F 53 42 5F 50 43 49 30 52 50 30 31 48 50 53 58  // _SB_PCI0RP01HPSX

                    If (LNot (\_SB.PCI0.RP01.PDSX))
                    {

 15255: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15265: 30 31 50 44 53 58                                // 01PDSX

                        Store (Zero, \_SB.PCI0.RP01.L0SE)
                    }


 1526B: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 1527B: 31 4C 30 53 45                                   // 1L0SE

                    If (LOr (
 15280: A0 21 91 92                                      // .!..

LNotEqual (TBTS, One), 
 15284: 93 54 42 54 53 01                                // .TBTS.


 1528A: 92                                               // .

LNotEqual (TBSE, One)))
                    {

 1528B: 93 54 42 53 45 01                                // .TBSE.

                        Notify (\_SB.PCI0.RP01, Zero)
                    }
                }

 15291: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
 152A1: 00                                               // .

                Else
                {

 152A2: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP01.HPSX)
                }
            }


 152A4: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 152B4: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (
 152B9: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP02.VDID, 0xFFFFFFFF), \_SB.PCI0.RP02.HPSX))
            {

 152BE: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
 152CE: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 152DE: 50 43 49 30 52 50 30 32 48 50 53 58              // PCI0RP02HPSX

                If (LOr (
 152EA: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 152EE: 93 54 42 54 53 01                                // .TBTS.


 152F4: 92                                               // .

LNotEqual (TBSE, 0x02)))
                {

 152F5: 93 54 42 53 45 0A 02                             // .TBSE..

                    Sleep (0x64)
                }


 152FC: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP02.PDCX)
                {
                    Store (One, \_SB.PCI0.RP02.PDCX)
                    Store (One, \_SB.PCI0.RP02.HPSX)

 15300: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15310: 30 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 02PDCXp.\/._SB_P
 15320: 43 49 30 52 50 30 32 50 44 43 58 70 01 5C 2F 04  // CI0RP02PDCXp.\/.
 15330: 5F 53 42 5F 50 43 49 30 52 50 30 32 48 50 53 58  // _SB_PCI0RP02HPSX

                    If (LNot (\_SB.PCI0.RP02.PDSX))
                    {

 15340: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15350: 30 32 50 44 53 58                                // 02PDSX

                        Store (Zero, \_SB.PCI0.RP02.L0SE)
                    }


 15356: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15366: 32 4C 30 53 45                                   // 2L0SE

                    If (LOr (
 1536B: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 1536F: 93 54 42 54 53 01                                // .TBTS.


 15375: 92                                               // .

LNotEqual (TBSE, 0x02)))
                    {

 15376: 93 54 42 53 45 0A 02                             // .TBSE..

                        Notify (\_SB.PCI0.RP02, Zero)
                    }
                }

 1537D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
 1538D: 00                                               // .

                Else
                {

 1538E: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP02.HPSX)
                }
            }


 15390: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 153A0: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (
 153A5: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP03.VDID, 0xFFFFFFFF), \_SB.PCI0.RP03.HPSX))
            {

 153AA: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
 153BA: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 153CA: 50 43 49 30 52 50 30 33 48 50 53 58              // PCI0RP03HPSX

                If (LOr (
 153D6: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 153DA: 93 54 42 54 53 01                                // .TBTS.


 153E0: 92                                               // .

LNotEqual (TBSE, 0x03)))
                {

 153E1: 93 54 42 53 45 0A 03                             // .TBSE..

                    Sleep (0x64)
                }


 153E8: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP03.PDCX)
                {
                    Store (One, \_SB.PCI0.RP03.PDCX)
                    Store (One, \_SB.PCI0.RP03.HPSX)

 153EC: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 153FC: 30 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 03PDCXp.\/._SB_P
 1540C: 43 49 30 52 50 30 33 50 44 43 58 70 01 5C 2F 04  // CI0RP03PDCXp.\/.
 1541C: 5F 53 42 5F 50 43 49 30 52 50 30 33 48 50 53 58  // _SB_PCI0RP03HPSX

                    If (LNot (\_SB.PCI0.RP03.PDSX))
                    {

 1542C: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 1543C: 30 33 50 44 53 58                                // 03PDSX

                        Store (Zero, \_SB.PCI0.RP03.L0SE)
                    }


 15442: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15452: 33 4C 30 53 45                                   // 3L0SE

                    If (LOr (
 15457: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 1545B: 93 54 42 54 53 01                                // .TBTS.


 15461: 92                                               // .

LNotEqual (TBSE, 0x03)))
                    {

 15462: 93 54 42 53 45 0A 03                             // .TBSE..

                        Notify (\_SB.PCI0.RP03, Zero)
                    }
                }

 15469: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
 15479: 00                                               // .

                Else
                {

 1547A: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP03.HPSX)
                }
            }


 1547C: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 1548C: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (
 15491: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP04.VDID, 0xFFFFFFFF), \_SB.PCI0.RP04.HPSX))
            {

 15496: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
 154A6: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 154B6: 50 43 49 30 52 50 30 34 48 50 53 58              // PCI0RP04HPSX

                If (LOr (
 154C2: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 154C6: 93 54 42 54 53 01                                // .TBTS.


 154CC: 92                                               // .

LNotEqual (TBSE, 0x04)))
                {

 154CD: 93 54 42 53 45 0A 04                             // .TBSE..

                    Sleep (0x64)
                }


 154D4: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP04.PDCX)
                {
                    Store (One, \_SB.PCI0.RP04.PDCX)
                    Store (One, \_SB.PCI0.RP04.HPSX)

 154D8: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 154E8: 30 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 04PDCXp.\/._SB_P
 154F8: 43 49 30 52 50 30 34 50 44 43 58 70 01 5C 2F 04  // CI0RP04PDCXp.\/.
 15508: 5F 53 42 5F 50 43 49 30 52 50 30 34 48 50 53 58  // _SB_PCI0RP04HPSX

                    If (LNot (\_SB.PCI0.RP04.PDSX))
                    {

 15518: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15528: 30 34 50 44 53 58                                // 04PDSX

                        Store (Zero, \_SB.PCI0.RP04.L0SE)
                    }


 1552E: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 1553E: 34 4C 30 53 45                                   // 4L0SE

                    If (LOr (
 15543: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15547: 93 54 42 54 53 01                                // .TBTS.


 1554D: 92                                               // .

LNotEqual (TBSE, 0x04)))
                    {

 1554E: 93 54 42 53 45 0A 04                             // .TBSE..

                        Notify (\_SB.PCI0.RP04, Zero)
                    }
                }

 15555: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
 15565: 00                                               // .

                Else
                {

 15566: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP04.HPSX)
                }
            }


 15568: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15578: 34 48 50 53 58                                   // 4HPSX

            If (LAnd (
 1557D: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP05.VDID, 0xFFFFFFFF), \_SB.PCI0.RP05.HPSX))
            {

 15582: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
 15592: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 155A2: 50 43 49 30 52 50 30 35 48 50 53 58              // PCI0RP05HPSX

                If (LOr (
 155AE: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 155B2: 93 54 42 54 53 01                                // .TBTS.


 155B8: 92                                               // .

LNotEqual (TBSE, 0x05)))
                {

 155B9: 93 54 42 53 45 0A 05                             // .TBSE..

                    Sleep (0x64)
                }


 155C0: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP05.PDCX)
                {
                    Store (One, \_SB.PCI0.RP05.PDCX)
                    Store (One, \_SB.PCI0.RP05.HPSX)

 155C4: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 155D4: 30 35 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 05PDCXp.\/._SB_P
 155E4: 43 49 30 52 50 30 35 50 44 43 58 70 01 5C 2F 04  // CI0RP05PDCXp.\/.
 155F4: 5F 53 42 5F 50 43 49 30 52 50 30 35 48 50 53 58  // _SB_PCI0RP05HPSX

                    If (LNot (\_SB.PCI0.RP05.PDSX))
                    {

 15604: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15614: 30 35 50 44 53 58                                // 05PDSX

                        Store (Zero, \_SB.PCI0.RP05.L0SE)
                    }


 1561A: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 1562A: 35 4C 30 53 45                                   // 5L0SE

                    If (LOr (
 1562F: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15633: 93 54 42 54 53 01                                // .TBTS.


 15639: 92                                               // .

LNotEqual (TBSE, 0x05)))
                    {

 1563A: 93 54 42 53 45 0A 05                             // .TBSE..

                        Notify (\_SB.PCI0.RP05, Zero)
                    }
                }

 15641: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
 15651: 00                                               // .

                Else
                {

 15652: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP05.HPSX)
                }
            }


 15654: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15664: 35 48 50 53 58                                   // 5HPSX

            If (LAnd (
 15669: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP06.VDID, 0xFFFFFFFF), \_SB.PCI0.RP06.HPSX))
            {

 1566E: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
 1567E: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 1568E: 50 43 49 30 52 50 30 36 48 50 53 58              // PCI0RP06HPSX

                If (LOr (
 1569A: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 1569E: 93 54 42 54 53 01                                // .TBTS.


 156A4: 92                                               // .

LNotEqual (TBSE, 0x06)))
                {

 156A5: 93 54 42 53 45 0A 06                             // .TBSE..

                    Sleep (0x64)
                }


 156AC: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP06.PDCX)
                {
                    Store (One, \_SB.PCI0.RP06.PDCX)
                    Store (One, \_SB.PCI0.RP06.HPSX)

 156B0: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 156C0: 30 36 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 06PDCXp.\/._SB_P
 156D0: 43 49 30 52 50 30 36 50 44 43 58 70 01 5C 2F 04  // CI0RP06PDCXp.\/.
 156E0: 5F 53 42 5F 50 43 49 30 52 50 30 36 48 50 53 58  // _SB_PCI0RP06HPSX

                    If (LNot (\_SB.PCI0.RP06.PDSX))
                    {

 156F0: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15700: 30 36 50 44 53 58                                // 06PDSX

                        Store (Zero, \_SB.PCI0.RP06.L0SE)
                    }


 15706: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15716: 36 4C 30 53 45                                   // 6L0SE

                    If (LOr (
 1571B: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 1571F: 93 54 42 54 53 01                                // .TBTS.


 15725: 92                                               // .

LNotEqual (TBSE, 0x06)))
                    {

 15726: 93 54 42 53 45 0A 06                             // .TBSE..

                        Notify (\_SB.PCI0.RP06, Zero)
                    }
                }

 1572D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
 1573D: 00                                               // .

                Else
                {

 1573E: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP06.HPSX)
                }
            }


 15740: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15750: 36 48 50 53 58                                   // 6HPSX

            If (LAnd (
 15755: A0 46 0F 90 92                                   // .F...

LNotEqual (\_SB.PCI0.RP07.VDID, 0xFFFFFFFF), \_SB.PCI0.RP07.HPSX))
            {

 1575A: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
 1576A: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 1577A: 50 43 49 30 52 50 30 37 48 50 53 58              // PCI0RP07HPSX

                If (LOr (
 15786: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 1578A: 93 54 42 54 53 01                                // .TBTS.


 15790: 92                                               // .

LNotEqual (TBSE, 0x07)))
                {

 15791: 93 54 42 53 45 0A 07                             // .TBSE..

                    Sleep (0x64)
                }


 15798: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP07.PDCX)
                {
                    Store (One, \_SB.PCI0.RP07.PDCX)
                    Store (One, \_SB.PCI0.RP07.HPSX)

 1579C: A0 48 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .H.\/._SB_PCI0RP
 157AC: 30 37 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 07PDCXp.\/._SB_P
 157BC: 43 49 30 52 50 30 37 50 44 43 58 70 01 5C 2F 04  // CI0RP07PDCXp.\/.
 157CC: 5F 53 42 5F 50 43 49 30 52 50 30 37 48 50 53 58  // _SB_PCI0RP07HPSX

                    If (LNot (\_SB.PCI0.RP07.PDSX))
                    {

 157DC: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 157EC: 30 37 50 44 53 58                                // 07PDSX

                        Store (Zero, \_SB.PCI0.RP07.L0SE)
                    }


 157F2: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15802: 37 4C 30 53 45                                   // 7L0SE

                    If (LEqual (PFLV, 0x02))
                    {

 15807: A0 2B 93 50 46 4C 56 0A 02                       // .+.PFLV..

                        If (LOr (
 15810: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15814: 93 54 42 54 53 01                                // .TBTS.


 1581A: 92                                               // .

LNotEqual (TBSE, 0x07)))
                        {

 1581B: 93 54 42 53 45 0A 07                             // .TBSE..

                            Notify (\_SB.PCI0.RP07, Zero)
                        }
                    }

 15822: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
 15832: 00                                               // .

                    Else
                    {
                    }
                }

 15833: A1 01                                            // ..

                Else
                {

 15835: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP07.HPSX)
                }
            }


 15837: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15847: 37 48 50 53 58                                   // 7HPSX

            If (LAnd (
 1584C: A0 46 0F 90 92                                   // .F...

LNotEqual (\_SB.PCI0.RP08.VDID, 0xFFFFFFFF), \_SB.PCI0.RP08.HPSX))
            {

 15851: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
 15861: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15871: 50 43 49 30 52 50 30 38 48 50 53 58              // PCI0RP08HPSX

                If (LOr (
 1587D: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15881: 93 54 42 54 53 01                                // .TBTS.


 15887: 92                                               // .

LNotEqual (TBSE, 0x08)))
                {

 15888: 93 54 42 53 45 0A 08                             // .TBSE..

                    Sleep (0x64)
                }


 1588F: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP08.PDCX)
                {
                    Store (One, \_SB.PCI0.RP08.PDCX)
                    Store (One, \_SB.PCI0.RP08.HPSX)

 15893: A0 48 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .H.\/._SB_PCI0RP
 158A3: 30 38 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 08PDCXp.\/._SB_P
 158B3: 43 49 30 52 50 30 38 50 44 43 58 70 01 5C 2F 04  // CI0RP08PDCXp.\/.
 158C3: 5F 53 42 5F 50 43 49 30 52 50 30 38 48 50 53 58  // _SB_PCI0RP08HPSX

                    If (LNot (\_SB.PCI0.RP08.PDSX))
                    {

 158D3: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 158E3: 30 38 50 44 53 58                                // 08PDSX

                        Store (Zero, \_SB.PCI0.RP08.L0SE)
                    }


 158E9: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 158F9: 38 4C 30 53 45                                   // 8L0SE

                    If (LEqual (PFLV, 0x02))
                    {

 158FE: A0 2B 93 50 46 4C 56 0A 02                       // .+.PFLV..

                        If (LOr (
 15907: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 1590B: 93 54 42 54 53 01                                // .TBTS.


 15911: 92                                               // .

LNotEqual (TBSE, 0x08)))
                        {

 15912: 93 54 42 53 45 0A 08                             // .TBSE..

                            Notify (\_SB.PCI0.RP08, Zero)
                        }
                    }

 15919: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
 15929: 00                                               // .

                    Else
                    {
                    }
                }

 1592A: A1 01                                            // ..

                Else
                {

 1592C: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP08.HPSX)
                }
            }


 1592E: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 1593E: 38 48 50 53 58                                   // 8HPSX

            If (LAnd (
 15943: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP09.VDID, 0xFFFFFFFF), \_SB.PCI0.RP09.HPSX))
            {

 15948: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
 15958: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15968: 50 43 49 30 52 50 30 39 48 50 53 58              // PCI0RP09HPSX

                If (LOr (
 15974: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15978: 93 54 42 54 53 01                                // .TBTS.


 1597E: 92                                               // .

LNotEqual (TBSE, 0x09)))
                {

 1597F: 93 54 42 53 45 0A 09                             // .TBSE..

                    Sleep (0x64)
                }


 15986: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP09.PDCX)
                {
                    Store (One, \_SB.PCI0.RP09.PDCX)
                    Store (One, \_SB.PCI0.RP09.HPSX)

 1598A: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 1599A: 30 39 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 09PDCXp.\/._SB_P
 159AA: 43 49 30 52 50 30 39 50 44 43 58 70 01 5C 2F 04  // CI0RP09PDCXp.\/.
 159BA: 5F 53 42 5F 50 43 49 30 52 50 30 39 48 50 53 58  // _SB_PCI0RP09HPSX

                    If (LNot (\_SB.PCI0.RP09.PDSX))
                    {

 159CA: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 159DA: 30 39 50 44 53 58                                // 09PDSX

                        Store (Zero, \_SB.PCI0.RP09.L0SE)
                    }


 159E0: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 159F0: 39 4C 30 53 45                                   // 9L0SE

                    If (LOr (
 159F5: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 159F9: 93 54 42 54 53 01                                // .TBTS.


 159FF: 92                                               // .

LNotEqual (TBSE, 0x09)))
                    {

 15A00: 93 54 42 53 45 0A 09                             // .TBSE..

                        Notify (\_SB.PCI0.RP09, Zero)
                    }
                }

 15A07: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 39  // .\/._SB_PCI0RP09
 15A17: 00                                               // .

                Else
                {

 15A18: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP09.HPSX)
                }
            }


 15A1A: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
 15A2A: 39 48 50 53 58                                   // 9HPSX

            If (LAnd (
 15A2F: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP10.VDID, 0xFFFFFFFF), \_SB.PCI0.RP10.HPSX))
            {

 15A34: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
 15A44: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15A54: 50 43 49 30 52 50 31 30 48 50 53 58              // PCI0RP10HPSX

                If (LOr (
 15A60: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15A64: 93 54 42 54 53 01                                // .TBTS.


 15A6A: 92                                               // .

LNotEqual (TBSE, 0x0A)))
                {

 15A6B: 93 54 42 53 45 0A 0A                             // .TBSE..

                    Sleep (0x64)
                }


 15A72: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP10.PDCX)
                {
                    Store (One, \_SB.PCI0.RP10.PDCX)
                    Store (One, \_SB.PCI0.RP10.HPSX)

 15A76: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15A86: 31 30 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 10PDCXp.\/._SB_P
 15A96: 43 49 30 52 50 31 30 50 44 43 58 70 01 5C 2F 04  // CI0RP10PDCXp.\/.
 15AA6: 5F 53 42 5F 50 43 49 30 52 50 31 30 48 50 53 58  // _SB_PCI0RP10HPSX

                    If (LNot (\_SB.PCI0.RP10.PDSX))
                    {

 15AB6: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15AC6: 31 30 50 44 53 58                                // 10PDSX

                        Store (Zero, \_SB.PCI0.RP10.L0SE)
                    }


 15ACC: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15ADC: 30 4C 30 53 45                                   // 0L0SE

                    If (LOr (
 15AE1: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15AE5: 93 54 42 54 53 01                                // .TBTS.


 15AEB: 92                                               // .

LNotEqual (TBSE, 0x0A)))
                    {

 15AEC: 93 54 42 53 45 0A 0A                             // .TBSE..

                        Notify (\_SB.PCI0.RP10, Zero)
                    }
                }

 15AF3: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 30  // .\/._SB_PCI0RP10
 15B03: 00                                               // .

                Else
                {

 15B04: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP10.HPSX)
                }
            }


 15B06: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15B16: 30 48 50 53 58                                   // 0HPSX

            If (LAnd (
 15B1B: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP11.VDID, 0xFFFFFFFF), \_SB.PCI0.RP11.HPSX))
            {

 15B20: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
 15B30: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15B40: 50 43 49 30 52 50 31 31 48 50 53 58              // PCI0RP11HPSX

                If (LOr (
 15B4C: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15B50: 93 54 42 54 53 01                                // .TBTS.


 15B56: 92                                               // .

LNotEqual (TBSE, 0x0B)))
                {

 15B57: 93 54 42 53 45 0A 0B                             // .TBSE..

                    Sleep (0x64)
                }


 15B5E: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP11.PDCX)
                {
                    Store (One, \_SB.PCI0.RP11.PDCX)
                    Store (One, \_SB.PCI0.RP11.HPSX)

 15B62: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15B72: 31 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 11PDCXp.\/._SB_P
 15B82: 43 49 30 52 50 31 31 50 44 43 58 70 01 5C 2F 04  // CI0RP11PDCXp.\/.
 15B92: 5F 53 42 5F 50 43 49 30 52 50 31 31 48 50 53 58  // _SB_PCI0RP11HPSX

                    If (LNot (\_SB.PCI0.RP11.PDSX))
                    {

 15BA2: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15BB2: 31 31 50 44 53 58                                // 11PDSX

                        Store (Zero, \_SB.PCI0.RP11.L0SE)
                    }


 15BB8: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15BC8: 31 4C 30 53 45                                   // 1L0SE

                    If (LOr (
 15BCD: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15BD1: 93 54 42 54 53 01                                // .TBTS.


 15BD7: 92                                               // .

LNotEqual (TBSE, 0x0B)))
                    {

 15BD8: 93 54 42 53 45 0A 0B                             // .TBSE..

                        Notify (\_SB.PCI0.RP11, Zero)
                    }
                }

 15BDF: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 31  // .\/._SB_PCI0RP11
 15BEF: 00                                               // .

                Else
                {

 15BF0: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP11.HPSX)
                }
            }


 15BF2: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15C02: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (
 15C07: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP12.VDID, 0xFFFFFFFF), \_SB.PCI0.RP12.HPSX))
            {

 15C0C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
 15C1C: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15C2C: 50 43 49 30 52 50 31 32 48 50 53 58              // PCI0RP12HPSX

                If (LOr (
 15C38: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15C3C: 93 54 42 54 53 01                                // .TBTS.


 15C42: 92                                               // .

LNotEqual (TBSE, 0x0C)))
                {

 15C43: 93 54 42 53 45 0A 0C                             // .TBSE..

                    Sleep (0x64)
                }


 15C4A: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP12.PDCX)
                {
                    Store (One, \_SB.PCI0.RP12.PDCX)
                    Store (One, \_SB.PCI0.RP12.HPSX)

 15C4E: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15C5E: 31 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 12PDCXp.\/._SB_P
 15C6E: 43 49 30 52 50 31 32 50 44 43 58 70 01 5C 2F 04  // CI0RP12PDCXp.\/.
 15C7E: 5F 53 42 5F 50 43 49 30 52 50 31 32 48 50 53 58  // _SB_PCI0RP12HPSX

                    If (LNot (\_SB.PCI0.RP12.PDSX))
                    {

 15C8E: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15C9E: 31 32 50 44 53 58                                // 12PDSX

                        Store (Zero, \_SB.PCI0.RP12.L0SE)
                    }


 15CA4: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15CB4: 32 4C 30 53 45                                   // 2L0SE

                    If (LOr (
 15CB9: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15CBD: 93 54 42 54 53 01                                // .TBTS.


 15CC3: 92                                               // .

LNotEqual (TBSE, 0x0C)))
                    {

 15CC4: 93 54 42 53 45 0A 0C                             // .TBSE..

                        Notify (\_SB.PCI0.RP12, Zero)
                    }
                }

 15CCB: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 32  // .\/._SB_PCI0RP12
 15CDB: 00                                               // .

                Else
                {

 15CDC: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP12.HPSX)
                }
            }


 15CDE: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15CEE: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (
 15CF3: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP13.VDID, 0xFFFFFFFF), \_SB.PCI0.RP13.HPSX))
            {

 15CF8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
 15D08: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15D18: 50 43 49 30 52 50 31 33 48 50 53 58              // PCI0RP13HPSX

                If (LOr (
 15D24: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15D28: 93 54 42 54 53 01                                // .TBTS.


 15D2E: 92                                               // .

LNotEqual (TBSE, 0x0D)))
                {

 15D2F: 93 54 42 53 45 0A 0D                             // .TBSE..

                    Sleep (0x64)
                }


 15D36: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP13.PDCX)
                {
                    Store (One, \_SB.PCI0.RP13.PDCX)
                    Store (One, \_SB.PCI0.RP13.HPSX)

 15D3A: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15D4A: 31 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 13PDCXp.\/._SB_P
 15D5A: 43 49 30 52 50 31 33 50 44 43 58 70 01 5C 2F 04  // CI0RP13PDCXp.\/.
 15D6A: 5F 53 42 5F 50 43 49 30 52 50 31 33 48 50 53 58  // _SB_PCI0RP13HPSX

                    If (LNot (\_SB.PCI0.RP13.PDSX))
                    {

 15D7A: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15D8A: 31 33 50 44 53 58                                // 13PDSX

                        Store (Zero, \_SB.PCI0.RP13.L0SE)
                    }


 15D90: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15DA0: 33 4C 30 53 45                                   // 3L0SE

                    If (LOr (
 15DA5: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15DA9: 93 54 42 54 53 01                                // .TBTS.


 15DAF: 92                                               // .

LNotEqual (TBSE, 0x0D)))
                    {

 15DB0: 93 54 42 53 45 0A 0D                             // .TBSE..

                        Notify (\_SB.PCI0.RP13, Zero)
                    }
                }

 15DB7: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 33  // .\/._SB_PCI0RP13
 15DC7: 00                                               // .

                Else
                {

 15DC8: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP13.HPSX)
                }
            }


 15DCA: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15DDA: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (
 15DDF: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP14.VDID, 0xFFFFFFFF), \_SB.PCI0.RP14.HPSX))
            {

 15DE4: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
 15DF4: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15E04: 50 43 49 30 52 50 31 34 48 50 53 58              // PCI0RP14HPSX

                If (LOr (
 15E10: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15E14: 93 54 42 54 53 01                                // .TBTS.


 15E1A: 92                                               // .

LNotEqual (TBSE, 0x0E)))
                {

 15E1B: 93 54 42 53 45 0A 0E                             // .TBSE..

                    Sleep (0x64)
                }


 15E22: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP14.PDCX)
                {
                    Store (One, \_SB.PCI0.RP14.PDCX)
                    Store (One, \_SB.PCI0.RP14.HPSX)

 15E26: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15E36: 31 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 14PDCXp.\/._SB_P
 15E46: 43 49 30 52 50 31 34 50 44 43 58 70 01 5C 2F 04  // CI0RP14PDCXp.\/.
 15E56: 5F 53 42 5F 50 43 49 30 52 50 31 34 48 50 53 58  // _SB_PCI0RP14HPSX

                    If (LNot (\_SB.PCI0.RP14.PDSX))
                    {

 15E66: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15E76: 31 34 50 44 53 58                                // 14PDSX

                        Store (Zero, \_SB.PCI0.RP14.L0SE)
                    }


 15E7C: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15E8C: 34 4C 30 53 45                                   // 4L0SE

                    If (LOr (
 15E91: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15E95: 93 54 42 54 53 01                                // .TBTS.


 15E9B: 92                                               // .

LNotEqual (TBSE, 0x0E)))
                    {

 15E9C: 93 54 42 53 45 0A 0E                             // .TBSE..

                        Notify (\_SB.PCI0.RP14, Zero)
                    }
                }

 15EA3: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 34  // .\/._SB_PCI0RP14
 15EB3: 00                                               // .

                Else
                {

 15EB4: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP14.HPSX)
                }
            }


 15EB6: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15EC6: 34 48 50 53 58                                   // 4HPSX

            If (LAnd (
 15ECB: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP15.VDID, 0xFFFFFFFF), \_SB.PCI0.RP15.HPSX))
            {

 15ED0: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
 15EE0: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15EF0: 50 43 49 30 52 50 31 35 48 50 53 58              // PCI0RP15HPSX

                If (LOr (
 15EFC: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15F00: 93 54 42 54 53 01                                // .TBTS.


 15F06: 92                                               // .

LNotEqual (TBSE, 0x0F)))
                {

 15F07: 93 54 42 53 45 0A 0F                             // .TBSE..

                    Sleep (0x64)
                }


 15F0E: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP15.PDCX)
                {
                    Store (One, \_SB.PCI0.RP15.PDCX)
                    Store (One, \_SB.PCI0.RP15.HPSX)

 15F12: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 15F22: 31 35 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 15PDCXp.\/._SB_P
 15F32: 43 49 30 52 50 31 35 50 44 43 58 70 01 5C 2F 04  // CI0RP15PDCXp.\/.
 15F42: 5F 53 42 5F 50 43 49 30 52 50 31 35 48 50 53 58  // _SB_PCI0RP15HPSX

                    If (LNot (\_SB.PCI0.RP15.PDSX))
                    {

 15F52: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 15F62: 31 35 50 44 53 58                                // 15PDSX

                        Store (Zero, \_SB.PCI0.RP15.L0SE)
                    }


 15F68: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15F78: 35 4C 30 53 45                                   // 5L0SE

                    If (LOr (
 15F7D: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 15F81: 93 54 42 54 53 01                                // .TBTS.


 15F87: 92                                               // .

LNotEqual (TBSE, 0x0F)))
                    {

 15F88: 93 54 42 53 45 0A 0F                             // .TBSE..

                        Notify (\_SB.PCI0.RP15, Zero)
                    }
                }

 15F8F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 35  // .\/._SB_PCI0RP15
 15F9F: 00                                               // .

                Else
                {

 15FA0: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP15.HPSX)
                }
            }


 15FA2: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 15FB2: 35 48 50 53 58                                   // 5HPSX

            If (LAnd (
 15FB7: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP16.VDID, 0xFFFFFFFF), \_SB.PCI0.RP16.HPSX))
            {

 15FBC: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
 15FCC: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 15FDC: 50 43 49 30 52 50 31 36 48 50 53 58              // PCI0RP16HPSX

                If (LOr (
 15FE8: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 15FEC: 93 54 42 54 53 01                                // .TBTS.


 15FF2: 92                                               // .

LNotEqual (TBSE, 0x10)))
                {

 15FF3: 93 54 42 53 45 0A 10                             // .TBSE..

                    Sleep (0x64)
                }


 15FFA: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP16.PDCX)
                {
                    Store (One, \_SB.PCI0.RP16.PDCX)
                    Store (One, \_SB.PCI0.RP16.HPSX)

 15FFE: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 1600E: 31 36 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 16PDCXp.\/._SB_P
 1601E: 43 49 30 52 50 31 36 50 44 43 58 70 01 5C 2F 04  // CI0RP16PDCXp.\/.
 1602E: 5F 53 42 5F 50 43 49 30 52 50 31 36 48 50 53 58  // _SB_PCI0RP16HPSX

                    If (LNot (\_SB.PCI0.RP16.PDSX))
                    {

 1603E: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 1604E: 31 36 50 44 53 58                                // 16PDSX

                        Store (Zero, \_SB.PCI0.RP16.L0SE)
                    }


 16054: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 16064: 36 4C 30 53 45                                   // 6L0SE

                    If (LOr (
 16069: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 1606D: 93 54 42 54 53 01                                // .TBTS.


 16073: 92                                               // .

LNotEqual (TBSE, 0x10)))
                    {

 16074: 93 54 42 53 45 0A 10                             // .TBSE..

                        Notify (\_SB.PCI0.RP16, Zero)
                    }
                }

 1607B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 36  // .\/._SB_PCI0RP16
 1608B: 00                                               // .

                Else
                {

 1608C: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP16.HPSX)
                }
            }


 1608E: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 1609E: 36 48 50 53 58                                   // 6HPSX

            If (LAnd (
 160A3: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP17.VDID, 0xFFFFFFFF), \_SB.PCI0.RP17.HPSX))
            {

 160A8: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
 160B8: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 160C8: 50 43 49 30 52 50 31 37 48 50 53 58              // PCI0RP17HPSX

                If (LOr (
 160D4: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 160D8: 93 54 42 54 53 01                                // .TBTS.


 160DE: 92                                               // .

LNotEqual (TBSE, 0x11)))
                {

 160DF: 93 54 42 53 45 0A 11                             // .TBSE..

                    Sleep (0x64)
                }


 160E6: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP17.PDCX)
                {
                    Store (One, \_SB.PCI0.RP17.PDCX)
                    Store (One, \_SB.PCI0.RP17.HPSX)

 160EA: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 160FA: 31 37 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 17PDCXp.\/._SB_P
 1610A: 43 49 30 52 50 31 37 50 44 43 58 70 01 5C 2F 04  // CI0RP17PDCXp.\/.
 1611A: 5F 53 42 5F 50 43 49 30 52 50 31 37 48 50 53 58  // _SB_PCI0RP17HPSX

                    If (LNot (\_SB.PCI0.RP17.PDSX))
                    {

 1612A: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 1613A: 31 37 50 44 53 58                                // 17PDSX

                        Store (Zero, \_SB.PCI0.RP17.L0SE)
                    }


 16140: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 16150: 37 4C 30 53 45                                   // 7L0SE

                    If (LOr (
 16155: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 16159: 93 54 42 54 53 01                                // .TBTS.


 1615F: 92                                               // .

LNotEqual (TBSE, 0x11)))
                    {

 16160: 93 54 42 53 45 0A 11                             // .TBSE..

                        Notify (\_SB.PCI0.RP17, Zero)
                    }
                }

 16167: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 37  // .\/._SB_PCI0RP17
 16177: 00                                               // .

                Else
                {

 16178: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP17.HPSX)
                }
            }


 1617A: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 1618A: 37 48 50 53 58                                   // 7HPSX

            If (LAnd (
 1618F: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP18.VDID, 0xFFFFFFFF), \_SB.PCI0.RP18.HPSX))
            {

 16194: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
 161A4: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 161B4: 50 43 49 30 52 50 31 38 48 50 53 58              // PCI0RP18HPSX

                If (LOr (
 161C0: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 161C4: 93 54 42 54 53 01                                // .TBTS.


 161CA: 92                                               // .

LNotEqual (TBSE, 0x12)))
                {

 161CB: 93 54 42 53 45 0A 12                             // .TBSE..

                    Sleep (0x64)
                }


 161D2: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP18.PDCX)
                {
                    Store (One, \_SB.PCI0.RP18.PDCX)
                    Store (One, \_SB.PCI0.RP18.HPSX)

 161D6: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 161E6: 31 38 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 18PDCXp.\/._SB_P
 161F6: 43 49 30 52 50 31 38 50 44 43 58 70 01 5C 2F 04  // CI0RP18PDCXp.\/.
 16206: 5F 53 42 5F 50 43 49 30 52 50 31 38 48 50 53 58  // _SB_PCI0RP18HPSX

                    If (LNot (\_SB.PCI0.RP18.PDSX))
                    {

 16216: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 16226: 31 38 50 44 53 58                                // 18PDSX

                        Store (Zero, \_SB.PCI0.RP18.L0SE)
                    }


 1622C: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 1623C: 38 4C 30 53 45                                   // 8L0SE

                    If (LOr (
 16241: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 16245: 93 54 42 54 53 01                                // .TBTS.


 1624B: 92                                               // .

LNotEqual (TBSE, 0x12)))
                    {

 1624C: 93 54 42 53 45 0A 12                             // .TBSE..

                        Notify (\_SB.PCI0.RP18, Zero)
                    }
                }

 16253: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 38  // .\/._SB_PCI0RP18
 16263: 00                                               // .

                Else
                {

 16264: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP18.HPSX)
                }
            }


 16266: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 16276: 38 48 50 53 58                                   // 8HPSX

            If (LAnd (
 1627B: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP19.VDID, 0xFFFFFFFF), \_SB.PCI0.RP19.HPSX))
            {

 16280: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
 16290: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 162A0: 50 43 49 30 52 50 31 39 48 50 53 58              // PCI0RP19HPSX

                If (LOr (
 162AC: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 162B0: 93 54 42 54 53 01                                // .TBTS.


 162B6: 92                                               // .

LNotEqual (TBSE, 0x13)))
                {

 162B7: 93 54 42 53 45 0A 13                             // .TBSE..

                    Sleep (0x64)
                }


 162BE: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP19.PDCX)
                {
                    Store (One, \_SB.PCI0.RP19.PDCX)
                    Store (One, \_SB.PCI0.RP19.HPSX)

 162C2: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 162D2: 31 39 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 19PDCXp.\/._SB_P
 162E2: 43 49 30 52 50 31 39 50 44 43 58 70 01 5C 2F 04  // CI0RP19PDCXp.\/.
 162F2: 5F 53 42 5F 50 43 49 30 52 50 31 39 48 50 53 58  // _SB_PCI0RP19HPSX

                    If (LNot (\_SB.PCI0.RP19.PDSX))
                    {

 16302: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 16312: 31 39 50 44 53 58                                // 19PDSX

                        Store (Zero, \_SB.PCI0.RP19.L0SE)
                    }


 16318: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 16328: 39 4C 30 53 45                                   // 9L0SE

                    If (LOr (
 1632D: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 16331: 93 54 42 54 53 01                                // .TBTS.


 16337: 92                                               // .

LNotEqual (TBSE, 0x13)))
                    {

 16338: 93 54 42 53 45 0A 13                             // .TBSE..

                        Notify (\_SB.PCI0.RP19, Zero)
                    }
                }

 1633F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 31 39  // .\/._SB_PCI0RP19
 1634F: 00                                               // .

                Else
                {

 16350: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP19.HPSX)
                }
            }


 16352: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // p.\/._SB_PCI0RP1
 16362: 39 48 50 53 58                                   // 9HPSX

            If (LAnd (
 16367: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP20.VDID, 0xFFFFFFFF), \_SB.PCI0.RP20.HPSX))
            {

 1636C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
 1637C: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 1638C: 50 43 49 30 52 50 32 30 48 50 53 58              // PCI0RP20HPSX

                If (LOr (
 16398: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 1639C: 93 54 42 54 53 01                                // .TBTS.


 163A2: 92                                               // .

LNotEqual (TBSE, 0x14)))
                {

 163A3: 93 54 42 53 45 0A 14                             // .TBSE..

                    Sleep (0x64)
                }


 163AA: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP20.PDCX)
                {
                    Store (One, \_SB.PCI0.RP20.PDCX)
                    Store (One, \_SB.PCI0.RP20.HPSX)

 163AE: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 163BE: 32 30 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 20PDCXp.\/._SB_P
 163CE: 43 49 30 52 50 32 30 50 44 43 58 70 01 5C 2F 04  // CI0RP20PDCXp.\/.
 163DE: 5F 53 42 5F 50 43 49 30 52 50 32 30 48 50 53 58  // _SB_PCI0RP20HPSX

                    If (LNot (\_SB.PCI0.RP20.PDSX))
                    {

 163EE: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 163FE: 32 30 50 44 53 58                                // 20PDSX

                        Store (Zero, \_SB.PCI0.RP20.L0SE)
                    }


 16404: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 16414: 30 4C 30 53 45                                   // 0L0SE

                    If (LOr (
 16419: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 1641D: 93 54 42 54 53 01                                // .TBTS.


 16423: 92                                               // .

LNotEqual (TBSE, 0x14)))
                    {

 16424: 93 54 42 53 45 0A 14                             // .TBSE..

                        Notify (\_SB.PCI0.RP20, Zero)
                    }
                }

 1642B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 30  // .\/._SB_PCI0RP20
 1643B: 00                                               // .

                Else
                {

 1643C: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP20.HPSX)
                }
            }


 1643E: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 1644E: 30 48 50 53 58                                   // 0HPSX

            If (LAnd (
 16453: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP21.VDID, 0xFFFFFFFF), \_SB.PCI0.RP21.HPSX))
            {

 16458: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 31  // .\/._SB_PCI0RP21
 16468: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 16478: 50 43 49 30 52 50 32 31 48 50 53 58              // PCI0RP21HPSX

                If (LOr (
 16484: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 16488: 93 54 42 54 53 01                                // .TBTS.


 1648E: 92                                               // .

LNotEqual (TBSE, 0x15)))
                {

 1648F: 93 54 42 53 45 0A 15                             // .TBSE..

                    Sleep (0x64)
                }


 16496: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP21.PDCX)
                {
                    Store (One, \_SB.PCI0.RP21.PDCX)
                    Store (One, \_SB.PCI0.RP21.HPSX)

 1649A: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 164AA: 32 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 21PDCXp.\/._SB_P
 164BA: 43 49 30 52 50 32 31 50 44 43 58 70 01 5C 2F 04  // CI0RP21PDCXp.\/.
 164CA: 5F 53 42 5F 50 43 49 30 52 50 32 31 48 50 53 58  // _SB_PCI0RP21HPSX

                    If (LNot (\_SB.PCI0.RP21.PDSX))
                    {

 164DA: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 164EA: 32 31 50 44 53 58                                // 21PDSX

                        Store (Zero, \_SB.PCI0.RP21.L0SE)
                    }


 164F0: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 16500: 31 4C 30 53 45                                   // 1L0SE

                    If (LOr (
 16505: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 16509: 93 54 42 54 53 01                                // .TBTS.


 1650F: 92                                               // .

LNotEqual (TBSE, 0x15)))
                    {

 16510: 93 54 42 53 45 0A 15                             // .TBSE..

                        Notify (\_SB.PCI0.RP21, Zero)
                    }
                }

 16517: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 31  // .\/._SB_PCI0RP21
 16527: 00                                               // .

                Else
                {

 16528: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP21.HPSX)
                }
            }


 1652A: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 1653A: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (
 1653F: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP22.VDID, 0xFFFFFFFF), \_SB.PCI0.RP22.HPSX))
            {

 16544: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 32  // .\/._SB_PCI0RP22
 16554: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 16564: 50 43 49 30 52 50 32 32 48 50 53 58              // PCI0RP22HPSX

                If (LOr (
 16570: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 16574: 93 54 42 54 53 01                                // .TBTS.


 1657A: 92                                               // .

LNotEqual (TBSE, 0x16)))
                {

 1657B: 93 54 42 53 45 0A 16                             // .TBSE..

                    Sleep (0x64)
                }


 16582: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP22.PDCX)
                {
                    Store (One, \_SB.PCI0.RP22.PDCX)
                    Store (One, \_SB.PCI0.RP22.HPSX)

 16586: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 16596: 32 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 22PDCXp.\/._SB_P
 165A6: 43 49 30 52 50 32 32 50 44 43 58 70 01 5C 2F 04  // CI0RP22PDCXp.\/.
 165B6: 5F 53 42 5F 50 43 49 30 52 50 32 32 48 50 53 58  // _SB_PCI0RP22HPSX

                    If (LNot (\_SB.PCI0.RP22.PDSX))
                    {

 165C6: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 165D6: 32 32 50 44 53 58                                // 22PDSX

                        Store (Zero, \_SB.PCI0.RP22.L0SE)
                    }


 165DC: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 165EC: 32 4C 30 53 45                                   // 2L0SE

                    If (LOr (
 165F1: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 165F5: 93 54 42 54 53 01                                // .TBTS.


 165FB: 92                                               // .

LNotEqual (TBSE, 0x16)))
                    {

 165FC: 93 54 42 53 45 0A 16                             // .TBSE..

                        Notify (\_SB.PCI0.RP22, Zero)
                    }
                }

 16603: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 32  // .\/._SB_PCI0RP22
 16613: 00                                               // .

                Else
                {

 16614: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP22.HPSX)
                }
            }


 16616: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 16626: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (
 1662B: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP23.VDID, 0xFFFFFFFF), \_SB.PCI0.RP23.HPSX))
            {

 16630: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 33  // .\/._SB_PCI0RP23
 16640: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 16650: 50 43 49 30 52 50 32 33 48 50 53 58              // PCI0RP23HPSX

                If (LOr (
 1665C: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 16660: 93 54 42 54 53 01                                // .TBTS.


 16666: 92                                               // .

LNotEqual (TBSE, 0x17)))
                {

 16667: 93 54 42 53 45 0A 17                             // .TBSE..

                    Sleep (0x64)
                }


 1666E: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP23.PDCX)
                {
                    Store (One, \_SB.PCI0.RP23.PDCX)
                    Store (One, \_SB.PCI0.RP23.HPSX)

 16672: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 16682: 32 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 23PDCXp.\/._SB_P
 16692: 43 49 30 52 50 32 33 50 44 43 58 70 01 5C 2F 04  // CI0RP23PDCXp.\/.
 166A2: 5F 53 42 5F 50 43 49 30 52 50 32 33 48 50 53 58  // _SB_PCI0RP23HPSX

                    If (LNot (\_SB.PCI0.RP23.PDSX))
                    {

 166B2: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 166C2: 32 33 50 44 53 58                                // 23PDSX

                        Store (Zero, \_SB.PCI0.RP23.L0SE)
                    }


 166C8: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 166D8: 33 4C 30 53 45                                   // 3L0SE

                    If (LOr (
 166DD: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 166E1: 93 54 42 54 53 01                                // .TBTS.


 166E7: 92                                               // .

LNotEqual (TBSE, 0x17)))
                    {

 166E8: 93 54 42 53 45 0A 17                             // .TBSE..

                        Notify (\_SB.PCI0.RP23, Zero)
                    }
                }

 166EF: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 33  // .\/._SB_PCI0RP23
 166FF: 00                                               // .

                Else
                {

 16700: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP23.HPSX)
                }
            }


 16702: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 16712: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (
 16717: A0 4B 0E 90 92                                   // .K...

LNotEqual (\_SB.PCI0.RP24.VDID, 0xFFFFFFFF), \_SB.PCI0.RP24.HPSX))
            {

 1671C: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32 34  // .\/._SB_PCI0RP24
 1672C: 56 44 49 44 0C FF FF FF FF 5C 2F 04 5F 53 42 5F  // VDID.....\/._SB_
 1673C: 50 43 49 30 52 50 32 34 48 50 53 58              // PCI0RP24HPSX

                If (LOr (
 16748: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
 1674C: 93 54 42 54 53 01                                // .TBTS.


 16752: 92                                               // .

LNotEqual (TBSE, 0x18)))
                {

 16753: 93 54 42 53 45 0A 18                             // .TBSE..

                    Sleep (0x64)
                }


 1675A: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP24.PDCX)
                {
                    Store (One, \_SB.PCI0.RP24.PDCX)
                    Store (One, \_SB.PCI0.RP24.HPSX)

 1675E: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
 1676E: 32 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 24PDCXp.\/._SB_P
 1677E: 43 49 30 52 50 32 34 50 44 43 58 70 01 5C 2F 04  // CI0RP24PDCXp.\/.
 1678E: 5F 53 42 5F 50 43 49 30 52 50 32 34 48 50 53 58  // _SB_PCI0RP24HPSX

                    If (LNot (\_SB.PCI0.RP24.PDSX))
                    {

 1679E: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
 167AE: 32 34 50 44 53 58                                // 24PDSX

                        Store (Zero, \_SB.PCI0.RP24.L0SE)
                    }


 167B4: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 167C4: 34 4C 30 53 45                                   // 4L0SE

                    If (LOr (
 167C9: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
 167CD: 93 54 42 54 53 01                                // .TBTS.


 167D3: 92                                               // .

LNotEqual (TBSE, 0x18)))
                    {

 167D4: 93 54 42 53 45 0A 18                             // .TBSE..

                        Notify (\_SB.PCI0.RP24, Zero)
                    }
                }

 167DB: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 32 34  // .\/._SB_PCI0RP24
 167EB: 00                                               // .

                Else
                {

 167EC: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP24.HPSX)
                }
            }
        }


 167EE: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // p.\/._SB_PCI0RP2
 167FE: 34 48 50 53 58                                   // 4HPSX

        Method (_L62, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Store (Zero, GPEC)

 16803: 14 4E 08 5F 4C 36 32 00 70 00 47 50 45 43        // .N._L62.p.GPEC

            If (CondRefOf (\_PR.DTSE))
            {

 16811: A0 43 05 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00  // .C.[.\._PR_DTSE.

                If (
 16821: A0 43 04 92                                      // .C..

LGreaterEqual (\_PR.DTSE, One))
                {

 16825: 95 5C 2E 5F 50 52 5F 44 54 53 45 01              // .\._PR_DTSE.

                    If (LEqual (\_PR.DTSI, One))
                    {
                        Notify (\_TZ.TZ00, 0x80)
                        Notify (\_TZ.TZ01, 0x80)

 16831: A0 33 93 5C 2E 5F 50 52 5F 44 54 53 49 01 86 5C  // .3.\._PR_DTSI..\
 16841: 2E 5F 54 5A 5F 54 5A 30 30 0A 80 86 5C 2E 5F 54  // ._TZ_TZ00...\._T
 16851: 5A 5F 54 5A 30 31 0A 80                          // Z_TZ01..

                        Store (Zero, \_PR.DTSI)
                    }
                }
            }


 16859: 70 00 5C 2E 5F 50 52 5F 44 54 53 49              // p.\._PR_DTSI

            If (LEqual (\_PR.HWPI, One))
            {

 16865: A0 2C 93 5C 2E 5F 50 52 5F 48 57 50 49 01        // .,.\._PR_HWPI.

                If (CondRefOf (\_GPE.HLVT))
                {
                    HLVT ()
                }


 16873: A0 12 5B 12 5C 2E 5F 47 50 45 48 4C 56 54 00 48  // ..[.\._GPEHLVT.H
 16883: 4C 56 54                                         // LVT

                Store (Zero, \_PR.HWPI)
            }
        }


 16886: 70 00 5C 2E 5F 50 52 5F 48 57 50 49              // p.\._PR_HWPI

        Method (_L66, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

 16892: 14 34 5F 4C 36 36 00                             // .4_L66.

            If (LAnd (\_SB.PCI0.GFX0.GSSE, 
 16899: A0 2D 90 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // .-.\/._SB_PCI0GF
 168A9: 58 30 47 53 53 45                                // X0GSSE

LNot (GSMI)))
            {
                \_SB.PCI0.GFX0.GSCI ()
            }
        }


 168AF: 92 47 53 4D 49 5C 2F 04 5F 53 42 5F 50 43 49 30  // .GSMI\/._SB_PCI0
 168BF: 47 46 58 30 47 53 43 49                          // GFX0GSCI

        Name (PRES, One)

 168C7: 08 50 52 45 53 01                                // .PRES.

        Method (_L6F, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

 168CD: 14 4D 09 5F 4C 36 46 00                          // .M._L6F.

            If (LEqual (RTD3, One))
            {

 168D5: A0 1A 93 52 54 44 33 01                          // ...RTD3.

                If (CondRefOf (\_GPE.AL6F))
                {
                    AL6F ()
                }
            }


 168DD: A0 12 5B 12 5C 2E 5F 47 50 45 41 4C 36 46 00 41  // ..[.\._GPEAL6F.A
 168ED: 4C 36 46                                         // L6F

            If (LEqual (SGGP, One))
            {

 168F0: A0 1A 93 53 47 47 50 01                          // ...SGGP.

                If (CondRefOf (\_GPE.P0L6))
                {
                    P0L6 ()
                }
            }


 168F8: A0 12 5B 12 5C 2E 5F 47 50 45 50 30 4C 36 00 50  // ..[.\._GPEP0L6.P
 16908: 30 4C 36                                         // 0L6

            If (LEqual (P1GP, One))
            {

 1690B: A0 1A 93 50 31 47 50 01                          // ...P1GP.

                If (CondRefOf (\_GPE.P1L6))
                {
                    P1L6 ()
                }
            }


 16913: A0 12 5B 12 5C 2E 5F 47 50 45 50 31 4C 36 00 50  // ..[.\._GPEP1L6.P
 16923: 31 4C 36                                         // 1L6

            If (LEqual (P2GP, One))
            {

 16926: A0 1A 93 50 32 47 50 01                          // ...P2GP.

                If (CondRefOf (\_GPE.P2L6))
                {
                    P2L6 ()
                }
            }


 1692E: A0 12 5B 12 5C 2E 5F 47 50 45 50 32 4C 36 00 50  // ..[.\._GPEP2L6.P
 1693E: 32 4C 36                                         // 2L6

            If (LEqual (TBTS, One))
            {

 16941: A0 29 93 54 42 54 53 01                          // .).TBTS.

                If (\_SB.ISME (CPGN))
                {
                    \_SB.THDR (TBSE, CPGN)
                }
            }
        }
    }


 16949: A0 21 5C 2E 5F 53 42 5F 49 53 4D 45 43 50 47 4E  // .!\._SB_ISMECPGN
 16959: 5C 2E 5F 53 42 5F 54 48 44 52 54 42 53 45 43 50  // \._SB_THDRTBSECP
 16969: 47 4E                                            // GN

    If (CondRefOf (\_SB.PCI0.RP01.PXSX))
    {

 1696B: A0 4E 6E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .Nn[.\/._SB_PCI0
 1697B: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

        Scope (_SB.PCI0.RP01.PXSX)
        {

 16984: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 16994: 31 50 58 53 58                                   // 1PXSX

            OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 16999: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x2E), 
                SSID,   16
            }


 169A3: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 169B3: 53 53 49 44 10                                   // SSID.

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 169B8: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }


 169C3: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 169D3: 52 10                                            // R.

            Name (SPLX, 
 169D5: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
            {
                Zero, 

 169DA: 12 39 04 00                                      // .9..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 169DE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 169EE: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 169F0: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 16A00: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

 16A02: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 16A12: 00 80                                            // ..

            Method (SPLC, 0, Serialized)
            {
                Store (DOM1, 
 16A14: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 16A21: 88 83                                            // ..

Index (SPLX, One)), Zero))
                Store (LIM1, 
 16A23: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 16A31: 88 83                                            // ..

Index (SPLX, One)), One))
                Store (TIM1, 
 16A33: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 16A41: 88 83                                            // ..

Index (SPLX, One)), 0x02))
                Store (DOM2, 
 16A43: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 16A52: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
                Store (LIM2, 
 16A54: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 16A63: 88 83                                            // ..

Index (SPLX, 0x02)), One))
                Store (TIM2, 
 16A65: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 16A74: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
                Store (DOM3, 
 16A76: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 16A86: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
                Store (LIM3, 
 16A88: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 16A97: 88 83                                            // ..

Index (SPLX, 0x03)), One))
                Store (TIM3, 
 16A99: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 16AA8: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 16AAA: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

                Return (SPLX)
            }


 16AB5: A4 53 50 4C 58                                   // .SPLX

            PowerResource (WRST, 0x05, 0x0000)
            {

 16ABA: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")

 16AC5: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 16AD5: 20 5F 53 54 41 00                                //  _STA.

                    Return (One)
                }


 16ADB: A4 01                                            // ..

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }


 16ADD: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 16AED: 20 5F 4F 4E 00                                   //  _ON.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }


 16AF2: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 16B02: 20 5F 4F 46 46 00                                //  _OFF.

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")

 16B08: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 16B18: 20 5F 52 53 54 00                                //  _RST.

                    If (And (DCAP, 0x10000000))
                    {
                        Store (DCTR, Local0)
                        Or (Local0, 0x8000, Local0)

 16B1E: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 16B2E: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                        Store (Local0, DCTR)
                    }
                }
            }


 16B37: 70 60 44 43 54 52                                // p`DCTR

            Name (_PRR, 
 16B3D: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })

 16B42: 12 06 01 57 52 53 54                             // ...WRST

            Name (WANX, 
 16B49: 08 57 41 4E 58                                   // .WANX

Package (0x03)
            {
                Zero, 

 16B4E: 12 27 03 00                                      // .'..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 16B52: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 16B62: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

 16B64: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 16B74: 00 80                                            // ..

            Method (WAND, 0, Serialized)
            {
                Store (Zero, 
 16B76: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 16B80: 88 83                                            // ..

Index (WANX, One)), Zero))
                Store (TRD0, 
 16B82: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 16B90: 88 83                                            // ..

Index (WANX, One)), One))
                Store (TRL0, 
 16B92: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 16BA0: 88 83                                            // ..

Index (WANX, One)), 0x02))
                Store (One, 
 16BA2: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 16BAE: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
                Store (TRD1, 
 16BB0: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 16BBF: 88 83                                            // ..

Index (WANX, 0x02)), One))
                Store (TRL1, 
 16BC1: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 16BD0: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 16BD2: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

                Return (WANX)
            }


 16BDD: A4 57 41 4E 58                                   // .WANX

            Name (WRDX, 
 16BE2: 08 57 52 44 58                                   // .WRDX

Package (0x03)
            {
                Zero, 

 16BE7: 12 19 03 00                                      // ....

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 


 16BEB: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })

 16BF6: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Method (WRDD, 0, Serialized)
            {
                Store (WDM1, 
 16C01: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 16C0E: 88 83                                            // ..

Index (WRDX, One)), Zero))
                Store (CID1, 
 16C10: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 16C1E: 88 83                                            // ..

Index (WRDX, One)), One))
                Store (WDM2, 
 16C20: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 16C2E: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
                Store (CID2, 
 16C30: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 16C3F: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 16C41: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

                Return (WRDX)
            }


 16C4B: A4 57 52 44 58                                   // .WRDX

            Name (WRDY, 
 16C50: 08 57 52 44 59                                   // .WRDY

Package (0x03)
            {
                Zero, 

 16C55: 12 2D 03 00                                      // .-..

                Package (0x0C)
                {
                    0x07, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }, 


 16C59: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 16C69: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

                Package (0x06)
                {
                    0x10, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }
            })

 16C74: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

            Method (WRDS, 0, Serialized)
            {
                Store (STXE, 
 16C83: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 16C90: 88 83                                            // ..

Index (WRDY, One)), One))
                Store (STX0, 
 16C92: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 16CA0: 88 83                                            // ..

Index (WRDY, One)), 0x02))
                Store (STX1, 
 16CA2: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 16CB1: 88 83                                            // ..

Index (WRDY, One)), 0x03))
                Store (STX2, 
 16CB3: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 16CC2: 88 83                                            // ..

Index (WRDY, One)), 0x04))
                Store (STX3, 
 16CC4: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 16CD3: 88 83                                            // ..

Index (WRDY, One)), 0x05))
                Store (STX4, 
 16CD5: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 16CE4: 88 83                                            // ..

Index (WRDY, One)), 0x06))
                Store (STX5, 
 16CE6: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 16CF5: 88 83                                            // ..

Index (WRDY, One)), 0x07))
                Store (STX6, 
 16CF7: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 16D06: 88 83                                            // ..

Index (WRDY, One)), 0x08))
                Store (STX7, 
 16D08: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 16D17: 88 83                                            // ..

Index (WRDY, One)), 0x09))
                Store (STX8, 
 16D19: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 16D28: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
                Store (STX9, 
 16D2A: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 16D39: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
                Store (WRFE, 
 16D3B: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 16D4A: 88 83                                            // ..

Index (WRDY, 0x02)), One))
                Store (WRC1, 
 16D4C: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 16D5B: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
                Store (WRC2, 
 16D5D: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 16D6D: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
                Store (WRC3, 
 16D6F: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 16D7F: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
                Store (WRC4, 
 16D81: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 16D91: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 16D93: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

                Return (WRDY)
            }


 16D9E: A4 57 52 44 59                                   // .WRDY

            Method (AWVC, 0, Serialized)
            {

 16DA3: 14 0B 41 57 56 43 08                             // ..AWVC.

                Return (AWVI)
            }


 16DAA: A4 41 57 56 49                                   // .AWVI

            Method (WOWG, 0, Serialized)
            {

 16DAF: 14 0B 57 4F 57 47 08                             // ..WOWG.

                Return (WGWS)
            }


 16DB6: A4 57 47 57 53                                   // .WGWS

            Method (WIST, 0, Serialized)
            {

 16DBB: 14 47 11 57 49 53 54 08                          // .G.WIST.


 16DC3: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

 16DC9: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                    Switch (ToInteger (VDID))
                    {

 16DD3: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                        Case (0x095A8086)
                        {

 16DE2: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                            Return (One)
                        }

 16DEE: A4 01                                            // ..

                        Case
 16DF0: A1 4D 0D                                         // .M.

 (0x095B8086)
                        {

 16DF3: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                            Return (One)
                        }

 16DFF: A4 01                                            // ..

                        Case
 16E01: A1 4C 0C                                         // .L.

 (0x31658086)
                        {

 16E04: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                            Return (One)
                        }

 16E10: A4 01                                            // ..

                        Case
 16E12: A1 4B 0B                                         // .K.

 (0x31668086)
                        {

 16E15: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                            Return (One)
                        }

 16E21: A4 01                                            // ..

                        Case
 16E23: A1 4A 0A                                         // .J.

 (0x08B18086)
                        {

 16E26: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                            Return (One)
                        }

 16E32: A4 01                                            // ..

                        Case
 16E34: A1 49 09                                         // .I.

 (0x08B28086)
                        {

 16E37: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                            Return (One)
                        }

 16E43: A4 01                                            // ..

                        Case
 16E45: A1 48 08                                         // .H.

 (0x08B38086)
                        {

 16E48: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                            Return (One)
                        }

 16E54: A4 01                                            // ..

                        Case
 16E56: A1 47 07                                         // .G.

 (0x08B48086)
                        {

 16E59: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                            Return (One)
                        }

 16E65: A4 01                                            // ..

                        Case
 16E67: A1 46 06                                         // .F.

 (0x24F38086)
                        {

 16E6A: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                            Return (One)
                        }

 16E76: A4 01                                            // ..

                        Case
 16E78: A1 45 05                                         // .E.

 (0x24F48086)
                        {

 16E7B: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                            Return (One)
                        }

 16E87: A4 01                                            // ..

                        Case
 16E89: A1 44 04                                         // .D.

 (0x24F58086)
                        {

 16E8C: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                            Return (One)
                        }

 16E98: A4 01                                            // ..

                        Case
 16E9A: A1 33                                            // .3

 (0x24F68086)
                        {

 16E9C: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                            Return (One)
                        }

 16EA8: A4 01                                            // ..

                        Case
 16EAA: A1 23                                            // .#

 (0x24FD8086)
                        {

 16EAC: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                            Return (One)
                        }

 16EB8: A4 01                                            // ..

                        Case
 16EBA: A1 13                                            // ..

 (0x24FB8086)
                        {

 16EBC: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                            Return (One)
                        }

 16EC8: A4 01                                            // ..

                        Default
                        {

 16ECA: A1 03                                            // ..

                            Return (Zero)
                        }


 16ECC: A4 00                                            // ..

                    }
                }

 16ECE: A5                                               // .

                Else
                {

 16ECF: A1 03                                            // ..

                    Return (Zero)
                }
            }


 16ED1: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 16ED3: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 16EDB: 08 5F 54 5F 31 00                                // ._T_1.


 16EE1: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

 16EE7: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


 16EEE: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
 16EF7: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
                {

 16EFC: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 16F0C: B6 A2 FE 37                                      // ...7

                    If (LEqual (Arg2, Zero))
                    {

 16F10: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, Zero))
                        {

 16F15: A0 09 93 69 00                                   // ...i.

                            Return (
 16F1A: A4                                               // .

Buffer (One)
                            {
                                 0x03                                           
                            })
                        }

 16F1B: 11 03 01 03                                      // ....

                        Else
                        {

 16F1F: A1 06                                            // ..

                            Return (
 16F21: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }


 16F22: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

 16F26: A0 46 07 93 6A 01                                // .F..j.

                        Switch (ToInteger (DerefOf (
 16F2C: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                        {

 16F33: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                            Case (
 16F3C: A0 07                                            // ..

Zero)
                            {
                            }

 16F3E: 93 5F 54 5F 30 00                                // ._T_0.

                            Case
 16F44: A1 47 05                                         // .G.

 (One)
                            {

 16F47: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                If (CondRefOf (\_SB.SBTN))
                                {

 16F4F: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                    Notify (SBTN, 0x80)
                                }
                            }

 16F5E: 86 53 42 54 4E 0A 80                             // .SBTN..

                            Case
 16F65: A1 36                                            // .6

 (
 16F67: A0 08                                            // ..

0x02)
                            {
                            }

 16F69: 93 5F 54 5F 30 0A 02                             // ._T_0..

                            Case
 16F70: A1 2B                                            // .+

 (
 16F72: A0 08                                            // ..

0x03)
                            {
                            }

 16F74: 93 5F 54 5F 30 0A 03                             // ._T_0..

                            Case
 16F7B: A1 20                                            // . 

 (0x04)
                            {

 16F7D: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                If (CondRefOf (\_SB.SBTN))
                                {

 16F86: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                    Notify (SBTN, 0x02)
                                }
                            }


 16F95: 86 53 42 54 4E 0A 02                             // .SBTN..

                        }
                    }


 16F9C: A5                                               // .

                    Return (Zero)
                }

 16F9D: A4 00                                            // ..

                ElseIf
 16F9F: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 16FA2: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
                {

 16FA7: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 16FB7: FC C2 91 07                                      // ....

                    Switch (ToInteger (Arg2))
                    {

 16FBB: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                        Case (Zero)
                        {

 16FC7: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                            If (LEqual (Arg1, Zero))
                            {

 16FCF: A0 09 93 69 00                                   // ...i.

                                Return (
 16FD4: A4                                               // .

Buffer (One)
                                {
                                     0x07                                           
                                })
                            }

 16FD5: 11 03 01 07                                      // ....

                            Else
                            {

 16FD9: A1 06                                            // ..

                                Return (
 16FDB: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }

 16FDC: 11 03 01 00                                      // ....

                        Case
 16FE0: A1 25                                            // .%

 (One)
                        {

 16FE2: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (WHIT ())
                        }

 16FEA: A4 57 48 49 54                                   // .WHIT

                        Case
 16FEF: A1 16                                            // ..

 (0x02)
                        {

 16FF1: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (SELF ())
                        }

 16FFA: A4 53 45 4C 46                                   // .SELF

                        Default
                        {

 16FFF: A1 06                                            // ..

                            Return (
 17001: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }


 17002: 11 03 01 00                                      // ....

                    }
                }

 17006: A5                                               // .

                Else
                {

 17007: A1 06                                            // ..

                    Return (
 17009: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }


 1700A: 11 03 01 00                                      // ....

            Method (WGST, 0, Serialized)
            {

 1700E: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 17016: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

 1701C: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                    Switch (ToInteger (VDID))
                    {

 17025: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                        Case (0x093C8086)
                        {

 17033: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                            Return (One)
                        }

 1703F: A4 01                                            // ..

                        Case
 17041: A1 13                                            // ..

 (0x097C8086)
                        {

 17043: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                            Return (One)
                        }

 1704F: A4 01                                            // ..

                        Default
                        {

 17051: A1 03                                            // ..

                            Return (Zero)
                        }


 17053: A4 00                                            // ..

                    }
                }

 17055: A5                                               // .

                Else
                {

 17056: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


 17058: A4 00                                            // ..

    Scope (_SB.PCI0.RP02.PXSX)
    {

 1705A: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 1706A: 32 50 58 53 58                                   // 2PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1706F: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 17079: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 17089: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1708E: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 17099: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 170A9: 52 10                                            // R.

        Name (SPLX, 
 170AB: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 170B0: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 170B4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 170C4: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 170C6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 170D6: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 170D8: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 170E8: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 170EA: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 170F7: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 170F9: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 17107: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 17109: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 17117: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 17119: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 17128: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1712A: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 17139: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1713B: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1714A: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1714C: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1715C: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1715E: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1716D: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1716F: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1717E: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 17180: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1718B: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 17190: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1719B: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 171AB: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 171B1: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 171B3: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 171C3: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 171C8: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 171D8: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 171DE: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 171EE: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 171F4: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 17204: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1720D: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 17213: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 17218: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1721F: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 17224: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 17228: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17238: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1723A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1724A: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1724C: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 17256: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 17258: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 17266: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 17268: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 17276: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 17278: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 17284: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 17286: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 17295: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 17297: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 172A6: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 172A8: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 172B3: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 172B8: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 172BD: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 172C1: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 172CC: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 172D7: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 172E4: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 172E6: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 172F4: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 172F6: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 17304: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 17306: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 17315: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 17317: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 17321: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 17326: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1732B: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1732F: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1733F: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1734A: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 17359: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 17366: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 17368: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 17376: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 17378: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 17387: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 17389: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 17398: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1739A: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 173A9: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 173AB: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 173BA: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 173BC: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 173CB: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 173CD: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 173DC: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 173DE: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 173ED: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 173EF: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 173FE: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 17400: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1740F: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 17411: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 17420: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 17422: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 17431: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 17433: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 17443: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 17445: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 17455: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 17457: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 17467: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 17469: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 17474: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 17479: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 17480: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 17485: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1748C: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 17491: 14 47 11 57 49 53 54 08                          // .G.WIST.


 17499: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1749F: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 174A9: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 174B8: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 174C4: A4 01                                            // ..

                    Case
 174C6: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 174C9: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 174D5: A4 01                                            // ..

                    Case
 174D7: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 174DA: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 174E6: A4 01                                            // ..

                    Case
 174E8: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 174EB: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 174F7: A4 01                                            // ..

                    Case
 174F9: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 174FC: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 17508: A4 01                                            // ..

                    Case
 1750A: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1750D: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 17519: A4 01                                            // ..

                    Case
 1751B: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1751E: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1752A: A4 01                                            // ..

                    Case
 1752C: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1752F: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1753B: A4 01                                            // ..

                    Case
 1753D: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 17540: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1754C: A4 01                                            // ..

                    Case
 1754E: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 17551: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1755D: A4 01                                            // ..

                    Case
 1755F: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 17562: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1756E: A4 01                                            // ..

                    Case
 17570: A1 33                                            // .3

 (0x24F68086)
                    {

 17572: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1757E: A4 01                                            // ..

                    Case
 17580: A1 23                                            // .#

 (0x24FD8086)
                    {

 17582: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1758E: A4 01                                            // ..

                    Case
 17590: A1 13                                            // ..

 (0x24FB8086)
                    {

 17592: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1759E: A4 01                                            // ..

                    Default
                    {

 175A0: A1 03                                            // ..

                        Return (Zero)
                    }


 175A2: A4 00                                            // ..

                }
            }

 175A4: A5                                               // .

            Else
            {

 175A5: A1 03                                            // ..

                Return (Zero)
            }
        }


 175A7: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 175A9: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 175B1: 08 5F 54 5F 31 00                                // ._T_1.


 175B7: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 175BD: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 175C4: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 175CD: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 175D2: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 175E2: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 175E6: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 175EB: A0 09 93 69 00                                   // ...i.

                        Return (
 175F0: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 175F1: 11 03 01 03                                      // ....

                    Else
                    {

 175F5: A1 06                                            // ..

                        Return (
 175F7: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 175F8: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 175FC: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 17602: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 17609: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 17612: A0 07                                            // ..

Zero)
                        {
                        }

 17614: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1761A: A1 47 05                                         // .G.

 (One)
                        {

 1761D: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 17625: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 17634: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1763B: A1 36                                            // .6

 (
 1763D: A0 08                                            // ..

0x02)
                        {
                        }

 1763F: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 17646: A1 2B                                            // .+

 (
 17648: A0 08                                            // ..

0x03)
                        {
                        }

 1764A: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 17651: A1 20                                            // . 

 (0x04)
                        {

 17653: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1765C: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1766B: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 17672: A5                                               // .

                Return (Zero)
            }

 17673: A4 00                                            // ..

            ElseIf
 17675: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 17678: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1767D: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1768D: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 17691: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1769D: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 176A5: A0 09 93 69 00                                   // ...i.

                            Return (
 176AA: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 176AB: 11 03 01 07                                      // ....

                        Else
                        {

 176AF: A1 06                                            // ..

                            Return (
 176B1: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 176B2: 11 03 01 00                                      // ....

                    Case
 176B6: A1 25                                            // .%

 (One)
                    {

 176B8: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 176C0: A4 57 48 49 54                                   // .WHIT

                    Case
 176C5: A1 16                                            // ..

 (0x02)
                    {

 176C7: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 176D0: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 176D5: A1 06                                            // ..

                        Return (
 176D7: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 176D8: 11 03 01 00                                      // ....

                }
            }

 176DC: A5                                               // .

            Else
            {

 176DD: A1 06                                            // ..

                Return (
 176DF: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 176E0: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 176E4: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 176EC: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 176F2: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 176FB: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 17709: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 17715: A4 01                                            // ..

                    Case
 17717: A1 13                                            // ..

 (0x097C8086)
                    {

 17719: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 17725: A4 01                                            // ..

                    Default
                    {

 17727: A1 03                                            // ..

                        Return (Zero)
                    }


 17729: A4 00                                            // ..

                }
            }

 1772B: A5                                               // .

            Else
            {

 1772C: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1772E: A4 00                                            // ..

    Scope (_SB.PCI0.RP03.PXSX)
    {

 17730: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 17740: 33 50 58 53 58                                   // 3PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 17745: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1774F: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1775F: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 17764: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1776F: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1777F: 52 10                                            // R.

        Name (SPLX, 
 17781: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 17786: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1778A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1779A: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1779C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 177AC: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 177AE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 177BE: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 177C0: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 177CD: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 177CF: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 177DD: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 177DF: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 177ED: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 177EF: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 177FE: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 17800: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1780F: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 17811: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 17820: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 17822: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 17832: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 17834: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 17843: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 17845: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 17854: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 17856: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 17861: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 17866: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 17871: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 17881: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 17887: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 17889: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 17899: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1789E: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 178AE: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 178B4: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 178C4: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 178CA: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 178DA: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 178E3: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 178E9: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 178EE: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 178F5: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 178FA: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 178FE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1790E: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 17910: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17920: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 17922: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1792C: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1792E: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1793C: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1793E: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1794C: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1794E: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1795A: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1795C: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1796B: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1796D: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1797C: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1797E: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 17989: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1798E: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 17993: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 17997: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 179A2: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 179AD: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 179BA: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 179BC: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 179CA: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 179CC: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 179DA: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 179DC: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 179EB: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 179ED: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 179F7: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 179FC: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 17A01: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 17A05: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 17A15: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 17A20: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 17A2F: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 17A3C: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 17A3E: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 17A4C: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 17A4E: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 17A5D: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 17A5F: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 17A6E: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 17A70: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 17A7F: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 17A81: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 17A90: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 17A92: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 17AA1: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 17AA3: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 17AB2: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 17AB4: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 17AC3: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 17AC5: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 17AD4: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 17AD6: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 17AE5: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 17AE7: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 17AF6: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 17AF8: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 17B07: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 17B09: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 17B19: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 17B1B: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 17B2B: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 17B2D: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 17B3D: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 17B3F: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 17B4A: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 17B4F: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 17B56: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 17B5B: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 17B62: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 17B67: 14 47 11 57 49 53 54 08                          // .G.WIST.


 17B6F: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 17B75: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 17B7F: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 17B8E: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 17B9A: A4 01                                            // ..

                    Case
 17B9C: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 17B9F: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 17BAB: A4 01                                            // ..

                    Case
 17BAD: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 17BB0: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 17BBC: A4 01                                            // ..

                    Case
 17BBE: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 17BC1: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 17BCD: A4 01                                            // ..

                    Case
 17BCF: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 17BD2: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 17BDE: A4 01                                            // ..

                    Case
 17BE0: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 17BE3: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 17BEF: A4 01                                            // ..

                    Case
 17BF1: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 17BF4: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 17C00: A4 01                                            // ..

                    Case
 17C02: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 17C05: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 17C11: A4 01                                            // ..

                    Case
 17C13: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 17C16: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 17C22: A4 01                                            // ..

                    Case
 17C24: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 17C27: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 17C33: A4 01                                            // ..

                    Case
 17C35: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 17C38: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 17C44: A4 01                                            // ..

                    Case
 17C46: A1 33                                            // .3

 (0x24F68086)
                    {

 17C48: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 17C54: A4 01                                            // ..

                    Case
 17C56: A1 23                                            // .#

 (0x24FD8086)
                    {

 17C58: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 17C64: A4 01                                            // ..

                    Case
 17C66: A1 13                                            // ..

 (0x24FB8086)
                    {

 17C68: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 17C74: A4 01                                            // ..

                    Default
                    {

 17C76: A1 03                                            // ..

                        Return (Zero)
                    }


 17C78: A4 00                                            // ..

                }
            }

 17C7A: A5                                               // .

            Else
            {

 17C7B: A1 03                                            // ..

                Return (Zero)
            }
        }


 17C7D: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 17C7F: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 17C87: 08 5F 54 5F 31 00                                // ._T_1.


 17C8D: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 17C93: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 17C9A: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 17CA3: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 17CA8: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 17CB8: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 17CBC: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 17CC1: A0 09 93 69 00                                   // ...i.

                        Return (
 17CC6: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 17CC7: 11 03 01 03                                      // ....

                    Else
                    {

 17CCB: A1 06                                            // ..

                        Return (
 17CCD: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 17CCE: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 17CD2: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 17CD8: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 17CDF: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 17CE8: A0 07                                            // ..

Zero)
                        {
                        }

 17CEA: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 17CF0: A1 47 05                                         // .G.

 (One)
                        {

 17CF3: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 17CFB: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 17D0A: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 17D11: A1 36                                            // .6

 (
 17D13: A0 08                                            // ..

0x02)
                        {
                        }

 17D15: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 17D1C: A1 2B                                            // .+

 (
 17D1E: A0 08                                            // ..

0x03)
                        {
                        }

 17D20: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 17D27: A1 20                                            // . 

 (0x04)
                        {

 17D29: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 17D32: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 17D41: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 17D48: A5                                               // .

                Return (Zero)
            }

 17D49: A4 00                                            // ..

            ElseIf
 17D4B: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 17D4E: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 17D53: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 17D63: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 17D67: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 17D73: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 17D7B: A0 09 93 69 00                                   // ...i.

                            Return (
 17D80: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 17D81: 11 03 01 07                                      // ....

                        Else
                        {

 17D85: A1 06                                            // ..

                            Return (
 17D87: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 17D88: 11 03 01 00                                      // ....

                    Case
 17D8C: A1 25                                            // .%

 (One)
                    {

 17D8E: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 17D96: A4 57 48 49 54                                   // .WHIT

                    Case
 17D9B: A1 16                                            // ..

 (0x02)
                    {

 17D9D: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 17DA6: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 17DAB: A1 06                                            // ..

                        Return (
 17DAD: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 17DAE: 11 03 01 00                                      // ....

                }
            }

 17DB2: A5                                               // .

            Else
            {

 17DB3: A1 06                                            // ..

                Return (
 17DB5: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 17DB6: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 17DBA: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 17DC2: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 17DC8: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 17DD1: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 17DDF: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 17DEB: A4 01                                            // ..

                    Case
 17DED: A1 13                                            // ..

 (0x097C8086)
                    {

 17DEF: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 17DFB: A4 01                                            // ..

                    Default
                    {

 17DFD: A1 03                                            // ..

                        Return (Zero)
                    }


 17DFF: A4 00                                            // ..

                }
            }

 17E01: A5                                               // .

            Else
            {

 17E02: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 17E04: A4 00                                            // ..

    Scope (_SB.PCI0.RP04.PXSX)
    {

 17E06: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 17E16: 34 50 58 53 58                                   // 4PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 17E1B: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 17E25: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 17E35: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 17E3A: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 17E45: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 17E55: 52 10                                            // R.

        Name (SPLX, 
 17E57: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 17E5C: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 17E60: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17E70: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 17E72: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17E82: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 17E84: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17E94: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 17E96: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 17EA3: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 17EA5: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 17EB3: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 17EB5: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 17EC3: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 17EC5: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 17ED4: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 17ED6: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 17EE5: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 17EE7: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 17EF6: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 17EF8: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 17F08: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 17F0A: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 17F19: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 17F1B: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 17F2A: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 17F2C: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 17F37: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 17F3C: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 17F47: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 17F57: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 17F5D: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 17F5F: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 17F6F: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 17F74: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 17F84: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 17F8A: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 17F9A: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 17FA0: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 17FB0: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 17FB9: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 17FBF: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 17FC4: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 17FCB: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 17FD0: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 17FD4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17FE4: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 17FE6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 17FF6: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 17FF8: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 18002: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 18004: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 18012: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 18014: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 18022: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 18024: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 18030: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 18032: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 18041: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 18043: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 18052: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 18054: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1805F: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 18064: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 18069: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1806D: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 18078: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 18083: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 18090: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 18092: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 180A0: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 180A2: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 180B0: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 180B2: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 180C1: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 180C3: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 180CD: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 180D2: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 180D7: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 180DB: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 180EB: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 180F6: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 18105: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 18112: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 18114: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 18122: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 18124: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 18133: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 18135: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 18144: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 18146: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 18155: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 18157: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 18166: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 18168: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 18177: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 18179: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 18188: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1818A: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 18199: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1819B: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 181AA: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 181AC: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 181BB: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 181BD: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 181CC: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 181CE: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 181DD: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 181DF: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 181EF: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 181F1: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 18201: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 18203: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 18213: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 18215: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 18220: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 18225: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1822C: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 18231: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 18238: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1823D: 14 47 11 57 49 53 54 08                          // .G.WIST.


 18245: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1824B: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 18255: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 18264: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 18270: A4 01                                            // ..

                    Case
 18272: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 18275: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 18281: A4 01                                            // ..

                    Case
 18283: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 18286: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 18292: A4 01                                            // ..

                    Case
 18294: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 18297: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 182A3: A4 01                                            // ..

                    Case
 182A5: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 182A8: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 182B4: A4 01                                            // ..

                    Case
 182B6: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 182B9: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 182C5: A4 01                                            // ..

                    Case
 182C7: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 182CA: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 182D6: A4 01                                            // ..

                    Case
 182D8: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 182DB: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 182E7: A4 01                                            // ..

                    Case
 182E9: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 182EC: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 182F8: A4 01                                            // ..

                    Case
 182FA: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 182FD: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 18309: A4 01                                            // ..

                    Case
 1830B: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1830E: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1831A: A4 01                                            // ..

                    Case
 1831C: A1 33                                            // .3

 (0x24F68086)
                    {

 1831E: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1832A: A4 01                                            // ..

                    Case
 1832C: A1 23                                            // .#

 (0x24FD8086)
                    {

 1832E: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1833A: A4 01                                            // ..

                    Case
 1833C: A1 13                                            // ..

 (0x24FB8086)
                    {

 1833E: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1834A: A4 01                                            // ..

                    Default
                    {

 1834C: A1 03                                            // ..

                        Return (Zero)
                    }


 1834E: A4 00                                            // ..

                }
            }

 18350: A5                                               // .

            Else
            {

 18351: A1 03                                            // ..

                Return (Zero)
            }
        }


 18353: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 18355: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1835D: 08 5F 54 5F 31 00                                // ._T_1.


 18363: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 18369: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 18370: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 18379: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1837E: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1838E: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 18392: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 18397: A0 09 93 69 00                                   // ...i.

                        Return (
 1839C: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1839D: 11 03 01 03                                      // ....

                    Else
                    {

 183A1: A1 06                                            // ..

                        Return (
 183A3: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 183A4: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 183A8: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 183AE: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 183B5: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 183BE: A0 07                                            // ..

Zero)
                        {
                        }

 183C0: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 183C6: A1 47 05                                         // .G.

 (One)
                        {

 183C9: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 183D1: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 183E0: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 183E7: A1 36                                            // .6

 (
 183E9: A0 08                                            // ..

0x02)
                        {
                        }

 183EB: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 183F2: A1 2B                                            // .+

 (
 183F4: A0 08                                            // ..

0x03)
                        {
                        }

 183F6: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 183FD: A1 20                                            // . 

 (0x04)
                        {

 183FF: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 18408: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 18417: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1841E: A5                                               // .

                Return (Zero)
            }

 1841F: A4 00                                            // ..

            ElseIf
 18421: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 18424: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 18429: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 18439: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1843D: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 18449: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 18451: A0 09 93 69 00                                   // ...i.

                            Return (
 18456: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 18457: 11 03 01 07                                      // ....

                        Else
                        {

 1845B: A1 06                                            // ..

                            Return (
 1845D: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1845E: 11 03 01 00                                      // ....

                    Case
 18462: A1 25                                            // .%

 (One)
                    {

 18464: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1846C: A4 57 48 49 54                                   // .WHIT

                    Case
 18471: A1 16                                            // ..

 (0x02)
                    {

 18473: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1847C: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 18481: A1 06                                            // ..

                        Return (
 18483: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 18484: 11 03 01 00                                      // ....

                }
            }

 18488: A5                                               // .

            Else
            {

 18489: A1 06                                            // ..

                Return (
 1848B: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1848C: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 18490: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 18498: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1849E: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 184A7: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 184B5: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 184C1: A4 01                                            // ..

                    Case
 184C3: A1 13                                            // ..

 (0x097C8086)
                    {

 184C5: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 184D1: A4 01                                            // ..

                    Default
                    {

 184D3: A1 03                                            // ..

                        Return (Zero)
                    }


 184D5: A4 00                                            // ..

                }
            }

 184D7: A5                                               // .

            Else
            {

 184D8: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 184DA: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP05.PXSX))
    {

 184DC: A0 4E 6E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .Nn[.\/._SB_PCI0
 184EC: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

        Scope (_SB.PCI0.RP05.PXSX)
        {

 184F5: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 18505: 35 50 58 53 58                                   // 5PXSX

            OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1850A: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x2E), 
                SSID,   16
            }


 18514: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 18524: 53 53 49 44 10                                   // SSID.

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 18529: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }


 18534: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 18544: 52 10                                            // R.

            Name (SPLX, 
 18546: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
            {
                Zero, 

 1854B: 12 39 04 00                                      // .9..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 1854F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1855F: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 18561: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18571: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

 18573: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18583: 00 80                                            // ..

            Method (SPLC, 0, Serialized)
            {
                Store (DOM1, 
 18585: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 18592: 88 83                                            // ..

Index (SPLX, One)), Zero))
                Store (LIM1, 
 18594: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 185A2: 88 83                                            // ..

Index (SPLX, One)), One))
                Store (TIM1, 
 185A4: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 185B2: 88 83                                            // ..

Index (SPLX, One)), 0x02))
                Store (DOM2, 
 185B4: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 185C3: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
                Store (LIM2, 
 185C5: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 185D4: 88 83                                            // ..

Index (SPLX, 0x02)), One))
                Store (TIM2, 
 185D6: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 185E5: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
                Store (DOM3, 
 185E7: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 185F7: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
                Store (LIM3, 
 185F9: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 18608: 88 83                                            // ..

Index (SPLX, 0x03)), One))
                Store (TIM3, 
 1860A: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 18619: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1861B: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

                Return (SPLX)
            }


 18626: A4 53 50 4C 58                                   // .SPLX

            PowerResource (WRST, 0x05, 0x0000)
            {

 1862B: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")

 18636: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 18646: 20 5F 53 54 41 00                                //  _STA.

                    Return (One)
                }


 1864C: A4 01                                            // ..

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }


 1864E: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1865E: 20 5F 4F 4E 00                                   //  _ON.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }


 18663: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 18673: 20 5F 4F 46 46 00                                //  _OFF.

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")

 18679: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 18689: 20 5F 52 53 54 00                                //  _RST.

                    If (And (DCAP, 0x10000000))
                    {
                        Store (DCTR, Local0)
                        Or (Local0, 0x8000, Local0)

 1868F: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1869F: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                        Store (Local0, DCTR)
                    }
                }
            }


 186A8: 70 60 44 43 54 52                                // p`DCTR

            Name (_PRR, 
 186AE: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })

 186B3: 12 06 01 57 52 53 54                             // ...WRST

            Name (WANX, 
 186BA: 08 57 41 4E 58                                   // .WANX

Package (0x03)
            {
                Zero, 

 186BF: 12 27 03 00                                      // .'..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 186C3: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 186D3: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

 186D5: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 186E5: 00 80                                            // ..

            Method (WAND, 0, Serialized)
            {
                Store (Zero, 
 186E7: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 186F1: 88 83                                            // ..

Index (WANX, One)), Zero))
                Store (TRD0, 
 186F3: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 18701: 88 83                                            // ..

Index (WANX, One)), One))
                Store (TRL0, 
 18703: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 18711: 88 83                                            // ..

Index (WANX, One)), 0x02))
                Store (One, 
 18713: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1871F: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
                Store (TRD1, 
 18721: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 18730: 88 83                                            // ..

Index (WANX, 0x02)), One))
                Store (TRL1, 
 18732: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 18741: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 18743: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

                Return (WANX)
            }


 1874E: A4 57 41 4E 58                                   // .WANX

            Name (WRDX, 
 18753: 08 57 52 44 58                                   // .WRDX

Package (0x03)
            {
                Zero, 

 18758: 12 19 03 00                                      // ....

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 


 1875C: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })

 18767: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Method (WRDD, 0, Serialized)
            {
                Store (WDM1, 
 18772: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1877F: 88 83                                            // ..

Index (WRDX, One)), Zero))
                Store (CID1, 
 18781: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1878F: 88 83                                            // ..

Index (WRDX, One)), One))
                Store (WDM2, 
 18791: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1879F: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
                Store (CID2, 
 187A1: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 187B0: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 187B2: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

                Return (WRDX)
            }


 187BC: A4 57 52 44 58                                   // .WRDX

            Name (WRDY, 
 187C1: 08 57 52 44 59                                   // .WRDY

Package (0x03)
            {
                Zero, 

 187C6: 12 2D 03 00                                      // .-..

                Package (0x0C)
                {
                    0x07, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }, 


 187CA: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 187DA: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

                Package (0x06)
                {
                    0x10, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }
            })

 187E5: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

            Method (WRDS, 0, Serialized)
            {
                Store (STXE, 
 187F4: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 18801: 88 83                                            // ..

Index (WRDY, One)), One))
                Store (STX0, 
 18803: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 18811: 88 83                                            // ..

Index (WRDY, One)), 0x02))
                Store (STX1, 
 18813: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 18822: 88 83                                            // ..

Index (WRDY, One)), 0x03))
                Store (STX2, 
 18824: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 18833: 88 83                                            // ..

Index (WRDY, One)), 0x04))
                Store (STX3, 
 18835: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 18844: 88 83                                            // ..

Index (WRDY, One)), 0x05))
                Store (STX4, 
 18846: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 18855: 88 83                                            // ..

Index (WRDY, One)), 0x06))
                Store (STX5, 
 18857: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 18866: 88 83                                            // ..

Index (WRDY, One)), 0x07))
                Store (STX6, 
 18868: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 18877: 88 83                                            // ..

Index (WRDY, One)), 0x08))
                Store (STX7, 
 18879: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 18888: 88 83                                            // ..

Index (WRDY, One)), 0x09))
                Store (STX8, 
 1888A: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 18899: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
                Store (STX9, 
 1889B: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 188AA: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
                Store (WRFE, 
 188AC: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 188BB: 88 83                                            // ..

Index (WRDY, 0x02)), One))
                Store (WRC1, 
 188BD: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 188CC: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
                Store (WRC2, 
 188CE: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 188DE: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
                Store (WRC3, 
 188E0: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 188F0: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
                Store (WRC4, 
 188F2: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 18902: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 18904: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

                Return (WRDY)
            }


 1890F: A4 57 52 44 59                                   // .WRDY

            Method (AWVC, 0, Serialized)
            {

 18914: 14 0B 41 57 56 43 08                             // ..AWVC.

                Return (AWVI)
            }


 1891B: A4 41 57 56 49                                   // .AWVI

            Method (WOWG, 0, Serialized)
            {

 18920: 14 0B 57 4F 57 47 08                             // ..WOWG.

                Return (WGWS)
            }


 18927: A4 57 47 57 53                                   // .WGWS

            Method (WIST, 0, Serialized)
            {

 1892C: 14 47 11 57 49 53 54 08                          // .G.WIST.


 18934: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

 1893A: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                    Switch (ToInteger (VDID))
                    {

 18944: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                        Case (0x095A8086)
                        {

 18953: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                            Return (One)
                        }

 1895F: A4 01                                            // ..

                        Case
 18961: A1 4D 0D                                         // .M.

 (0x095B8086)
                        {

 18964: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                            Return (One)
                        }

 18970: A4 01                                            // ..

                        Case
 18972: A1 4C 0C                                         // .L.

 (0x31658086)
                        {

 18975: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                            Return (One)
                        }

 18981: A4 01                                            // ..

                        Case
 18983: A1 4B 0B                                         // .K.

 (0x31668086)
                        {

 18986: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                            Return (One)
                        }

 18992: A4 01                                            // ..

                        Case
 18994: A1 4A 0A                                         // .J.

 (0x08B18086)
                        {

 18997: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                            Return (One)
                        }

 189A3: A4 01                                            // ..

                        Case
 189A5: A1 49 09                                         // .I.

 (0x08B28086)
                        {

 189A8: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                            Return (One)
                        }

 189B4: A4 01                                            // ..

                        Case
 189B6: A1 48 08                                         // .H.

 (0x08B38086)
                        {

 189B9: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                            Return (One)
                        }

 189C5: A4 01                                            // ..

                        Case
 189C7: A1 47 07                                         // .G.

 (0x08B48086)
                        {

 189CA: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                            Return (One)
                        }

 189D6: A4 01                                            // ..

                        Case
 189D8: A1 46 06                                         // .F.

 (0x24F38086)
                        {

 189DB: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                            Return (One)
                        }

 189E7: A4 01                                            // ..

                        Case
 189E9: A1 45 05                                         // .E.

 (0x24F48086)
                        {

 189EC: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                            Return (One)
                        }

 189F8: A4 01                                            // ..

                        Case
 189FA: A1 44 04                                         // .D.

 (0x24F58086)
                        {

 189FD: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                            Return (One)
                        }

 18A09: A4 01                                            // ..

                        Case
 18A0B: A1 33                                            // .3

 (0x24F68086)
                        {

 18A0D: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                            Return (One)
                        }

 18A19: A4 01                                            // ..

                        Case
 18A1B: A1 23                                            // .#

 (0x24FD8086)
                        {

 18A1D: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                            Return (One)
                        }

 18A29: A4 01                                            // ..

                        Case
 18A2B: A1 13                                            // ..

 (0x24FB8086)
                        {

 18A2D: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                            Return (One)
                        }

 18A39: A4 01                                            // ..

                        Default
                        {

 18A3B: A1 03                                            // ..

                            Return (Zero)
                        }


 18A3D: A4 00                                            // ..

                    }
                }

 18A3F: A5                                               // .

                Else
                {

 18A40: A1 03                                            // ..

                    Return (Zero)
                }
            }


 18A42: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 18A44: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 18A4C: 08 5F 54 5F 31 00                                // ._T_1.


 18A52: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

 18A58: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


 18A5F: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
 18A68: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
                {

 18A6D: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 18A7D: B6 A2 FE 37                                      // ...7

                    If (LEqual (Arg2, Zero))
                    {

 18A81: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, Zero))
                        {

 18A86: A0 09 93 69 00                                   // ...i.

                            Return (
 18A8B: A4                                               // .

Buffer (One)
                            {
                                 0x03                                           
                            })
                        }

 18A8C: 11 03 01 03                                      // ....

                        Else
                        {

 18A90: A1 06                                            // ..

                            Return (
 18A92: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }


 18A93: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

 18A97: A0 46 07 93 6A 01                                // .F..j.

                        Switch (ToInteger (DerefOf (
 18A9D: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                        {

 18AA4: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                            Case (
 18AAD: A0 07                                            // ..

Zero)
                            {
                            }

 18AAF: 93 5F 54 5F 30 00                                // ._T_0.

                            Case
 18AB5: A1 47 05                                         // .G.

 (One)
                            {

 18AB8: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                If (CondRefOf (\_SB.SBTN))
                                {

 18AC0: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                    Notify (SBTN, 0x80)
                                }
                            }

 18ACF: 86 53 42 54 4E 0A 80                             // .SBTN..

                            Case
 18AD6: A1 36                                            // .6

 (
 18AD8: A0 08                                            // ..

0x02)
                            {
                            }

 18ADA: 93 5F 54 5F 30 0A 02                             // ._T_0..

                            Case
 18AE1: A1 2B                                            // .+

 (
 18AE3: A0 08                                            // ..

0x03)
                            {
                            }

 18AE5: 93 5F 54 5F 30 0A 03                             // ._T_0..

                            Case
 18AEC: A1 20                                            // . 

 (0x04)
                            {

 18AEE: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                If (CondRefOf (\_SB.SBTN))
                                {

 18AF7: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                    Notify (SBTN, 0x02)
                                }
                            }


 18B06: 86 53 42 54 4E 0A 02                             // .SBTN..

                        }
                    }


 18B0D: A5                                               // .

                    Return (Zero)
                }

 18B0E: A4 00                                            // ..

                ElseIf
 18B10: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 18B13: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
                {

 18B18: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 18B28: FC C2 91 07                                      // ....

                    Switch (ToInteger (Arg2))
                    {

 18B2C: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                        Case (Zero)
                        {

 18B38: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                            If (LEqual (Arg1, Zero))
                            {

 18B40: A0 09 93 69 00                                   // ...i.

                                Return (
 18B45: A4                                               // .

Buffer (One)
                                {
                                     0x07                                           
                                })
                            }

 18B46: 11 03 01 07                                      // ....

                            Else
                            {

 18B4A: A1 06                                            // ..

                                Return (
 18B4C: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }

 18B4D: 11 03 01 00                                      // ....

                        Case
 18B51: A1 25                                            // .%

 (One)
                        {

 18B53: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (WHIT ())
                        }

 18B5B: A4 57 48 49 54                                   // .WHIT

                        Case
 18B60: A1 16                                            // ..

 (0x02)
                        {

 18B62: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (SELF ())
                        }

 18B6B: A4 53 45 4C 46                                   // .SELF

                        Default
                        {

 18B70: A1 06                                            // ..

                            Return (
 18B72: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }


 18B73: 11 03 01 00                                      // ....

                    }
                }

 18B77: A5                                               // .

                Else
                {

 18B78: A1 06                                            // ..

                    Return (
 18B7A: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }


 18B7B: 11 03 01 00                                      // ....

            Method (WGST, 0, Serialized)
            {

 18B7F: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 18B87: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

 18B8D: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                    Switch (ToInteger (VDID))
                    {

 18B96: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                        Case (0x093C8086)
                        {

 18BA4: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                            Return (One)
                        }

 18BB0: A4 01                                            // ..

                        Case
 18BB2: A1 13                                            // ..

 (0x097C8086)
                        {

 18BB4: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                            Return (One)
                        }

 18BC0: A4 01                                            // ..

                        Default
                        {

 18BC2: A1 03                                            // ..

                            Return (Zero)
                        }


 18BC4: A4 00                                            // ..

                    }
                }

 18BC6: A5                                               // .

                Else
                {

 18BC7: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


 18BC9: A4 00                                            // ..

    Scope (_SB.PCI0.RP06.PXSX)
    {

 18BCB: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 18BDB: 36 50 58 53 58                                   // 6PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 18BE0: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 18BEA: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 18BFA: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 18BFF: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 18C0A: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 18C1A: 52 10                                            // R.

        Name (SPLX, 
 18C1C: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 18C21: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 18C25: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18C35: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 18C37: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18C47: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 18C49: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18C59: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 18C5B: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 18C68: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 18C6A: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 18C78: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 18C7A: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 18C88: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 18C8A: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 18C99: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 18C9B: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 18CAA: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 18CAC: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 18CBB: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 18CBD: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 18CCD: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 18CCF: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 18CDE: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 18CE0: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 18CEF: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 18CF1: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 18CFC: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 18D01: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 18D0C: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 18D1C: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 18D22: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 18D24: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 18D34: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 18D39: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 18D49: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 18D4F: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 18D5F: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 18D65: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 18D75: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 18D7E: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 18D84: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 18D89: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 18D90: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 18D95: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 18D99: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18DA9: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 18DAB: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 18DBB: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 18DBD: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 18DC7: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 18DC9: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 18DD7: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 18DD9: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 18DE7: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 18DE9: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 18DF5: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 18DF7: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 18E06: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 18E08: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 18E17: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 18E19: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 18E24: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 18E29: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 18E2E: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 18E32: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 18E3D: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 18E48: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 18E55: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 18E57: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 18E65: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 18E67: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 18E75: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 18E77: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 18E86: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 18E88: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 18E92: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 18E97: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 18E9C: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 18EA0: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 18EB0: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 18EBB: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 18ECA: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 18ED7: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 18ED9: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 18EE7: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 18EE9: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 18EF8: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 18EFA: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 18F09: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 18F0B: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 18F1A: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 18F1C: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 18F2B: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 18F2D: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 18F3C: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 18F3E: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 18F4D: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 18F4F: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 18F5E: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 18F60: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 18F6F: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 18F71: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 18F80: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 18F82: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 18F91: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 18F93: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 18FA2: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 18FA4: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 18FB4: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 18FB6: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 18FC6: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 18FC8: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 18FD8: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 18FDA: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 18FE5: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 18FEA: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 18FF1: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 18FF6: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 18FFD: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 19002: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1900A: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 19010: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1901A: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 19029: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 19035: A4 01                                            // ..

                    Case
 19037: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1903A: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 19046: A4 01                                            // ..

                    Case
 19048: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1904B: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 19057: A4 01                                            // ..

                    Case
 19059: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1905C: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 19068: A4 01                                            // ..

                    Case
 1906A: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1906D: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 19079: A4 01                                            // ..

                    Case
 1907B: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1907E: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1908A: A4 01                                            // ..

                    Case
 1908C: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1908F: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1909B: A4 01                                            // ..

                    Case
 1909D: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 190A0: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 190AC: A4 01                                            // ..

                    Case
 190AE: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 190B1: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 190BD: A4 01                                            // ..

                    Case
 190BF: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 190C2: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 190CE: A4 01                                            // ..

                    Case
 190D0: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 190D3: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 190DF: A4 01                                            // ..

                    Case
 190E1: A1 33                                            // .3

 (0x24F68086)
                    {

 190E3: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 190EF: A4 01                                            // ..

                    Case
 190F1: A1 23                                            // .#

 (0x24FD8086)
                    {

 190F3: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 190FF: A4 01                                            // ..

                    Case
 19101: A1 13                                            // ..

 (0x24FB8086)
                    {

 19103: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1910F: A4 01                                            // ..

                    Default
                    {

 19111: A1 03                                            // ..

                        Return (Zero)
                    }


 19113: A4 00                                            // ..

                }
            }

 19115: A5                                               // .

            Else
            {

 19116: A1 03                                            // ..

                Return (Zero)
            }
        }


 19118: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1911A: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 19122: 08 5F 54 5F 31 00                                // ._T_1.


 19128: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1912E: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 19135: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1913E: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 19143: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 19153: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 19157: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1915C: A0 09 93 69 00                                   // ...i.

                        Return (
 19161: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 19162: 11 03 01 03                                      // ....

                    Else
                    {

 19166: A1 06                                            // ..

                        Return (
 19168: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 19169: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1916D: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 19173: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1917A: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 19183: A0 07                                            // ..

Zero)
                        {
                        }

 19185: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1918B: A1 47 05                                         // .G.

 (One)
                        {

 1918E: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 19196: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 191A5: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 191AC: A1 36                                            // .6

 (
 191AE: A0 08                                            // ..

0x02)
                        {
                        }

 191B0: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 191B7: A1 2B                                            // .+

 (
 191B9: A0 08                                            // ..

0x03)
                        {
                        }

 191BB: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 191C2: A1 20                                            // . 

 (0x04)
                        {

 191C4: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 191CD: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 191DC: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 191E3: A5                                               // .

                Return (Zero)
            }

 191E4: A4 00                                            // ..

            ElseIf
 191E6: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 191E9: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 191EE: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 191FE: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 19202: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1920E: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 19216: A0 09 93 69 00                                   // ...i.

                            Return (
 1921B: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1921C: 11 03 01 07                                      // ....

                        Else
                        {

 19220: A1 06                                            // ..

                            Return (
 19222: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 19223: 11 03 01 00                                      // ....

                    Case
 19227: A1 25                                            // .%

 (One)
                    {

 19229: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 19231: A4 57 48 49 54                                   // .WHIT

                    Case
 19236: A1 16                                            // ..

 (0x02)
                    {

 19238: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 19241: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 19246: A1 06                                            // ..

                        Return (
 19248: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 19249: 11 03 01 00                                      // ....

                }
            }

 1924D: A5                                               // .

            Else
            {

 1924E: A1 06                                            // ..

                Return (
 19250: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 19251: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 19255: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1925D: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 19263: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1926C: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1927A: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 19286: A4 01                                            // ..

                    Case
 19288: A1 13                                            // ..

 (0x097C8086)
                    {

 1928A: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 19296: A4 01                                            // ..

                    Default
                    {

 19298: A1 03                                            // ..

                        Return (Zero)
                    }


 1929A: A4 00                                            // ..

                }
            }

 1929C: A5                                               // .

            Else
            {

 1929D: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1929F: A4 00                                            // ..

    Scope (_SB.PCI0.RP07.PXSX)
    {

 192A1: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 192B1: 37 50 58 53 58                                   // 7PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 192B6: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 192C0: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 192D0: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 192D5: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 192E0: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 192F0: 52 10                                            // R.

        Name (SPLX, 
 192F2: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 192F7: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 192FB: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1930B: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1930D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1931D: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1931F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1932F: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 19331: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1933E: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 19340: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1934E: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 19350: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1935E: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 19360: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1936F: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 19371: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 19380: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 19382: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 19391: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 19393: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 193A3: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 193A5: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 193B4: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 193B6: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 193C5: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 193C7: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 193D2: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 193D7: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 193E2: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 193F2: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 193F8: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 193FA: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1940A: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1940F: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1941F: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 19425: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 19435: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1943B: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1944B: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 19454: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1945A: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1945F: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 19466: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1946B: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1946F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1947F: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 19481: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 19491: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 19493: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1949D: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1949F: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 194AD: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 194AF: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 194BD: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 194BF: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 194CB: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 194CD: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 194DC: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 194DE: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 194ED: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 194EF: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 194FA: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 194FF: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 19504: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 19508: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 19513: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1951E: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1952B: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1952D: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1953B: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1953D: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1954B: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1954D: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1955C: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1955E: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 19568: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1956D: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 19572: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 19576: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 19586: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 19591: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 195A0: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 195AD: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 195AF: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 195BD: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 195BF: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 195CE: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 195D0: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 195DF: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 195E1: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 195F0: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 195F2: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 19601: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 19603: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 19612: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 19614: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 19623: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 19625: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 19634: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 19636: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 19645: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 19647: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 19656: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 19658: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 19667: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 19669: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 19678: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1967A: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1968A: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1968C: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1969C: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1969E: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 196AE: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 196B0: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 196BB: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 196C0: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 196C7: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 196CC: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 196D3: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 196D8: 14 47 11 57 49 53 54 08                          // .G.WIST.


 196E0: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 196E6: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 196F0: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 196FF: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1970B: A4 01                                            // ..

                    Case
 1970D: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 19710: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1971C: A4 01                                            // ..

                    Case
 1971E: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 19721: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1972D: A4 01                                            // ..

                    Case
 1972F: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 19732: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1973E: A4 01                                            // ..

                    Case
 19740: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 19743: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1974F: A4 01                                            // ..

                    Case
 19751: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 19754: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 19760: A4 01                                            // ..

                    Case
 19762: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 19765: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 19771: A4 01                                            // ..

                    Case
 19773: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 19776: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 19782: A4 01                                            // ..

                    Case
 19784: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 19787: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 19793: A4 01                                            // ..

                    Case
 19795: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 19798: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 197A4: A4 01                                            // ..

                    Case
 197A6: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 197A9: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 197B5: A4 01                                            // ..

                    Case
 197B7: A1 33                                            // .3

 (0x24F68086)
                    {

 197B9: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 197C5: A4 01                                            // ..

                    Case
 197C7: A1 23                                            // .#

 (0x24FD8086)
                    {

 197C9: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 197D5: A4 01                                            // ..

                    Case
 197D7: A1 13                                            // ..

 (0x24FB8086)
                    {

 197D9: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 197E5: A4 01                                            // ..

                    Default
                    {

 197E7: A1 03                                            // ..

                        Return (Zero)
                    }


 197E9: A4 00                                            // ..

                }
            }

 197EB: A5                                               // .

            Else
            {

 197EC: A1 03                                            // ..

                Return (Zero)
            }
        }


 197EE: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 197F0: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 197F8: 08 5F 54 5F 31 00                                // ._T_1.


 197FE: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 19804: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1980B: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 19814: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 19819: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 19829: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1982D: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 19832: A0 09 93 69 00                                   // ...i.

                        Return (
 19837: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 19838: 11 03 01 03                                      // ....

                    Else
                    {

 1983C: A1 06                                            // ..

                        Return (
 1983E: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1983F: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 19843: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 19849: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 19850: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 19859: A0 07                                            // ..

Zero)
                        {
                        }

 1985B: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 19861: A1 47 05                                         // .G.

 (One)
                        {

 19864: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1986C: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1987B: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 19882: A1 36                                            // .6

 (
 19884: A0 08                                            // ..

0x02)
                        {
                        }

 19886: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1988D: A1 2B                                            // .+

 (
 1988F: A0 08                                            // ..

0x03)
                        {
                        }

 19891: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 19898: A1 20                                            // . 

 (0x04)
                        {

 1989A: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 198A3: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 198B2: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 198B9: A5                                               // .

                Return (Zero)
            }

 198BA: A4 00                                            // ..

            ElseIf
 198BC: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 198BF: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 198C4: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 198D4: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 198D8: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 198E4: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 198EC: A0 09 93 69 00                                   // ...i.

                            Return (
 198F1: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 198F2: 11 03 01 07                                      // ....

                        Else
                        {

 198F6: A1 06                                            // ..

                            Return (
 198F8: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 198F9: 11 03 01 00                                      // ....

                    Case
 198FD: A1 25                                            // .%

 (One)
                    {

 198FF: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 19907: A4 57 48 49 54                                   // .WHIT

                    Case
 1990C: A1 16                                            // ..

 (0x02)
                    {

 1990E: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 19917: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1991C: A1 06                                            // ..

                        Return (
 1991E: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1991F: 11 03 01 00                                      // ....

                }
            }

 19923: A5                                               // .

            Else
            {

 19924: A1 06                                            // ..

                Return (
 19926: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 19927: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1992B: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 19933: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 19939: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 19942: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 19950: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1995C: A4 01                                            // ..

                    Case
 1995E: A1 13                                            // ..

 (0x097C8086)
                    {

 19960: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1996C: A4 01                                            // ..

                    Default
                    {

 1996E: A1 03                                            // ..

                        Return (Zero)
                    }


 19970: A4 00                                            // ..

                }
            }

 19972: A5                                               // .

            Else
            {

 19973: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 19975: A4 00                                            // ..

    Scope (_SB.PCI0.RP08.PXSX)
    {

 19977: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 19987: 38 50 58 53 58                                   // 8PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1998C: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 19996: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 199A6: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 199AB: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 199B6: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 199C6: 52 10                                            // R.

        Name (SPLX, 
 199C8: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 199CD: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 199D1: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 199E1: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 199E3: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 199F3: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 199F5: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 19A05: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 19A07: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 19A14: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 19A16: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 19A24: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 19A26: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 19A34: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 19A36: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 19A45: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 19A47: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 19A56: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 19A58: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 19A67: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 19A69: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 19A79: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 19A7B: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 19A8A: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 19A8C: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 19A9B: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 19A9D: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 19AA8: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 19AAD: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 19AB8: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 19AC8: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 19ACE: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 19AD0: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 19AE0: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 19AE5: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 19AF5: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 19AFB: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 19B0B: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 19B11: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 19B21: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 19B2A: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 19B30: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 19B35: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 19B3C: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 19B41: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 19B45: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 19B55: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 19B57: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 19B67: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 19B69: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 19B73: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 19B75: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 19B83: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 19B85: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 19B93: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 19B95: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 19BA1: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 19BA3: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 19BB2: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 19BB4: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 19BC3: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 19BC5: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 19BD0: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 19BD5: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 19BDA: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 19BDE: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 19BE9: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 19BF4: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 19C01: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 19C03: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 19C11: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 19C13: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 19C21: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 19C23: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 19C32: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 19C34: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 19C3E: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 19C43: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 19C48: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 19C4C: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 19C5C: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 19C67: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 19C76: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 19C83: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 19C85: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 19C93: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 19C95: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 19CA4: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 19CA6: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 19CB5: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 19CB7: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 19CC6: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 19CC8: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 19CD7: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 19CD9: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 19CE8: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 19CEA: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 19CF9: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 19CFB: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 19D0A: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 19D0C: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 19D1B: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 19D1D: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 19D2C: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 19D2E: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 19D3D: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 19D3F: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 19D4E: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 19D50: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 19D60: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 19D62: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 19D72: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 19D74: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 19D84: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 19D86: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 19D91: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 19D96: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 19D9D: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 19DA2: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 19DA9: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 19DAE: 14 47 11 57 49 53 54 08                          // .G.WIST.


 19DB6: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 19DBC: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 19DC6: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 19DD5: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 19DE1: A4 01                                            // ..

                    Case
 19DE3: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 19DE6: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 19DF2: A4 01                                            // ..

                    Case
 19DF4: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 19DF7: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 19E03: A4 01                                            // ..

                    Case
 19E05: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 19E08: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 19E14: A4 01                                            // ..

                    Case
 19E16: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 19E19: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 19E25: A4 01                                            // ..

                    Case
 19E27: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 19E2A: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 19E36: A4 01                                            // ..

                    Case
 19E38: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 19E3B: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 19E47: A4 01                                            // ..

                    Case
 19E49: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 19E4C: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 19E58: A4 01                                            // ..

                    Case
 19E5A: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 19E5D: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 19E69: A4 01                                            // ..

                    Case
 19E6B: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 19E6E: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 19E7A: A4 01                                            // ..

                    Case
 19E7C: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 19E7F: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 19E8B: A4 01                                            // ..

                    Case
 19E8D: A1 33                                            // .3

 (0x24F68086)
                    {

 19E8F: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 19E9B: A4 01                                            // ..

                    Case
 19E9D: A1 23                                            // .#

 (0x24FD8086)
                    {

 19E9F: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 19EAB: A4 01                                            // ..

                    Case
 19EAD: A1 13                                            // ..

 (0x24FB8086)
                    {

 19EAF: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 19EBB: A4 01                                            // ..

                    Default
                    {

 19EBD: A1 03                                            // ..

                        Return (Zero)
                    }


 19EBF: A4 00                                            // ..

                }
            }

 19EC1: A5                                               // .

            Else
            {

 19EC2: A1 03                                            // ..

                Return (Zero)
            }
        }


 19EC4: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 19EC6: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 19ECE: 08 5F 54 5F 31 00                                // ._T_1.


 19ED4: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 19EDA: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 19EE1: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 19EEA: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 19EEF: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 19EFF: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 19F03: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 19F08: A0 09 93 69 00                                   // ...i.

                        Return (
 19F0D: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 19F0E: 11 03 01 03                                      // ....

                    Else
                    {

 19F12: A1 06                                            // ..

                        Return (
 19F14: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 19F15: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 19F19: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 19F1F: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 19F26: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 19F2F: A0 07                                            // ..

Zero)
                        {
                        }

 19F31: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 19F37: A1 47 05                                         // .G.

 (One)
                        {

 19F3A: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 19F42: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 19F51: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 19F58: A1 36                                            // .6

 (
 19F5A: A0 08                                            // ..

0x02)
                        {
                        }

 19F5C: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 19F63: A1 2B                                            // .+

 (
 19F65: A0 08                                            // ..

0x03)
                        {
                        }

 19F67: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 19F6E: A1 20                                            // . 

 (0x04)
                        {

 19F70: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 19F79: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 19F88: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 19F8F: A5                                               // .

                Return (Zero)
            }

 19F90: A4 00                                            // ..

            ElseIf
 19F92: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 19F95: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 19F9A: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 19FAA: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 19FAE: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 19FBA: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 19FC2: A0 09 93 69 00                                   // ...i.

                            Return (
 19FC7: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 19FC8: 11 03 01 07                                      // ....

                        Else
                        {

 19FCC: A1 06                                            // ..

                            Return (
 19FCE: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 19FCF: 11 03 01 00                                      // ....

                    Case
 19FD3: A1 25                                            // .%

 (One)
                    {

 19FD5: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 19FDD: A4 57 48 49 54                                   // .WHIT

                    Case
 19FE2: A1 16                                            // ..

 (0x02)
                    {

 19FE4: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 19FED: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 19FF2: A1 06                                            // ..

                        Return (
 19FF4: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 19FF5: 11 03 01 00                                      // ....

                }
            }

 19FF9: A5                                               // .

            Else
            {

 19FFA: A1 06                                            // ..

                Return (
 19FFC: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 19FFD: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1A001: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1A009: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1A00F: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1A018: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1A026: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1A032: A4 01                                            // ..

                    Case
 1A034: A1 13                                            // ..

 (0x097C8086)
                    {

 1A036: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1A042: A4 01                                            // ..

                    Default
                    {

 1A044: A1 03                                            // ..

                        Return (Zero)
                    }


 1A046: A4 00                                            // ..

                }
            }

 1A048: A5                                               // .

            Else
            {

 1A049: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1A04B: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP09.PXSX))
    {

 1A04D: A0 4E 6E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .Nn[.\/._SB_PCI0
 1A05D: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

        Scope (_SB.PCI0.RP09.PXSX)
        {

 1A066: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .Em/._SB_PCI0RP0
 1A076: 39 50 58 53 58                                   // 9PXSX

            OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1A07B: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

            Field (RPXX, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x2E), 
                SSID,   16
            }


 1A085: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1A095: 53 53 49 44 10                                   // SSID.

            OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1A09A: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

            Field (FLDR, ByteAcc, NoLock, Preserve)
            {
                DCAP,   32, 
                DCTR,   16
            }


 1A0A5: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1A0B5: 52 10                                            // R.

            Name (SPLX, 
 1A0B7: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
            {
                Zero, 

 1A0BC: 12 39 04 00                                      // .9..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 1A0C0: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A0D0: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 1A0D2: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A0E2: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

 1A0E4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A0F4: 00 80                                            // ..

            Method (SPLC, 0, Serialized)
            {
                Store (DOM1, 
 1A0F6: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1A103: 88 83                                            // ..

Index (SPLX, One)), Zero))
                Store (LIM1, 
 1A105: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1A113: 88 83                                            // ..

Index (SPLX, One)), One))
                Store (TIM1, 
 1A115: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1A123: 88 83                                            // ..

Index (SPLX, One)), 0x02))
                Store (DOM2, 
 1A125: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1A134: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
                Store (LIM2, 
 1A136: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1A145: 88 83                                            // ..

Index (SPLX, 0x02)), One))
                Store (TIM2, 
 1A147: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1A156: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
                Store (DOM3, 
 1A158: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1A168: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
                Store (LIM3, 
 1A16A: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1A179: 88 83                                            // ..

Index (SPLX, 0x03)), One))
                Store (TIM3, 
 1A17B: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1A18A: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1A18C: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

                Return (SPLX)
            }


 1A197: A4 53 50 4C 58                                   // .SPLX

            PowerResource (WRST, 0x05, 0x0000)
            {

 1A19C: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    ADBG ("PXSX _STA")

 1A1A7: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1A1B7: 20 5F 53 54 41 00                                //  _STA.

                    Return (One)
                }


 1A1BD: A4 01                                            // ..

                Method (_ON, 0, NotSerialized)  // _ON_: Power On
                {
                    ADBG ("PXSX _ON")
                }


 1A1BF: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1A1CF: 20 5F 4F 4E 00                                   //  _ON.

                Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
                {
                    ADBG ("PXSX _OFF")
                }


 1A1D4: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1A1E4: 20 5F 4F 46 46 00                                //  _OFF.

                Method (_RST, 0, NotSerialized)  // _RST: Device Reset
                {
                    ADBG ("PXSX _RST")

 1A1EA: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1A1FA: 20 5F 52 53 54 00                                //  _RST.

                    If (And (DCAP, 0x10000000))
                    {
                        Store (DCTR, Local0)
                        Or (Local0, 0x8000, Local0)

 1A200: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1A210: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                        Store (Local0, DCTR)
                    }
                }
            }


 1A219: 70 60 44 43 54 52                                // p`DCTR

            Name (_PRR, 
 1A21F: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
            {
                WRST
            })

 1A224: 12 06 01 57 52 53 54                             // ...WRST

            Name (WANX, 
 1A22B: 08 57 41 4E 58                                   // .WANX

Package (0x03)
            {
                Zero, 

 1A230: 12 27 03 00                                      // .'..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }, 


 1A234: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A244: 00 80                                            // ..

                Package (0x03)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            })

 1A246: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A256: 00 80                                            // ..

            Method (WAND, 0, Serialized)
            {
                Store (Zero, 
 1A258: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1A262: 88 83                                            // ..

Index (WANX, One)), Zero))
                Store (TRD0, 
 1A264: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1A272: 88 83                                            // ..

Index (WANX, One)), One))
                Store (TRL0, 
 1A274: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1A282: 88 83                                            // ..

Index (WANX, One)), 0x02))
                Store (One, 
 1A284: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1A290: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
                Store (TRD1, 
 1A292: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1A2A1: 88 83                                            // ..

Index (WANX, 0x02)), One))
                Store (TRL1, 
 1A2A3: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1A2B2: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1A2B4: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

                Return (WANX)
            }


 1A2BF: A4 57 41 4E 58                                   // .WANX

            Name (WRDX, 
 1A2C4: 08 57 52 44 58                                   // .WRDX

Package (0x03)
            {
                Zero, 

 1A2C9: 12 19 03 00                                      // ....

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }, 


 1A2CD: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

                Package (0x02)
                {
                    0x80000000, 
                    0x8000
                }
            })

 1A2D8: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Method (WRDD, 0, Serialized)
            {
                Store (WDM1, 
 1A2E3: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1A2F0: 88 83                                            // ..

Index (WRDX, One)), Zero))
                Store (CID1, 
 1A2F2: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1A300: 88 83                                            // ..

Index (WRDX, One)), One))
                Store (WDM2, 
 1A302: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1A310: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
                Store (CID2, 
 1A312: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1A321: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1A323: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

                Return (WRDX)
            }


 1A32D: A4 57 52 44 58                                   // .WRDX

            Name (WRDY, 
 1A332: 08 57 52 44 59                                   // .WRDY

Package (0x03)
            {
                Zero, 

 1A337: 12 2D 03 00                                      // .-..

                Package (0x0C)
                {
                    0x07, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }, 


 1A33B: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1A34B: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

                Package (0x06)
                {
                    0x10, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80, 
                    0x80
                }
            })

 1A356: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

            Method (WRDS, 0, Serialized)
            {
                Store (STXE, 
 1A365: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1A372: 88 83                                            // ..

Index (WRDY, One)), One))
                Store (STX0, 
 1A374: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1A382: 88 83                                            // ..

Index (WRDY, One)), 0x02))
                Store (STX1, 
 1A384: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1A393: 88 83                                            // ..

Index (WRDY, One)), 0x03))
                Store (STX2, 
 1A395: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1A3A4: 88 83                                            // ..

Index (WRDY, One)), 0x04))
                Store (STX3, 
 1A3A6: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1A3B5: 88 83                                            // ..

Index (WRDY, One)), 0x05))
                Store (STX4, 
 1A3B7: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1A3C6: 88 83                                            // ..

Index (WRDY, One)), 0x06))
                Store (STX5, 
 1A3C8: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1A3D7: 88 83                                            // ..

Index (WRDY, One)), 0x07))
                Store (STX6, 
 1A3D9: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1A3E8: 88 83                                            // ..

Index (WRDY, One)), 0x08))
                Store (STX7, 
 1A3EA: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1A3F9: 88 83                                            // ..

Index (WRDY, One)), 0x09))
                Store (STX8, 
 1A3FB: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1A40A: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
                Store (STX9, 
 1A40C: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1A41B: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
                Store (WRFE, 
 1A41D: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1A42C: 88 83                                            // ..

Index (WRDY, 0x02)), One))
                Store (WRC1, 
 1A42E: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1A43D: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
                Store (WRC2, 
 1A43F: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1A44F: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
                Store (WRC3, 
 1A451: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1A461: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
                Store (WRC4, 
 1A463: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1A473: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1A475: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

                Return (WRDY)
            }


 1A480: A4 57 52 44 59                                   // .WRDY

            Method (AWVC, 0, Serialized)
            {

 1A485: 14 0B 41 57 56 43 08                             // ..AWVC.

                Return (AWVI)
            }


 1A48C: A4 41 57 56 49                                   // .AWVI

            Method (WOWG, 0, Serialized)
            {

 1A491: 14 0B 57 4F 57 47 08                             // ..WOWG.

                Return (WGWS)
            }


 1A498: A4 57 47 57 53                                   // .WGWS

            Method (WIST, 0, Serialized)
            {

 1A49D: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1A4A5: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

 1A4AB: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                    Switch (ToInteger (VDID))
                    {

 1A4B5: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                        Case (0x095A8086)
                        {

 1A4C4: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                            Return (One)
                        }

 1A4D0: A4 01                                            // ..

                        Case
 1A4D2: A1 4D 0D                                         // .M.

 (0x095B8086)
                        {

 1A4D5: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                            Return (One)
                        }

 1A4E1: A4 01                                            // ..

                        Case
 1A4E3: A1 4C 0C                                         // .L.

 (0x31658086)
                        {

 1A4E6: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                            Return (One)
                        }

 1A4F2: A4 01                                            // ..

                        Case
 1A4F4: A1 4B 0B                                         // .K.

 (0x31668086)
                        {

 1A4F7: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                            Return (One)
                        }

 1A503: A4 01                                            // ..

                        Case
 1A505: A1 4A 0A                                         // .J.

 (0x08B18086)
                        {

 1A508: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                            Return (One)
                        }

 1A514: A4 01                                            // ..

                        Case
 1A516: A1 49 09                                         // .I.

 (0x08B28086)
                        {

 1A519: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                            Return (One)
                        }

 1A525: A4 01                                            // ..

                        Case
 1A527: A1 48 08                                         // .H.

 (0x08B38086)
                        {

 1A52A: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                            Return (One)
                        }

 1A536: A4 01                                            // ..

                        Case
 1A538: A1 47 07                                         // .G.

 (0x08B48086)
                        {

 1A53B: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                            Return (One)
                        }

 1A547: A4 01                                            // ..

                        Case
 1A549: A1 46 06                                         // .F.

 (0x24F38086)
                        {

 1A54C: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                            Return (One)
                        }

 1A558: A4 01                                            // ..

                        Case
 1A55A: A1 45 05                                         // .E.

 (0x24F48086)
                        {

 1A55D: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                            Return (One)
                        }

 1A569: A4 01                                            // ..

                        Case
 1A56B: A1 44 04                                         // .D.

 (0x24F58086)
                        {

 1A56E: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                            Return (One)
                        }

 1A57A: A4 01                                            // ..

                        Case
 1A57C: A1 33                                            // .3

 (0x24F68086)
                        {

 1A57E: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                            Return (One)
                        }

 1A58A: A4 01                                            // ..

                        Case
 1A58C: A1 23                                            // .#

 (0x24FD8086)
                        {

 1A58E: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                            Return (One)
                        }

 1A59A: A4 01                                            // ..

                        Case
 1A59C: A1 13                                            // ..

 (0x24FB8086)
                        {

 1A59E: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                            Return (One)
                        }

 1A5AA: A4 01                                            // ..

                        Default
                        {

 1A5AC: A1 03                                            // ..

                            Return (Zero)
                        }


 1A5AE: A4 00                                            // ..

                    }
                }

 1A5B0: A5                                               // .

                Else
                {

 1A5B1: A1 03                                            // ..

                    Return (Zero)
                }
            }


 1A5B3: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 1A5B5: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1A5BD: 08 5F 54 5F 31 00                                // ._T_1.


 1A5C3: 08 5F 54 5F 30 00                                // ._T_0.

                If (PCIC (Arg0))
                {

 1A5C9: A0 0F 50 43 49 43 68                             // ..PCICh

                    Return (PCID (Arg0, Arg1, Arg2, Arg3))
                }


 1A5D0: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

                If (LEqual (Arg0, 
 1A5D9: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
                {

 1A5DE: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1A5EE: B6 A2 FE 37                                      // ...7

                    If (LEqual (Arg2, Zero))
                    {

 1A5F2: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, Zero))
                        {

 1A5F7: A0 09 93 69 00                                   // ...i.

                            Return (
 1A5FC: A4                                               // .

Buffer (One)
                            {
                                 0x03                                           
                            })
                        }

 1A5FD: 11 03 01 03                                      // ....

                        Else
                        {

 1A601: A1 06                                            // ..

                            Return (
 1A603: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }


 1A604: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

 1A608: A0 46 07 93 6A 01                                // .F..j.

                        Switch (ToInteger (DerefOf (
 1A60E: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                        {

 1A615: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                            Case (
 1A61E: A0 07                                            // ..

Zero)
                            {
                            }

 1A620: 93 5F 54 5F 30 00                                // ._T_0.

                            Case
 1A626: A1 47 05                                         // .G.

 (One)
                            {

 1A629: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                                If (CondRefOf (\_SB.SBTN))
                                {

 1A631: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                    Notify (SBTN, 0x80)
                                }
                            }

 1A640: 86 53 42 54 4E 0A 80                             // .SBTN..

                            Case
 1A647: A1 36                                            // .6

 (
 1A649: A0 08                                            // ..

0x02)
                            {
                            }

 1A64B: 93 5F 54 5F 30 0A 02                             // ._T_0..

                            Case
 1A652: A1 2B                                            // .+

 (
 1A654: A0 08                                            // ..

0x03)
                            {
                            }

 1A656: 93 5F 54 5F 30 0A 03                             // ._T_0..

                            Case
 1A65D: A1 20                                            // . 

 (0x04)
                            {

 1A65F: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                If (CondRefOf (\_SB.SBTN))
                                {

 1A668: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                    Notify (SBTN, 0x02)
                                }
                            }


 1A677: 86 53 42 54 4E 0A 02                             // .SBTN..

                        }
                    }


 1A67E: A5                                               // .

                    Return (Zero)
                }

 1A67F: A4 00                                            // ..

                ElseIf
 1A681: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1A684: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
                {

 1A689: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1A699: FC C2 91 07                                      // ....

                    Switch (ToInteger (Arg2))
                    {

 1A69D: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                        Case (Zero)
                        {

 1A6A9: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                            If (LEqual (Arg1, Zero))
                            {

 1A6B1: A0 09 93 69 00                                   // ...i.

                                Return (
 1A6B6: A4                                               // .

Buffer (One)
                                {
                                     0x07                                           
                                })
                            }

 1A6B7: 11 03 01 07                                      // ....

                            Else
                            {

 1A6BB: A1 06                                            // ..

                                Return (
 1A6BD: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }

 1A6BE: 11 03 01 00                                      // ....

                        Case
 1A6C2: A1 25                                            // .%

 (One)
                        {

 1A6C4: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (WHIT ())
                        }

 1A6CC: A4 57 48 49 54                                   // .WHIT

                        Case
 1A6D1: A1 16                                            // ..

 (0x02)
                        {

 1A6D3: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (SELF ())
                        }

 1A6DC: A4 53 45 4C 46                                   // .SELF

                        Default
                        {

 1A6E1: A1 06                                            // ..

                            Return (
 1A6E3: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }


 1A6E4: 11 03 01 00                                      // ....

                    }
                }

 1A6E8: A5                                               // .

                Else
                {

 1A6E9: A1 06                                            // ..

                    Return (
 1A6EB: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }
            }


 1A6EC: 11 03 01 00                                      // ....

            Method (WGST, 0, Serialized)
            {

 1A6F0: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1A6F8: 08 5F 54 5F 30 00                                // ._T_0.

                If (CondRefOf (VDID))
                {

 1A6FE: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                    Switch (ToInteger (VDID))
                    {

 1A707: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                        Case (0x093C8086)
                        {

 1A715: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                            Return (One)
                        }

 1A721: A4 01                                            // ..

                        Case
 1A723: A1 13                                            // ..

 (0x097C8086)
                        {

 1A725: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                            Return (One)
                        }

 1A731: A4 01                                            // ..

                        Default
                        {

 1A733: A1 03                                            // ..

                            Return (Zero)
                        }


 1A735: A4 00                                            // ..

                    }
                }

 1A737: A5                                               // .

                Else
                {

 1A738: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


 1A73A: A4 00                                            // ..

    Scope (_SB.PCI0.RP10.PXSX)
    {

 1A73C: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1A74C: 30 50 58 53 58                                   // 0PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1A751: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1A75B: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1A76B: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1A770: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1A77B: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1A78B: 52 10                                            // R.

        Name (SPLX, 
 1A78D: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1A792: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1A796: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A7A6: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1A7A8: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A7B8: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1A7BA: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A7CA: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1A7CC: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1A7D9: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1A7DB: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1A7E9: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1A7EB: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1A7F9: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1A7FB: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1A80A: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1A80C: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1A81B: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1A81D: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1A82C: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1A82E: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1A83E: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1A840: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1A84F: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1A851: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1A860: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1A862: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1A86D: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1A872: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1A87D: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1A88D: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1A893: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1A895: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1A8A5: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1A8AA: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1A8BA: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1A8C0: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1A8D0: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1A8D6: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1A8E6: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1A8EF: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1A8F5: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1A8FA: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1A901: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1A906: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1A90A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A91A: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1A91C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1A92C: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1A92E: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1A938: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1A93A: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1A948: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1A94A: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1A958: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1A95A: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1A966: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1A968: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1A977: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1A979: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1A988: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1A98A: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1A995: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1A99A: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1A99F: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1A9A3: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1A9AE: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1A9B9: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1A9C6: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1A9C8: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1A9D6: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1A9D8: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1A9E6: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1A9E8: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1A9F7: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1A9F9: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1AA03: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1AA08: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1AA0D: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1AA11: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1AA21: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1AA2C: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1AA3B: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1AA48: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1AA4A: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1AA58: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1AA5A: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1AA69: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1AA6B: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1AA7A: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1AA7C: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1AA8B: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1AA8D: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1AA9C: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1AA9E: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1AAAD: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1AAAF: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1AABE: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1AAC0: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1AACF: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1AAD1: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1AAE0: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1AAE2: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1AAF1: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1AAF3: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1AB02: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1AB04: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1AB13: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1AB15: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1AB25: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1AB27: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1AB37: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1AB39: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1AB49: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1AB4B: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1AB56: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1AB5B: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1AB62: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1AB67: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1AB6E: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1AB73: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1AB7B: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1AB81: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1AB8B: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1AB9A: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1ABA6: A4 01                                            // ..

                    Case
 1ABA8: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1ABAB: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1ABB7: A4 01                                            // ..

                    Case
 1ABB9: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1ABBC: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1ABC8: A4 01                                            // ..

                    Case
 1ABCA: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1ABCD: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1ABD9: A4 01                                            // ..

                    Case
 1ABDB: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1ABDE: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1ABEA: A4 01                                            // ..

                    Case
 1ABEC: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1ABEF: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1ABFB: A4 01                                            // ..

                    Case
 1ABFD: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1AC00: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1AC0C: A4 01                                            // ..

                    Case
 1AC0E: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1AC11: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1AC1D: A4 01                                            // ..

                    Case
 1AC1F: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1AC22: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1AC2E: A4 01                                            // ..

                    Case
 1AC30: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1AC33: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1AC3F: A4 01                                            // ..

                    Case
 1AC41: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1AC44: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1AC50: A4 01                                            // ..

                    Case
 1AC52: A1 33                                            // .3

 (0x24F68086)
                    {

 1AC54: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1AC60: A4 01                                            // ..

                    Case
 1AC62: A1 23                                            // .#

 (0x24FD8086)
                    {

 1AC64: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1AC70: A4 01                                            // ..

                    Case
 1AC72: A1 13                                            // ..

 (0x24FB8086)
                    {

 1AC74: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1AC80: A4 01                                            // ..

                    Default
                    {

 1AC82: A1 03                                            // ..

                        Return (Zero)
                    }


 1AC84: A4 00                                            // ..

                }
            }

 1AC86: A5                                               // .

            Else
            {

 1AC87: A1 03                                            // ..

                Return (Zero)
            }
        }


 1AC89: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1AC8B: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1AC93: 08 5F 54 5F 31 00                                // ._T_1.


 1AC99: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1AC9F: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1ACA6: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1ACAF: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1ACB4: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1ACC4: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1ACC8: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1ACCD: A0 09 93 69 00                                   // ...i.

                        Return (
 1ACD2: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1ACD3: 11 03 01 03                                      // ....

                    Else
                    {

 1ACD7: A1 06                                            // ..

                        Return (
 1ACD9: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1ACDA: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1ACDE: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1ACE4: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1ACEB: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1ACF4: A0 07                                            // ..

Zero)
                        {
                        }

 1ACF6: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1ACFC: A1 47 05                                         // .G.

 (One)
                        {

 1ACFF: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1AD07: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1AD16: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1AD1D: A1 36                                            // .6

 (
 1AD1F: A0 08                                            // ..

0x02)
                        {
                        }

 1AD21: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1AD28: A1 2B                                            // .+

 (
 1AD2A: A0 08                                            // ..

0x03)
                        {
                        }

 1AD2C: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1AD33: A1 20                                            // . 

 (0x04)
                        {

 1AD35: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1AD3E: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1AD4D: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1AD54: A5                                               // .

                Return (Zero)
            }

 1AD55: A4 00                                            // ..

            ElseIf
 1AD57: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1AD5A: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1AD5F: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1AD6F: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1AD73: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1AD7F: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1AD87: A0 09 93 69 00                                   // ...i.

                            Return (
 1AD8C: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1AD8D: 11 03 01 07                                      // ....

                        Else
                        {

 1AD91: A1 06                                            // ..

                            Return (
 1AD93: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1AD94: 11 03 01 00                                      // ....

                    Case
 1AD98: A1 25                                            // .%

 (One)
                    {

 1AD9A: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1ADA2: A4 57 48 49 54                                   // .WHIT

                    Case
 1ADA7: A1 16                                            // ..

 (0x02)
                    {

 1ADA9: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1ADB2: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1ADB7: A1 06                                            // ..

                        Return (
 1ADB9: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1ADBA: 11 03 01 00                                      // ....

                }
            }

 1ADBE: A5                                               // .

            Else
            {

 1ADBF: A1 06                                            // ..

                Return (
 1ADC1: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1ADC2: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1ADC6: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1ADCE: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1ADD4: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1ADDD: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1ADEB: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1ADF7: A4 01                                            // ..

                    Case
 1ADF9: A1 13                                            // ..

 (0x097C8086)
                    {

 1ADFB: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1AE07: A4 01                                            // ..

                    Default
                    {

 1AE09: A1 03                                            // ..

                        Return (Zero)
                    }


 1AE0B: A4 00                                            // ..

                }
            }

 1AE0D: A5                                               // .

            Else
            {

 1AE0E: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1AE10: A4 00                                            // ..

    Scope (_SB.PCI0.RP11.PXSX)
    {

 1AE12: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1AE22: 31 50 58 53 58                                   // 1PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1AE27: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1AE31: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1AE41: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1AE46: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1AE51: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1AE61: 52 10                                            // R.

        Name (SPLX, 
 1AE63: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1AE68: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1AE6C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1AE7C: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1AE7E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1AE8E: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1AE90: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1AEA0: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1AEA2: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1AEAF: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1AEB1: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1AEBF: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1AEC1: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1AECF: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1AED1: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1AEE0: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1AEE2: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1AEF1: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1AEF3: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1AF02: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1AF04: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1AF14: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1AF16: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1AF25: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1AF27: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1AF36: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1AF38: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1AF43: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1AF48: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1AF53: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1AF63: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1AF69: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1AF6B: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1AF7B: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1AF80: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1AF90: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1AF96: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1AFA6: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1AFAC: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1AFBC: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1AFC5: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1AFCB: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1AFD0: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1AFD7: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1AFDC: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1AFE0: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1AFF0: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1AFF2: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1B002: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1B004: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1B00E: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1B010: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1B01E: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1B020: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1B02E: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1B030: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1B03C: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1B03E: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1B04D: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1B04F: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1B05E: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1B060: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1B06B: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1B070: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1B075: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1B079: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1B084: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1B08F: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1B09C: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1B09E: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1B0AC: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1B0AE: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1B0BC: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1B0BE: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1B0CD: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1B0CF: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1B0D9: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1B0DE: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1B0E3: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1B0E7: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1B0F7: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1B102: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1B111: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1B11E: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1B120: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1B12E: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1B130: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1B13F: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1B141: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1B150: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1B152: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1B161: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1B163: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1B172: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1B174: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1B183: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1B185: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1B194: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1B196: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1B1A5: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1B1A7: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1B1B6: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1B1B8: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1B1C7: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1B1C9: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1B1D8: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1B1DA: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1B1E9: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1B1EB: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1B1FB: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1B1FD: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1B20D: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1B20F: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1B21F: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1B221: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1B22C: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1B231: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1B238: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1B23D: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1B244: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1B249: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1B251: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1B257: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1B261: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1B270: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1B27C: A4 01                                            // ..

                    Case
 1B27E: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1B281: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1B28D: A4 01                                            // ..

                    Case
 1B28F: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1B292: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1B29E: A4 01                                            // ..

                    Case
 1B2A0: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1B2A3: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1B2AF: A4 01                                            // ..

                    Case
 1B2B1: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1B2B4: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1B2C0: A4 01                                            // ..

                    Case
 1B2C2: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1B2C5: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1B2D1: A4 01                                            // ..

                    Case
 1B2D3: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1B2D6: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1B2E2: A4 01                                            // ..

                    Case
 1B2E4: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1B2E7: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1B2F3: A4 01                                            // ..

                    Case
 1B2F5: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1B2F8: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1B304: A4 01                                            // ..

                    Case
 1B306: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1B309: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1B315: A4 01                                            // ..

                    Case
 1B317: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1B31A: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1B326: A4 01                                            // ..

                    Case
 1B328: A1 33                                            // .3

 (0x24F68086)
                    {

 1B32A: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1B336: A4 01                                            // ..

                    Case
 1B338: A1 23                                            // .#

 (0x24FD8086)
                    {

 1B33A: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1B346: A4 01                                            // ..

                    Case
 1B348: A1 13                                            // ..

 (0x24FB8086)
                    {

 1B34A: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1B356: A4 01                                            // ..

                    Default
                    {

 1B358: A1 03                                            // ..

                        Return (Zero)
                    }


 1B35A: A4 00                                            // ..

                }
            }

 1B35C: A5                                               // .

            Else
            {

 1B35D: A1 03                                            // ..

                Return (Zero)
            }
        }


 1B35F: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1B361: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1B369: 08 5F 54 5F 31 00                                // ._T_1.


 1B36F: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1B375: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1B37C: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1B385: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1B38A: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1B39A: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1B39E: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1B3A3: A0 09 93 69 00                                   // ...i.

                        Return (
 1B3A8: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1B3A9: 11 03 01 03                                      // ....

                    Else
                    {

 1B3AD: A1 06                                            // ..

                        Return (
 1B3AF: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1B3B0: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1B3B4: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1B3BA: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1B3C1: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1B3CA: A0 07                                            // ..

Zero)
                        {
                        }

 1B3CC: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1B3D2: A1 47 05                                         // .G.

 (One)
                        {

 1B3D5: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1B3DD: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1B3EC: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1B3F3: A1 36                                            // .6

 (
 1B3F5: A0 08                                            // ..

0x02)
                        {
                        }

 1B3F7: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1B3FE: A1 2B                                            // .+

 (
 1B400: A0 08                                            // ..

0x03)
                        {
                        }

 1B402: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1B409: A1 20                                            // . 

 (0x04)
                        {

 1B40B: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1B414: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1B423: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1B42A: A5                                               // .

                Return (Zero)
            }

 1B42B: A4 00                                            // ..

            ElseIf
 1B42D: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1B430: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1B435: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1B445: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1B449: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1B455: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1B45D: A0 09 93 69 00                                   // ...i.

                            Return (
 1B462: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1B463: 11 03 01 07                                      // ....

                        Else
                        {

 1B467: A1 06                                            // ..

                            Return (
 1B469: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1B46A: 11 03 01 00                                      // ....

                    Case
 1B46E: A1 25                                            // .%

 (One)
                    {

 1B470: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1B478: A4 57 48 49 54                                   // .WHIT

                    Case
 1B47D: A1 16                                            // ..

 (0x02)
                    {

 1B47F: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1B488: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1B48D: A1 06                                            // ..

                        Return (
 1B48F: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1B490: 11 03 01 00                                      // ....

                }
            }

 1B494: A5                                               // .

            Else
            {

 1B495: A1 06                                            // ..

                Return (
 1B497: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1B498: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1B49C: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1B4A4: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1B4AA: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1B4B3: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1B4C1: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1B4CD: A4 01                                            // ..

                    Case
 1B4CF: A1 13                                            // ..

 (0x097C8086)
                    {

 1B4D1: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1B4DD: A4 01                                            // ..

                    Default
                    {

 1B4DF: A1 03                                            // ..

                        Return (Zero)
                    }


 1B4E1: A4 00                                            // ..

                }
            }

 1B4E3: A5                                               // .

            Else
            {

 1B4E4: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1B4E6: A4 00                                            // ..

    Scope (_SB.PCI0.RP12.PXSX)
    {

 1B4E8: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1B4F8: 32 50 58 53 58                                   // 2PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1B4FD: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1B507: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1B517: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1B51C: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1B527: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1B537: 52 10                                            // R.

        Name (SPLX, 
 1B539: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1B53E: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1B542: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1B552: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1B554: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1B564: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1B566: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1B576: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1B578: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1B585: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1B587: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1B595: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1B597: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1B5A5: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1B5A7: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1B5B6: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1B5B8: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1B5C7: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1B5C9: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1B5D8: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1B5DA: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1B5EA: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1B5EC: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1B5FB: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1B5FD: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1B60C: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1B60E: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1B619: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1B61E: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1B629: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1B639: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1B63F: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1B641: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1B651: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1B656: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1B666: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1B66C: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1B67C: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1B682: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1B692: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1B69B: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1B6A1: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1B6A6: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1B6AD: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1B6B2: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1B6B6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1B6C6: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1B6C8: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1B6D8: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1B6DA: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1B6E4: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1B6E6: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1B6F4: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1B6F6: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1B704: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1B706: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1B712: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1B714: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1B723: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1B725: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1B734: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1B736: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1B741: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1B746: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1B74B: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1B74F: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1B75A: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1B765: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1B772: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1B774: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1B782: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1B784: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1B792: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1B794: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1B7A3: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1B7A5: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1B7AF: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1B7B4: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1B7B9: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1B7BD: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1B7CD: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1B7D8: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1B7E7: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1B7F4: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1B7F6: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1B804: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1B806: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1B815: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1B817: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1B826: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1B828: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1B837: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1B839: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1B848: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1B84A: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1B859: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1B85B: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1B86A: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1B86C: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1B87B: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1B87D: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1B88C: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1B88E: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1B89D: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1B89F: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1B8AE: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1B8B0: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1B8BF: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1B8C1: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1B8D1: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1B8D3: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1B8E3: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1B8E5: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1B8F5: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1B8F7: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1B902: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1B907: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1B90E: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1B913: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1B91A: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1B91F: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1B927: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1B92D: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1B937: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1B946: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1B952: A4 01                                            // ..

                    Case
 1B954: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1B957: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1B963: A4 01                                            // ..

                    Case
 1B965: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1B968: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1B974: A4 01                                            // ..

                    Case
 1B976: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1B979: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1B985: A4 01                                            // ..

                    Case
 1B987: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1B98A: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1B996: A4 01                                            // ..

                    Case
 1B998: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1B99B: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1B9A7: A4 01                                            // ..

                    Case
 1B9A9: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1B9AC: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1B9B8: A4 01                                            // ..

                    Case
 1B9BA: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1B9BD: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1B9C9: A4 01                                            // ..

                    Case
 1B9CB: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1B9CE: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1B9DA: A4 01                                            // ..

                    Case
 1B9DC: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1B9DF: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1B9EB: A4 01                                            // ..

                    Case
 1B9ED: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1B9F0: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1B9FC: A4 01                                            // ..

                    Case
 1B9FE: A1 33                                            // .3

 (0x24F68086)
                    {

 1BA00: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1BA0C: A4 01                                            // ..

                    Case
 1BA0E: A1 23                                            // .#

 (0x24FD8086)
                    {

 1BA10: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1BA1C: A4 01                                            // ..

                    Case
 1BA1E: A1 13                                            // ..

 (0x24FB8086)
                    {

 1BA20: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1BA2C: A4 01                                            // ..

                    Default
                    {

 1BA2E: A1 03                                            // ..

                        Return (Zero)
                    }


 1BA30: A4 00                                            // ..

                }
            }

 1BA32: A5                                               // .

            Else
            {

 1BA33: A1 03                                            // ..

                Return (Zero)
            }
        }


 1BA35: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1BA37: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1BA3F: 08 5F 54 5F 31 00                                // ._T_1.


 1BA45: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1BA4B: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1BA52: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1BA5B: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1BA60: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1BA70: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1BA74: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1BA79: A0 09 93 69 00                                   // ...i.

                        Return (
 1BA7E: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1BA7F: 11 03 01 03                                      // ....

                    Else
                    {

 1BA83: A1 06                                            // ..

                        Return (
 1BA85: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1BA86: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1BA8A: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1BA90: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1BA97: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1BAA0: A0 07                                            // ..

Zero)
                        {
                        }

 1BAA2: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1BAA8: A1 47 05                                         // .G.

 (One)
                        {

 1BAAB: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1BAB3: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1BAC2: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1BAC9: A1 36                                            // .6

 (
 1BACB: A0 08                                            // ..

0x02)
                        {
                        }

 1BACD: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1BAD4: A1 2B                                            // .+

 (
 1BAD6: A0 08                                            // ..

0x03)
                        {
                        }

 1BAD8: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1BADF: A1 20                                            // . 

 (0x04)
                        {

 1BAE1: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1BAEA: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1BAF9: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1BB00: A5                                               // .

                Return (Zero)
            }

 1BB01: A4 00                                            // ..

            ElseIf
 1BB03: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1BB06: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1BB0B: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1BB1B: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1BB1F: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1BB2B: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1BB33: A0 09 93 69 00                                   // ...i.

                            Return (
 1BB38: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1BB39: 11 03 01 07                                      // ....

                        Else
                        {

 1BB3D: A1 06                                            // ..

                            Return (
 1BB3F: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1BB40: 11 03 01 00                                      // ....

                    Case
 1BB44: A1 25                                            // .%

 (One)
                    {

 1BB46: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1BB4E: A4 57 48 49 54                                   // .WHIT

                    Case
 1BB53: A1 16                                            // ..

 (0x02)
                    {

 1BB55: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1BB5E: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1BB63: A1 06                                            // ..

                        Return (
 1BB65: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1BB66: 11 03 01 00                                      // ....

                }
            }

 1BB6A: A5                                               // .

            Else
            {

 1BB6B: A1 06                                            // ..

                Return (
 1BB6D: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1BB6E: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1BB72: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1BB7A: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1BB80: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1BB89: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1BB97: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1BBA3: A4 01                                            // ..

                    Case
 1BBA5: A1 13                                            // ..

 (0x097C8086)
                    {

 1BBA7: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1BBB3: A4 01                                            // ..

                    Default
                    {

 1BBB5: A1 03                                            // ..

                        Return (Zero)
                    }


 1BBB7: A4 00                                            // ..

                }
            }

 1BBB9: A5                                               // .

            Else
            {

 1BBBA: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1BBBC: A4 00                                            // ..

    Scope (_SB.PCI0.RP13.PXSX)
    {

 1BBBE: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1BBCE: 33 50 58 53 58                                   // 3PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1BBD3: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1BBDD: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1BBED: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1BBF2: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1BBFD: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1BC0D: 52 10                                            // R.

        Name (SPLX, 
 1BC0F: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1BC14: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1BC18: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1BC28: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1BC2A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1BC3A: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1BC3C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1BC4C: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1BC4E: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1BC5B: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1BC5D: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1BC6B: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1BC6D: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1BC7B: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1BC7D: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1BC8C: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1BC8E: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1BC9D: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1BC9F: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1BCAE: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1BCB0: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1BCC0: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1BCC2: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1BCD1: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1BCD3: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1BCE2: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1BCE4: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1BCEF: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1BCF4: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1BCFF: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1BD0F: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1BD15: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1BD17: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1BD27: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1BD2C: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1BD3C: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1BD42: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1BD52: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1BD58: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1BD68: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1BD71: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1BD77: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1BD7C: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1BD83: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1BD88: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1BD8C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1BD9C: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1BD9E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1BDAE: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1BDB0: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1BDBA: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1BDBC: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1BDCA: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1BDCC: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1BDDA: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1BDDC: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1BDE8: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1BDEA: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1BDF9: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1BDFB: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1BE0A: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1BE0C: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1BE17: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1BE1C: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1BE21: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1BE25: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1BE30: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1BE3B: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1BE48: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1BE4A: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1BE58: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1BE5A: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1BE68: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1BE6A: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1BE79: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1BE7B: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1BE85: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1BE8A: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1BE8F: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1BE93: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1BEA3: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1BEAE: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1BEBD: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1BECA: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1BECC: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1BEDA: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1BEDC: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1BEEB: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1BEED: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1BEFC: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1BEFE: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1BF0D: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1BF0F: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1BF1E: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1BF20: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1BF2F: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1BF31: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1BF40: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1BF42: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1BF51: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1BF53: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1BF62: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1BF64: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1BF73: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1BF75: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1BF84: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1BF86: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1BF95: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1BF97: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1BFA7: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1BFA9: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1BFB9: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1BFBB: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1BFCB: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1BFCD: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1BFD8: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1BFDD: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1BFE4: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1BFE9: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1BFF0: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1BFF5: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1BFFD: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1C003: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1C00D: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1C01C: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1C028: A4 01                                            // ..

                    Case
 1C02A: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1C02D: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1C039: A4 01                                            // ..

                    Case
 1C03B: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1C03E: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1C04A: A4 01                                            // ..

                    Case
 1C04C: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1C04F: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1C05B: A4 01                                            // ..

                    Case
 1C05D: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1C060: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1C06C: A4 01                                            // ..

                    Case
 1C06E: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1C071: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1C07D: A4 01                                            // ..

                    Case
 1C07F: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1C082: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1C08E: A4 01                                            // ..

                    Case
 1C090: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1C093: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1C09F: A4 01                                            // ..

                    Case
 1C0A1: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1C0A4: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1C0B0: A4 01                                            // ..

                    Case
 1C0B2: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1C0B5: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1C0C1: A4 01                                            // ..

                    Case
 1C0C3: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1C0C6: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1C0D2: A4 01                                            // ..

                    Case
 1C0D4: A1 33                                            // .3

 (0x24F68086)
                    {

 1C0D6: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1C0E2: A4 01                                            // ..

                    Case
 1C0E4: A1 23                                            // .#

 (0x24FD8086)
                    {

 1C0E6: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1C0F2: A4 01                                            // ..

                    Case
 1C0F4: A1 13                                            // ..

 (0x24FB8086)
                    {

 1C0F6: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1C102: A4 01                                            // ..

                    Default
                    {

 1C104: A1 03                                            // ..

                        Return (Zero)
                    }


 1C106: A4 00                                            // ..

                }
            }

 1C108: A5                                               // .

            Else
            {

 1C109: A1 03                                            // ..

                Return (Zero)
            }
        }


 1C10B: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1C10D: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1C115: 08 5F 54 5F 31 00                                // ._T_1.


 1C11B: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1C121: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1C128: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1C131: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1C136: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1C146: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1C14A: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1C14F: A0 09 93 69 00                                   // ...i.

                        Return (
 1C154: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1C155: 11 03 01 03                                      // ....

                    Else
                    {

 1C159: A1 06                                            // ..

                        Return (
 1C15B: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1C15C: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1C160: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1C166: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1C16D: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1C176: A0 07                                            // ..

Zero)
                        {
                        }

 1C178: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1C17E: A1 47 05                                         // .G.

 (One)
                        {

 1C181: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1C189: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1C198: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1C19F: A1 36                                            // .6

 (
 1C1A1: A0 08                                            // ..

0x02)
                        {
                        }

 1C1A3: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1C1AA: A1 2B                                            // .+

 (
 1C1AC: A0 08                                            // ..

0x03)
                        {
                        }

 1C1AE: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1C1B5: A1 20                                            // . 

 (0x04)
                        {

 1C1B7: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1C1C0: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1C1CF: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1C1D6: A5                                               // .

                Return (Zero)
            }

 1C1D7: A4 00                                            // ..

            ElseIf
 1C1D9: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1C1DC: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1C1E1: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1C1F1: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1C1F5: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1C201: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1C209: A0 09 93 69 00                                   // ...i.

                            Return (
 1C20E: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1C20F: 11 03 01 07                                      // ....

                        Else
                        {

 1C213: A1 06                                            // ..

                            Return (
 1C215: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1C216: 11 03 01 00                                      // ....

                    Case
 1C21A: A1 25                                            // .%

 (One)
                    {

 1C21C: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1C224: A4 57 48 49 54                                   // .WHIT

                    Case
 1C229: A1 16                                            // ..

 (0x02)
                    {

 1C22B: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1C234: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1C239: A1 06                                            // ..

                        Return (
 1C23B: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1C23C: 11 03 01 00                                      // ....

                }
            }

 1C240: A5                                               // .

            Else
            {

 1C241: A1 06                                            // ..

                Return (
 1C243: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1C244: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1C248: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1C250: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1C256: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1C25F: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1C26D: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1C279: A4 01                                            // ..

                    Case
 1C27B: A1 13                                            // ..

 (0x097C8086)
                    {

 1C27D: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1C289: A4 01                                            // ..

                    Default
                    {

 1C28B: A1 03                                            // ..

                        Return (Zero)
                    }


 1C28D: A4 00                                            // ..

                }
            }

 1C28F: A5                                               // .

            Else
            {

 1C290: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1C292: A4 00                                            // ..

    Scope (_SB.PCI0.RP14.PXSX)
    {

 1C294: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1C2A4: 34 50 58 53 58                                   // 4PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1C2A9: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1C2B3: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1C2C3: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1C2C8: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1C2D3: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1C2E3: 52 10                                            // R.

        Name (SPLX, 
 1C2E5: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1C2EA: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1C2EE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C2FE: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1C300: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C310: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1C312: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C322: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1C324: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1C331: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1C333: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1C341: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1C343: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1C351: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1C353: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1C362: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1C364: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1C373: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1C375: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1C384: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1C386: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1C396: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1C398: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1C3A7: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1C3A9: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1C3B8: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1C3BA: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1C3C5: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1C3CA: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1C3D5: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1C3E5: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1C3EB: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1C3ED: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1C3FD: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1C402: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1C412: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1C418: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1C428: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1C42E: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1C43E: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1C447: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1C44D: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1C452: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1C459: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1C45E: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1C462: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C472: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1C474: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C484: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1C486: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1C490: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1C492: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1C4A0: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1C4A2: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1C4B0: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1C4B2: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1C4BE: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1C4C0: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1C4CF: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1C4D1: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1C4E0: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1C4E2: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1C4ED: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1C4F2: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1C4F7: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1C4FB: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1C506: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1C511: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1C51E: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1C520: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1C52E: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1C530: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1C53E: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1C540: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1C54F: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1C551: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1C55B: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1C560: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1C565: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1C569: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1C579: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1C584: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1C593: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1C5A0: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1C5A2: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1C5B0: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1C5B2: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1C5C1: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1C5C3: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1C5D2: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1C5D4: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1C5E3: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1C5E5: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1C5F4: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1C5F6: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1C605: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1C607: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1C616: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1C618: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1C627: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1C629: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1C638: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1C63A: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1C649: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1C64B: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1C65A: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1C65C: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1C66B: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1C66D: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1C67D: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1C67F: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1C68F: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1C691: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1C6A1: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1C6A3: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1C6AE: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1C6B3: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1C6BA: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1C6BF: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1C6C6: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1C6CB: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1C6D3: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1C6D9: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1C6E3: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1C6F2: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1C6FE: A4 01                                            // ..

                    Case
 1C700: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1C703: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1C70F: A4 01                                            // ..

                    Case
 1C711: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1C714: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1C720: A4 01                                            // ..

                    Case
 1C722: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1C725: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1C731: A4 01                                            // ..

                    Case
 1C733: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1C736: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1C742: A4 01                                            // ..

                    Case
 1C744: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1C747: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1C753: A4 01                                            // ..

                    Case
 1C755: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1C758: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1C764: A4 01                                            // ..

                    Case
 1C766: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1C769: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1C775: A4 01                                            // ..

                    Case
 1C777: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1C77A: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1C786: A4 01                                            // ..

                    Case
 1C788: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1C78B: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1C797: A4 01                                            // ..

                    Case
 1C799: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1C79C: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1C7A8: A4 01                                            // ..

                    Case
 1C7AA: A1 33                                            // .3

 (0x24F68086)
                    {

 1C7AC: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1C7B8: A4 01                                            // ..

                    Case
 1C7BA: A1 23                                            // .#

 (0x24FD8086)
                    {

 1C7BC: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1C7C8: A4 01                                            // ..

                    Case
 1C7CA: A1 13                                            // ..

 (0x24FB8086)
                    {

 1C7CC: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1C7D8: A4 01                                            // ..

                    Default
                    {

 1C7DA: A1 03                                            // ..

                        Return (Zero)
                    }


 1C7DC: A4 00                                            // ..

                }
            }

 1C7DE: A5                                               // .

            Else
            {

 1C7DF: A1 03                                            // ..

                Return (Zero)
            }
        }


 1C7E1: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1C7E3: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1C7EB: 08 5F 54 5F 31 00                                // ._T_1.


 1C7F1: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1C7F7: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1C7FE: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1C807: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1C80C: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1C81C: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1C820: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1C825: A0 09 93 69 00                                   // ...i.

                        Return (
 1C82A: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1C82B: 11 03 01 03                                      // ....

                    Else
                    {

 1C82F: A1 06                                            // ..

                        Return (
 1C831: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1C832: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1C836: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1C83C: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1C843: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1C84C: A0 07                                            // ..

Zero)
                        {
                        }

 1C84E: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1C854: A1 47 05                                         // .G.

 (One)
                        {

 1C857: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1C85F: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1C86E: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1C875: A1 36                                            // .6

 (
 1C877: A0 08                                            // ..

0x02)
                        {
                        }

 1C879: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1C880: A1 2B                                            // .+

 (
 1C882: A0 08                                            // ..

0x03)
                        {
                        }

 1C884: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1C88B: A1 20                                            // . 

 (0x04)
                        {

 1C88D: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1C896: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1C8A5: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1C8AC: A5                                               // .

                Return (Zero)
            }

 1C8AD: A4 00                                            // ..

            ElseIf
 1C8AF: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1C8B2: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1C8B7: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1C8C7: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1C8CB: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1C8D7: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1C8DF: A0 09 93 69 00                                   // ...i.

                            Return (
 1C8E4: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1C8E5: 11 03 01 07                                      // ....

                        Else
                        {

 1C8E9: A1 06                                            // ..

                            Return (
 1C8EB: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1C8EC: 11 03 01 00                                      // ....

                    Case
 1C8F0: A1 25                                            // .%

 (One)
                    {

 1C8F2: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1C8FA: A4 57 48 49 54                                   // .WHIT

                    Case
 1C8FF: A1 16                                            // ..

 (0x02)
                    {

 1C901: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1C90A: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1C90F: A1 06                                            // ..

                        Return (
 1C911: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1C912: 11 03 01 00                                      // ....

                }
            }

 1C916: A5                                               // .

            Else
            {

 1C917: A1 06                                            // ..

                Return (
 1C919: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1C91A: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1C91E: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1C926: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1C92C: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1C935: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1C943: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1C94F: A4 01                                            // ..

                    Case
 1C951: A1 13                                            // ..

 (0x097C8086)
                    {

 1C953: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1C95F: A4 01                                            // ..

                    Default
                    {

 1C961: A1 03                                            // ..

                        Return (Zero)
                    }


 1C963: A4 00                                            // ..

                }
            }

 1C965: A5                                               // .

            Else
            {

 1C966: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1C968: A4 00                                            // ..

    Scope (_SB.PCI0.RP15.PXSX)
    {

 1C96A: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1C97A: 35 50 58 53 58                                   // 5PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1C97F: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1C989: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1C999: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1C99E: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1C9A9: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1C9B9: 52 10                                            // R.

        Name (SPLX, 
 1C9BB: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1C9C0: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1C9C4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C9D4: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1C9D6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C9E6: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1C9E8: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1C9F8: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1C9FA: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1CA07: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1CA09: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1CA17: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1CA19: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1CA27: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1CA29: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1CA38: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1CA3A: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1CA49: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1CA4B: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1CA5A: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1CA5C: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1CA6C: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1CA6E: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1CA7D: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1CA7F: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1CA8E: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1CA90: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1CA9B: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1CAA0: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1CAAB: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1CABB: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1CAC1: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1CAC3: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1CAD3: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1CAD8: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1CAE8: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1CAEE: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1CAFE: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1CB04: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1CB14: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1CB1D: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1CB23: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1CB28: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1CB2F: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1CB34: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1CB38: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1CB48: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1CB4A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1CB5A: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1CB5C: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1CB66: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1CB68: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1CB76: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1CB78: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1CB86: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1CB88: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1CB94: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1CB96: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1CBA5: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1CBA7: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1CBB6: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1CBB8: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1CBC3: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1CBC8: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1CBCD: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1CBD1: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1CBDC: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1CBE7: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1CBF4: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1CBF6: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1CC04: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1CC06: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1CC14: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1CC16: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1CC25: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1CC27: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1CC31: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1CC36: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1CC3B: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1CC3F: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1CC4F: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1CC5A: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1CC69: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1CC76: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1CC78: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1CC86: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1CC88: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1CC97: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1CC99: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1CCA8: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1CCAA: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1CCB9: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1CCBB: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1CCCA: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1CCCC: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1CCDB: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1CCDD: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1CCEC: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1CCEE: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1CCFD: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1CCFF: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1CD0E: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1CD10: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1CD1F: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1CD21: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1CD30: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1CD32: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1CD41: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1CD43: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1CD53: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1CD55: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1CD65: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1CD67: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1CD77: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1CD79: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1CD84: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1CD89: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1CD90: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1CD95: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1CD9C: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1CDA1: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1CDA9: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1CDAF: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1CDB9: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1CDC8: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1CDD4: A4 01                                            // ..

                    Case
 1CDD6: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1CDD9: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1CDE5: A4 01                                            // ..

                    Case
 1CDE7: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1CDEA: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1CDF6: A4 01                                            // ..

                    Case
 1CDF8: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1CDFB: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1CE07: A4 01                                            // ..

                    Case
 1CE09: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1CE0C: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1CE18: A4 01                                            // ..

                    Case
 1CE1A: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1CE1D: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1CE29: A4 01                                            // ..

                    Case
 1CE2B: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1CE2E: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1CE3A: A4 01                                            // ..

                    Case
 1CE3C: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1CE3F: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1CE4B: A4 01                                            // ..

                    Case
 1CE4D: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1CE50: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1CE5C: A4 01                                            // ..

                    Case
 1CE5E: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1CE61: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1CE6D: A4 01                                            // ..

                    Case
 1CE6F: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1CE72: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1CE7E: A4 01                                            // ..

                    Case
 1CE80: A1 33                                            // .3

 (0x24F68086)
                    {

 1CE82: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1CE8E: A4 01                                            // ..

                    Case
 1CE90: A1 23                                            // .#

 (0x24FD8086)
                    {

 1CE92: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1CE9E: A4 01                                            // ..

                    Case
 1CEA0: A1 13                                            // ..

 (0x24FB8086)
                    {

 1CEA2: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1CEAE: A4 01                                            // ..

                    Default
                    {

 1CEB0: A1 03                                            // ..

                        Return (Zero)
                    }


 1CEB2: A4 00                                            // ..

                }
            }

 1CEB4: A5                                               // .

            Else
            {

 1CEB5: A1 03                                            // ..

                Return (Zero)
            }
        }


 1CEB7: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1CEB9: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1CEC1: 08 5F 54 5F 31 00                                // ._T_1.


 1CEC7: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1CECD: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1CED4: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1CEDD: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1CEE2: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1CEF2: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1CEF6: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1CEFB: A0 09 93 69 00                                   // ...i.

                        Return (
 1CF00: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1CF01: 11 03 01 03                                      // ....

                    Else
                    {

 1CF05: A1 06                                            // ..

                        Return (
 1CF07: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1CF08: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1CF0C: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1CF12: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1CF19: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1CF22: A0 07                                            // ..

Zero)
                        {
                        }

 1CF24: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1CF2A: A1 47 05                                         // .G.

 (One)
                        {

 1CF2D: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1CF35: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1CF44: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1CF4B: A1 36                                            // .6

 (
 1CF4D: A0 08                                            // ..

0x02)
                        {
                        }

 1CF4F: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1CF56: A1 2B                                            // .+

 (
 1CF58: A0 08                                            // ..

0x03)
                        {
                        }

 1CF5A: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1CF61: A1 20                                            // . 

 (0x04)
                        {

 1CF63: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1CF6C: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1CF7B: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1CF82: A5                                               // .

                Return (Zero)
            }

 1CF83: A4 00                                            // ..

            ElseIf
 1CF85: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1CF88: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1CF8D: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1CF9D: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1CFA1: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1CFAD: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1CFB5: A0 09 93 69 00                                   // ...i.

                            Return (
 1CFBA: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1CFBB: 11 03 01 07                                      // ....

                        Else
                        {

 1CFBF: A1 06                                            // ..

                            Return (
 1CFC1: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1CFC2: 11 03 01 00                                      // ....

                    Case
 1CFC6: A1 25                                            // .%

 (One)
                    {

 1CFC8: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1CFD0: A4 57 48 49 54                                   // .WHIT

                    Case
 1CFD5: A1 16                                            // ..

 (0x02)
                    {

 1CFD7: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1CFE0: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1CFE5: A1 06                                            // ..

                        Return (
 1CFE7: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1CFE8: 11 03 01 00                                      // ....

                }
            }

 1CFEC: A5                                               // .

            Else
            {

 1CFED: A1 06                                            // ..

                Return (
 1CFEF: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1CFF0: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1CFF4: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1CFFC: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1D002: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1D00B: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1D019: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1D025: A4 01                                            // ..

                    Case
 1D027: A1 13                                            // ..

 (0x097C8086)
                    {

 1D029: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1D035: A4 01                                            // ..

                    Default
                    {

 1D037: A1 03                                            // ..

                        Return (Zero)
                    }


 1D039: A4 00                                            // ..

                }
            }

 1D03B: A5                                               // .

            Else
            {

 1D03C: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1D03E: A4 00                                            // ..

    Scope (_SB.PCI0.RP16.PXSX)
    {

 1D040: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1D050: 36 50 58 53 58                                   // 6PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1D055: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1D05F: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1D06F: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1D074: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1D07F: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1D08F: 52 10                                            // R.

        Name (SPLX, 
 1D091: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1D096: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1D09A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D0AA: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1D0AC: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D0BC: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1D0BE: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D0CE: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1D0D0: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1D0DD: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1D0DF: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1D0ED: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1D0EF: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1D0FD: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1D0FF: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1D10E: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1D110: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1D11F: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1D121: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1D130: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1D132: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1D142: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1D144: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1D153: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1D155: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1D164: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1D166: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1D171: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1D176: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1D181: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1D191: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1D197: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1D199: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1D1A9: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1D1AE: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1D1BE: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1D1C4: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1D1D4: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1D1DA: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1D1EA: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1D1F3: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1D1F9: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1D1FE: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1D205: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1D20A: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1D20E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D21E: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1D220: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D230: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1D232: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1D23C: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1D23E: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1D24C: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1D24E: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1D25C: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1D25E: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1D26A: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1D26C: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1D27B: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1D27D: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1D28C: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1D28E: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1D299: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1D29E: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1D2A3: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1D2A7: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1D2B2: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1D2BD: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1D2CA: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1D2CC: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1D2DA: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1D2DC: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1D2EA: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1D2EC: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1D2FB: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1D2FD: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1D307: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1D30C: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1D311: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1D315: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1D325: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1D330: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1D33F: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1D34C: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1D34E: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1D35C: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1D35E: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1D36D: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1D36F: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1D37E: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1D380: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1D38F: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1D391: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1D3A0: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1D3A2: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1D3B1: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1D3B3: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1D3C2: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1D3C4: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1D3D3: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1D3D5: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1D3E4: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1D3E6: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1D3F5: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1D3F7: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1D406: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1D408: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1D417: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1D419: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1D429: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1D42B: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1D43B: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1D43D: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1D44D: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1D44F: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1D45A: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1D45F: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1D466: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1D46B: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1D472: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1D477: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1D47F: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1D485: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1D48F: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1D49E: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1D4AA: A4 01                                            // ..

                    Case
 1D4AC: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1D4AF: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1D4BB: A4 01                                            // ..

                    Case
 1D4BD: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1D4C0: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1D4CC: A4 01                                            // ..

                    Case
 1D4CE: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1D4D1: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1D4DD: A4 01                                            // ..

                    Case
 1D4DF: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1D4E2: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1D4EE: A4 01                                            // ..

                    Case
 1D4F0: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1D4F3: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1D4FF: A4 01                                            // ..

                    Case
 1D501: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1D504: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1D510: A4 01                                            // ..

                    Case
 1D512: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1D515: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1D521: A4 01                                            // ..

                    Case
 1D523: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1D526: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1D532: A4 01                                            // ..

                    Case
 1D534: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1D537: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1D543: A4 01                                            // ..

                    Case
 1D545: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1D548: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1D554: A4 01                                            // ..

                    Case
 1D556: A1 33                                            // .3

 (0x24F68086)
                    {

 1D558: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1D564: A4 01                                            // ..

                    Case
 1D566: A1 23                                            // .#

 (0x24FD8086)
                    {

 1D568: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1D574: A4 01                                            // ..

                    Case
 1D576: A1 13                                            // ..

 (0x24FB8086)
                    {

 1D578: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1D584: A4 01                                            // ..

                    Default
                    {

 1D586: A1 03                                            // ..

                        Return (Zero)
                    }


 1D588: A4 00                                            // ..

                }
            }

 1D58A: A5                                               // .

            Else
            {

 1D58B: A1 03                                            // ..

                Return (Zero)
            }
        }


 1D58D: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1D58F: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1D597: 08 5F 54 5F 31 00                                // ._T_1.


 1D59D: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1D5A3: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1D5AA: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1D5B3: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1D5B8: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1D5C8: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1D5CC: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1D5D1: A0 09 93 69 00                                   // ...i.

                        Return (
 1D5D6: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1D5D7: 11 03 01 03                                      // ....

                    Else
                    {

 1D5DB: A1 06                                            // ..

                        Return (
 1D5DD: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1D5DE: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1D5E2: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1D5E8: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1D5EF: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1D5F8: A0 07                                            // ..

Zero)
                        {
                        }

 1D5FA: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1D600: A1 47 05                                         // .G.

 (One)
                        {

 1D603: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1D60B: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1D61A: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1D621: A1 36                                            // .6

 (
 1D623: A0 08                                            // ..

0x02)
                        {
                        }

 1D625: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1D62C: A1 2B                                            // .+

 (
 1D62E: A0 08                                            // ..

0x03)
                        {
                        }

 1D630: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1D637: A1 20                                            // . 

 (0x04)
                        {

 1D639: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1D642: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1D651: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1D658: A5                                               // .

                Return (Zero)
            }

 1D659: A4 00                                            // ..

            ElseIf
 1D65B: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1D65E: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1D663: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1D673: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1D677: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1D683: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1D68B: A0 09 93 69 00                                   // ...i.

                            Return (
 1D690: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1D691: 11 03 01 07                                      // ....

                        Else
                        {

 1D695: A1 06                                            // ..

                            Return (
 1D697: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1D698: 11 03 01 00                                      // ....

                    Case
 1D69C: A1 25                                            // .%

 (One)
                    {

 1D69E: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1D6A6: A4 57 48 49 54                                   // .WHIT

                    Case
 1D6AB: A1 16                                            // ..

 (0x02)
                    {

 1D6AD: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1D6B6: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1D6BB: A1 06                                            // ..

                        Return (
 1D6BD: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1D6BE: 11 03 01 00                                      // ....

                }
            }

 1D6C2: A5                                               // .

            Else
            {

 1D6C3: A1 06                                            // ..

                Return (
 1D6C5: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1D6C6: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1D6CA: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1D6D2: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1D6D8: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1D6E1: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1D6EF: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1D6FB: A4 01                                            // ..

                    Case
 1D6FD: A1 13                                            // ..

 (0x097C8086)
                    {

 1D6FF: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1D70B: A4 01                                            // ..

                    Default
                    {

 1D70D: A1 03                                            // ..

                        Return (Zero)
                    }


 1D70F: A4 00                                            // ..

                }
            }

 1D711: A5                                               // .

            Else
            {

 1D712: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1D714: A4 00                                            // ..

    Scope (_SB.PCI0.RP17.PXSX)
    {

 1D716: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1D726: 37 50 58 53 58                                   // 7PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1D72B: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1D735: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1D745: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1D74A: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1D755: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1D765: 52 10                                            // R.

        Name (SPLX, 
 1D767: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1D76C: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1D770: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D780: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1D782: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D792: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1D794: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D7A4: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1D7A6: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1D7B3: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1D7B5: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1D7C3: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1D7C5: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1D7D3: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1D7D5: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1D7E4: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1D7E6: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1D7F5: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1D7F7: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1D806: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1D808: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1D818: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1D81A: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1D829: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1D82B: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1D83A: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1D83C: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1D847: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1D84C: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1D857: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1D867: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1D86D: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1D86F: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1D87F: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1D884: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1D894: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1D89A: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1D8AA: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1D8B0: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1D8C0: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1D8C9: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1D8CF: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1D8D4: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1D8DB: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1D8E0: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1D8E4: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D8F4: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1D8F6: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1D906: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1D908: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1D912: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1D914: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1D922: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1D924: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1D932: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1D934: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1D940: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1D942: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1D951: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1D953: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1D962: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1D964: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1D96F: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1D974: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1D979: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1D97D: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1D988: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1D993: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1D9A0: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1D9A2: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1D9B0: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1D9B2: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1D9C0: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1D9C2: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1D9D1: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1D9D3: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1D9DD: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1D9E2: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1D9E7: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1D9EB: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1D9FB: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1DA06: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1DA15: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1DA22: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1DA24: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1DA32: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1DA34: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1DA43: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1DA45: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1DA54: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1DA56: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1DA65: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1DA67: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1DA76: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1DA78: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1DA87: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1DA89: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1DA98: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1DA9A: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1DAA9: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1DAAB: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1DABA: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1DABC: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1DACB: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1DACD: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1DADC: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1DADE: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1DAED: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1DAEF: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1DAFF: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1DB01: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1DB11: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1DB13: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1DB23: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1DB25: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1DB30: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1DB35: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1DB3C: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1DB41: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1DB48: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1DB4D: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1DB55: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1DB5B: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1DB65: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1DB74: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1DB80: A4 01                                            // ..

                    Case
 1DB82: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1DB85: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1DB91: A4 01                                            // ..

                    Case
 1DB93: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1DB96: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1DBA2: A4 01                                            // ..

                    Case
 1DBA4: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1DBA7: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1DBB3: A4 01                                            // ..

                    Case
 1DBB5: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1DBB8: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1DBC4: A4 01                                            // ..

                    Case
 1DBC6: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1DBC9: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1DBD5: A4 01                                            // ..

                    Case
 1DBD7: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1DBDA: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1DBE6: A4 01                                            // ..

                    Case
 1DBE8: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1DBEB: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1DBF7: A4 01                                            // ..

                    Case
 1DBF9: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1DBFC: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1DC08: A4 01                                            // ..

                    Case
 1DC0A: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1DC0D: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1DC19: A4 01                                            // ..

                    Case
 1DC1B: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1DC1E: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1DC2A: A4 01                                            // ..

                    Case
 1DC2C: A1 33                                            // .3

 (0x24F68086)
                    {

 1DC2E: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1DC3A: A4 01                                            // ..

                    Case
 1DC3C: A1 23                                            // .#

 (0x24FD8086)
                    {

 1DC3E: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1DC4A: A4 01                                            // ..

                    Case
 1DC4C: A1 13                                            // ..

 (0x24FB8086)
                    {

 1DC4E: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1DC5A: A4 01                                            // ..

                    Default
                    {

 1DC5C: A1 03                                            // ..

                        Return (Zero)
                    }


 1DC5E: A4 00                                            // ..

                }
            }

 1DC60: A5                                               // .

            Else
            {

 1DC61: A1 03                                            // ..

                Return (Zero)
            }
        }


 1DC63: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1DC65: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1DC6D: 08 5F 54 5F 31 00                                // ._T_1.


 1DC73: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1DC79: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1DC80: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1DC89: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1DC8E: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1DC9E: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1DCA2: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1DCA7: A0 09 93 69 00                                   // ...i.

                        Return (
 1DCAC: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1DCAD: 11 03 01 03                                      // ....

                    Else
                    {

 1DCB1: A1 06                                            // ..

                        Return (
 1DCB3: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1DCB4: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1DCB8: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1DCBE: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1DCC5: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1DCCE: A0 07                                            // ..

Zero)
                        {
                        }

 1DCD0: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1DCD6: A1 47 05                                         // .G.

 (One)
                        {

 1DCD9: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1DCE1: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1DCF0: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1DCF7: A1 36                                            // .6

 (
 1DCF9: A0 08                                            // ..

0x02)
                        {
                        }

 1DCFB: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1DD02: A1 2B                                            // .+

 (
 1DD04: A0 08                                            // ..

0x03)
                        {
                        }

 1DD06: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1DD0D: A1 20                                            // . 

 (0x04)
                        {

 1DD0F: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1DD18: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1DD27: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1DD2E: A5                                               // .

                Return (Zero)
            }

 1DD2F: A4 00                                            // ..

            ElseIf
 1DD31: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1DD34: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1DD39: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1DD49: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1DD4D: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1DD59: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1DD61: A0 09 93 69 00                                   // ...i.

                            Return (
 1DD66: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1DD67: 11 03 01 07                                      // ....

                        Else
                        {

 1DD6B: A1 06                                            // ..

                            Return (
 1DD6D: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1DD6E: 11 03 01 00                                      // ....

                    Case
 1DD72: A1 25                                            // .%

 (One)
                    {

 1DD74: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1DD7C: A4 57 48 49 54                                   // .WHIT

                    Case
 1DD81: A1 16                                            // ..

 (0x02)
                    {

 1DD83: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1DD8C: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1DD91: A1 06                                            // ..

                        Return (
 1DD93: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1DD94: 11 03 01 00                                      // ....

                }
            }

 1DD98: A5                                               // .

            Else
            {

 1DD99: A1 06                                            // ..

                Return (
 1DD9B: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1DD9C: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1DDA0: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1DDA8: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1DDAE: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1DDB7: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1DDC5: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1DDD1: A4 01                                            // ..

                    Case
 1DDD3: A1 13                                            // ..

 (0x097C8086)
                    {

 1DDD5: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1DDE1: A4 01                                            // ..

                    Default
                    {

 1DDE3: A1 03                                            // ..

                        Return (Zero)
                    }


 1DDE5: A4 00                                            // ..

                }
            }

 1DDE7: A5                                               // .

            Else
            {

 1DDE8: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1DDEA: A4 00                                            // ..

    Scope (_SB.PCI0.RP18.PXSX)
    {

 1DDEC: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1DDFC: 38 50 58 53 58                                   // 8PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1DE01: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1DE0B: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1DE1B: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1DE20: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1DE2B: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1DE3B: 52 10                                            // R.

        Name (SPLX, 
 1DE3D: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1DE42: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1DE46: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1DE56: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1DE58: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1DE68: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1DE6A: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1DE7A: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1DE7C: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1DE89: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1DE8B: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1DE99: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1DE9B: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1DEA9: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1DEAB: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1DEBA: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1DEBC: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1DECB: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1DECD: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1DEDC: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1DEDE: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1DEEE: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1DEF0: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1DEFF: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1DF01: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1DF10: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1DF12: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1DF1D: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1DF22: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1DF2D: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1DF3D: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1DF43: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1DF45: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1DF55: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1DF5A: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1DF6A: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1DF70: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1DF80: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1DF86: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1DF96: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1DF9F: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1DFA5: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1DFAA: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1DFB1: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1DFB6: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1DFBA: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1DFCA: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1DFCC: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1DFDC: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1DFDE: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1DFE8: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1DFEA: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1DFF8: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1DFFA: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1E008: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1E00A: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1E016: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1E018: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1E027: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1E029: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1E038: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1E03A: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1E045: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1E04A: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1E04F: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1E053: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1E05E: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1E069: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1E076: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1E078: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1E086: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1E088: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1E096: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1E098: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1E0A7: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1E0A9: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1E0B3: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1E0B8: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1E0BD: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1E0C1: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1E0D1: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1E0DC: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1E0EB: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1E0F8: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1E0FA: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1E108: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1E10A: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1E119: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1E11B: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1E12A: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1E12C: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1E13B: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1E13D: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1E14C: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1E14E: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1E15D: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1E15F: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1E16E: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1E170: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1E17F: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1E181: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1E190: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1E192: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1E1A1: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1E1A3: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1E1B2: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1E1B4: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1E1C3: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1E1C5: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1E1D5: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1E1D7: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1E1E7: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1E1E9: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1E1F9: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1E1FB: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1E206: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1E20B: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1E212: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1E217: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1E21E: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1E223: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1E22B: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1E231: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1E23B: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1E24A: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1E256: A4 01                                            // ..

                    Case
 1E258: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1E25B: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1E267: A4 01                                            // ..

                    Case
 1E269: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1E26C: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1E278: A4 01                                            // ..

                    Case
 1E27A: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1E27D: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1E289: A4 01                                            // ..

                    Case
 1E28B: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1E28E: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1E29A: A4 01                                            // ..

                    Case
 1E29C: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1E29F: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1E2AB: A4 01                                            // ..

                    Case
 1E2AD: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1E2B0: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1E2BC: A4 01                                            // ..

                    Case
 1E2BE: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1E2C1: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1E2CD: A4 01                                            // ..

                    Case
 1E2CF: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1E2D2: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1E2DE: A4 01                                            // ..

                    Case
 1E2E0: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1E2E3: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1E2EF: A4 01                                            // ..

                    Case
 1E2F1: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1E2F4: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1E300: A4 01                                            // ..

                    Case
 1E302: A1 33                                            // .3

 (0x24F68086)
                    {

 1E304: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1E310: A4 01                                            // ..

                    Case
 1E312: A1 23                                            // .#

 (0x24FD8086)
                    {

 1E314: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1E320: A4 01                                            // ..

                    Case
 1E322: A1 13                                            // ..

 (0x24FB8086)
                    {

 1E324: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1E330: A4 01                                            // ..

                    Default
                    {

 1E332: A1 03                                            // ..

                        Return (Zero)
                    }


 1E334: A4 00                                            // ..

                }
            }

 1E336: A5                                               // .

            Else
            {

 1E337: A1 03                                            // ..

                Return (Zero)
            }
        }


 1E339: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1E33B: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1E343: 08 5F 54 5F 31 00                                // ._T_1.


 1E349: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1E34F: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1E356: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1E35F: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1E364: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1E374: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1E378: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1E37D: A0 09 93 69 00                                   // ...i.

                        Return (
 1E382: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1E383: 11 03 01 03                                      // ....

                    Else
                    {

 1E387: A1 06                                            // ..

                        Return (
 1E389: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1E38A: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1E38E: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1E394: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1E39B: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1E3A4: A0 07                                            // ..

Zero)
                        {
                        }

 1E3A6: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1E3AC: A1 47 05                                         // .G.

 (One)
                        {

 1E3AF: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1E3B7: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1E3C6: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1E3CD: A1 36                                            // .6

 (
 1E3CF: A0 08                                            // ..

0x02)
                        {
                        }

 1E3D1: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1E3D8: A1 2B                                            // .+

 (
 1E3DA: A0 08                                            // ..

0x03)
                        {
                        }

 1E3DC: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1E3E3: A1 20                                            // . 

 (0x04)
                        {

 1E3E5: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1E3EE: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1E3FD: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1E404: A5                                               // .

                Return (Zero)
            }

 1E405: A4 00                                            // ..

            ElseIf
 1E407: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1E40A: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1E40F: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1E41F: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1E423: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1E42F: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1E437: A0 09 93 69 00                                   // ...i.

                            Return (
 1E43C: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1E43D: 11 03 01 07                                      // ....

                        Else
                        {

 1E441: A1 06                                            // ..

                            Return (
 1E443: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1E444: 11 03 01 00                                      // ....

                    Case
 1E448: A1 25                                            // .%

 (One)
                    {

 1E44A: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1E452: A4 57 48 49 54                                   // .WHIT

                    Case
 1E457: A1 16                                            // ..

 (0x02)
                    {

 1E459: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1E462: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1E467: A1 06                                            // ..

                        Return (
 1E469: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1E46A: 11 03 01 00                                      // ....

                }
            }

 1E46E: A5                                               // .

            Else
            {

 1E46F: A1 06                                            // ..

                Return (
 1E471: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1E472: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1E476: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1E47E: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1E484: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1E48D: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1E49B: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1E4A7: A4 01                                            // ..

                    Case
 1E4A9: A1 13                                            // ..

 (0x097C8086)
                    {

 1E4AB: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1E4B7: A4 01                                            // ..

                    Default
                    {

 1E4B9: A1 03                                            // ..

                        Return (Zero)
                    }


 1E4BB: A4 00                                            // ..

                }
            }

 1E4BD: A5                                               // .

            Else
            {

 1E4BE: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1E4C0: A4 00                                            // ..

    Scope (_SB.PCI0.RP19.PXSX)
    {

 1E4C2: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .Em/._SB_PCI0RP1
 1E4D2: 39 50 58 53 58                                   // 9PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1E4D7: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1E4E1: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1E4F1: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1E4F6: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1E501: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1E511: 52 10                                            // R.

        Name (SPLX, 
 1E513: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1E518: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1E51C: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1E52C: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1E52E: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1E53E: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1E540: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1E550: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1E552: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1E55F: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1E561: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1E56F: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1E571: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1E57F: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1E581: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1E590: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1E592: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1E5A1: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1E5A3: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1E5B2: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1E5B4: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1E5C4: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1E5C6: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1E5D5: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1E5D7: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1E5E6: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1E5E8: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1E5F3: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1E5F8: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1E603: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1E613: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1E619: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1E61B: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1E62B: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1E630: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1E640: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1E646: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1E656: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1E65C: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1E66C: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1E675: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1E67B: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1E680: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1E687: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1E68C: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1E690: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1E6A0: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1E6A2: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1E6B2: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1E6B4: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1E6BE: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1E6C0: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1E6CE: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1E6D0: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1E6DE: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1E6E0: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1E6EC: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1E6EE: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1E6FD: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1E6FF: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1E70E: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1E710: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1E71B: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1E720: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1E725: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1E729: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1E734: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1E73F: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1E74C: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1E74E: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1E75C: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1E75E: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1E76C: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1E76E: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1E77D: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1E77F: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1E789: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1E78E: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1E793: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1E797: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1E7A7: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1E7B2: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1E7C1: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1E7CE: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1E7D0: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1E7DE: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1E7E0: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1E7EF: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1E7F1: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1E800: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1E802: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1E811: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1E813: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1E822: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1E824: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1E833: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1E835: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1E844: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1E846: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1E855: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1E857: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1E866: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1E868: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1E877: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1E879: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1E888: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1E88A: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1E899: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1E89B: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1E8AB: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1E8AD: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1E8BD: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1E8BF: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1E8CF: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1E8D1: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1E8DC: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1E8E1: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1E8E8: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1E8ED: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1E8F4: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1E8F9: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1E901: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1E907: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1E911: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1E920: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1E92C: A4 01                                            // ..

                    Case
 1E92E: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1E931: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1E93D: A4 01                                            // ..

                    Case
 1E93F: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1E942: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1E94E: A4 01                                            // ..

                    Case
 1E950: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1E953: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1E95F: A4 01                                            // ..

                    Case
 1E961: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1E964: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1E970: A4 01                                            // ..

                    Case
 1E972: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1E975: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1E981: A4 01                                            // ..

                    Case
 1E983: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1E986: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1E992: A4 01                                            // ..

                    Case
 1E994: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1E997: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1E9A3: A4 01                                            // ..

                    Case
 1E9A5: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1E9A8: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1E9B4: A4 01                                            // ..

                    Case
 1E9B6: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1E9B9: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1E9C5: A4 01                                            // ..

                    Case
 1E9C7: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1E9CA: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1E9D6: A4 01                                            // ..

                    Case
 1E9D8: A1 33                                            // .3

 (0x24F68086)
                    {

 1E9DA: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1E9E6: A4 01                                            // ..

                    Case
 1E9E8: A1 23                                            // .#

 (0x24FD8086)
                    {

 1E9EA: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1E9F6: A4 01                                            // ..

                    Case
 1E9F8: A1 13                                            // ..

 (0x24FB8086)
                    {

 1E9FA: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1EA06: A4 01                                            // ..

                    Default
                    {

 1EA08: A1 03                                            // ..

                        Return (Zero)
                    }


 1EA0A: A4 00                                            // ..

                }
            }

 1EA0C: A5                                               // .

            Else
            {

 1EA0D: A1 03                                            // ..

                Return (Zero)
            }
        }


 1EA0F: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1EA11: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1EA19: 08 5F 54 5F 31 00                                // ._T_1.


 1EA1F: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1EA25: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1EA2C: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1EA35: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1EA3A: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1EA4A: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1EA4E: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1EA53: A0 09 93 69 00                                   // ...i.

                        Return (
 1EA58: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1EA59: 11 03 01 03                                      // ....

                    Else
                    {

 1EA5D: A1 06                                            // ..

                        Return (
 1EA5F: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1EA60: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1EA64: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1EA6A: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1EA71: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1EA7A: A0 07                                            // ..

Zero)
                        {
                        }

 1EA7C: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1EA82: A1 47 05                                         // .G.

 (One)
                        {

 1EA85: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1EA8D: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1EA9C: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1EAA3: A1 36                                            // .6

 (
 1EAA5: A0 08                                            // ..

0x02)
                        {
                        }

 1EAA7: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1EAAE: A1 2B                                            // .+

 (
 1EAB0: A0 08                                            // ..

0x03)
                        {
                        }

 1EAB2: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1EAB9: A1 20                                            // . 

 (0x04)
                        {

 1EABB: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1EAC4: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1EAD3: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1EADA: A5                                               // .

                Return (Zero)
            }

 1EADB: A4 00                                            // ..

            ElseIf
 1EADD: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1EAE0: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1EAE5: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1EAF5: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1EAF9: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1EB05: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1EB0D: A0 09 93 69 00                                   // ...i.

                            Return (
 1EB12: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1EB13: 11 03 01 07                                      // ....

                        Else
                        {

 1EB17: A1 06                                            // ..

                            Return (
 1EB19: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1EB1A: 11 03 01 00                                      // ....

                    Case
 1EB1E: A1 25                                            // .%

 (One)
                    {

 1EB20: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1EB28: A4 57 48 49 54                                   // .WHIT

                    Case
 1EB2D: A1 16                                            // ..

 (0x02)
                    {

 1EB2F: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1EB38: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1EB3D: A1 06                                            // ..

                        Return (
 1EB3F: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1EB40: 11 03 01 00                                      // ....

                }
            }

 1EB44: A5                                               // .

            Else
            {

 1EB45: A1 06                                            // ..

                Return (
 1EB47: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1EB48: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1EB4C: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1EB54: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1EB5A: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1EB63: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1EB71: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1EB7D: A4 01                                            // ..

                    Case
 1EB7F: A1 13                                            // ..

 (0x097C8086)
                    {

 1EB81: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1EB8D: A4 01                                            // ..

                    Default
                    {

 1EB8F: A1 03                                            // ..

                        Return (Zero)
                    }


 1EB91: A4 00                                            // ..

                }
            }

 1EB93: A5                                               // .

            Else
            {

 1EB94: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1EB96: A4 00                                            // ..

    Scope (_SB.PCI0.RP20.PXSX)
    {

 1EB98: 10 45 6D 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // .Em/._SB_PCI0RP2
 1EBA8: 30 50 58 53 58                                   // 0PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x30)

 1EBAD: 5B 80 52 50 58 58 02 00 0A 30                    // [.RPXX...0

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32, 
            Offset (0x2E), 
            SSID,   16
        }


 1EBB7: 5B 81 13 52 50 58 58 00 56 44 49 44 20 00 40 15  // [..RPXX.VDID .@.
 1EBC7: 53 53 49 44 10                                   // SSID.

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

 1EBCC: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


 1EBD7: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
 1EBE7: 52 10                                            // R.

        Name (SPLX, 
 1EBE9: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

 1EBEE: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1EBF2: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1EC02: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1EC04: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1EC14: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1EC16: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1EC26: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (DOM1, 
 1EC28: 14 45 0A 53 50 4C 43 08 70 44 4F 4D 31           // .E.SPLC.pDOM1

Index (DerefOf (
 1EC35: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
 1EC37: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
 1EC45: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
 1EC47: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
 1EC55: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
 1EC57: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
 1EC66: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
 1EC68: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
 1EC77: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
 1EC79: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
 1EC88: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
 1EC8A: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
 1EC9A: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
 1EC9C: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
 1ECAB: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
 1ECAD: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
 1ECBC: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

 1ECBE: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 1ECC9: A4 53 50 4C 58                                   // .SPLX

        PowerResource (WRST, 0x05, 0x0000)
        {

 1ECCE: 5B 84 41 08 57 52 53 54 05 00 00                 // [.A.WRST...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {
                ADBG ("PXSX _STA")

 1ECD9: 14 17 5F 53 54 41 00 41 44 42 47 0D 50 58 53 58  // .._STA.ADBG.PXSX
 1ECE9: 20 5F 53 54 41 00                                //  _STA.

                Return (One)
            }


 1ECEF: A4 01                                            // ..

            Method (_ON, 0, NotSerialized)  // _ON_: Power On
            {
                ADBG ("PXSX _ON")
            }


 1ECF1: 14 14 5F 4F 4E 5F 00 41 44 42 47 0D 50 58 53 58  // .._ON_.ADBG.PXSX
 1ED01: 20 5F 4F 4E 00                                   //  _ON.

            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
            {
                ADBG ("PXSX _OFF")
            }


 1ED06: 14 15 5F 4F 46 46 00 41 44 42 47 0D 50 58 53 58  // .._OFF.ADBG.PXSX
 1ED16: 20 5F 4F 46 46 00                                //  _OFF.

            Method (_RST, 0, NotSerialized)  // _RST: Device Reset
            {
                ADBG ("PXSX _RST")

 1ED1C: 14 34 5F 52 53 54 00 41 44 42 47 0D 50 58 53 58  // .4_RST.ADBG.PXSX
 1ED2C: 20 5F 52 53 54 00                                //  _RST.

                If (And (DCAP, 0x10000000))
                {
                    Store (DCTR, Local0)
                    Or (Local0, 0x8000, Local0)

 1ED32: A0 1E 7B 44 43 41 50 0C 00 00 00 10 00 70 44 43  // ..{DCAP......pDC
 1ED42: 54 52 60 7D 60 0B 00 80 60                       // TR`}`...`

                    Store (Local0, DCTR)
                }
            }
        }


 1ED4B: 70 60 44 43 54 52                                // p`DCTR

        Name (_PRR, 
 1ED51: 08 5F 50 52 52                                   // ._PRR

Package (0x01)  // _PRR: Power Resource for Reset
        {
            WRST
        })

 1ED56: 12 06 01 57 52 53 54                             // ...WRST

        Name (WANX, 
 1ED5D: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

 1ED62: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 1ED66: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1ED76: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 1ED78: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 1ED88: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
 1ED8A: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
 1ED94: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
 1ED96: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
 1EDA4: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
 1EDA6: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
 1EDB4: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
 1EDB6: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
 1EDC2: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
 1EDC4: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
 1EDD3: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
 1EDD5: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
 1EDE4: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

 1EDE6: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX)
        }


 1EDF1: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
 1EDF6: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

 1EDFB: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


 1EDFF: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

 1EE0A: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
 1EE15: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
 1EE22: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
 1EE24: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
 1EE32: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
 1EE34: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
 1EE42: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
 1EE44: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
 1EE53: 88 83                                            // ..

Index (WRDX, 0x02)), One))

 1EE55: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX)
        }


 1EE5F: A4 57 52 44 58                                   // .WRDX

        Name (WRDY, 
 1EE64: 08 57 52 44 59                                   // .WRDY

Package (0x03)
        {
            Zero, 

 1EE69: 12 2D 03 00                                      // .-..

            Package (0x0C)
            {
                0x07, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }, 


 1EE6D: 12 1A 0C 0A 07 0A 80 0A 80 0A 80 0A 80 0A 80 0A  // ................
 1EE7D: 80 0A 80 0A 80 0A 80 0A 80 0A 80                 // ...........

            Package (0x06)
            {
                0x10, 
                0x80, 
                0x80, 
                0x80, 
                0x80, 
                0x80
            }
        })

 1EE88: 12 0E 06 0A 10 0A 80 0A 80 0A 80 0A 80 0A 80     // ...............

        Method (WRDS, 0, Serialized)
        {
            Store (STXE, 
 1EE97: 14 4F 11 57 52 44 53 08 70 53 54 58 45           // .O.WRDS.pSTXE

Index (DerefOf (
 1EEA4: 88 83                                            // ..

Index (WRDY, One)), One))
            Store (STX0, 
 1EEA6: 88 57 52 44 59 01 00 01 00 70 53 54 58 30        // .WRDY....pSTX0

Index (DerefOf (
 1EEB4: 88 83                                            // ..

Index (WRDY, One)), 0x02))
            Store (STX1, 
 1EEB6: 88 57 52 44 59 01 00 0A 02 00 70 53 54 58 31     // .WRDY.....pSTX1

Index (DerefOf (
 1EEC5: 88 83                                            // ..

Index (WRDY, One)), 0x03))
            Store (STX2, 
 1EEC7: 88 57 52 44 59 01 00 0A 03 00 70 53 54 58 32     // .WRDY.....pSTX2

Index (DerefOf (
 1EED6: 88 83                                            // ..

Index (WRDY, One)), 0x04))
            Store (STX3, 
 1EED8: 88 57 52 44 59 01 00 0A 04 00 70 53 54 58 33     // .WRDY.....pSTX3

Index (DerefOf (
 1EEE7: 88 83                                            // ..

Index (WRDY, One)), 0x05))
            Store (STX4, 
 1EEE9: 88 57 52 44 59 01 00 0A 05 00 70 53 54 58 34     // .WRDY.....pSTX4

Index (DerefOf (
 1EEF8: 88 83                                            // ..

Index (WRDY, One)), 0x06))
            Store (STX5, 
 1EEFA: 88 57 52 44 59 01 00 0A 06 00 70 53 54 58 35     // .WRDY.....pSTX5

Index (DerefOf (
 1EF09: 88 83                                            // ..

Index (WRDY, One)), 0x07))
            Store (STX6, 
 1EF0B: 88 57 52 44 59 01 00 0A 07 00 70 53 54 58 36     // .WRDY.....pSTX6

Index (DerefOf (
 1EF1A: 88 83                                            // ..

Index (WRDY, One)), 0x08))
            Store (STX7, 
 1EF1C: 88 57 52 44 59 01 00 0A 08 00 70 53 54 58 37     // .WRDY.....pSTX7

Index (DerefOf (
 1EF2B: 88 83                                            // ..

Index (WRDY, One)), 0x09))
            Store (STX8, 
 1EF2D: 88 57 52 44 59 01 00 0A 09 00 70 53 54 58 38     // .WRDY.....pSTX8

Index (DerefOf (
 1EF3C: 88 83                                            // ..

Index (WRDY, One)), 0x0A))
            Store (STX9, 
 1EF3E: 88 57 52 44 59 01 00 0A 0A 00 70 53 54 58 39     // .WRDY.....pSTX9

Index (DerefOf (
 1EF4D: 88 83                                            // ..

Index (WRDY, One)), 0x0B))
            Store (WRFE, 
 1EF4F: 88 57 52 44 59 01 00 0A 0B 00 70 57 52 46 45     // .WRDY.....pWRFE

Index (DerefOf (
 1EF5E: 88 83                                            // ..

Index (WRDY, 0x02)), One))
            Store (WRC1, 
 1EF60: 88 57 52 44 59 0A 02 00 01 00 70 57 52 43 31     // .WRDY.....pWRC1

Index (DerefOf (
 1EF6F: 88 83                                            // ..

Index (WRDY, 0x02)), 0x02))
            Store (WRC2, 
 1EF71: 88 57 52 44 59 0A 02 00 0A 02 00 70 57 52 43 32  // .WRDY......pWRC2

Index (DerefOf (
 1EF81: 88 83                                            // ..

Index (WRDY, 0x02)), 0x03))
            Store (WRC3, 
 1EF83: 88 57 52 44 59 0A 02 00 0A 03 00 70 57 52 43 33  // .WRDY......pWRC3

Index (DerefOf (
 1EF93: 88 83                                            // ..

Index (WRDY, 0x02)), 0x04))
            Store (WRC4, 
 1EF95: 88 57 52 44 59 0A 02 00 0A 04 00 70 57 52 43 34  // .WRDY......pWRC4

Index (DerefOf (
 1EFA5: 88 83                                            // ..

Index (WRDY, 0x02)), 0x05))

 1EFA7: 88 57 52 44 59 0A 02 00 0A 05 00                 // .WRDY......

            Return (WRDY)
        }


 1EFB2: A4 57 52 44 59                                   // .WRDY

        Method (AWVC, 0, Serialized)
        {

 1EFB7: 14 0B 41 57 56 43 08                             // ..AWVC.

            Return (AWVI)
        }


 1EFBE: A4 41 57 56 49                                   // .AWVI

        Method (WOWG, 0, Serialized)
        {

 1EFC3: 14 0B 57 4F 57 47 08                             // ..WOWG.

            Return (WGWS)
        }


 1EFCA: A4 57 47 57 53                                   // .WGWS

        Method (WIST, 0, Serialized)
        {

 1EFCF: 14 47 11 57 49 53 54 08                          // .G.WIST.


 1EFD7: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1EFDD: A0 45 10 5B 12 56 44 49 44 00                    // .E.[.VDID.

                Switch (ToInteger (VDID))
                {

 1EFE7: A2 4B 0F 01 70 99 56 44 49 44 00 5F 54 5F 30     // .K..p.VDID._T_0

                    Case (0x095A8086)
                    {

 1EFF6: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

 1F002: A4 01                                            // ..

                    Case
 1F004: A1 4D 0D                                         // .M.

 (0x095B8086)
                    {

 1F007: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

 1F013: A4 01                                            // ..

                    Case
 1F015: A1 4C 0C                                         // .L.

 (0x31658086)
                    {

 1F018: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

 1F024: A4 01                                            // ..

                    Case
 1F026: A1 4B 0B                                         // .K.

 (0x31668086)
                    {

 1F029: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

 1F035: A4 01                                            // ..

                    Case
 1F037: A1 4A 0A                                         // .J.

 (0x08B18086)
                    {

 1F03A: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

 1F046: A4 01                                            // ..

                    Case
 1F048: A1 49 09                                         // .I.

 (0x08B28086)
                    {

 1F04B: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

 1F057: A4 01                                            // ..

                    Case
 1F059: A1 48 08                                         // .H.

 (0x08B38086)
                    {

 1F05C: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

 1F068: A4 01                                            // ..

                    Case
 1F06A: A1 47 07                                         // .G.

 (0x08B48086)
                    {

 1F06D: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

 1F079: A4 01                                            // ..

                    Case
 1F07B: A1 46 06                                         // .F.

 (0x24F38086)
                    {

 1F07E: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

 1F08A: A4 01                                            // ..

                    Case
 1F08C: A1 45 05                                         // .E.

 (0x24F48086)
                    {

 1F08F: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

 1F09B: A4 01                                            // ..

                    Case
 1F09D: A1 44 04                                         // .D.

 (0x24F58086)
                    {

 1F0A0: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

 1F0AC: A4 01                                            // ..

                    Case
 1F0AE: A1 33                                            // .3

 (0x24F68086)
                    {

 1F0B0: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

 1F0BC: A4 01                                            // ..

                    Case
 1F0BE: A1 23                                            // .#

 (0x24FD8086)
                    {

 1F0C0: A0 0D 93 5F 54 5F 30 0C 86 80 FD 24              // ..._T_0....$

                        Return (One)
                    }

 1F0CC: A4 01                                            // ..

                    Case
 1F0CE: A1 13                                            // ..

 (0x24FB8086)
                    {

 1F0D0: A0 0D 93 5F 54 5F 30 0C 86 80 FB 24              // ..._T_0....$

                        Return (One)
                    }

 1F0DC: A4 01                                            // ..

                    Default
                    {

 1F0DE: A1 03                                            // ..

                        Return (Zero)
                    }


 1F0E0: A4 00                                            // ..

                }
            }

 1F0E2: A5                                               // .

            Else
            {

 1F0E3: A1 03                                            // ..

                Return (Zero)
            }
        }


 1F0E5: A4 00                                            // ..

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 1F0E7: 14 4A 13 5F 44 53 4D 0C                          // .J._DSM.


 1F0EF: 08 5F 54 5F 31 00                                // ._T_1.


 1F0F5: 08 5F 54 5F 30 00                                // ._T_0.

            If (PCIC (Arg0))
            {

 1F0FB: A0 0F 50 43 49 43 68                             // ..PCICh

                Return (PCID (Arg0, Arg1, Arg2, Arg3))
            }


 1F102: A4 50 43 49 44 68 69 6A 6B                       // .PCIDhijk

            If (LEqual (Arg0, 
 1F10B: A0 47 0A 93 68                                   // .G..h

ToUUID ("1730e71d-e5dd-4a34-be57-4d76b6a2fe37")))
            {

 1F110: 11 13 0A 10 1D E7 30 17 DD E5 34 4A BE 57 4D 76  // ......0...4J.WMv
 1F120: B6 A2 FE 37                                      // ...7

                If (LEqual (Arg2, Zero))
                {

 1F124: A0 15 93 6A 00                                   // ...j.

                    If (LEqual (Arg1, Zero))
                    {

 1F129: A0 09 93 69 00                                   // ...i.

                        Return (
 1F12E: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 1F12F: 11 03 01 03                                      // ....

                    Else
                    {

 1F133: A1 06                                            // ..

                        Return (
 1F135: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


 1F136: 11 03 01 00                                      // ....

                If (LEqual (Arg2, One))
                {

 1F13A: A0 46 07 93 6A 01                                // .F..j.

                    Switch (ToInteger (DerefOf (
 1F140: A2 40 07 01 70 99 83                             // .@..p..

Index (Arg3, Zero))))
                    {

 1F147: 88 6B 00 00 00 5F 54 5F 30                       // .k..._T_0

                        Case (
 1F150: A0 07                                            // ..

Zero)
                        {
                        }

 1F152: 93 5F 54 5F 30 00                                // ._T_0.

                        Case
 1F158: A1 47 05                                         // .G.

 (One)
                        {

 1F15B: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                            If (CondRefOf (\_SB.SBTN))
                            {

 1F163: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x80)
                            }
                        }

 1F172: 86 53 42 54 4E 0A 80                             // .SBTN..

                        Case
 1F179: A1 36                                            // .6

 (
 1F17B: A0 08                                            // ..

0x02)
                        {
                        }

 1F17D: 93 5F 54 5F 30 0A 02                             // ._T_0..

                        Case
 1F184: A1 2B                                            // .+

 (
 1F186: A0 08                                            // ..

0x03)
                        {
                        }

 1F188: 93 5F 54 5F 30 0A 03                             // ._T_0..

                        Case
 1F18F: A1 20                                            // . 

 (0x04)
                        {

 1F191: A0 1E 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (CondRefOf (\_SB.SBTN))
                            {

 1F19A: A0 15 5B 12 5C 2E 5F 53 42 5F 53 42 54 4E 00     // ..[.\._SB_SBTN.

                                Notify (SBTN, 0x02)
                            }
                        }


 1F1A9: 86 53 42 54 4E 0A 02                             // .SBTN..

                    }
                }


 1F1B0: A5                                               // .

                Return (Zero)
            }

 1F1B1: A4 00                                            // ..

            ElseIf
 1F1B3: A1 4E 06                                         // .N.

 (LEqual (Arg0, 
 1F1B6: A0 44 06 93 68                                   // .D..h

ToUUID ("7574eb17-d1a2-4cc2-9929-4a08fcc29107")))
            {

 1F1BB: 11 13 0A 10 17 EB 74 75 A2 D1 C2 4C 99 29 4A 08  // ......tu...L.)J.
 1F1CB: FC C2 91 07                                      // ....

                Switch (ToInteger (Arg2))
                {

 1F1CF: A2 4B 04 01 70 99 6A 00 5F 54 5F 31              // .K..p.j._T_1

                    Case (Zero)
                    {

 1F1DB: A0 18 93 5F 54 5F 31 00                          // ..._T_1.

                        If (LEqual (Arg1, Zero))
                        {

 1F1E3: A0 09 93 69 00                                   // ...i.

                            Return (
 1F1E8: A4                                               // .

Buffer (One)
                            {
                                 0x07                                           
                            })
                        }

 1F1E9: 11 03 01 07                                      // ....

                        Else
                        {

 1F1ED: A1 06                                            // ..

                            Return (
 1F1EF: A4                                               // .

Buffer (One)
                            {
                                 0x00                                           
                            })
                        }
                    }

 1F1F0: 11 03 01 00                                      // ....

                    Case
 1F1F4: A1 25                                            // .%

 (One)
                    {

 1F1F6: A0 0C 93 5F 54 5F 31 01                          // ..._T_1.

                        Return (WHIT ())
                    }

 1F1FE: A4 57 48 49 54                                   // .WHIT

                    Case
 1F203: A1 16                                            // ..

 (0x02)
                    {

 1F205: A0 0D 93 5F 54 5F 31 0A 02                       // ..._T_1..

                        Return (SELF ())
                    }

 1F20E: A4 53 45 4C 46                                   // .SELF

                    Default
                    {

 1F213: A1 06                                            // ..

                        Return (
 1F215: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }


 1F216: 11 03 01 00                                      // ....

                }
            }

 1F21A: A5                                               // .

            Else
            {

 1F21B: A1 06                                            // ..

                Return (
 1F21D: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }


 1F21E: 11 03 01 00                                      // ....

        Method (WGST, 0, Serialized)
        {

 1F222: 14 4B 04 57 47 53 54 08                          // .K.WGST.


 1F22A: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

 1F230: A0 39 5B 12 56 44 49 44 00                       // .9[.VDID.

                Switch (ToInteger (VDID))
                {

 1F239: A2 30 01 70 99 56 44 49 44 00 5F 54 5F 30        // .0.p.VDID._T_0

                    Case (0x093C8086)
                    {

 1F247: A0 0D 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                        Return (One)
                    }

 1F253: A4 01                                            // ..

                    Case
 1F255: A1 13                                            // ..

 (0x097C8086)
                    {

 1F257: A0 0D 93 5F 54 5F 30 0C 86 80 7C 09              // ..._T_0...|.

                        Return (One)
                    }

 1F263: A4 01                                            // ..

                    Default
                    {

 1F265: A1 03                                            // ..

                        Return (Zero)
                    }


 1F267: A4 00                                            // ..

                }
            }

 1F269: A5                                               // .

            Else
            {

 1F26A: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


 1F26C: A4 00                                            // ..

    Scope (_SB.PCI0)
    {

 1F26E: 10 41 05 2E 5F 53 42 5F 50 43 49 30              // .A.._SB_PCI0

        Method (WHIT, 0, NotSerialized)
        {

 1F27A: 14 28 57 48 49 54 00                             // .(WHIT.

            Return (
 1F281: A4                                               // .

Package (0x01)
            {

 1F282: 12 20 01                                         // . .

                Package (0x05)
                {
                    "DockOemId", 
                    "DockSkuId", 
                    Zero, 
                    0x02, 
                    0x02
                }
            })
        }


 1F285: 12 1D 05 0D 44 6F 63 6B 4F 65 6D 49 64 00 0D 44  // ....DockOemId..D
 1F295: 6F 63 6B 53 6B 75 49 64 00 00 0A 02 0A 02        // ockSkuId......

        Method (SELF, 0, NotSerialized)
        {

 1F2A3: 14 1C 53 45 4C 46 00                             // ..SELF.

            Return (
 1F2AA: A4                                               // .

Package (0x02)
            {
                "PcOemId", 
                "PcSkuId"
            })
        }
    }


 1F2AB: 12 14 02 0D 50 63 4F 65 6D 49 64 00 0D 50 63 53  // ....PcOemId..PcS
 1F2BB: 6B 75 49 64 00                                   // kuId.

    Scope (_SB.PCI0.GFX0)
    {

 1F2C0: 10 36 2F 03 5F 53 42 5F 50 43 49 30 47 46 58 30  // .6/._SB_PCI0GFX0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F2D0: 14 26 5F 44 45 50 00                             // .&_DEP.

            If (LOr (LEqual (S0ID, One), 
 1F2D7: A0 19 91 93 53 30 49 44 01                       // ....S0ID.


 1F2E0: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 1F2E1: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 1F2E9: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

 1F2EA: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

 1F2F1: A1 05                                            // ..

                Return (
 1F2F3: A4                                               // .

Package (0x00){})
            }
        }
    }


 1F2F4: 12 02 00                                         // ...

    Scope (_SB.PCI0.ISP0)
    {

 1F2F7: 10 36 2F 03 5F 53 42 5F 50 43 49 30 49 53 50 30  // .6/._SB_PCI0ISP0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F307: 14 26 5F 44 45 50 00                             // .&_DEP.

            If (LOr (LEqual (S0ID, One), 
 1F30E: A0 19 91 93 53 30 49 44 01                       // ....S0ID.


 1F317: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 1F318: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 1F320: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

 1F321: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

 1F328: A1 05                                            // ..

                Return (
 1F32A: A4                                               // .

Package (0x00){})
            }
        }
    }


 1F32B: 12 02 00                                         // ...

    Scope (_SB.PCI0.SAT0)
    {

 1F32E: 10 43 04 2F 03 5F 53 42 5F 50 43 49 30 53 41 54  // .C./._SB_PCI0SAT
 1F33E: 30                                               // 0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F33F: 14 32 5F 44 45 50 00                             // .2_DEP.

            If (LAnd (LOr (LEqual (S0ID, One), 
 1F346: A0 25 90 91 93 53 30 49 44 01                    // .%...S0ID.


 1F350: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F351: 95 4F 53 59 53 0B DF 07                          // .OSYS...


 1F359: 92                                               // .

LNotEqual (And (PEPC, 0x03), Zero)))
            {

 1F35A: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                Return (
 1F364: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

 1F365: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

 1F36C: A1 05                                            // ..

                Return (
 1F36E: A4                                               // .

Package (0x00){})
            }
        }
    }


 1F36F: 12 02 00                                         // ...

    Scope (_SB.PCI0.SAT0.VOL0)
    {

 1F372: 10 30 2F 04 5F 53 42 5F 50 43 49 30 53 41 54 30  // .0/._SB_PCI0SAT0
 1F382: 56 4F 4C 30                                      // VOL0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F386: 14 1C 5F 44 45 50 00                             // .._DEP.

            If (LEqual (OSYS, 0x07DD))
            {

 1F38D: A0 0D 93 4F 53 59 53 0B DD 07                    // ...OSYS...

                Return (
 1F397: A4                                               // .

Package (0x00){})
            }


 1F398: 12 02 00                                         // ...

            Return (
 1F39B: A4                                               // .

Package (0x01)
            {
                PEPD
            })
        }
    }


 1F39C: 12 06 01 50 45 50 44                             // ...PEPD

    If (LOr (LEqual (S0ID, One), 
 1F3A3: A0 46 14 91 93 53 30 49 44 01                    // .F...S0ID.


 1F3AD: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
    {

 1F3AE: 95 4F 53 59 53 0B DF 07                          // .OSYS...

        Scope (_SB.PCI0.I2C0)
        {

 1F3B6: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // ../._SB_PCI0I2C0

            Name (_DEP, 
 1F3C6: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F3CB: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C1)
        {

 1F3D2: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 31  // ../._SB_PCI0I2C1

            Name (_DEP, 
 1F3E2: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F3E7: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C2)
        {

 1F3EE: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 32  // ../._SB_PCI0I2C2

            Name (_DEP, 
 1F3FE: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F403: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C3)
        {

 1F40A: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 33  // ../._SB_PCI0I2C3

            Name (_DEP, 
 1F41A: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F41F: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C4)
        {

 1F426: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 34  // ../._SB_PCI0I2C4

            Name (_DEP, 
 1F436: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F43B: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.I2C5)
        {

 1F442: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 35  // ../._SB_PCI0I2C5

            Name (_DEP, 
 1F452: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F457: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.SPI0)
        {

 1F45E: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 30  // ../._SB_PCI0SPI0

            Name (_DEP, 
 1F46E: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F473: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.SPI1)
        {

 1F47A: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 31  // ../._SB_PCI0SPI1

            Name (_DEP, 
 1F48A: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F48F: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.UA00)
        {

 1F496: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 30  // ../._SB_PCI0UA00

            Name (_DEP, 
 1F4A6: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F4AB: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.UA01)
        {

 1F4B2: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 31  // ../._SB_PCI0UA01

            Name (_DEP, 
 1F4C2: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }


 1F4C7: 12 06 01 50 45 50 44                             // ...PEPD

        Scope (_SB.PCI0.UA02)
        {

 1F4CE: 10 1B 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 32  // ../._SB_PCI0UA02

            Name (_DEP, 
 1F4DE: 08 5F 44 45 50                                   // ._DEP

Package (0x01)  // _DEP: Dependencies
            {
                PEPD
            })
        }
    }


 1F4E3: 12 06 01 50 45 50 44                             // ...PEPD

    Scope (_SB.PCI0.XHC)
    {

 1F4EA: 10 36 2F 03 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .6/._SB_PCI0XHC_

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F4FA: 14 26 5F 44 45 50 00                             // .&_DEP.

            If (LOr (LEqual (S0ID, One), 
 1F501: A0 19 91 93 53 30 49 44 01                       // ....S0ID.


 1F50A: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 1F50B: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 1F513: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

 1F514: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

 1F51B: A1 05                                            // ..

                Return (
 1F51D: A4                                               // .

Package (0x00){})
            }
        }
    }


 1F51E: 12 02 00                                         // ...

    Scope (_SB.PCI0.HDAS)
    {

 1F521: 10 2C 2F 03 5F 53 42 5F 50 43 49 30 48 44 41 53  // .,/._SB_PCI0HDAS

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F531: 14 1C 5F 44 45 50 00                             // .._DEP.

            If (LEqual (S0ID, One))
            {

 1F538: A0 0F 93 53 30 49 44 01                          // ...S0ID.

                Return (
 1F540: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

 1F541: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

 1F548: A1 05                                            // ..

                Return (
 1F54A: A4                                               // .

Package (0x00){})
            }
        }
    }


 1F54B: 12 02 00                                         // ...

    If (CondRefOf (\_SB.PCI0.RP01.PXSX))
    {

 1F54E: A0 46 0E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .F.[.\/._SB_PCI0
 1F55E: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

        Scope (_SB.PCI0.RP01.PXSX)
        {

 1F567: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1F577: 31 50 58 53 58                                   // 1PXSX

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

 1F57C: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

                If (LOr (PAHC (), PNVM ()))
                {

 1F584: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                    If (LAnd (LOr (LEqual (S0ID, One), 
 1F590: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1F59A: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F59B: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1F5A3: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                    {

 1F5B1: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                        Return (
 1F5BE: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }
                }


 1F5BF: 12 06 01 50 45 50 44                             // ...PEPD

                Return (
 1F5C6: A4                                               // .

Package (0x00){})
            }


 1F5C7: 12 02 00                                         // ...

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1F5CA: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }


 1F5D5: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1F5E5: 58 08 42 43 43 58 08                             // X.BCCX.

            Method (PAHC, 0, Serialized)
            {

 1F5EC: 14 23 50 41 48 43 08                             // .#PAHC.

                If (LEqual (BCCX, One))
                {

 1F5F3: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x06))
                    {

 1F5FB: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                        If (LEqual (PIXX, One))
                        {

 1F604: A0 09 93 50 49 58 58 01                          // ...PIXX.

                            Return (One)
                        }
                    }
                }


 1F60C: A4 01                                            // ..

                Return (Zero)
            }


 1F60E: A4 00                                            // ..

            Method (PNVM, 0, Serialized)
            {

 1F610: 14 24 50 4E 56 4D 08                             // .$PNVM.

                If (LEqual (BCCX, One))
                {

 1F617: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x08))
                    {

 1F61F: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                        If (LEqual (PIXX, 0x02))
                        {

 1F628: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                            Return (One)
                        }
                    }
                }


 1F631: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


 1F633: A4 00                                            // ..

    Scope (_SB.PCI0.RP02.PXSX)
    {

 1F635: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1F645: 32 50 58 53 58                                   // 2PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F64A: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1F652: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1F65E: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1F668: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F669: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1F671: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1F67F: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1F68C: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1F68D: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1F694: A4                                               // .

Package (0x00){})
        }


 1F695: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1F698: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1F6A3: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1F6B3: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1F6BA: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1F6C1: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1F6C9: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1F6D2: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1F6DA: A4 01                                            // ..

            Return (Zero)
        }


 1F6DC: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1F6DE: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1F6E5: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1F6ED: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1F6F6: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1F6FF: A4 01                                            // ..

            Return (Zero)
        }
    }


 1F701: A4 00                                            // ..

    Scope (_SB.PCI0.RP03.PXSX)
    {

 1F703: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1F713: 33 50 58 53 58                                   // 3PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F718: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1F720: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1F72C: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1F736: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F737: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1F73F: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1F74D: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1F75A: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1F75B: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1F762: A4                                               // .

Package (0x00){})
        }


 1F763: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1F766: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1F771: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1F781: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1F788: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1F78F: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1F797: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1F7A0: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1F7A8: A4 01                                            // ..

            Return (Zero)
        }


 1F7AA: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1F7AC: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1F7B3: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1F7BB: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1F7C4: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1F7CD: A4 01                                            // ..

            Return (Zero)
        }
    }


 1F7CF: A4 00                                            // ..

    Scope (_SB.PCI0.RP04.PXSX)
    {

 1F7D1: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1F7E1: 34 50 58 53 58                                   // 4PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F7E6: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1F7EE: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1F7FA: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1F804: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F805: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1F80D: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1F81B: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1F828: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1F829: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1F830: A4                                               // .

Package (0x00){})
        }


 1F831: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1F834: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1F83F: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1F84F: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1F856: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1F85D: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1F865: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1F86E: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1F876: A4 01                                            // ..

            Return (Zero)
        }


 1F878: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1F87A: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1F881: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1F889: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1F892: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1F89B: A4 01                                            // ..

            Return (Zero)
        }
    }


 1F89D: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP05.PXSX))
    {

 1F89F: A0 46 0E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .F.[.\/._SB_PCI0
 1F8AF: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

        Scope (_SB.PCI0.RP05.PXSX)
        {

 1F8B8: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1F8C8: 35 50 58 53 58                                   // 5PXSX

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

 1F8CD: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

                If (LOr (PAHC (), PNVM ()))
                {

 1F8D5: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                    If (LAnd (LOr (LEqual (S0ID, One), 
 1F8E1: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1F8EB: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F8EC: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1F8F4: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                    {

 1F902: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                        Return (
 1F90F: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }
                }


 1F910: 12 06 01 50 45 50 44                             // ...PEPD

                Return (
 1F917: A4                                               // .

Package (0x00){})
            }


 1F918: 12 02 00                                         // ...

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1F91B: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }


 1F926: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1F936: 58 08 42 43 43 58 08                             // X.BCCX.

            Method (PAHC, 0, Serialized)
            {

 1F93D: 14 23 50 41 48 43 08                             // .#PAHC.

                If (LEqual (BCCX, One))
                {

 1F944: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x06))
                    {

 1F94C: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                        If (LEqual (PIXX, One))
                        {

 1F955: A0 09 93 50 49 58 58 01                          // ...PIXX.

                            Return (One)
                        }
                    }
                }


 1F95D: A4 01                                            // ..

                Return (Zero)
            }


 1F95F: A4 00                                            // ..

            Method (PNVM, 0, Serialized)
            {

 1F961: 14 24 50 4E 56 4D 08                             // .$PNVM.

                If (LEqual (BCCX, One))
                {

 1F968: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x08))
                    {

 1F970: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                        If (LEqual (PIXX, 0x02))
                        {

 1F979: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                            Return (One)
                        }
                    }
                }


 1F982: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


 1F984: A4 00                                            // ..

    Scope (_SB.PCI0.RP06.PXSX)
    {

 1F986: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1F996: 36 50 58 53 58                                   // 6PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1F99B: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1F9A3: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1F9AF: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1F9B9: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1F9BA: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1F9C2: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1F9D0: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1F9DD: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1F9DE: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1F9E5: A4                                               // .

Package (0x00){})
        }


 1F9E6: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1F9E9: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1F9F4: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FA04: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FA0B: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FA12: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FA1A: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FA23: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FA2B: A4 01                                            // ..

            Return (Zero)
        }


 1FA2D: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FA2F: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FA36: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FA3E: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1FA47: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1FA50: A4 01                                            // ..

            Return (Zero)
        }
    }


 1FA52: A4 00                                            // ..

    Scope (_SB.PCI0.RP07.PXSX)
    {

 1FA54: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1FA64: 37 50 58 53 58                                   // 7PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1FA69: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1FA71: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1FA7D: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FA87: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FA88: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FA90: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1FA9E: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1FAAB: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1FAAC: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1FAB3: A4                                               // .

Package (0x00){})
        }


 1FAB4: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FAB7: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1FAC2: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FAD2: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FAD9: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FAE0: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FAE8: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FAF1: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FAF9: A4 01                                            // ..

            Return (Zero)
        }


 1FAFB: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FAFD: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FB04: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FB0C: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1FB15: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1FB1E: A4 01                                            // ..

            Return (Zero)
        }
    }


 1FB20: A4 00                                            // ..

    Scope (_SB.PCI0.RP08.PXSX)
    {

 1FB22: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1FB32: 38 50 58 53 58                                   // 8PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1FB37: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1FB3F: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1FB4B: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FB55: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FB56: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FB5E: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1FB6C: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1FB79: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1FB7A: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1FB81: A4                                               // .

Package (0x00){})
        }


 1FB82: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FB85: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1FB90: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FBA0: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FBA7: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FBAE: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FBB6: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FBBF: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FBC7: A4 01                                            // ..

            Return (Zero)
        }


 1FBC9: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FBCB: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FBD2: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FBDA: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1FBE3: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1FBEC: A4 01                                            // ..

            Return (Zero)
        }
    }


 1FBEE: A4 00                                            // ..

    If (CondRefOf (\_SB.PCI0.RP09.PXSX))
    {

 1FBF0: A0 46 0E 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .F.[.\/._SB_PCI0
 1FC00: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

        Scope (_SB.PCI0.RP09.PXSX)
        {

 1FC09: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .M./._SB_PCI0RP0
 1FC19: 39 50 58 53 58                                   // 9PXSX

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

 1FC1E: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

                If (LOr (PAHC (), PNVM ()))
                {

 1FC26: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                    If (LAnd (LOr (LEqual (S0ID, One), 
 1FC32: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FC3C: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FC3D: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FC45: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                    {

 1FC53: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                        Return (
 1FC60: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }
                }


 1FC61: 12 06 01 50 45 50 44                             // ...PEPD

                Return (
 1FC68: A4                                               // .

Package (0x00){})
            }


 1FC69: 12 02 00                                         // ...

            OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FC6C: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

            Field (PCCX, ByteAcc, NoLock, Preserve)
            {
                PIXX,   8, 
                SCCX,   8, 
                BCCX,   8
            }


 1FC77: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FC87: 58 08 42 43 43 58 08                             // X.BCCX.

            Method (PAHC, 0, Serialized)
            {

 1FC8E: 14 23 50 41 48 43 08                             // .#PAHC.

                If (LEqual (BCCX, One))
                {

 1FC95: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x06))
                    {

 1FC9D: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                        If (LEqual (PIXX, One))
                        {

 1FCA6: A0 09 93 50 49 58 58 01                          // ...PIXX.

                            Return (One)
                        }
                    }
                }


 1FCAE: A4 01                                            // ..

                Return (Zero)
            }


 1FCB0: A4 00                                            // ..

            Method (PNVM, 0, Serialized)
            {

 1FCB2: 14 24 50 4E 56 4D 08                             // .$PNVM.

                If (LEqual (BCCX, One))
                {

 1FCB9: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                    If (LEqual (SCCX, 0x08))
                    {

 1FCC1: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                        If (LEqual (PIXX, 0x02))
                        {

 1FCCA: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                            Return (One)
                        }
                    }
                }


 1FCD3: A4 01                                            // ..

                Return (Zero)
            }
        }
    }


 1FCD5: A4 00                                            // ..

    Scope (_SB.PCI0.RP10.PXSX)
    {

 1FCD7: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 1FCE7: 30 50 58 53 58                                   // 0PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1FCEC: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1FCF4: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1FD00: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FD0A: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FD0B: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FD13: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1FD21: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1FD2E: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1FD2F: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1FD36: A4                                               // .

Package (0x00){})
        }


 1FD37: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FD3A: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1FD45: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FD55: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FD5C: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FD63: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FD6B: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FD74: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FD7C: A4 01                                            // ..

            Return (Zero)
        }


 1FD7E: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FD80: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FD87: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FD8F: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1FD98: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1FDA1: A4 01                                            // ..

            Return (Zero)
        }
    }


 1FDA3: A4 00                                            // ..

    Scope (_SB.PCI0.RP11.PXSX)
    {

 1FDA5: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 1FDB5: 31 50 58 53 58                                   // 1PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1FDBA: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1FDC2: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1FDCE: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FDD8: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FDD9: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FDE1: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1FDEF: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1FDFC: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1FDFD: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1FE04: A4                                               // .

Package (0x00){})
        }


 1FE05: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FE08: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1FE13: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FE23: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FE2A: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FE31: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FE39: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FE42: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FE4A: A4 01                                            // ..

            Return (Zero)
        }


 1FE4C: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FE4E: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FE55: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FE5D: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1FE66: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1FE6F: A4 01                                            // ..

            Return (Zero)
        }
    }


 1FE71: A4 00                                            // ..

    Scope (_SB.PCI0.RP12.PXSX)
    {

 1FE73: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 1FE83: 32 50 58 53 58                                   // 2PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1FE88: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1FE90: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1FE9C: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FEA6: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FEA7: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FEAF: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1FEBD: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1FECA: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1FECB: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1FED2: A4                                               // .

Package (0x00){})
        }


 1FED3: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FED6: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1FEE1: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FEF1: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FEF8: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FEFF: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FF07: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FF10: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FF18: A4 01                                            // ..

            Return (Zero)
        }


 1FF1A: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FF1C: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FF23: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FF2B: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 1FF34: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 1FF3D: A4 01                                            // ..

            Return (Zero)
        }
    }


 1FF3F: A4 00                                            // ..

    Scope (_SB.PCI0.RP13.PXSX)
    {

 1FF41: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 1FF51: 33 50 58 53 58                                   // 3PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 1FF56: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 1FF5E: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 1FF6A: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 1FF74: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 1FF75: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 1FF7D: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 1FF8B: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 1FF98: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 1FF99: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 1FFA0: A4                                               // .

Package (0x00){})
        }


 1FFA1: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 1FFA4: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 1FFAF: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 1FFBF: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 1FFC6: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 1FFCD: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 1FFD5: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 1FFDE: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 1FFE6: A4 01                                            // ..

            Return (Zero)
        }


 1FFE8: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 1FFEA: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 1FFF1: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 1FFF9: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 20002: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 2000B: A4 01                                            // ..

            Return (Zero)
        }
    }


 2000D: A4 00                                            // ..

    Scope (_SB.PCI0.RP14.PXSX)
    {

 2000F: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 2001F: 34 50 58 53 58                                   // 4PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 20024: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 2002C: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 20038: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 20042: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 20043: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 2004B: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 20059: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 20066: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 20067: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 2006E: A4                                               // .

Package (0x00){})
        }


 2006F: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 20072: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 2007D: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 2008D: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 20094: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 2009B: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 200A3: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 200AC: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 200B4: A4 01                                            // ..

            Return (Zero)
        }


 200B6: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 200B8: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 200BF: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 200C7: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 200D0: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 200D9: A4 01                                            // ..

            Return (Zero)
        }
    }


 200DB: A4 00                                            // ..

    Scope (_SB.PCI0.RP15.PXSX)
    {

 200DD: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 200ED: 35 50 58 53 58                                   // 5PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 200F2: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 200FA: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 20106: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 20110: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 20111: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 20119: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 20127: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 20134: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 20135: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 2013C: A4                                               // .

Package (0x00){})
        }


 2013D: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 20140: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 2014B: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 2015B: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 20162: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 20169: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 20171: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 2017A: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 20182: A4 01                                            // ..

            Return (Zero)
        }


 20184: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 20186: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 2018D: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 20195: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 2019E: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 201A7: A4 01                                            // ..

            Return (Zero)
        }
    }


 201A9: A4 00                                            // ..

    Scope (_SB.PCI0.RP16.PXSX)
    {

 201AB: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 201BB: 36 50 58 53 58                                   // 6PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 201C0: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 201C8: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 201D4: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 201DE: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 201DF: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 201E7: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 201F5: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 20202: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 20203: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 2020A: A4                                               // .

Package (0x00){})
        }


 2020B: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 2020E: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 20219: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 20229: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 20230: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 20237: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 2023F: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 20248: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 20250: A4 01                                            // ..

            Return (Zero)
        }


 20252: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 20254: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 2025B: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 20263: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 2026C: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 20275: A4 01                                            // ..

            Return (Zero)
        }
    }


 20277: A4 00                                            // ..

    Scope (_SB.PCI0.RP17.PXSX)
    {

 20279: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 20289: 37 50 58 53 58                                   // 7PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 2028E: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 20296: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 202A2: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 202AC: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 202AD: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 202B5: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 202C3: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 202D0: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 202D1: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 202D8: A4                                               // .

Package (0x00){})
        }


 202D9: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 202DC: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 202E7: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 202F7: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 202FE: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 20305: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 2030D: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 20316: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 2031E: A4 01                                            // ..

            Return (Zero)
        }


 20320: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 20322: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 20329: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 20331: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 2033A: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 20343: A4 01                                            // ..

            Return (Zero)
        }
    }


 20345: A4 00                                            // ..

    Scope (_SB.PCI0.RP18.PXSX)
    {

 20347: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 20357: 38 50 58 53 58                                   // 8PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 2035C: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 20364: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 20370: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 2037A: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 2037B: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 20383: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 20391: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 2039E: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 2039F: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 203A6: A4                                               // .

Package (0x00){})
        }


 203A7: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 203AA: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 203B5: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 203C5: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 203CC: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 203D3: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 203DB: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 203E4: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 203EC: A4 01                                            // ..

            Return (Zero)
        }


 203EE: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 203F0: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 203F7: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 203FF: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 20408: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 20411: A4 01                                            // ..

            Return (Zero)
        }
    }


 20413: A4 00                                            // ..

    Scope (_SB.PCI0.RP19.PXSX)
    {

 20415: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 31  // .M./._SB_PCI0RP1
 20425: 39 50 58 53 58                                   // 9PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 2042A: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 20432: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 2043E: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 20448: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 20449: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 20451: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 2045F: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 2046C: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 2046D: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 20474: A4                                               // .

Package (0x00){})
        }


 20475: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 20478: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 20483: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 20493: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 2049A: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 204A1: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 204A9: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 204B2: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 204BA: A4 01                                            // ..

            Return (Zero)
        }


 204BC: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 204BE: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 204C5: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 204CD: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 204D6: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 204DF: A4 01                                            // ..

            Return (Zero)
        }
    }


 204E1: A4 00                                            // ..

    Scope (_SB.PCI0.RP20.PXSX)
    {

 204E3: 10 4D 0C 2F 04 5F 53 42 5F 50 43 49 30 52 50 32  // .M./._SB_PCI0RP2
 204F3: 30 50 58 53 58                                   // 0PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

 204F8: 14 4D 04 5F 44 45 50 00                          // .M._DEP.

            If (LOr (PAHC (), PNVM ()))
            {

 20500: A0 41 04 91 50 41 48 43 50 4E 56 4D              // .A..PAHCPNVM

                If (LAnd (LOr (LEqual (S0ID, One), 
 2050C: A0 35 90 91 93 53 30 49 44 01                    // .5...S0ID.


 20516: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)), 
 20517: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LOr (LEqual (And (PEPC, 0x0400), 0x0400), 
 2051F: 91 93 7B 50 45 50 43 0B 00 04 00 0B 00 04        // ..{PEPC.......

LEqual (And (PEPC, 0x0800), 0x0800))))
                {

 2052D: 93 7B 50 45 50 43 0B 00 08 00 0B 00 08           // .{PEPC.......

                    Return (
 2053A: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


 2053B: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
 20542: A4                                               // .

Package (0x00){})
        }


 20543: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

 20546: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


 20551: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
 20561: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

 20568: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

 2056F: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

 20577: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

 20580: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


 20588: A4 01                                            // ..

            Return (Zero)
        }


 2058A: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

 2058C: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

 20593: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

 2059B: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

 205A4: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


 205AD: A4 01                                            // ..

            Return (Zero)
        }
    }


 205AF: A4 00                                            // ..

    Scope (_PR.PR00)
    {

 205B1: 10 37 2E 5F 50 52 5F 50 52 30 30                 // .7._PR_PR00

        Method (XDEP, 0, NotSerialized)
        {

 205BC: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 205C3: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 205CC: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 205CD: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 205D5: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 205D6: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 205E3: A1 05                                            // ..

                Return (
 205E5: A4                                               // .

Package (0x00){})
            }
        }
    }


 205E6: 12 02 00                                         // ...

    Scope (_PR.PR01)
    {

 205E9: 10 37 2E 5F 50 52 5F 50 52 30 31                 // .7._PR_PR01

        Method (XDEP, 0, NotSerialized)
        {

 205F4: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 205FB: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20604: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20605: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 2060D: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 2060E: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 2061B: A1 05                                            // ..

                Return (
 2061D: A4                                               // .

Package (0x00){})
            }
        }
    }


 2061E: 12 02 00                                         // ...

    Scope (_PR.PR02)
    {

 20621: 10 37 2E 5F 50 52 5F 50 52 30 32                 // .7._PR_PR02

        Method (XDEP, 0, NotSerialized)
        {

 2062C: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 20633: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 2063C: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 2063D: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20645: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 20646: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 20653: A1 05                                            // ..

                Return (
 20655: A4                                               // .

Package (0x00){})
            }
        }
    }


 20656: 12 02 00                                         // ...

    Scope (_PR.PR03)
    {

 20659: 10 4B 04 2E 5F 50 52 5F 50 52 30 33              // .K.._PR_PR03

        Method (XDEP, 0, NotSerialized)
        {
            ADBG ("PR03 DEP Call")

 20665: 14 3F 58 44 45 50 00 41 44 42 47 0D 50 52 30 33  // .?XDEP.ADBG.PR03
 20675: 20 44 45 50 20 43 61 6C 6C 00                    //  DEP Call.

            If (LOr (LEqual (S0ID, One), 
 2067F: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20688: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20689: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20691: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 20692: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 2069F: A1 05                                            // ..

                Return (
 206A1: A4                                               // .

Package (0x00){})
            }
        }
    }


 206A2: 12 02 00                                         // ...

    Scope (_PR.PR04)
    {

 206A5: 10 37 2E 5F 50 52 5F 50 52 30 34                 // .7._PR_PR04

        Method (XDEP, 0, NotSerialized)
        {

 206B0: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 206B7: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 206C0: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 206C1: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 206C9: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 206CA: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 206D7: A1 05                                            // ..

                Return (
 206D9: A4                                               // .

Package (0x00){})
            }
        }
    }


 206DA: 12 02 00                                         // ...

    Scope (_PR.PR05)
    {

 206DD: 10 37 2E 5F 50 52 5F 50 52 30 35                 // .7._PR_PR05

        Method (XDEP, 0, NotSerialized)
        {

 206E8: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 206EF: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 206F8: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 206F9: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20701: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 20702: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 2070F: A1 05                                            // ..

                Return (
 20711: A4                                               // .

Package (0x00){})
            }
        }
    }


 20712: 12 02 00                                         // ...

    Scope (_PR.PR06)
    {

 20715: 10 37 2E 5F 50 52 5F 50 52 30 36                 // .7._PR_PR06

        Method (XDEP, 0, NotSerialized)
        {

 20720: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 20727: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20730: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20731: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20739: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 2073A: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 20747: A1 05                                            // ..

                Return (
 20749: A4                                               // .

Package (0x00){})
            }
        }
    }


 2074A: 12 02 00                                         // ...

    Scope (_PR.PR07)
    {

 2074D: 10 37 2E 5F 50 52 5F 50 52 30 37                 // .7._PR_PR07

        Method (XDEP, 0, NotSerialized)
        {

 20758: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 2075F: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20768: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20769: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20771: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 20772: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 2077F: A1 05                                            // ..

                Return (
 20781: A4                                               // .

Package (0x00){})
            }
        }
    }


 20782: 12 02 00                                         // ...

    Scope (_PR.PR08)
    {

 20785: 10 37 2E 5F 50 52 5F 50 52 30 38                 // .7._PR_PR08

        Method (XDEP, 0, NotSerialized)
        {

 20790: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 20797: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 207A0: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 207A1: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 207A9: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 207AA: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 207B7: A1 05                                            // ..

                Return (
 207B9: A4                                               // .

Package (0x00){})
            }
        }
    }


 207BA: 12 02 00                                         // ...

    Scope (_PR.PR09)
    {

 207BD: 10 37 2E 5F 50 52 5F 50 52 30 39                 // .7._PR_PR09

        Method (XDEP, 0, NotSerialized)
        {

 207C8: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 207CF: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 207D8: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 207D9: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 207E1: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 207E2: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 207EF: A1 05                                            // ..

                Return (
 207F1: A4                                               // .

Package (0x00){})
            }
        }
    }


 207F2: 12 02 00                                         // ...

    Scope (_PR.PR10)
    {

 207F5: 10 37 2E 5F 50 52 5F 50 52 31 30                 // .7._PR_PR10

        Method (XDEP, 0, NotSerialized)
        {

 20800: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 20807: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20810: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20811: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20819: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 2081A: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 20827: A1 05                                            // ..

                Return (
 20829: A4                                               // .

Package (0x00){})
            }
        }
    }


 2082A: 12 02 00                                         // ...

    Scope (_PR.PR11)
    {

 2082D: 10 37 2E 5F 50 52 5F 50 52 31 31                 // .7._PR_PR11

        Method (XDEP, 0, NotSerialized)
        {

 20838: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 2083F: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20848: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20849: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20851: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 20852: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 2085F: A1 05                                            // ..

                Return (
 20861: A4                                               // .

Package (0x00){})
            }
        }
    }


 20862: 12 02 00                                         // ...

    Scope (_PR.PR12)
    {

 20865: 10 37 2E 5F 50 52 5F 50 52 31 32                 // .7._PR_PR12

        Method (XDEP, 0, NotSerialized)
        {

 20870: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 20877: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20880: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20881: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20889: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 2088A: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 20897: A1 05                                            // ..

                Return (
 20899: A4                                               // .

Package (0x00){})
            }
        }
    }


 2089A: 12 02 00                                         // ...

    Scope (_PR.PR13)
    {

 2089D: 10 37 2E 5F 50 52 5F 50 52 31 33                 // .7._PR_PR13

        Method (XDEP, 0, NotSerialized)
        {

 208A8: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 208AF: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 208B8: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 208B9: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 208C1: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 208C2: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 208CF: A1 05                                            // ..

                Return (
 208D1: A4                                               // .

Package (0x00){})
            }
        }
    }


 208D2: 12 02 00                                         // ...

    Scope (_PR.PR14)
    {

 208D5: 10 37 2E 5F 50 52 5F 50 52 31 34                 // .7._PR_PR14

        Method (XDEP, 0, NotSerialized)
        {

 208E0: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 208E7: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 208F0: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 208F1: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 208F9: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 208FA: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 20907: A1 05                                            // ..

                Return (
 20909: A4                                               // .

Package (0x00){})
            }
        }
    }


 2090A: 12 02 00                                         // ...

    Scope (_PR.PR15)
    {

 2090D: 10 37 2E 5F 50 52 5F 50 52 31 35                 // .7._PR_PR15

        Method (XDEP, 0, NotSerialized)
        {

 20918: 14 2C 58 44 45 50 00                             // .,XDEP.

            If (LOr (LEqual (S0ID, One), 
 2091F: A0 1F 91 93 53 30 49 44 01                       // ....S0ID.


 20928: 92                                               // .

LGreaterEqual (OSYS, 0x07DF)))
            {

 20929: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                Return (
 20931: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

 20932: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

 2093F: A1 05                                            // ..

                Return (
 20941: A4                                               // .

Package (0x00){})
            }
        }
    }


 20942: 12 02 00                                         // ...

    Scope (_SB)
    {

 20945: 10 8C 2B 02 5F 53 42 5F                          // ..+._SB_

        Device (PEPD)
        {

 2094D: 5B 82 83 2B 02 50 45 50 44                       // [..+.PEPD

            Name (_HID, "INT33A1")  // _HID: Hardware ID

 20956: 08 5F 48 49 44 0D 49 4E 54 33 33 41 31 00        // ._HID.INT33A1.

            Name (_CID, EisaId ("PNP0D80"))  // _CID: Compatible ID

 20964: 08 5F 43 49 44 0C 41 D0 0D 80                    // ._CID.A...

            Name (_UID, One)  // _UID: Unique ID

 2096E: 08 5F 55 49 44 01                                // ._UID.

            Name (DEVY, 
 20974: 08 44 45 56 59                                   // .DEVY

Package (0x40)
            {

 20979: 12 4E 80 40                                      // .N.@

                Package (0x03)
                {
                    "\\_PR.PR00", 
                    Zero, 

 2097D: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 30 00 00     // ....\_PR.PR00..

                    Package (0x02)
                    {
                        Zero, 

 2098C: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 20990: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR01", 
                    Zero, 

 20996: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 31 00 00     // ....\_PR.PR01..

                    Package (0x02)
                    {
                        Zero, 

 209A5: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 209A9: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR02", 
                    Zero, 

 209AF: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 32 00 00     // ....\_PR.PR02..

                    Package (0x02)
                    {
                        Zero, 

 209BE: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 209C2: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR03", 
                    Zero, 

 209C8: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 33 00 00     // ....\_PR.PR03..

                    Package (0x02)
                    {
                        Zero, 

 209D7: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 209DB: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR04", 
                    Zero, 

 209E1: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 34 00 00     // ....\_PR.PR04..

                    Package (0x02)
                    {
                        Zero, 

 209F0: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 209F4: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR05", 
                    Zero, 

 209FA: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 35 00 00     // ....\_PR.PR05..

                    Package (0x02)
                    {
                        Zero, 

 20A09: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 20A0D: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR06", 
                    Zero, 

 20A13: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 36 00 00     // ....\_PR.PR06..

                    Package (0x02)
                    {
                        Zero, 

 20A22: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 20A26: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR07", 
                    Zero, 

 20A2C: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 37 00 00     // ....\_PR.PR07..

                    Package (0x02)
                    {
                        Zero, 

 20A3B: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 20A3F: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.GFX0", 
                    One, 

 20A45: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
 20A55: 58 30 00 01                                      // X0..

                    Package (0x02)
                    {
                        Zero, 

 20A59: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20A5D: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0", 
                    Zero, 

 20A64: 12 1F 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
 20A74: 54 30 00 00                                      // T0..

                    Package (0x02)
                    {
                        Zero, 

 20A78: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20A7C: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.UA00", 
                    One, 

 20A84: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
 20A94: 30 30 00 01                                      // 00..

                    Package (0x02)
                    {
                        Zero, 

 20A98: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20A9C: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.UA01", 
                    One, 

 20AA3: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
 20AB3: 30 31 00 01                                      // 01..

                    Package (0x02)
                    {
                        Zero, 

 20AB7: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20ABB: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C0", 
                    One, 

 20AC2: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
 20AD2: 43 30 00 01                                      // C0..

                    Package (0x02)
                    {
                        Zero, 

 20AD6: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20ADA: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C1", 
                    One, 

 20AE1: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
 20AF1: 43 31 00 01                                      // C1..

                    Package (0x02)
                    {
                        Zero, 

 20AF5: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20AF9: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.XHC", 
                    One, 

 20B00: 12 1D 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 58 48  // ....\_SB.PCI0.XH
 20B10: 43 00 01                                         // C..

                    Package (0x02)
                    {
                        Zero, 

 20B13: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20B17: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.HDAS", 
                    One, 

 20B1E: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 48 44  // ....\_SB.PCI0.HD
 20B2E: 41 53 00 01                                      // AS..

                    Package (0x02)
                    {
                        Zero, 

 20B32: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20B36: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.PEMC", 
                    One, 

 20B3D: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 50 45  // ....\_SB.PCI0.PE
 20B4D: 4D 43 00 01                                      // MC..

                    Package (0x02)
                    {
                        Zero, 

 20B51: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20B55: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.PSDC", 
                    One, 

 20B5C: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 50 53  // ....\_SB.PCI0.PS
 20B6C: 44 43 00 01                                      // DC..

                    Package (0x02)
                    {
                        Zero, 

 20B70: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20B74: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C2", 
                    One, 

 20B7B: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
 20B8B: 43 32 00 01                                      // C2..

                    Package (0x02)
                    {
                        Zero, 

 20B8F: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20B93: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C3", 
                    One, 

 20B9A: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
 20BAA: 43 33 00 01                                      // C3..

                    Package (0x02)
                    {
                        Zero, 

 20BAE: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20BB2: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C4", 
                    One, 

 20BB9: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
 20BC9: 43 34 00 01                                      // C4..

                    Package (0x02)
                    {
                        Zero, 

 20BCD: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20BD1: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C5", 
                    One, 

 20BD8: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
 20BE8: 43 35 00 01                                      // C5..

                    Package (0x02)
                    {
                        Zero, 

 20BEC: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20BF0: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.UA02", 
                    One, 

 20BF7: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
 20C07: 30 32 00 01                                      // 02..

                    Package (0x02)
                    {
                        Zero, 

 20C0B: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20C0F: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SPI0", 
                    One, 

 20C16: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 50  // ....\_SB.PCI0.SP
 20C26: 49 30 00 01                                      // I0..

                    Package (0x02)
                    {
                        Zero, 

 20C2A: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20C2E: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SPI1", 
                    One, 

 20C35: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 50  // ....\_SB.PCI0.SP
 20C45: 49 31 00 01                                      // I1..

                    Package (0x02)
                    {
                        Zero, 

 20C49: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20C4D: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.RP01.PXSX", 
                    Zero, 

 20C54: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20C64: 30 31 2E 50 58 53 58 00 00                       // 01.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20C6D: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20C71: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP02.PXSX", 
                    Zero, 

 20C79: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20C89: 30 32 2E 50 58 53 58 00 00                       // 02.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20C92: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20C96: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP03.PXSX", 
                    Zero, 

 20C9E: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20CAE: 30 33 2E 50 58 53 58 00 00                       // 03.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20CB7: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20CBB: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP04.PXSX", 
                    Zero, 

 20CC3: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20CD3: 30 34 2E 50 58 53 58 00 00                       // 04.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20CDC: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20CE0: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP05.PXSX", 
                    Zero, 

 20CE8: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20CF8: 30 35 2E 50 58 53 58 00 00                       // 05.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20D01: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20D05: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP06.PXSX", 
                    Zero, 

 20D0D: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20D1D: 30 36 2E 50 58 53 58 00 00                       // 06.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20D26: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20D2A: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP07.PXSX", 
                    Zero, 

 20D32: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20D42: 30 37 2E 50 58 53 58 00 00                       // 07.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20D4B: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20D4F: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP08.PXSX", 
                    Zero, 

 20D57: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20D67: 30 38 2E 50 58 53 58 00 00                       // 08.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20D70: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20D74: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP09.PXSX", 
                    Zero, 

 20D7C: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20D8C: 30 39 2E 50 58 53 58 00 00                       // 09.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20D95: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20D99: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP10.PXSX", 
                    Zero, 

 20DA1: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20DB1: 31 30 2E 50 58 53 58 00 00                       // 10.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20DBA: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20DBE: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP11.PXSX", 
                    Zero, 

 20DC6: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20DD6: 31 31 2E 50 58 53 58 00 00                       // 11.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20DDF: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20DE3: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP12.PXSX", 
                    Zero, 

 20DEB: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20DFB: 31 32 2E 50 58 53 58 00 00                       // 12.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20E04: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20E08: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP13.PXSX", 
                    Zero, 

 20E10: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20E20: 31 33 2E 50 58 53 58 00 00                       // 13.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20E29: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20E2D: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP14.PXSX", 
                    Zero, 

 20E35: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20E45: 31 34 2E 50 58 53 58 00 00                       // 14.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20E4E: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20E52: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP15.PXSX", 
                    Zero, 

 20E5A: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20E6A: 31 35 2E 50 58 53 58 00 00                       // 15.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20E73: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20E77: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP16.PXSX", 
                    Zero, 

 20E7F: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20E8F: 31 36 2E 50 58 53 58 00 00                       // 16.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20E98: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20E9C: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP17.PXSX", 
                    Zero, 

 20EA4: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20EB4: 31 37 2E 50 58 53 58 00 00                       // 17.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20EBD: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20EC1: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP18.PXSX", 
                    Zero, 

 20EC9: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20ED9: 31 38 2E 50 58 53 58 00 00                       // 18.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20EE2: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20EE6: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP19.PXSX", 
                    Zero, 

 20EEE: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20EFE: 31 39 2E 50 58 53 58 00 00                       // 19.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20F07: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20F0B: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP20.PXSX", 
                    Zero, 

 20F13: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
 20F23: 32 30 2E 50 58 53 58 00 00                       // 20.PXSX..

                    Package (0x02)
                    {
                        Zero, 

 20F2C: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 20F30: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.ISP0", 
                    One, 

 20F38: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 53  // ....\_SB.PCI0.IS
 20F48: 50 30 00 01                                      // P0..

                    Package (0x02)
                    {
                        Zero, 

 20F4C: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20F50: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 
                    Zero, 

 20F57: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 20F67: 54 30 2E 50 52 54 30 00 00                       // T0.PRT0..

                    Package (0x02)
                    {
                        Zero, 

 20F70: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20F74: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 
                    Zero, 

 20F7B: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 20F8B: 54 30 2E 50 52 54 31 00 00                       // T0.PRT1..

                    Package (0x02)
                    {
                        Zero, 

 20F94: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20F98: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 
                    Zero, 

 20F9F: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 20FAF: 54 30 2E 50 52 54 32 00 00                       // T0.PRT2..

                    Package (0x02)
                    {
                        Zero, 

 20FB8: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20FBC: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 
                    Zero, 

 20FC3: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 20FD3: 54 30 2E 50 52 54 33 00 00                       // T0.PRT3..

                    Package (0x02)
                    {
                        Zero, 

 20FDC: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 20FE0: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT4", 
                    Zero, 

 20FE7: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 20FF7: 54 30 2E 50 52 54 34 00 00                       // T0.PRT4..

                    Package (0x02)
                    {
                        Zero, 

 21000: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 21004: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT5", 
                    Zero, 

 2100B: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 2101B: 54 30 2E 50 52 54 35 00 00                       // T0.PRT5..

                    Package (0x02)
                    {
                        Zero, 

 21024: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 21028: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.NVM1", 
                    Zero, 

 2102F: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 2103F: 54 30 2E 4E 56 4D 31 00 00                       // T0.NVM1..

                    Package (0x02)
                    {
                        Zero, 

 21048: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 2104C: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.NVM2", 
                    Zero, 

 21053: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 21063: 54 30 2E 4E 56 4D 32 00 00                       // T0.NVM2..

                    Package (0x02)
                    {
                        Zero, 

 2106C: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 21070: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.NVM3", 
                    Zero, 

 21077: 12 23 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .#..\_SB.PCI0.SA
 21087: 54 30 2E 4E 56 4D 33 00 00                       // T0.NVM3..

                    Package (0x02)
                    {
                        Zero, 

 21090: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


 21094: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.VOL0", 
                    Zero, 

 2109B: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
 210AB: 54 30 2E 56 4F 4C 30 00 00                       // T0.VOL0..

                    Package (0x02)
                    {
                        Zero, 

 210B4: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


 210B8: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_PR.PR08", 
                    Zero, 

 210C0: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 38 00 00     // ....\_PR.PR08..

                    Package (0x02)
                    {
                        Zero, 

 210CF: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 210D3: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR09", 
                    Zero, 

 210D9: 12 18 03 0D 5C 5F 50 52 2E 50 52 30 39 00 00     // ....\_PR.PR09..

                    Package (0x02)
                    {
                        Zero, 

 210E8: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 210EC: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR10", 
                    Zero, 

 210F2: 12 18 03 0D 5C 5F 50 52 2E 50 52 31 30 00 00     // ....\_PR.PR10..

                    Package (0x02)
                    {
                        Zero, 

 21101: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 21105: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR11", 
                    Zero, 

 2110B: 12 18 03 0D 5C 5F 50 52 2E 50 52 31 31 00 00     // ....\_PR.PR11..

                    Package (0x02)
                    {
                        Zero, 

 2111A: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 2111E: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR12", 
                    Zero, 

 21124: 12 18 03 0D 5C 5F 50 52 2E 50 52 31 32 00 00     // ....\_PR.PR12..

                    Package (0x02)
                    {
                        Zero, 

 21133: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 21137: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR13", 
                    Zero, 

 2113D: 12 18 03 0D 5C 5F 50 52 2E 50 52 31 33 00 00     // ....\_PR.PR13..

                    Package (0x02)
                    {
                        Zero, 

 2114C: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 21150: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR14", 
                    Zero, 

 21156: 12 18 03 0D 5C 5F 50 52 2E 50 52 31 34 00 00     // ....\_PR.PR14..

                    Package (0x02)
                    {
                        Zero, 

 21165: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


 21169: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.PR15", 
                    Zero, 

 2116F: 12 18 03 0D 5C 5F 50 52 2E 50 52 31 35 00 00     // ....\_PR.PR15..

                    Package (0x02)
                    {
                        Zero, 

 2117E: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }
            })

 21182: 12 05 02 0A FF 00                                // ......

            Name (BCCD, 
 21188: 08 42 43 43 44                                   // .BCCD

Package (0x1A)
            {

 2118D: 12 4A 53 1A                                      // .JS.

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0", 

 21191: 12 2C 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .,..\_SB.PCI0.SA
 211A1: 54 30 00                                         // T0.

                    Package (0x01)
                    {

 211A4: 12 19 01                                         // ...

                        Package (0x03)
                        {

 211A7: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 211AA: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


 211B4: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 

 211BE: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
 211CE: 54 30 2E 50 52 54 30 00                          // T0.PRT0.

                    Package (0x01)
                    {

 211D6: 12 19 01                                         // ...

                        Package (0x03)
                        {

 211D9: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 211DC: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


 211E6: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 

 211F0: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
 21200: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

                    Package (0x01)
                    {

 21208: 12 19 01                                         // ...

                        Package (0x03)
                        {

 2120B: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2120E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


 21218: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 

 21222: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
 21232: 54 30 2E 50 52 54 32 00                          // T0.PRT2.

                    Package (0x01)
                    {

 2123A: 12 19 01                                         // ...

                        Package (0x03)
                        {

 2123D: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21240: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


 2124A: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 

 21254: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
 21264: 54 30 2E 50 52 54 33 00                          // T0.PRT3.

                    Package (0x01)
                    {

 2126C: 12 19 01                                         // ...

                        Package (0x03)
                        {

 2126F: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21272: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


 2127C: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.VOL0", 

 21286: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
 21296: 54 30 2E 56 4F 4C 30 00                          // T0.VOL0.

                    Package (0x01)
                    {

 2129E: 12 19 01                                         // ...

                        Package (0x03)
                        {

 212A1: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 212A4: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


 212AE: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.RP01.PXSX", 

 212B8: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 212C8: 30 31 2E 50 58 53 58 00                          // 01.PXSX.

                    Package (0x01)
                    {

 212D0: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 212D3: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 212D6: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 212E0: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP02.PXSX", 

 212EC: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 212FC: 30 32 2E 50 58 53 58 00                          // 02.PXSX.

                    Package (0x01)
                    {

 21304: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 21307: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2130A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21314: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP03.PXSX", 

 21320: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21330: 30 33 2E 50 58 53 58 00                          // 03.PXSX.

                    Package (0x01)
                    {

 21338: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 2133B: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2133E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21348: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP04.PXSX", 

 21354: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21364: 30 34 2E 50 58 53 58 00                          // 04.PXSX.

                    Package (0x01)
                    {

 2136C: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 2136F: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21372: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 2137C: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP05.PXSX", 

 21388: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21398: 30 35 2E 50 58 53 58 00                          // 05.PXSX.

                    Package (0x01)
                    {

 213A0: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 213A3: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 213A6: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 213B0: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP06.PXSX", 

 213BC: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 213CC: 30 36 2E 50 58 53 58 00                          // 06.PXSX.

                    Package (0x01)
                    {

 213D4: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 213D7: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 213DA: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 213E4: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP07.PXSX", 

 213F0: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21400: 30 37 2E 50 58 53 58 00                          // 07.PXSX.

                    Package (0x01)
                    {

 21408: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 2140B: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2140E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21418: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP08.PXSX", 

 21424: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21434: 30 38 2E 50 58 53 58 00                          // 08.PXSX.

                    Package (0x01)
                    {

 2143C: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 2143F: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21442: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 2144C: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP09.PXSX", 

 21458: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21468: 30 39 2E 50 58 53 58 00                          // 09.PXSX.

                    Package (0x01)
                    {

 21470: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 21473: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21476: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21480: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP10.PXSX", 

 2148C: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 2149C: 31 30 2E 50 58 53 58 00                          // 10.PXSX.

                    Package (0x01)
                    {

 214A4: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 214A7: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 214AA: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 214B4: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP11.PXSX", 

 214C0: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 214D0: 31 31 2E 50 58 53 58 00                          // 11.PXSX.

                    Package (0x01)
                    {

 214D8: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 214DB: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 214DE: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 214E8: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP12.PXSX", 

 214F4: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21504: 31 32 2E 50 58 53 58 00                          // 12.PXSX.

                    Package (0x01)
                    {

 2150C: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 2150F: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21512: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 2151C: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP13.PXSX", 

 21528: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21538: 31 33 2E 50 58 53 58 00                          // 13.PXSX.

                    Package (0x01)
                    {

 21540: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 21543: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21546: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21550: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP14.PXSX", 

 2155C: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 2156C: 31 34 2E 50 58 53 58 00                          // 14.PXSX.

                    Package (0x01)
                    {

 21574: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 21577: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2157A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21584: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP15.PXSX", 

 21590: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 215A0: 31 35 2E 50 58 53 58 00                          // 15.PXSX.

                    Package (0x01)
                    {

 215A8: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 215AB: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 215AE: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 215B8: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP16.PXSX", 

 215C4: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 215D4: 31 36 2E 50 58 53 58 00                          // 16.PXSX.

                    Package (0x01)
                    {

 215DC: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 215DF: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 215E2: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 215EC: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP17.PXSX", 

 215F8: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21608: 31 37 2E 50 58 53 58 00                          // 17.PXSX.

                    Package (0x01)
                    {

 21610: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 21613: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 21616: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21620: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP18.PXSX", 

 2162C: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 2163C: 31 38 2E 50 58 53 58 00                          // 18.PXSX.

                    Package (0x01)
                    {

 21644: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 21647: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2164A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21654: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP19.PXSX", 

 21660: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 21670: 31 39 2E 50 58 53 58 00                          // 19.PXSX.

                    Package (0x01)
                    {

 21678: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 2167B: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 2167E: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


 21688: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP20.PXSX", 

 21694: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
 216A4: 32 30 2E 50 58 53 58 00                          // 20.PXSX.

                    Package (0x01)
                    {

 216AC: 12 1B 01                                         // ...

                        Package (0x03)
                        {

 216AF: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


 216B2: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }
            })

 216BC: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 216C8: 14 27 5F 53 54 41 00                             // .'_STA.

                If (LOr (
 216CF: A0 1E 91 92                                      // ....

LGreaterEqual (OSYS, 0x07DF), 
 216D3: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LAnd (
 216DB: 90 92                                            // ..

LGreaterEqual (OSYS, 0x07DC), 
 216DD: 95 4F 53 59 53 0B DC 07                          // .OSYS...

LEqual (S0ID, One))))
                {

 216E5: 93 53 30 49 44 01                                // .S0ID.

                    Return (0x0F)
                }


 216EB: A4 0A 0F                                         // ...

                Return (Zero)
            }


 216EE: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 216F0: 14 81 51 01 5F 44 53 4D 0C                       // ..Q._DSM.

                If (LEqual (Arg0, 
 216F9: A0 83 50 01 93 68                                // ..P..h

ToUUID ("c4eb40a0-6cd2-11e2-bcfd-0800200c9a66")))
                {

 216FF: 11 13 0A 10 A0 40 EB C4 D2 6C E2 11 BC FD 08 00  // .....@...l......
 2170F: 20 0C 9A 66                                      //  ..f

                    If (LEqual (Arg2, Zero))
                    {

 21713: A0 09 93 6A 00                                   // ...j.

                        Return (
 21718: A4                                               // .

Buffer (One)
                        {
                             0x7F                                           
                        })
                    }


 21719: 11 03 01 7F                                      // ....

                    If (LEqual (Arg2, One))
                    {

 2171D: A0 82 49 01 93 6A 01                             // ..I..j.

                        If (LEqual (S0ID, Zero))
                        {

 21724: A0 0B 93 53 30 49 44 00                          // ...S0ID.

                            Return (
 2172C: A4                                               // .

Package (0x00){})
                        }


 2172D: 12 02 00                                         // ...

                        If (
 21730: A0 46 4E 92                                      // .FN.

LNotEqual (And (PEPC, 0x00100000), Zero))
                        {

 21734: 93 7B 50 45 50 43 0C 00 00 10 00 00 00           // .{PEPC.......

                            If (
 21741: A0 16 92                                         // ...

LNotEqual (SPST, Zero))
                            {

 21744: 93 53 50 53 54 00                                // .SPST.

                                Store (One, 
 2174A: 70 01                                            // p.

Index (DerefOf (
 2174C: 88 83                                            // ..

Index (DEVY, 0x09)), One))
                            }


 2174E: 88 44 45 56 59 0A 09 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

 21758: A0 41 05 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .A.[.\/._SB_PCI0
 21768: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

                                If (LOr (^^PCI0.RP01.PXSX.PAHC (), ^^PCI0.RP01.PXSX.PNVM ()))
                                {

 21771: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 31 50  // .8.^^/.PCI0RP01P
 21781: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21791: 50 30 31 50 58 53 58 50 4E 56 4D                 // P01PXSXPNVM

                                    Store (One, 
 2179C: 70 01                                            // p.

Index (DerefOf (
 2179E: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                                }
                            }


 217A0: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP02.PXSX.PAHC (), ^^PCI0.RP02.PXSX.PNVM ()))
                            {

 217AA: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 32 50  // .8.^^/.PCI0RP02P
 217BA: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 217CA: 50 30 32 50 58 53 58 50 4E 56 4D                 // P02PXSXPNVM

                                Store (One, 
 217D5: 70 01                                            // p.

Index (DerefOf (
 217D7: 88 83                                            // ..

Index (DEVY, 0x1A)), One))
                            }


 217D9: 88 44 45 56 59 0A 1A 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP03.PXSX.PAHC (), ^^PCI0.RP03.PXSX.PNVM ()))
                            {

 217E3: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 33 50  // .8.^^/.PCI0RP03P
 217F3: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21803: 50 30 33 50 58 53 58 50 4E 56 4D                 // P03PXSXPNVM

                                Store (One, 
 2180E: 70 01                                            // p.

Index (DerefOf (
 21810: 88 83                                            // ..

Index (DEVY, 0x1B)), One))
                            }


 21812: 88 44 45 56 59 0A 1B 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP04.PXSX.PAHC (), ^^PCI0.RP04.PXSX.PNVM ()))
                            {

 2181C: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 34 50  // .8.^^/.PCI0RP04P
 2182C: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 2183C: 50 30 34 50 58 53 58 50 4E 56 4D                 // P04PXSXPNVM

                                Store (One, 
 21847: 70 01                                            // p.

Index (DerefOf (
 21849: 88 83                                            // ..

Index (DEVY, 0x1C)), One))
                            }


 2184B: 88 44 45 56 59 0A 1C 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                            {

 21855: A0 41 05 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .A.[.\/._SB_PCI0
 21865: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

                                If (LOr (^^PCI0.RP05.PXSX.PAHC (), ^^PCI0.RP05.PXSX.PNVM ()))
                                {

 2186E: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 35 50  // .8.^^/.PCI0RP05P
 2187E: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 2188E: 50 30 35 50 58 53 58 50 4E 56 4D                 // P05PXSXPNVM

                                    Store (One, 
 21899: 70 01                                            // p.

Index (DerefOf (
 2189B: 88 83                                            // ..

Index (DEVY, 0x1D)), One))
                                }
                            }


 2189D: 88 44 45 56 59 0A 1D 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP06.PXSX.PAHC (), ^^PCI0.RP06.PXSX.PNVM ()))
                            {

 218A7: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 36 50  // .8.^^/.PCI0RP06P
 218B7: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 218C7: 50 30 36 50 58 53 58 50 4E 56 4D                 // P06PXSXPNVM

                                Store (One, 
 218D2: 70 01                                            // p.

Index (DerefOf (
 218D4: 88 83                                            // ..

Index (DEVY, 0x1E)), One))
                            }


 218D6: 88 44 45 56 59 0A 1E 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP07.PXSX.PAHC (), ^^PCI0.RP07.PXSX.PNVM ()))
                            {

 218E0: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 37 50  // .8.^^/.PCI0RP07P
 218F0: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21900: 50 30 37 50 58 53 58 50 4E 56 4D                 // P07PXSXPNVM

                                Store (One, 
 2190B: 70 01                                            // p.

Index (DerefOf (
 2190D: 88 83                                            // ..

Index (DEVY, 0x1F)), One))
                            }


 2190F: 88 44 45 56 59 0A 1F 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP08.PXSX.PAHC (), ^^PCI0.RP08.PXSX.PNVM ()))
                            {

 21919: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 38 50  // .8.^^/.PCI0RP08P
 21929: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21939: 50 30 38 50 58 53 58 50 4E 56 4D                 // P08PXSXPNVM

                                Store (One, 
 21944: 70 01                                            // p.

Index (DerefOf (
 21946: 88 83                                            // ..

Index (DEVY, 0x20)), One))
                            }


 21948: 88 44 45 56 59 0A 20 00 01 00                    // .DEVY. ...

                            If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                            {

 21952: A0 41 05 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .A.[.\/._SB_PCI0
 21962: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

                                If (LOr (^^PCI0.RP09.PXSX.PAHC (), ^^PCI0.RP09.PXSX.PNVM ()))
                                {

 2196B: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 39 50  // .8.^^/.PCI0RP09P
 2197B: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 2198B: 50 30 39 50 58 53 58 50 4E 56 4D                 // P09PXSXPNVM

                                    Store (One, 
 21996: 70 01                                            // p.

Index (DerefOf (
 21998: 88 83                                            // ..

Index (DEVY, 0x21)), One))
                                }
                            }


 2199A: 88 44 45 56 59 0A 21 00 01 00                    // .DEVY.!...

                            If (LOr (^^PCI0.RP10.PXSX.PAHC (), ^^PCI0.RP10.PXSX.PNVM ()))
                            {

 219A4: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 30 50  // .8.^^/.PCI0RP10P
 219B4: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 219C4: 50 31 30 50 58 53 58 50 4E 56 4D                 // P10PXSXPNVM

                                Store (One, 
 219CF: 70 01                                            // p.

Index (DerefOf (
 219D1: 88 83                                            // ..

Index (DEVY, 0x22)), One))
                            }


 219D3: 88 44 45 56 59 0A 22 00 01 00                    // .DEVY."...

                            If (LOr (^^PCI0.RP11.PXSX.PAHC (), ^^PCI0.RP11.PXSX.PNVM ()))
                            {

 219DD: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 31 50  // .8.^^/.PCI0RP11P
 219ED: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 219FD: 50 31 31 50 58 53 58 50 4E 56 4D                 // P11PXSXPNVM

                                Store (One, 
 21A08: 70 01                                            // p.

Index (DerefOf (
 21A0A: 88 83                                            // ..

Index (DEVY, 0x23)), One))
                            }


 21A0C: 88 44 45 56 59 0A 23 00 01 00                    // .DEVY.#...

                            If (LOr (^^PCI0.RP12.PXSX.PAHC (), ^^PCI0.RP12.PXSX.PNVM ()))
                            {

 21A16: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 32 50  // .8.^^/.PCI0RP12P
 21A26: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21A36: 50 31 32 50 58 53 58 50 4E 56 4D                 // P12PXSXPNVM

                                Store (One, 
 21A41: 70 01                                            // p.

Index (DerefOf (
 21A43: 88 83                                            // ..

Index (DEVY, 0x24)), One))
                            }


 21A45: 88 44 45 56 59 0A 24 00 01 00                    // .DEVY.$...

                            If (LOr (^^PCI0.RP13.PXSX.PAHC (), ^^PCI0.RP13.PXSX.PNVM ()))
                            {

 21A4F: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 33 50  // .8.^^/.PCI0RP13P
 21A5F: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21A6F: 50 31 33 50 58 53 58 50 4E 56 4D                 // P13PXSXPNVM

                                Store (One, 
 21A7A: 70 01                                            // p.

Index (DerefOf (
 21A7C: 88 83                                            // ..

Index (DEVY, 0x25)), One))
                            }


 21A7E: 88 44 45 56 59 0A 25 00 01 00                    // .DEVY.%...

                            If (LOr (^^PCI0.RP14.PXSX.PAHC (), ^^PCI0.RP14.PXSX.PNVM ()))
                            {

 21A88: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 34 50  // .8.^^/.PCI0RP14P
 21A98: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21AA8: 50 31 34 50 58 53 58 50 4E 56 4D                 // P14PXSXPNVM

                                Store (One, 
 21AB3: 70 01                                            // p.

Index (DerefOf (
 21AB5: 88 83                                            // ..

Index (DEVY, 0x26)), One))
                            }


 21AB7: 88 44 45 56 59 0A 26 00 01 00                    // .DEVY.&...

                            If (LOr (^^PCI0.RP15.PXSX.PAHC (), ^^PCI0.RP15.PXSX.PNVM ()))
                            {

 21AC1: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 35 50  // .8.^^/.PCI0RP15P
 21AD1: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21AE1: 50 31 35 50 58 53 58 50 4E 56 4D                 // P15PXSXPNVM

                                Store (One, 
 21AEC: 70 01                                            // p.

Index (DerefOf (
 21AEE: 88 83                                            // ..

Index (DEVY, 0x27)), One))
                            }


 21AF0: 88 44 45 56 59 0A 27 00 01 00                    // .DEVY.'...

                            If (LOr (^^PCI0.RP16.PXSX.PAHC (), ^^PCI0.RP16.PXSX.PNVM ()))
                            {

 21AFA: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 36 50  // .8.^^/.PCI0RP16P
 21B0A: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21B1A: 50 31 36 50 58 53 58 50 4E 56 4D                 // P16PXSXPNVM

                                Store (One, 
 21B25: 70 01                                            // p.

Index (DerefOf (
 21B27: 88 83                                            // ..

Index (DEVY, 0x28)), One))
                            }


 21B29: 88 44 45 56 59 0A 28 00 01 00                    // .DEVY.(...

                            If (LOr (^^PCI0.RP17.PXSX.PAHC (), ^^PCI0.RP17.PXSX.PNVM ()))
                            {

 21B33: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 37 50  // .8.^^/.PCI0RP17P
 21B43: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21B53: 50 31 37 50 58 53 58 50 4E 56 4D                 // P17PXSXPNVM

                                Store (One, 
 21B5E: 70 01                                            // p.

Index (DerefOf (
 21B60: 88 83                                            // ..

Index (DEVY, 0x29)), One))
                            }


 21B62: 88 44 45 56 59 0A 29 00 01 00                    // .DEVY.)...

                            If (LOr (^^PCI0.RP18.PXSX.PAHC (), ^^PCI0.RP18.PXSX.PNVM ()))
                            {

 21B6C: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 38 50  // .8.^^/.PCI0RP18P
 21B7C: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21B8C: 50 31 38 50 58 53 58 50 4E 56 4D                 // P18PXSXPNVM

                                Store (One, 
 21B97: 70 01                                            // p.

Index (DerefOf (
 21B99: 88 83                                            // ..

Index (DEVY, 0x2A)), One))
                            }


 21B9B: 88 44 45 56 59 0A 2A 00 01 00                    // .DEVY.*...

                            If (LOr (^^PCI0.RP19.PXSX.PAHC (), ^^PCI0.RP19.PXSX.PNVM ()))
                            {

 21BA5: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 31 39 50  // .8.^^/.PCI0RP19P
 21BB5: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21BC5: 50 31 39 50 58 53 58 50 4E 56 4D                 // P19PXSXPNVM

                                Store (One, 
 21BD0: 70 01                                            // p.

Index (DerefOf (
 21BD2: 88 83                                            // ..

Index (DEVY, 0x2B)), One))
                            }


 21BD4: 88 44 45 56 59 0A 2B 00 01 00                    // .DEVY.+...

                            If (LOr (^^PCI0.RP20.PXSX.PAHC (), ^^PCI0.RP20.PXSX.PNVM ()))
                            {

 21BDE: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 32 30 50  // .8.^^/.PCI0RP20P
 21BEE: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
 21BFE: 50 32 30 50 58 53 58 50 4E 56 4D                 // P20PXSXPNVM

                                Store (One, 
 21C09: 70 01                                            // p.

Index (DerefOf (
 21C0B: 88 83                                            // ..

Index (DEVY, 0x2C)), One))
                            }
                        }


 21C0D: 88 44 45 56 59 0A 2C 00 01 00                    // .DEVY.,...

                        If (
 21C17: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x00200000), Zero))
                        {

 21C1A: 93 7B 50 45 50 43 0C 00 00 20 00 00 00           // .{PEPC... ...

                            Store (One, 
 21C27: 70 01                                            // p.

Index (DerefOf (
 21C29: 88 83                                            // ..

Index (DEVY, 0x37)), One))
                        }


 21C2B: 88 44 45 56 59 0A 37 00 01 00                    // .DEVY.7...

                        If (
 21C35: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x00400000), Zero))
                        {

 21C38: 93 7B 50 45 50 43 0C 00 00 40 00 00 00           // .{PEPC...@...

                            Store (One, 
 21C45: 70 01                                            // p.

Index (DerefOf (
 21C47: 88 83                                            // ..

Index (DEVY, 0x2E)), One))
                        }


 21C49: 88 44 45 56 59 0A 2E 00 01 00                    // .DEVY.....

                        If (
 21C53: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x00800000), Zero))
                        {

 21C56: 93 7B 50 45 50 43 0C 00 00 80 00 00 00           // .{PEPC.......

                            Store (One, 
 21C63: 70 01                                            // p.

Index (DerefOf (
 21C65: 88 83                                            // ..

Index (DEVY, 0x2F)), One))
                        }


 21C67: 88 44 45 56 59 0A 2F 00 01 00                    // .DEVY./...

                        If (
 21C71: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x01000000), Zero))
                        {

 21C74: 93 7B 50 45 50 43 0C 00 00 00 01 00 00           // .{PEPC.......

                            Store (One, 
 21C81: 70 01                                            // p.

Index (DerefOf (
 21C83: 88 83                                            // ..

Index (DEVY, 0x30)), One))
                        }


 21C85: 88 44 45 56 59 0A 30 00 01 00                    // .DEVY.0...

                        If (
 21C8F: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x02000000), Zero))
                        {

 21C92: 93 7B 50 45 50 43 0C 00 00 00 02 00 00           // .{PEPC.......

                            Store (One, 
 21C9F: 70 01                                            // p.

Index (DerefOf (
 21CA1: 88 83                                            // ..

Index (DEVY, 0x31)), One))
                        }


 21CA3: 88 44 45 56 59 0A 31 00 01 00                    // .DEVY.1...

                        If (
 21CAD: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x04000000), Zero))
                        {

 21CB0: 93 7B 50 45 50 43 0C 00 00 00 04 00 00           // .{PEPC.......

                            Store (One, 
 21CBD: 70 01                                            // p.

Index (DerefOf (
 21CBF: 88 83                                            // ..

Index (DEVY, 0x32)), One))
                        }


 21CC1: 88 44 45 56 59 0A 32 00 01 00                    // .DEVY.2...

                        If (
 21CCB: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x08000000), Zero))
                        {

 21CCE: 93 7B 50 45 50 43 0C 00 00 00 08 00 00           // .{PEPC.......

                            Store (One, 
 21CDB: 70 01                                            // p.

Index (DerefOf (
 21CDD: 88 83                                            // ..

Index (DEVY, 0x33)), One))
                        }


 21CDF: 88 44 45 56 59 0A 33 00 01 00                    // .DEVY.3...

                        If (
 21CE9: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x10000000), Zero))
                        {

 21CEC: 93 7B 50 45 50 43 0C 00 00 00 10 00 00           // .{PEPC.......

                            Store (One, 
 21CF9: 70 01                                            // p.

Index (DerefOf (
 21CFB: 88 83                                            // ..

Index (DEVY, 0x34)), One))
                        }


 21CFD: 88 44 45 56 59 0A 34 00 01 00                    // .DEVY.4...

                        If (
 21D07: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x20000000), Zero))
                        {

 21D0A: 93 7B 50 45 50 43 0C 00 00 00 20 00 00           // .{PEPC.... ..

                            Store (One, 
 21D17: 70 01                                            // p.

Index (DerefOf (
 21D19: 88 83                                            // ..

Index (DEVY, 0x35)), One))
                        }


 21D1B: 88 44 45 56 59 0A 35 00 01 00                    // .DEVY.5...

                        If (
 21D25: A0 1D 92                                         // ...

LNotEqual (And (PEPC, 0x40000000), Zero))
                        {

 21D28: 93 7B 50 45 50 43 0C 00 00 00 40 00 00           // .{PEPC....@..

                            Store (One, 
 21D35: 70 01                                            // p.

Index (DerefOf (
 21D37: 88 83                                            // ..

Index (DEVY, 0x36)), One))
                        }


 21D39: 88 44 45 56 59 0A 36 00 01 00                    // .DEVY.6...

                        If (LEqual (And (PEPC, 0x04), Zero))
                        {

 21D43: A0 19 93 7B 50 45 50 43 0A 04 00 00              // ...{PEPC....

                            Store (Zero, 
 21D4F: 70 00                                            // p.

Index (DerefOf (
 21D51: 88 83                                            // ..

Index (DEVY, 0x0A)), One))
                        }


 21D53: 88 44 45 56 59 0A 0A 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x08), Zero))
                        {

 21D5D: A0 19 93 7B 50 45 50 43 0A 08 00 00              // ...{PEPC....

                            Store (Zero, 
 21D69: 70 00                                            // p.

Index (DerefOf (
 21D6B: 88 83                                            // ..

Index (DEVY, 0x0B)), One))
                        }


 21D6D: 88 44 45 56 59 0A 0B 00 01 00                    // .DEVY.....

                        If (
 21D77: A0 0B                                            // ..

LEqual (And (PEPC, 0x10), Zero)){}

 21D79: 93 7B 50 45 50 43 0A 10 00 00                    // .{PEPC....

                        If (LEqual (And (PEPC, 0x20), Zero))
                        {

 21D83: A0 19 93 7B 50 45 50 43 0A 20 00 00              // ...{PEPC. ..

                            Store (Zero, 
 21D8F: 70 00                                            // p.

Index (DerefOf (
 21D91: 88 83                                            // ..

Index (DEVY, 0x0C)), One))
                        }


 21D93: 88 44 45 56 59 0A 0C 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x40), Zero))
                        {

 21D9D: A0 19 93 7B 50 45 50 43 0A 40 00 00              // ...{PEPC.@..

                            Store (Zero, 
 21DA9: 70 00                                            // p.

Index (DerefOf (
 21DAB: 88 83                                            // ..

Index (DEVY, 0x0D)), One))
                        }


 21DAD: 88 44 45 56 59 0A 0D 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x80), Zero))
                        {

 21DB7: A0 19 93 7B 50 45 50 43 0A 80 00 00              // ...{PEPC....

                            Store (Zero, 
 21DC3: 70 00                                            // p.

Index (DerefOf (
 21DC5: 88 83                                            // ..

Index (DEVY, 0x0E)), One))
                        }


 21DC7: 88 44 45 56 59 0A 0E 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0100), Zero))
                        {

 21DD1: A0 1A 93 7B 50 45 50 43 0B 00 01 00 00           // ...{PEPC.....

                            Store (Zero, 
 21DDE: 70 00                                            // p.

Index (DerefOf (
 21DE0: 88 83                                            // ..

Index (DEVY, 0x0F)), One))
                        }


 21DE2: 88 44 45 56 59 0A 0F 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0200), Zero))
                        {

 21DEC: A0 1A 93 7B 50 45 50 43 0B 00 02 00 00           // ...{PEPC.....

                            Store (Zero, 
 21DF9: 70 00                                            // p.

Index (DerefOf (
 21DFB: 88 83                                            // ..

Index (DEVY, 0x08)), One))
                        }


 21DFD: 88 44 45 56 59 0A 08 00 01 00                    // .DEVY.....

                        If (
 21E07: A0 15 92                                         // ...

LGreaterEqual (TCNT, One))
                        {

 21E0A: 95 54 43 4E 54 01                                // .TCNT.

                            Store (One, 
 21E10: 70 01                                            // p.

Index (DerefOf (
 21E12: 88 83                                            // ..

Index (DEVY, Zero)), One))
                        }


 21E14: 88 44 45 56 59 00 00 01 00                       // .DEVY....

                        If (
 21E1D: A0 16 92                                         // ...

LGreaterEqual (TCNT, 0x02))
                        {

 21E20: 95 54 43 4E 54 0A 02                             // .TCNT..

                            Store (One, 
 21E27: 70 01                                            // p.

Index (DerefOf (
 21E29: 88 83                                            // ..

Index (DEVY, One)), One))
                        }


 21E2B: 88 44 45 56 59 01 00 01 00                       // .DEVY....

                        If (
 21E34: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x03))
                        {

 21E37: 95 54 43 4E 54 0A 03                             // .TCNT..

                            Store (One, 
 21E3E: 70 01                                            // p.

Index (DerefOf (
 21E40: 88 83                                            // ..

Index (DEVY, 0x02)), One))
                        }


 21E42: 88 44 45 56 59 0A 02 00 01 00                    // .DEVY.....

                        If (
 21E4C: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x04))
                        {

 21E4F: 95 54 43 4E 54 0A 04                             // .TCNT..

                            Store (One, 
 21E56: 70 01                                            // p.

Index (DerefOf (
 21E58: 88 83                                            // ..

Index (DEVY, 0x03)), One))
                        }


 21E5A: 88 44 45 56 59 0A 03 00 01 00                    // .DEVY.....

                        If (
 21E64: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x05))
                        {

 21E67: 95 54 43 4E 54 0A 05                             // .TCNT..

                            Store (One, 
 21E6E: 70 01                                            // p.

Index (DerefOf (
 21E70: 88 83                                            // ..

Index (DEVY, 0x04)), One))
                        }


 21E72: 88 44 45 56 59 0A 04 00 01 00                    // .DEVY.....

                        If (
 21E7C: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x06))
                        {

 21E7F: 95 54 43 4E 54 0A 06                             // .TCNT..

                            Store (One, 
 21E86: 70 01                                            // p.

Index (DerefOf (
 21E88: 88 83                                            // ..

Index (DEVY, 0x05)), One))
                        }


 21E8A: 88 44 45 56 59 0A 05 00 01 00                    // .DEVY.....

                        If (
 21E94: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x07))
                        {

 21E97: 95 54 43 4E 54 0A 07                             // .TCNT..

                            Store (One, 
 21E9E: 70 01                                            // p.

Index (DerefOf (
 21EA0: 88 83                                            // ..

Index (DEVY, 0x06)), One))
                        }


 21EA2: 88 44 45 56 59 0A 06 00 01 00                    // .DEVY.....

                        If (
 21EAC: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x08))
                        {

 21EAF: 95 54 43 4E 54 0A 08                             // .TCNT..

                            Store (One, 
 21EB6: 70 01                                            // p.

Index (DerefOf (
 21EB8: 88 83                                            // ..

Index (DEVY, 0x07)), One))
                        }


 21EBA: 88 44 45 56 59 0A 07 00 01 00                    // .DEVY.....

                        If (
 21EC4: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x09))
                        {

 21EC7: 95 54 43 4E 54 0A 09                             // .TCNT..

                            Store (One, 
 21ECE: 70 01                                            // p.

Index (DerefOf (
 21ED0: 88 83                                            // ..

Index (DEVY, 0x38)), One))
                        }


 21ED2: 88 44 45 56 59 0A 38 00 01 00                    // .DEVY.8...

                        If (
 21EDC: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x0A))
                        {

 21EDF: 95 54 43 4E 54 0A 0A                             // .TCNT..

                            Store (One, 
 21EE6: 70 01                                            // p.

Index (DerefOf (
 21EE8: 88 83                                            // ..

Index (DEVY, 0x39)), One))
                        }


 21EEA: 88 44 45 56 59 0A 39 00 01 00                    // .DEVY.9...

                        If (
 21EF4: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x0B))
                        {

 21EF7: 95 54 43 4E 54 0A 0B                             // .TCNT..

                            Store (One, 
 21EFE: 70 01                                            // p.

Index (DerefOf (
 21F00: 88 83                                            // ..

Index (DEVY, 0x3A)), One))
                        }


 21F02: 88 44 45 56 59 0A 3A 00 01 00                    // .DEVY.:...

                        If (
 21F0C: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x0C))
                        {

 21F0F: 95 54 43 4E 54 0A 0C                             // .TCNT..

                            Store (One, 
 21F16: 70 01                                            // p.

Index (DerefOf (
 21F18: 88 83                                            // ..

Index (DEVY, 0x3B)), One))
                        }


 21F1A: 88 44 45 56 59 0A 3B 00 01 00                    // .DEVY.;...

                        If (
 21F24: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x0D))
                        {

 21F27: 95 54 43 4E 54 0A 0D                             // .TCNT..

                            Store (One, 
 21F2E: 70 01                                            // p.

Index (DerefOf (
 21F30: 88 83                                            // ..

Index (DEVY, 0x3C)), One))
                        }


 21F32: 88 44 45 56 59 0A 3C 00 01 00                    // .DEVY.<...

                        If (
 21F3C: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x0E))
                        {

 21F3F: 95 54 43 4E 54 0A 0E                             // .TCNT..

                            Store (One, 
 21F46: 70 01                                            // p.

Index (DerefOf (
 21F48: 88 83                                            // ..

Index (DEVY, 0x3D)), One))
                        }


 21F4A: 88 44 45 56 59 0A 3D 00 01 00                    // .DEVY.=...

                        If (
 21F54: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x0F))
                        {

 21F57: 95 54 43 4E 54 0A 0F                             // .TCNT..

                            Store (One, 
 21F5E: 70 01                                            // p.

Index (DerefOf (
 21F60: 88 83                                            // ..

Index (DEVY, 0x3E)), One))
                        }


 21F62: 88 44 45 56 59 0A 3E 00 01 00                    // .DEVY.>...

                        If (
 21F6C: A0 17 92                                         // ...

LGreaterEqual (TCNT, 0x10))
                        {

 21F6F: 95 54 43 4E 54 0A 10                             // .TCNT..

                            Store (One, 
 21F76: 70 01                                            // p.

Index (DerefOf (
 21F78: 88 83                                            // ..

Index (DEVY, 0x3F)), One))
                        }


 21F7A: 88 44 45 56 59 0A 3F 00 01 00                    // .DEVY.?...

                        If (LEqual (And (PEPC, 0x0400), Zero))
                        {
                            Store (Zero, 
 21F84: A0 4B 0E 93 7B 50 45 50 43 0B 00 04 00 00 70 00  // .K..{PEPC.....p.

Index (DerefOf (
 21F94: 88 83                                            // ..

Index (DEVY, Zero)), One))
                            Store (Zero, 
 21F96: 88 44 45 56 59 00 00 01 00 70 00                 // .DEVY....p.

Index (DerefOf (
 21FA1: 88 83                                            // ..

Index (DEVY, One)), One))
                            Store (Zero, 
 21FA3: 88 44 45 56 59 01 00 01 00 70 00                 // .DEVY....p.

Index (DerefOf (
 21FAE: 88 83                                            // ..

Index (DEVY, 0x02)), One))
                            Store (Zero, 
 21FB0: 88 44 45 56 59 0A 02 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
 21FBC: 88 83                                            // ..

Index (DEVY, 0x03)), One))
                            Store (Zero, 
 21FBE: 88 44 45 56 59 0A 03 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
 21FCA: 88 83                                            // ..

Index (DEVY, 0x04)), One))
                            Store (Zero, 
 21FCC: 88 44 45 56 59 0A 04 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
 21FD8: 88 83                                            // ..

Index (DEVY, 0x05)), One))
                            Store (Zero, 
 21FDA: 88 44 45 56 59 0A 05 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
 21FE6: 88 83                                            // ..

Index (DEVY, 0x06)), One))
                            Store (Zero, 
 21FE8: 88 44 45 56 59 0A 06 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
 21FF4: 88 83                                            // ..

Index (DEVY, 0x07)), One))
                            Store (Zero, 
 21FF6: 88 44 45 56 59 0A 07 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
 22002: 88 83                                            // ..

Index (DEVY, 0x38)), One))
                            Store (Zero, 
 22004: 88 44 45 56 59 0A 38 00 01 00 70 00              // .DEVY.8...p.

Index (DerefOf (
 22010: 88 83                                            // ..

Index (DEVY, 0x39)), One))
                            Store (Zero, 
 22012: 88 44 45 56 59 0A 39 00 01 00 70 00              // .DEVY.9...p.

Index (DerefOf (
 2201E: 88 83                                            // ..

Index (DEVY, 0x3A)), One))
                            Store (Zero, 
 22020: 88 44 45 56 59 0A 3A 00 01 00 70 00              // .DEVY.:...p.

Index (DerefOf (
 2202C: 88 83                                            // ..

Index (DEVY, 0x3B)), One))
                            Store (Zero, 
 2202E: 88 44 45 56 59 0A 3B 00 01 00 70 00              // .DEVY.;...p.

Index (DerefOf (
 2203A: 88 83                                            // ..

Index (DEVY, 0x3C)), One))
                            Store (Zero, 
 2203C: 88 44 45 56 59 0A 3C 00 01 00 70 00              // .DEVY.<...p.

Index (DerefOf (
 22048: 88 83                                            // ..

Index (DEVY, 0x3D)), One))
                            Store (Zero, 
 2204A: 88 44 45 56 59 0A 3D 00 01 00 70 00              // .DEVY.=...p.

Index (DerefOf (
 22056: 88 83                                            // ..

Index (DEVY, 0x3E)), One))

 22058: 88 44 45 56 59 0A 3E 00 01 00                    // .DEVY.>...

                            Store (Zero, 
 22062: 70 00                                            // p.

Index (DerefOf (
 22064: 88 83                                            // ..

Index (DEVY, 0x3F)), One))
                        }


 22066: 88 44 45 56 59 0A 3F 00 01 00                    // .DEVY.?...

                        If (LEqual (And (PEPC, 0x0800), Zero))
                        {

 22070: A0 1A 93 7B 50 45 50 43 0B 00 08 00 00           // ...{PEPC.....

                            Store (Zero, 
 2207D: 70 00                                            // p.

Index (DerefOf (
 2207F: 88 83                                            // ..

Index (DEVY, 0x10)), One))
                        }


 22081: 88 44 45 56 59 0A 10 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x1000), Zero))
                        {

 2208B: A0 1A 93 7B 50 45 50 43 0B 00 10 00 00           // ...{PEPC.....

                            Store (Zero, 
 22098: 70 00                                            // p.

Index (DerefOf (
 2209A: 88 83                                            // ..

Index (DEVY, 0x11)), One))
                        }


 2209C: 88 44 45 56 59 0A 11 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x2000), Zero))
                        {

 220A6: A0 1A 93 7B 50 45 50 43 0B 00 20 00 00           // ...{PEPC.. ..

                            Store (Zero, 
 220B3: 70 00                                            // p.

Index (DerefOf (
 220B5: 88 83                                            // ..

Index (DEVY, 0x12)), One))
                        }


 220B7: 88 44 45 56 59 0A 12 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x4000), Zero))
                        {

 220C1: A0 1A 93 7B 50 45 50 43 0B 00 40 00 00           // ...{PEPC..@..

                            Store (Zero, 
 220CE: 70 00                                            // p.

Index (DerefOf (
 220D0: 88 83                                            // ..

Index (DEVY, 0x13)), One))
                        }


 220D2: 88 44 45 56 59 0A 13 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x8000), Zero))
                        {

 220DC: A0 1A 93 7B 50 45 50 43 0B 00 80 00 00           // ...{PEPC.....

                            Store (Zero, 
 220E9: 70 00                                            // p.

Index (DerefOf (
 220EB: 88 83                                            // ..

Index (DEVY, 0x14)), One))
                        }


 220ED: 88 44 45 56 59 0A 14 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00010000), Zero))
                        {

 220F7: A0 1C 93 7B 50 45 50 43 0C 00 00 01 00 00 00     // ...{PEPC.......

                            Store (Zero, 
 22106: 70 00                                            // p.

Index (DerefOf (
 22108: 88 83                                            // ..

Index (DEVY, 0x15)), One))
                        }


 2210A: 88 44 45 56 59 0A 15 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00020000), Zero))
                        {

 22114: A0 1C 93 7B 50 45 50 43 0C 00 00 02 00 00 00     // ...{PEPC.......

                            Store (Zero, 
 22123: 70 00                                            // p.

Index (DerefOf (
 22125: 88 83                                            // ..

Index (DEVY, 0x16)), One))
                        }


 22127: 88 44 45 56 59 0A 16 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00040000), Zero))
                        {

 22131: A0 1C 93 7B 50 45 50 43 0C 00 00 04 00 00 00     // ...{PEPC.......

                            Store (Zero, 
 22140: 70 00                                            // p.

Index (DerefOf (
 22142: 88 83                                            // ..

Index (DEVY, 0x17)), One))
                        }


 22144: 88 44 45 56 59 0A 17 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x00080000), Zero))
                        {

 2214E: A0 1C 93 7B 50 45 50 43 0C 00 00 08 00 00 00     // ...{PEPC.......

                            Store (Zero, 
 2215D: 70 00                                            // p.

Index (DerefOf (
 2215F: 88 83                                            // ..

Index (DEVY, 0x18)), One))
                        }


 22161: 88 44 45 56 59 0A 18 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x02), Zero))
                        {

 2216B: A0 19 93 7B 50 45 50 43 0A 02 00 00              // ...{PEPC....

                            Store (Zero, 
 22177: 70 00                                            // p.

Index (DerefOf (
 22179: 88 83                                            // ..

Index (DEVY, 0x2D)), One))
                        }


 2217B: 88 44 45 56 59 0A 2D 00 01 00                    // .DEVY.-...

                        If (
 22185: A0 4A 6F 92                                      // .Jo.

LGreaterEqual (OSYS, 0x07DF))
                        {

 22189: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

 22191: A0 4D 06 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
 221A1: 52 50 30 31 50 58 53 58 00                       // RP01PXSX.

                                If (^^PCI0.RP01.PXSX.WIST ())
                                {
                                    Store (0x03, 
 221AA: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 31 50  // .D.^^/.PCI0RP01P
 221BA: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 221C4: 88 83                                            // ..

Index (DerefOf (
 221C6: 88 83                                            // ..

Index (DerefOf (
 221C8: 88 83                                            // ..

Index (DEVY, 0x19)), 0x02)), One)), One))
                                    Store (Zero, 
 221CA: 88 44 45 56 59 0A 19 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 221DA: 00                                               // .

Index (DerefOf (
 221DB: 88 83                                            // ..

Index (DerefOf (
 221DD: 88 83                                            // ..

Index (DerefOf (
 221DF: 88 83                                            // ..

Index (DEVY, 0x19)), 0x02)), One)), 0x02))

 221E1: 88 44 45 56 59 0A 19 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                    Store (One, 
 221F1: 70 01                                            // p.

Index (DerefOf (
 221F3: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                                }
                            }


 221F5: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP02.PXSX.WIST ())
                            {
                                Store (0x03, 
 221FF: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 32 50  // .D.^^/.PCI0RP02P
 2220F: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22219: 88 83                                            // ..

Index (DerefOf (
 2221B: 88 83                                            // ..

Index (DerefOf (
 2221D: 88 83                                            // ..

Index (DEVY, 0x1A)), 0x02)), One)), One))
                                Store (Zero, 
 2221F: 88 44 45 56 59 0A 1A 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 2222F: 00                                               // .

Index (DerefOf (
 22230: 88 83                                            // ..

Index (DerefOf (
 22232: 88 83                                            // ..

Index (DerefOf (
 22234: 88 83                                            // ..

Index (DEVY, 0x1A)), 0x02)), One)), 0x02))

 22236: 88 44 45 56 59 0A 1A 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
 22246: 70 01                                            // p.

Index (DerefOf (
 22248: 88 83                                            // ..

Index (DEVY, 0x1A)), One))
                            }


 2224A: 88 44 45 56 59 0A 1A 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP03.PXSX.WIST ())
                            {
                                Store (0x03, 
 22254: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 33 50  // .D.^^/.PCI0RP03P
 22264: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 2226E: 88 83                                            // ..

Index (DerefOf (
 22270: 88 83                                            // ..

Index (DerefOf (
 22272: 88 83                                            // ..

Index (DEVY, 0x1B)), 0x02)), One)), One))
                                Store (Zero, 
 22274: 88 44 45 56 59 0A 1B 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 22284: 00                                               // .

Index (DerefOf (
 22285: 88 83                                            // ..

Index (DerefOf (
 22287: 88 83                                            // ..

Index (DerefOf (
 22289: 88 83                                            // ..

Index (DEVY, 0x1B)), 0x02)), One)), 0x02))

 2228B: 88 44 45 56 59 0A 1B 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
 2229B: 70 01                                            // p.

Index (DerefOf (
 2229D: 88 83                                            // ..

Index (DEVY, 0x1B)), One))
                            }


 2229F: 88 44 45 56 59 0A 1B 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP04.PXSX.WIST ())
                            {
                                Store (0x03, 
 222A9: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 34 50  // .D.^^/.PCI0RP04P
 222B9: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 222C3: 88 83                                            // ..

Index (DerefOf (
 222C5: 88 83                                            // ..

Index (DerefOf (
 222C7: 88 83                                            // ..

Index (DEVY, 0x1C)), 0x02)), One)), One))
                                Store (Zero, 
 222C9: 88 44 45 56 59 0A 1C 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 222D9: 00                                               // .

Index (DerefOf (
 222DA: 88 83                                            // ..

Index (DerefOf (
 222DC: 88 83                                            // ..

Index (DerefOf (
 222DE: 88 83                                            // ..

Index (DEVY, 0x1C)), 0x02)), One)), 0x02))

 222E0: 88 44 45 56 59 0A 1C 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
 222F0: 70 01                                            // p.

Index (DerefOf (
 222F2: 88 83                                            // ..

Index (DEVY, 0x1C)), One))
                            }


 222F4: 88 44 45 56 59 0A 1C 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                            {

 222FE: A0 4D 06 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
 2230E: 52 50 30 35 50 58 53 58 00                       // RP05PXSX.

                                If (^^PCI0.RP05.PXSX.WIST ())
                                {
                                    Store (0x03, 
 22317: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 35 50  // .D.^^/.PCI0RP05P
 22327: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22331: 88 83                                            // ..

Index (DerefOf (
 22333: 88 83                                            // ..

Index (DerefOf (
 22335: 88 83                                            // ..

Index (DEVY, 0x1D)), 0x02)), One)), One))
                                    Store (Zero, 
 22337: 88 44 45 56 59 0A 1D 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 22347: 00                                               // .

Index (DerefOf (
 22348: 88 83                                            // ..

Index (DerefOf (
 2234A: 88 83                                            // ..

Index (DerefOf (
 2234C: 88 83                                            // ..

Index (DEVY, 0x1D)), 0x02)), One)), 0x02))

 2234E: 88 44 45 56 59 0A 1D 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                    Store (One, 
 2235E: 70 01                                            // p.

Index (DerefOf (
 22360: 88 83                                            // ..

Index (DEVY, 0x1D)), One))
                                }
                            }


 22362: 88 44 45 56 59 0A 1D 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP06.PXSX.WIST ())
                            {
                                Store (0x03, 
 2236C: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 36 50  // .D.^^/.PCI0RP06P
 2237C: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22386: 88 83                                            // ..

Index (DerefOf (
 22388: 88 83                                            // ..

Index (DerefOf (
 2238A: 88 83                                            // ..

Index (DEVY, 0x1E)), 0x02)), One)), One))
                                Store (Zero, 
 2238C: 88 44 45 56 59 0A 1E 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 2239C: 00                                               // .

Index (DerefOf (
 2239D: 88 83                                            // ..

Index (DerefOf (
 2239F: 88 83                                            // ..

Index (DerefOf (
 223A1: 88 83                                            // ..

Index (DEVY, 0x1E)), 0x02)), One)), 0x02))

 223A3: 88 44 45 56 59 0A 1E 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
 223B3: 70 01                                            // p.

Index (DerefOf (
 223B5: 88 83                                            // ..

Index (DEVY, 0x1E)), One))
                            }


 223B7: 88 44 45 56 59 0A 1E 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP07.PXSX.WIST ())
                            {
                                Store (0x03, 
 223C1: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 37 50  // .D.^^/.PCI0RP07P
 223D1: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 223DB: 88 83                                            // ..

Index (DerefOf (
 223DD: 88 83                                            // ..

Index (DerefOf (
 223DF: 88 83                                            // ..

Index (DEVY, 0x1F)), 0x02)), One)), One))
                                Store (Zero, 
 223E1: 88 44 45 56 59 0A 1F 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
 223F1: 00                                               // .

Index (DerefOf (
 223F2: 88 83                                            // ..

Index (DerefOf (
 223F4: 88 83                                            // ..

Index (DerefOf (
 223F6: 88 83                                            // ..

Index (DEVY, 0x1F)), 0x02)), One)), 0x02))

 223F8: 88 44 45 56 59 0A 1F 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
 22408: 70 01                                            // p.

Index (DerefOf (
 2240A: 88 83                                            // ..

Index (DEVY, 0x1F)), One))
                            }


 2240C: 88 44 45 56 59 0A 1F 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP08.PXSX.WIST ())
                            {
                                Store (0x03, 
 22416: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 38 50  // .D.^^/.PCI0RP08P
 22426: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22430: 88 83                                            // ..

Index (DerefOf (
 22432: 88 83                                            // ..

Index (DerefOf (
 22434: 88 83                                            // ..

Index (DEVY, 0x20)), 0x02)), One)), One))
                                Store (Zero, 
 22436: 88 44 45 56 59 0A 20 00 0A 02 00 01 00 01 00 70  // .DEVY. ........p
 22446: 00                                               // .

Index (DerefOf (
 22447: 88 83                                            // ..

Index (DerefOf (
 22449: 88 83                                            // ..

Index (DerefOf (
 2244B: 88 83                                            // ..

Index (DEVY, 0x20)), 0x02)), One)), 0x02))

 2244D: 88 44 45 56 59 0A 20 00 0A 02 00 01 00 0A 02 00  // .DEVY. .........

                                Store (One, 
 2245D: 70 01                                            // p.

Index (DerefOf (
 2245F: 88 83                                            // ..

Index (DEVY, 0x20)), One))
                            }


 22461: 88 44 45 56 59 0A 20 00 01 00                    // .DEVY. ...

                            If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                            {

 2246B: A0 4D 06 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
 2247B: 52 50 30 39 50 58 53 58 00                       // RP09PXSX.

                                If (^^PCI0.RP09.PXSX.WIST ())
                                {
                                    Store (0x03, 
 22484: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 39 50  // .D.^^/.PCI0RP09P
 22494: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 2249E: 88 83                                            // ..

Index (DerefOf (
 224A0: 88 83                                            // ..

Index (DerefOf (
 224A2: 88 83                                            // ..

Index (DEVY, 0x21)), 0x02)), One)), One))
                                    Store (Zero, 
 224A4: 88 44 45 56 59 0A 21 00 0A 02 00 01 00 01 00 70  // .DEVY.!........p
 224B4: 00                                               // .

Index (DerefOf (
 224B5: 88 83                                            // ..

Index (DerefOf (
 224B7: 88 83                                            // ..

Index (DerefOf (
 224B9: 88 83                                            // ..

Index (DEVY, 0x21)), 0x02)), One)), 0x02))

 224BB: 88 44 45 56 59 0A 21 00 0A 02 00 01 00 0A 02 00  // .DEVY.!.........

                                    Store (One, 
 224CB: 70 01                                            // p.

Index (DerefOf (
 224CD: 88 83                                            // ..

Index (DEVY, 0x21)), One))
                                }
                            }


 224CF: 88 44 45 56 59 0A 21 00 01 00                    // .DEVY.!...

                            If (^^PCI0.RP10.PXSX.WIST ())
                            {
                                Store (0x03, 
 224D9: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 30 50  // .D.^^/.PCI0RP10P
 224E9: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 224F3: 88 83                                            // ..

Index (DerefOf (
 224F5: 88 83                                            // ..

Index (DerefOf (
 224F7: 88 83                                            // ..

Index (DEVY, 0x22)), 0x02)), One)), One))
                                Store (Zero, 
 224F9: 88 44 45 56 59 0A 22 00 0A 02 00 01 00 01 00 70  // .DEVY."........p
 22509: 00                                               // .

Index (DerefOf (
 2250A: 88 83                                            // ..

Index (DerefOf (
 2250C: 88 83                                            // ..

Index (DerefOf (
 2250E: 88 83                                            // ..

Index (DEVY, 0x22)), 0x02)), One)), 0x02))

 22510: 88 44 45 56 59 0A 22 00 0A 02 00 01 00 0A 02 00  // .DEVY.".........

                                Store (One, 
 22520: 70 01                                            // p.

Index (DerefOf (
 22522: 88 83                                            // ..

Index (DEVY, 0x22)), One))
                            }


 22524: 88 44 45 56 59 0A 22 00 01 00                    // .DEVY."...

                            If (^^PCI0.RP11.PXSX.WIST ())
                            {
                                Store (0x03, 
 2252E: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 31 50  // .D.^^/.PCI0RP11P
 2253E: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22548: 88 83                                            // ..

Index (DerefOf (
 2254A: 88 83                                            // ..

Index (DerefOf (
 2254C: 88 83                                            // ..

Index (DEVY, 0x23)), 0x02)), One)), One))
                                Store (Zero, 
 2254E: 88 44 45 56 59 0A 23 00 0A 02 00 01 00 01 00 70  // .DEVY.#........p
 2255E: 00                                               // .

Index (DerefOf (
 2255F: 88 83                                            // ..

Index (DerefOf (
 22561: 88 83                                            // ..

Index (DerefOf (
 22563: 88 83                                            // ..

Index (DEVY, 0x23)), 0x02)), One)), 0x02))

 22565: 88 44 45 56 59 0A 23 00 0A 02 00 01 00 0A 02 00  // .DEVY.#.........

                                Store (One, 
 22575: 70 01                                            // p.

Index (DerefOf (
 22577: 88 83                                            // ..

Index (DEVY, 0x23)), One))
                            }


 22579: 88 44 45 56 59 0A 23 00 01 00                    // .DEVY.#...

                            If (^^PCI0.RP12.PXSX.WIST ())
                            {
                                Store (0x03, 
 22583: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 32 50  // .D.^^/.PCI0RP12P
 22593: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 2259D: 88 83                                            // ..

Index (DerefOf (
 2259F: 88 83                                            // ..

Index (DerefOf (
 225A1: 88 83                                            // ..

Index (DEVY, 0x24)), 0x02)), One)), One))
                                Store (Zero, 
 225A3: 88 44 45 56 59 0A 24 00 0A 02 00 01 00 01 00 70  // .DEVY.$........p
 225B3: 00                                               // .

Index (DerefOf (
 225B4: 88 83                                            // ..

Index (DerefOf (
 225B6: 88 83                                            // ..

Index (DerefOf (
 225B8: 88 83                                            // ..

Index (DEVY, 0x24)), 0x02)), One)), 0x02))

 225BA: 88 44 45 56 59 0A 24 00 0A 02 00 01 00 0A 02 00  // .DEVY.$.........

                                Store (One, 
 225CA: 70 01                                            // p.

Index (DerefOf (
 225CC: 88 83                                            // ..

Index (DEVY, 0x24)), One))
                            }


 225CE: 88 44 45 56 59 0A 24 00 01 00                    // .DEVY.$...

                            If (^^PCI0.RP13.PXSX.WIST ())
                            {
                                Store (0x03, 
 225D8: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 33 50  // .D.^^/.PCI0RP13P
 225E8: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 225F2: 88 83                                            // ..

Index (DerefOf (
 225F4: 88 83                                            // ..

Index (DerefOf (
 225F6: 88 83                                            // ..

Index (DEVY, 0x25)), 0x02)), One)), One))
                                Store (Zero, 
 225F8: 88 44 45 56 59 0A 25 00 0A 02 00 01 00 01 00 70  // .DEVY.%........p
 22608: 00                                               // .

Index (DerefOf (
 22609: 88 83                                            // ..

Index (DerefOf (
 2260B: 88 83                                            // ..

Index (DerefOf (
 2260D: 88 83                                            // ..

Index (DEVY, 0x25)), 0x02)), One)), 0x02))

 2260F: 88 44 45 56 59 0A 25 00 0A 02 00 01 00 0A 02 00  // .DEVY.%.........

                                Store (One, 
 2261F: 70 01                                            // p.

Index (DerefOf (
 22621: 88 83                                            // ..

Index (DEVY, 0x25)), One))
                            }


 22623: 88 44 45 56 59 0A 25 00 01 00                    // .DEVY.%...

                            If (^^PCI0.RP14.PXSX.WIST ())
                            {
                                Store (0x03, 
 2262D: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 34 50  // .D.^^/.PCI0RP14P
 2263D: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22647: 88 83                                            // ..

Index (DerefOf (
 22649: 88 83                                            // ..

Index (DerefOf (
 2264B: 88 83                                            // ..

Index (DEVY, 0x26)), 0x02)), One)), One))
                                Store (Zero, 
 2264D: 88 44 45 56 59 0A 26 00 0A 02 00 01 00 01 00 70  // .DEVY.&........p
 2265D: 00                                               // .

Index (DerefOf (
 2265E: 88 83                                            // ..

Index (DerefOf (
 22660: 88 83                                            // ..

Index (DerefOf (
 22662: 88 83                                            // ..

Index (DEVY, 0x26)), 0x02)), One)), 0x02))

 22664: 88 44 45 56 59 0A 26 00 0A 02 00 01 00 0A 02 00  // .DEVY.&.........

                                Store (One, 
 22674: 70 01                                            // p.

Index (DerefOf (
 22676: 88 83                                            // ..

Index (DEVY, 0x26)), One))
                            }


 22678: 88 44 45 56 59 0A 26 00 01 00                    // .DEVY.&...

                            If (^^PCI0.RP15.PXSX.WIST ())
                            {
                                Store (0x03, 
 22682: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 35 50  // .D.^^/.PCI0RP15P
 22692: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 2269C: 88 83                                            // ..

Index (DerefOf (
 2269E: 88 83                                            // ..

Index (DerefOf (
 226A0: 88 83                                            // ..

Index (DEVY, 0x27)), 0x02)), One)), One))
                                Store (Zero, 
 226A2: 88 44 45 56 59 0A 27 00 0A 02 00 01 00 01 00 70  // .DEVY.'........p
 226B2: 00                                               // .

Index (DerefOf (
 226B3: 88 83                                            // ..

Index (DerefOf (
 226B5: 88 83                                            // ..

Index (DerefOf (
 226B7: 88 83                                            // ..

Index (DEVY, 0x27)), 0x02)), One)), 0x02))

 226B9: 88 44 45 56 59 0A 27 00 0A 02 00 01 00 0A 02 00  // .DEVY.'.........

                                Store (One, 
 226C9: 70 01                                            // p.

Index (DerefOf (
 226CB: 88 83                                            // ..

Index (DEVY, 0x27)), One))
                            }


 226CD: 88 44 45 56 59 0A 27 00 01 00                    // .DEVY.'...

                            If (^^PCI0.RP16.PXSX.WIST ())
                            {
                                Store (0x03, 
 226D7: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 36 50  // .D.^^/.PCI0RP16P
 226E7: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 226F1: 88 83                                            // ..

Index (DerefOf (
 226F3: 88 83                                            // ..

Index (DerefOf (
 226F5: 88 83                                            // ..

Index (DEVY, 0x28)), 0x02)), One)), One))
                                Store (Zero, 
 226F7: 88 44 45 56 59 0A 28 00 0A 02 00 01 00 01 00 70  // .DEVY.(........p
 22707: 00                                               // .

Index (DerefOf (
 22708: 88 83                                            // ..

Index (DerefOf (
 2270A: 88 83                                            // ..

Index (DerefOf (
 2270C: 88 83                                            // ..

Index (DEVY, 0x28)), 0x02)), One)), 0x02))

 2270E: 88 44 45 56 59 0A 28 00 0A 02 00 01 00 0A 02 00  // .DEVY.(.........

                                Store (One, 
 2271E: 70 01                                            // p.

Index (DerefOf (
 22720: 88 83                                            // ..

Index (DEVY, 0x28)), One))
                            }


 22722: 88 44 45 56 59 0A 28 00 01 00                    // .DEVY.(...

                            If (^^PCI0.RP17.PXSX.WIST ())
                            {
                                Store (0x03, 
 2272C: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 37 50  // .D.^^/.PCI0RP17P
 2273C: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22746: 88 83                                            // ..

Index (DerefOf (
 22748: 88 83                                            // ..

Index (DerefOf (
 2274A: 88 83                                            // ..

Index (DEVY, 0x29)), 0x02)), One)), One))
                                Store (Zero, 
 2274C: 88 44 45 56 59 0A 29 00 0A 02 00 01 00 01 00 70  // .DEVY.)........p
 2275C: 00                                               // .

Index (DerefOf (
 2275D: 88 83                                            // ..

Index (DerefOf (
 2275F: 88 83                                            // ..

Index (DerefOf (
 22761: 88 83                                            // ..

Index (DEVY, 0x29)), 0x02)), One)), 0x02))

 22763: 88 44 45 56 59 0A 29 00 0A 02 00 01 00 0A 02 00  // .DEVY.).........

                                Store (One, 
 22773: 70 01                                            // p.

Index (DerefOf (
 22775: 88 83                                            // ..

Index (DEVY, 0x29)), One))
                            }


 22777: 88 44 45 56 59 0A 29 00 01 00                    // .DEVY.)...

                            If (^^PCI0.RP18.PXSX.WIST ())
                            {
                                Store (0x03, 
 22781: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 38 50  // .D.^^/.PCI0RP18P
 22791: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 2279B: 88 83                                            // ..

Index (DerefOf (
 2279D: 88 83                                            // ..

Index (DerefOf (
 2279F: 88 83                                            // ..

Index (DEVY, 0x2A)), 0x02)), One)), One))
                                Store (Zero, 
 227A1: 88 44 45 56 59 0A 2A 00 0A 02 00 01 00 01 00 70  // .DEVY.*........p
 227B1: 00                                               // .

Index (DerefOf (
 227B2: 88 83                                            // ..

Index (DerefOf (
 227B4: 88 83                                            // ..

Index (DerefOf (
 227B6: 88 83                                            // ..

Index (DEVY, 0x2A)), 0x02)), One)), 0x02))

 227B8: 88 44 45 56 59 0A 2A 00 0A 02 00 01 00 0A 02 00  // .DEVY.*.........

                                Store (One, 
 227C8: 70 01                                            // p.

Index (DerefOf (
 227CA: 88 83                                            // ..

Index (DEVY, 0x2A)), One))
                            }


 227CC: 88 44 45 56 59 0A 2A 00 01 00                    // .DEVY.*...

                            If (^^PCI0.RP19.PXSX.WIST ())
                            {
                                Store (0x03, 
 227D6: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 31 39 50  // .D.^^/.PCI0RP19P
 227E6: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 227F0: 88 83                                            // ..

Index (DerefOf (
 227F2: 88 83                                            // ..

Index (DerefOf (
 227F4: 88 83                                            // ..

Index (DEVY, 0x2B)), 0x02)), One)), One))
                                Store (Zero, 
 227F6: 88 44 45 56 59 0A 2B 00 0A 02 00 01 00 01 00 70  // .DEVY.+........p
 22806: 00                                               // .

Index (DerefOf (
 22807: 88 83                                            // ..

Index (DerefOf (
 22809: 88 83                                            // ..

Index (DerefOf (
 2280B: 88 83                                            // ..

Index (DEVY, 0x2B)), 0x02)), One)), 0x02))

 2280D: 88 44 45 56 59 0A 2B 00 0A 02 00 01 00 0A 02 00  // .DEVY.+.........

                                Store (One, 
 2281D: 70 01                                            // p.

Index (DerefOf (
 2281F: 88 83                                            // ..

Index (DEVY, 0x2B)), One))
                            }


 22821: 88 44 45 56 59 0A 2B 00 01 00                    // .DEVY.+...

                            If (^^PCI0.RP20.PXSX.WIST ())
                            {
                                Store (0x03, 
 2282B: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 32 30 50  // .D.^^/.PCI0RP20P
 2283B: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
 22845: 88 83                                            // ..

Index (DerefOf (
 22847: 88 83                                            // ..

Index (DerefOf (
 22849: 88 83                                            // ..

Index (DEVY, 0x2C)), 0x02)), One)), One))
                                Store (Zero, 
 2284B: 88 44 45 56 59 0A 2C 00 0A 02 00 01 00 01 00 70  // .DEVY.,........p
 2285B: 00                                               // .

Index (DerefOf (
 2285C: 88 83                                            // ..

Index (DerefOf (
 2285E: 88 83                                            // ..

Index (DerefOf (
 22860: 88 83                                            // ..

Index (DEVY, 0x2C)), 0x02)), One)), 0x02))

 22862: 88 44 45 56 59 0A 2C 00 0A 02 00 01 00 0A 02 00  // .DEVY.,.........

                                Store (One, 
 22872: 70 01                                            // p.

Index (DerefOf (
 22874: 88 83                                            // ..

Index (DEVY, 0x2C)), One))
                            }
                        }


 22876: 88 44 45 56 59 0A 2C 00 01 00                    // .DEVY.,...

                        If (LAnd (
 22880: A0 4A 32 90 92                                   // .J2..

LGreaterEqual (OSYS, 0x07DF), 
 22885: 95 4F 53 59 53 0B DF 07                          // .OSYS...

LEqual (PWIG, One)))
                        {

 2288D: 93 50 57 49 47 01                                // .PWIG.

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

 22893: A0 3B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .;[.\/._SB_PCI0R
 228A3: 50 30 31 50 58 53 58 00                          // P01PXSX.

                                If (^^PCI0.RP01.PXSX.WGST ())
                                {

 228AB: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 31 50 58  // .#^^/.PCI0RP01PX
 228BB: 53 58 57 47 53 54                                // SXWGST

                                    Store (One, 
 228C1: 70 01                                            // p.

Index (DerefOf (
 228C3: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                                }
                            }


 228C5: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP02.PXSX.WGST ())
                            {

 228CF: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 32 50 58  // .#^^/.PCI0RP02PX
 228DF: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 228E5: 70 01                                            // p.

Index (DerefOf (
 228E7: 88 83                                            // ..

Index (DEVY, 0x1A)), One))
                            }


 228E9: 88 44 45 56 59 0A 1A 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP03.PXSX.WGST ())
                            {

 228F3: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 33 50 58  // .#^^/.PCI0RP03PX
 22903: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22909: 70 01                                            // p.

Index (DerefOf (
 2290B: 88 83                                            // ..

Index (DEVY, 0x1B)), One))
                            }


 2290D: 88 44 45 56 59 0A 1B 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP04.PXSX.WGST ())
                            {

 22917: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 34 50 58  // .#^^/.PCI0RP04PX
 22927: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 2292D: 70 01                                            // p.

Index (DerefOf (
 2292F: 88 83                                            // ..

Index (DEVY, 0x1C)), One))
                            }


 22931: 88 44 45 56 59 0A 1C 00 01 00                    // .DEVY.....

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

 2293B: A0 3B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .;[.\/._SB_PCI0R
 2294B: 50 30 31 50 58 53 58 00                          // P01PXSX.

                                If (^^PCI0.RP05.PXSX.WGST ())
                                {

 22953: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 35 50 58  // .#^^/.PCI0RP05PX
 22963: 53 58 57 47 53 54                                // SXWGST

                                    Store (One, 
 22969: 70 01                                            // p.

Index (DerefOf (
 2296B: 88 83                                            // ..

Index (DEVY, 0x1D)), One))
                                }
                            }


 2296D: 88 44 45 56 59 0A 1D 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP06.PXSX.WGST ())
                            {

 22977: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 36 50 58  // .#^^/.PCI0RP06PX
 22987: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 2298D: 70 01                                            // p.

Index (DerefOf (
 2298F: 88 83                                            // ..

Index (DEVY, 0x1E)), One))
                            }


 22991: 88 44 45 56 59 0A 1E 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP07.PXSX.WGST ())
                            {

 2299B: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 37 50 58  // .#^^/.PCI0RP07PX
 229AB: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 229B1: 70 01                                            // p.

Index (DerefOf (
 229B3: 88 83                                            // ..

Index (DEVY, 0x1F)), One))
                            }


 229B5: 88 44 45 56 59 0A 1F 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP08.PXSX.WGST ())
                            {

 229BF: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 38 50 58  // .#^^/.PCI0RP08PX
 229CF: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 229D5: 70 01                                            // p.

Index (DerefOf (
 229D7: 88 83                                            // ..

Index (DEVY, 0x20)), One))
                            }


 229D9: 88 44 45 56 59 0A 20 00 01 00                    // .DEVY. ...

                            If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                            {

 229E3: A0 3B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .;[.\/._SB_PCI0R
 229F3: 50 30 31 50 58 53 58 00                          // P01PXSX.

                                If (^^PCI0.RP09.PXSX.WGST ())
                                {

 229FB: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 39 50 58  // .#^^/.PCI0RP09PX
 22A0B: 53 58 57 47 53 54                                // SXWGST

                                    Store (One, 
 22A11: 70 01                                            // p.

Index (DerefOf (
 22A13: 88 83                                            // ..

Index (DEVY, 0x21)), One))
                                }
                            }


 22A15: 88 44 45 56 59 0A 21 00 01 00                    // .DEVY.!...

                            If (^^PCI0.RP10.PXSX.WGST ())
                            {

 22A1F: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 30 50 58  // .#^^/.PCI0RP10PX
 22A2F: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22A35: 70 01                                            // p.

Index (DerefOf (
 22A37: 88 83                                            // ..

Index (DEVY, 0x22)), One))
                            }


 22A39: 88 44 45 56 59 0A 22 00 01 00                    // .DEVY."...

                            If (^^PCI0.RP11.PXSX.WGST ())
                            {

 22A43: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 31 50 58  // .#^^/.PCI0RP11PX
 22A53: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22A59: 70 01                                            // p.

Index (DerefOf (
 22A5B: 88 83                                            // ..

Index (DEVY, 0x23)), One))
                            }


 22A5D: 88 44 45 56 59 0A 23 00 01 00                    // .DEVY.#...

                            If (^^PCI0.RP12.PXSX.WGST ())
                            {

 22A67: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 32 50 58  // .#^^/.PCI0RP12PX
 22A77: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22A7D: 70 01                                            // p.

Index (DerefOf (
 22A7F: 88 83                                            // ..

Index (DEVY, 0x24)), One))
                            }


 22A81: 88 44 45 56 59 0A 24 00 01 00                    // .DEVY.$...

                            If (^^PCI0.RP13.PXSX.WGST ())
                            {

 22A8B: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 33 50 58  // .#^^/.PCI0RP13PX
 22A9B: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22AA1: 70 01                                            // p.

Index (DerefOf (
 22AA3: 88 83                                            // ..

Index (DEVY, 0x25)), One))
                            }


 22AA5: 88 44 45 56 59 0A 25 00 01 00                    // .DEVY.%...

                            If (^^PCI0.RP14.PXSX.WGST ())
                            {

 22AAF: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 34 50 58  // .#^^/.PCI0RP14PX
 22ABF: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22AC5: 70 01                                            // p.

Index (DerefOf (
 22AC7: 88 83                                            // ..

Index (DEVY, 0x26)), One))
                            }


 22AC9: 88 44 45 56 59 0A 26 00 01 00                    // .DEVY.&...

                            If (^^PCI0.RP15.PXSX.WGST ())
                            {

 22AD3: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 35 50 58  // .#^^/.PCI0RP15PX
 22AE3: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22AE9: 70 01                                            // p.

Index (DerefOf (
 22AEB: 88 83                                            // ..

Index (DEVY, 0x27)), One))
                            }


 22AED: 88 44 45 56 59 0A 27 00 01 00                    // .DEVY.'...

                            If (^^PCI0.RP16.PXSX.WGST ())
                            {

 22AF7: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 36 50 58  // .#^^/.PCI0RP16PX
 22B07: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22B0D: 70 01                                            // p.

Index (DerefOf (
 22B0F: 88 83                                            // ..

Index (DEVY, 0x28)), One))
                            }


 22B11: 88 44 45 56 59 0A 28 00 01 00                    // .DEVY.(...

                            If (^^PCI0.RP17.PXSX.WGST ())
                            {

 22B1B: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 37 50 58  // .#^^/.PCI0RP17PX
 22B2B: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22B31: 70 01                                            // p.

Index (DerefOf (
 22B33: 88 83                                            // ..

Index (DEVY, 0x29)), One))
                            }


 22B35: 88 44 45 56 59 0A 29 00 01 00                    // .DEVY.)...

                            If (^^PCI0.RP18.PXSX.WGST ())
                            {

 22B3F: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 38 50 58  // .#^^/.PCI0RP18PX
 22B4F: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22B55: 70 01                                            // p.

Index (DerefOf (
 22B57: 88 83                                            // ..

Index (DEVY, 0x2A)), One))
                            }


 22B59: 88 44 45 56 59 0A 2A 00 01 00                    // .DEVY.*...

                            If (^^PCI0.RP19.PXSX.WGST ())
                            {

 22B63: A0 23 5E 5E 2F 04 50 43 49 30 52 50 31 39 50 58  // .#^^/.PCI0RP19PX
 22B73: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22B79: 70 01                                            // p.

Index (DerefOf (
 22B7B: 88 83                                            // ..

Index (DEVY, 0x2B)), One))
                            }


 22B7D: 88 44 45 56 59 0A 2B 00 01 00                    // .DEVY.+...

                            If (^^PCI0.RP20.PXSX.WGST ())
                            {

 22B87: A0 23 5E 5E 2F 04 50 43 49 30 52 50 32 30 50 58  // .#^^/.PCI0RP20PX
 22B97: 53 58 57 47 53 54                                // SXWGST

                                Store (One, 
 22B9D: 70 01                                            // p.

Index (DerefOf (
 22B9F: 88 83                                            // ..

Index (DEVY, 0x2C)), One))
                            }
                        }


 22BA1: 88 44 45 56 59 0A 2C 00 01 00                    // .DEVY.,...

                        Return (DEVY)
                    }


 22BAB: A4 44 45 56 59                                   // .DEVY

                    If (LEqual (Arg2, 0x02))
                    {

 22BB0: A0 0A 93 6A 0A 02                                // ...j..

                        Return (BCCD)
                    }


 22BB6: A4 42 43 43 44                                   // .BCCD

                    If (LEqual (Arg2, 0x03))
                    {

 22BBB: A0 0D 93 6A 0A 03                                // ...j..

                        If (
 22BC1: A0 07                                            // ..

LEqual (S0ID, One)){}
                    }


 22BC3: 93 53 30 49 44 01                                // .S0ID.

                    If (LEqual (Arg2, 0x04))
                    {

 22BC9: A0 0D 93 6A 0A 04                                // ...j..

                        If (
 22BCF: A0 07                                            // ..

LEqual (S0ID, One)){}
                    }


 22BD1: 93 53 30 49 44 01                                // .S0ID.

                    If (LEqual (Arg2, 0x05))
                    {

 22BD7: A0 12 93 6A 0A 05                                // ...j..

                        If (LEqual (S0ID, One))
                        {
                            GUAM (One)
                        }
                    }


 22BDD: A0 0C 93 53 30 49 44 01 47 55 41 4D 01           // ...S0ID.GUAM.

                    If (LEqual (Arg2, 0x06))
                    {

 22BEA: A0 12 93 6A 0A 06                                // ...j..

                        If (LEqual (S0ID, One))
                        {
                            GUAM (Zero)
                        }
                    }
                }


 22BF0: A0 0C 93 53 30 49 44 01 47 55 41 4D 00           // ...S0ID.GUAM.

                Return (
 22BFD: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


 22BFE: 11 03 01 00                                      // ....

    Device (PSM)
    {

 22C02: 5B 82 4C 35 50 53 4D 5F                          // [.L5PSM_

        Name (_HID, EisaId ("INT3420"))  // _HID: Hardware ID

 22C0A: 08 5F 48 49 44 0C 25 D4 34 20                    // ._HID.%.4 

        Name (_UID, Zero)  // _UID: Unique ID

 22C14: 08 5F 55 49 44 00                                // ._UID.

        Name (_STR, 
 22C1A: 08 5F 53 54 52                                   // ._STR

Unicode ("Power Sharing Manager"))  // _STR: Description String

 22C1F: 11 2F 0A 2C 50 00 6F 00 77 00 65 00 72 00 20 00  // ./.,P.o.w.e.r. .
 22C2F: 53 00 68 00 61 00 72 00 69 00 6E 00 67 00 20 00  // S.h.a.r.i.n.g. .
 22C3F: 4D 00 61 00 6E 00 61 00 67 00 65 00 72 00 00 00  // M.a.n.a.g.e.r...

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {

 22C4F: 14 42 0B 5F 53 54 41 00                          // .B._STA.

            If (LEqual (PSME, One))
            {

 22C57: A0 46 0A 93 50 53 4D 45 01                       // .F..PSME.

                If (CondRefOf (\_SB.PCI0.RP01.PXSX))
                {

 22C60: A0 33 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .3[.\/._SB_PCI0R
 22C70: 50 30 31 50 58 53 58 00                          // P01PXSX.

                    If (\_SB.PCI0.RP01.PXSX.WGST ())
                    {

 22C78: A0 1B 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // ..\/._SB_PCI0RP0
 22C88: 31 50 58 53 58 57 47 53 54                       // 1PXSXWGST

                        Return (0x0F)
                    }
                }


 22C91: A4 0A 0F                                         // ...

                If (CondRefOf (\_SB.PCI0.RP05.PXSX))
                {

 22C94: A0 33 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .3[.\/._SB_PCI0R
 22CA4: 50 30 35 50 58 53 58 00                          // P05PXSX.

                    If (\_SB.PCI0.RP05.PXSX.WGST ())
                    {

 22CAC: A0 1B 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // ..\/._SB_PCI0RP0
 22CBC: 35 50 58 53 58 57 47 53 54                       // 5PXSXWGST

                        Return (0x0F)
                    }
                }


 22CC5: A4 0A 0F                                         // ...

                If (CondRefOf (\_SB.PCI0.RP09.PXSX))
                {

 22CC8: A0 33 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // .3[.\/._SB_PCI0R
 22CD8: 50 30 39 50 58 53 58 00                          // P09PXSX.

                    If (\_SB.PCI0.RP09.PXSX.WGST ())
                    {

 22CE0: A0 1B 5C 2F 05 5F 53 42 5F 50 43 49 30 52 50 30  // ..\/._SB_PCI0RP0
 22CF0: 39 50 58 53 58 57 47 53 54                       // 9PXSXWGST

                        Return (0x0F)
                    }
                }


 22CF9: A4 0A 0F                                         // ...

                Return (Zero)
            }

 22CFC: A4 00                                            // ..

            Else
            {

 22CFE: A1 03                                            // ..

                Return (Zero)
            }
        }


 22D00: A4 00                                            // ..

        Name (SPLX, 
 22D02: 08 53 50 4C 58                                   // .SPLX

Package (0x03)
        {
            Zero, 

 22D07: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


 22D0B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 22D1B: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

 22D1D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
 22D2D: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {
            Store (PDT1, 
 22D2F: 14 41 07 53 50 4C 43 08 70 50 44 54 31           // .A.SPLC.pPDT1

Index (DerefOf (
 22D3C: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (PLM1, 
 22D3E: 88 53 50 4C 58 01 00 00 00 70 50 4C 4D 31        // .SPLX....pPLM1

Index (DerefOf (
 22D4C: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (PTW1, 
 22D4E: 88 53 50 4C 58 01 00 01 00 70 50 54 57 31        // .SPLX....pPTW1

Index (DerefOf (
 22D5C: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (PDT2, 
 22D5E: 88 53 50 4C 58 01 00 0A 02 00 70 50 44 54 32     // .SPLX.....pPDT2

Index (DerefOf (
 22D6D: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (PLM2, 
 22D6F: 88 53 50 4C 58 0A 02 00 00 00 70 50 4C 4D 32     // .SPLX.....pPLM2

Index (DerefOf (
 22D7E: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (PTW2, 
 22D80: 88 53 50 4C 58 0A 02 00 01 00 70 50 54 57 32     // .SPLX.....pPTW2

Index (DerefOf (
 22D8F: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))

 22D91: 88 53 50 4C 58 0A 02 00 0A 02 00                 // .SPLX......

            Return (SPLX)
        }


 22D9C: A4 53 50 4C 58                                   // .SPLX

        Name (DPLX, 
 22DA1: 08 44 50 4C 58                                   // .DPLX

Package (0x03)
        {
            Zero, 

 22DA6: 12 40 06 03 00                                   // .@...

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 

 22DAB: 12 2D 03 0C 00 00 00 80 0C 00 00 00 80           // .-...........

                Package (0x06)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            }, 


 22DB8: 12 20 06 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // . ..............
 22DC8: 00 80 0C 00 00 00 80 0C 00 00 00 80 0C 00 00 00  // ................
 22DD8: 80                                               // .

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 

 22DD9: 12 2D 03 0C 00 00 00 80 0C 00 00 00 80           // .-...........

                Package (0x06)
                {
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000, 
                    0x80000000
                }
            }
        })

 22DE6: 12 20 06 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // . ..............
 22DF6: 00 80 0C 00 00 00 80 0C 00 00 00 80 0C 00 00 00  // ................
 22E06: 80                                               // .

        Method (DPLC, 0, Serialized)
        {
            Store (DDT1, 
 22E07: 14 48 15 44 50 4C 43 08 70 44 44 54 31           // .H.DPLC.pDDT1

Index (DerefOf (
 22E14: 88 83                                            // ..

Index (DPLX, One)), Zero))
            Store (DDP1, 
 22E16: 88 44 50 4C 58 01 00 00 00 70 44 44 50 31        // .DPLX....pDDP1

Index (DerefOf (
 22E24: 88 83                                            // ..

Index (DPLX, One)), One))
            Store (DLI1, 
 22E26: 88 44 50 4C 58 01 00 01 00 70 44 4C 49 31        // .DPLX....pDLI1

Index (DerefOf (
 22E34: 88 83                                            // ..

Index (DerefOf (
 22E36: 88 83                                            // ..

Index (DPLX, One)), 0x02)), Zero))
            Store (DPL1, 
 22E38: 88 44 50 4C 58 01 00 0A 02 00 00 00 70 44 50 4C  // .DPLX.......pDPL
 22E48: 31                                               // 1

Index (DerefOf (
 22E49: 88 83                                            // ..

Index (DerefOf (
 22E4B: 88 83                                            // ..

Index (DPLX, One)), 0x02)), One))
            Store (DTW1, 
 22E4D: 88 44 50 4C 58 01 00 0A 02 00 01 00 70 44 54 57  // .DPLX.......pDTW
 22E5D: 31                                               // 1

Index (DerefOf (
 22E5E: 88 83                                            // ..

Index (DerefOf (
 22E60: 88 83                                            // ..

Index (DPLX, One)), 0x02)), 0x02))
            Store (DMI1, 
 22E62: 88 44 50 4C 58 01 00 0A 02 00 0A 02 00 70 44 4D  // .DPLX........pDM
 22E72: 49 31                                            // I1

Index (DerefOf (
 22E74: 88 83                                            // ..

Index (DerefOf (
 22E76: 88 83                                            // ..

Index (DPLX, One)), 0x02)), 0x03))
            Store (DMA1, 
 22E78: 88 44 50 4C 58 01 00 0A 02 00 0A 03 00 70 44 4D  // .DPLX........pDM
 22E88: 41 31                                            // A1

Index (DerefOf (
 22E8A: 88 83                                            // ..

Index (DerefOf (
 22E8C: 88 83                                            // ..

Index (DPLX, One)), 0x02)), 0x04))
            Store (DMT1, 
 22E8E: 88 44 50 4C 58 01 00 0A 02 00 0A 04 00 70 44 4D  // .DPLX........pDM
 22E9E: 54 31                                            // T1

Index (DerefOf (
 22EA0: 88 83                                            // ..

Index (DerefOf (
 22EA2: 88 83                                            // ..

Index (DPLX, One)), 0x02)), 0x05))
            Store (DDT2, 
 22EA4: 88 44 50 4C 58 01 00 0A 02 00 0A 05 00 70 44 44  // .DPLX........pDD
 22EB4: 54 32                                            // T2

Index (DerefOf (
 22EB6: 88 83                                            // ..

Index (DPLX, 0x02)), Zero))
            Store (DDP2, 
 22EB8: 88 44 50 4C 58 0A 02 00 00 00 70 44 44 50 32     // .DPLX.....pDDP2

Index (DerefOf (
 22EC7: 88 83                                            // ..

Index (DPLX, 0x02)), One))
            Store (DLI2, 
 22EC9: 88 44 50 4C 58 0A 02 00 01 00 70 44 4C 49 32     // .DPLX.....pDLI2

Index (DerefOf (
 22ED8: 88 83                                            // ..

Index (DerefOf (
 22EDA: 88 83                                            // ..

Index (DPLX, 0x02)), 0x02)), Zero))
            Store (DPL2, 
 22EDC: 88 44 50 4C 58 0A 02 00 0A 02 00 00 00 70 44 50  // .DPLX........pDP
 22EEC: 4C 32                                            // L2

Index (DerefOf (
 22EEE: 88 83                                            // ..

Index (DerefOf (
 22EF0: 88 83                                            // ..

Index (DPLX, 0x02)), 0x02)), One))
            Store (DTW2, 
 22EF2: 88 44 50 4C 58 0A 02 00 0A 02 00 01 00 70 44 54  // .DPLX........pDT
 22F02: 57 32                                            // W2

Index (DerefOf (
 22F04: 88 83                                            // ..

Index (DerefOf (
 22F06: 88 83                                            // ..

Index (DPLX, 0x02)), 0x02)), 0x02))
            Store (DMI2, 
 22F08: 88 44 50 4C 58 0A 02 00 0A 02 00 0A 02 00 70 44  // .DPLX.........pD
 22F18: 4D 49 32                                         // MI2

Index (DerefOf (
 22F1B: 88 83                                            // ..

Index (DerefOf (
 22F1D: 88 83                                            // ..

Index (DPLX, 0x02)), 0x02)), 0x03))
            Store (DMA2, 
 22F1F: 88 44 50 4C 58 0A 02 00 0A 02 00 0A 03 00 70 44  // .DPLX.........pD
 22F2F: 4D 41 32                                         // MA2

Index (DerefOf (
 22F32: 88 83                                            // ..

Index (DerefOf (
 22F34: 88 83                                            // ..

Index (DPLX, 0x02)), 0x02)), 0x04))
            Store (DMT2, 
 22F36: 88 44 50 4C 58 0A 02 00 0A 02 00 0A 04 00 70 44  // .DPLX.........pD
 22F46: 4D 54 32                                         // MT2

Index (DerefOf (
 22F49: 88 83                                            // ..

Index (DerefOf (
 22F4B: 88 83                                            // ..

Index (DPLX, 0x02)), 0x02)), 0x05))

 22F4D: 88 44 50 4C 58 0A 02 00 0A 02 00 0A 05 00        // .DPLX.........

            Return (DPLX)
        }
    }


 22F5B: A4 44 50 4C 58                                   // .DPLX

    Scope (_SB.PCI0.LPCB)
    {

 22F60: 10 42 31 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .B1/._SB_PCI0LPC
 22F70: 42                                               // B

        Device (FWHD)
        {

 22F71: 5B 82 26 46 57 48 44                             // [.&FWHD

            Name (_HID, EisaId ("INT0800"))  // _HID: Hardware ID

 22F78: 08 5F 48 49 44 0C 25 D4 08 00                    // ._HID.%...

            Name (_CRS, 
 22F82: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
            })
        }


 22F87: 11 11 0A 0E 86 09 00 00 00 00 00 FF 00 00 00 01  // ................
 22F97: 79 00                                            // y.

        Device (HPET)
        {

 22F99: 5B 82 45 06 48 50 45 54                          // [.E.HPET

            Name (_HID, EisaId ("PNP0103"))  // _HID: Hardware ID

 22FA1: 08 5F 48 49 44 0C 41 D0 01 03                    // ._HID.A...

            Name (_UID, Zero)  // _UID: Unique ID

 22FAB: 08 5F 55 49 44 00                                // ._UID.

            Name (BUF0, 
 22FB1: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED00000,         // Address Base
                    0x00000400,         // Address Length
                    _Y32)
            })

 22FB6: 11 11 0A 0E 86 09 00 01 00 00 D0 FE 00 04 00 00  // ................
 22FC6: 79 00                                            // y.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 22FC8: 14 11 5F 53 54 41 00                             // .._STA.

                If (HPTE)
                {

 22FCF: A0 08 48 50 54 45                                // ..HPTE

                    Return (0x0F)
                }


 22FD5: A4 0A 0F                                         // ...

                Return (Zero)
            }


 22FD8: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

 22FDA: 14 25 5F 43 52 53 08                             // .%_CRS.

                If (HPTE)
                {

 22FE1: A0 19 48 50 54 45                                // ..HPTE

                    CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y32._BAS, HPT0)  // _BAS: Base Address

 22FE7: 8A 42 55 46 30 0A 04 48 50 54 30                 // .BUF0..HPT0

                    Store (HPTB, HPT0)
                }


 22FF2: 70 48 50 54 42 48 50 54 30                       // pHPTBHPT0

                Return (BUF0)
            }
        }


 22FFB: A4 42 55 46 30                                   // .BUF0

        Device (IPIC)
        {

 23000: 5B 82 45 0A 49 50 49 43                          // [.E.IPIC

            Name (_HID, EisaId ("PNP0000"))  // _HID: Hardware ID

 23008: 08 5F 48 49 44 0B 41 D0                          // ._HID.A.

            Name (_CRS, 
 23010: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0020,             // Range Minimum
                    0x0020,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0024,             // Range Minimum
                    0x0024,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0028,             // Range Minimum
                    0x0028,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x002C,             // Range Minimum
                    0x002C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0030,             // Range Minimum
                    0x0030,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0034,             // Range Minimum
                    0x0034,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0038,             // Range Minimum
                    0x0038,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x003C,             // Range Minimum
                    0x003C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A0,             // Range Minimum
                    0x00A0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A4,             // Range Minimum
                    0x00A4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A8,             // Range Minimum
                    0x00A8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00AC,             // Range Minimum
                    0x00AC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B0,             // Range Minimum
                    0x00B0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B4,             // Range Minimum
                    0x00B4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B8,             // Range Minimum
                    0x00B8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00BC,             // Range Minimum
                    0x00BC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x04D0,             // Range Minimum
                    0x04D0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IRQNoFlags ()
                    {2}
            })
        }


 23015: 11 41 09 0A 8D 47 01 20 00 20 00 01 02 47 01 24  // .A...G. . ...G.$
 23025: 00 24 00 01 02 47 01 28 00 28 00 01 02 47 01 2C  // .$...G.(.(...G.,
 23035: 00 2C 00 01 02 47 01 30 00 30 00 01 02 47 01 34  // .,...G.0.0...G.4
 23045: 00 34 00 01 02 47 01 38 00 38 00 01 02 47 01 3C  // .4...G.8.8...G.<
 23055: 00 3C 00 01 02 47 01 A0 00 A0 00 01 02 47 01 A4  // .<...G.......G..
 23065: 00 A4 00 01 02 47 01 A8 00 A8 00 01 02 47 01 AC  // .....G.......G..
 23075: 00 AC 00 01 02 47 01 B0 00 B0 00 01 02 47 01 B4  // .....G.......G..
 23085: 00 B4 00 01 02 47 01 B8 00 B8 00 01 02 47 01 BC  // .....G.......G..
 23095: 00 BC 00 01 02 47 01 D0 04 D0 04 01 02 22 04 00  // .....G......."..
 230A5: 79 00                                            // y.

        Device (MATH)
        {

 230A7: 5B 82 3E 4D 41 54 48                             // [.>MATH

            Name (_HID, EisaId ("PNP0C04"))  // _HID: Hardware ID

 230AE: 08 5F 48 49 44 0C 41 D0 0C 04                    // ._HID.A...

            Name (_CRS, 
 230B8: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x00F0,             // Range Minimum
                    0x00F0,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IRQNoFlags ()
                    {13}
            })

 230BD: 11 10 0A 0D 47 01 F0 00 F0 00 01 01 22 00 20 79  // ....G.......". y
 230CD: 00                                               // .

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 230CE: 14 18 5F 53 54 41 00                             // .._STA.

                If (LEqual (PCHV (), SPTH))
                {

 230D5: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x1F)
                }

 230E0: A4 0A 1F                                         // ...

                Else
                {

 230E3: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


 230E5: A4 00                                            // ..

        Device (LDRC)
        {

 230E7: 5B 82 43 0A 4C 44 52 43                          // [.C.LDRC

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

 230EF: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x02)  // _UID: Unique ID

 230F9: 08 5F 55 49 44 0A 02                             // ._UID..

            Name (_CRS, 
 23100: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x002E,             // Range Minimum
                    0x002E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x004E,             // Range Minimum
                    0x004E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0061,             // Range Minimum
                    0x0061,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0063,             // Range Minimum
                    0x0063,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0065,             // Range Minimum
                    0x0065,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0067,             // Range Minimum
                    0x0067,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0080,             // Range Minimum
                    0x0080,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0092,             // Range Minimum
                    0x0092,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x00B2,             // Range Minimum
                    0x00B2,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0680,             // Range Minimum
                    0x0680,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x1800,             // Range Minimum
                    0x1800,             // Range Maximum
                    0x01,               // Alignment
                    0xFF,               // Length
                    )
                IO (Decode16,
                    0x164E,             // Range Minimum
                    0x164E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
            })
        }


 23105: 11 46 08 0A 82 47 01 2E 00 2E 00 01 02 47 01 4E  // .F...G.......G.N
 23115: 00 4E 00 01 02 47 01 61 00 61 00 01 01 47 01 63  // .N...G.a.a...G.c
 23125: 00 63 00 01 01 47 01 65 00 65 00 01 01 47 01 67  // .c...G.e.e...G.g
 23135: 00 67 00 01 01 47 01 70 00 70 00 01 01 47 01 80  // .g...G.p.p...G..
 23145: 00 80 00 01 01 47 01 92 00 92 00 01 01 47 01 B2  // .....G.......G..
 23155: 00 B2 00 01 02 47 01 80 06 80 06 01 20 47 01 FF  // .....G...... G..
 23165: FF FF FF 01 01 47 01 FF FF FF FF 01 01 47 01 FF  // .....G.......G..
 23175: FF FF FF 01 01 47 01 00 18 00 18 01 FF 47 01 4E  // .....G.......G.N
 23185: 16 4E 16 01 02 79 00                             // .N...y.

        Device (LDR2)
        {

 2318C: 5B 82 4A 04 4C 44 52 32                          // [.J.LDR2

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

 23194: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, "LPC_DEV")  // _UID: Unique ID

 2319E: 08 5F 55 49 44 0D 4C 50 43 5F 44 45 56 00        // ._UID.LPC_DEV.

            Name (_CRS, 
 231AC: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0800,             // Range Minimum
                    0x0800,             // Range Maximum
                    0x01,               // Alignment
                    0x80,               // Length
                    )
            })

 231B1: 11 0D 0A 0A 47 01 00 08 00 08 01 80 79 00        // ....G.......y.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 231BF: 14 18 5F 53 54 41 00                             // .._STA.

                If (LEqual (PCHV (), SPTH))
                {

 231C6: A0 0D 93 50 43 48 56 53 50 54 48                 // ...PCHVSPTH

                    Return (0x0F)
                }

 231D1: A4 0A 0F                                         // ...

                Else
                {

 231D4: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


 231D6: A4 00                                            // ..

        Device (RTC)
        {

 231D8: 5B 82 25 52 54 43 5F                             // [.%RTC_

            Name (_HID, EisaId ("PNP0B00"))  // _HID: Hardware ID

 231DF: 08 5F 48 49 44 0C 41 D0 0B 00                    // ._HID.A...

            Name (_CRS, 
 231E9: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                IRQNoFlags ()
                    {8}
            })
        }


 231EE: 11 10 0A 0D 47 01 70 00 70 00 01 08 22 00 01 79  // ....G.p.p..."..y
 231FE: 00                                               // .

        Device (TIMR)
        {

 231FF: 5B 82 2D 54 49 4D 52                             // [.-TIMR

            Name (_HID, EisaId ("PNP0100"))  // _HID: Hardware ID

 23206: 08 5F 48 49 44 0C 41 D0 01 00                    // ._HID.A...

            Name (_CRS, 
 23210: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0040,             // Range Minimum
                    0x0040,             // Range Maximum
                    0x01,               // Alignment
                    0x04,               // Length
                    )
                IO (Decode16,
                    0x0050,             // Range Minimum
                    0x0050,             // Range Maximum
                    0x10,               // Alignment
                    0x04,               // Length
                    )
                IRQNoFlags ()
                    {0}
            })
        }


 23215: 11 18 0A 15 47 01 40 00 40 00 01 04 47 01 50 00  // ....G.@.@...G.P.
 23225: 50 00 10 04 22 01 00 79 00                       // P..."..y.

        Device (CWDT)
        {

 2322E: 5B 82 43 04 43 57 44 54                          // [.C.CWDT

            Name (_HID, EisaId ("INT3F0D"))  // _HID: Hardware ID

 23236: 08 5F 48 49 44 0C 25 D4 3F 0D                    // ._HID.%.?.

            Name (_CID, EisaId ("PNP0C02"))  // _CID: Compatible ID

 23240: 08 5F 43 49 44 0C 41 D0 0C 02                    // ._CID.A...

            Name (BUF0, 
 2324A: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                IO (Decode16,
                    0x1854,             // Range Minimum
                    0x1854,             // Range Maximum
                    0x04,               // Alignment
                    0x04,               // Length
                    )
            })

 2324F: 11 0D 0A 0A 47 01 54 18 54 18 04 04 79 00        // ....G.T.T...y.

            Method (_STA, 0, Serialized)  // _STA: Status
            {

 2325D: 14 09 5F 53 54 41 08                             // .._STA.

                Return (0x0F)
            }


 23264: A4 0A 0F                                         // ...

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

 23267: 14 0B 5F 43 52 53 08                             // .._CRS.

                Return (BUF0)
            }
        }
    }


 2326E: A4 42 55 46 30                                   // .BUF0

    Device (ALSD)
    {

 23273: 5B 82 4C 06 41 4C 53 44                          // [.L.ALSD

        Name (_HID, "ACPI0008")  // _HID: Hardware ID

 2327B: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 38 00     // ._HID.ACPI0008.

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {

 2328A: 14 14 5F 53 54 41 00                             // .._STA.

            If (LEqual (ALSE, 0x02))
            {

 23291: A0 0B 93 41 4C 53 45 0A 02                       // ...ALSE..

                Return (0x0B)
            }


 2329A: A4 0A 0B                                         // ...

            Return (Zero)
        }


 2329D: A4 00                                            // ..

        Method (_ALI, 0, NotSerialized)  // _ALI: Ambient Light Illuminance
        {

 2329F: 14 15 5F 41 4C 49 00                             // .._ALI.

            Return (
 232A6: A4                                               // .

Or (ShiftLeft (LHIH, 0x08), LLOW))
        }


 232A7: 7D 79 4C 48 49 48 0A 08 00 4C 4C 4F 57 00        // }yLHIH...LLOW.

        Name (_ALR, 
 232B5: 08 5F 41 4C 52                                   // ._ALR

Package (0x05)  // _ALR: Ambient Light Response
        {

 232BA: 12 26 05                                         // .&.

            Package (0x02)
            {
                0x46, 
                Zero
            }, 


 232BD: 12 05 02 0A 46 00                                // ....F.

            Package (0x02)
            {
                0x49, 
                0x0A
            }, 


 232C3: 12 06 02 0A 49 0A 0A                             // ....I..

            Package (0x02)
            {
                0x55, 
                0x50
            }, 


 232CA: 12 06 02 0A 55 0A 50                             // ....U.P

            Package (0x02)
            {
                0x64, 
                0x012C
            }, 


 232D1: 12 07 02 0A 64 0B 2C 01                          // ....d.,.

            Package (0x02)
            {
                0x96, 
                0x03E8
            }
        })
    }


 232D9: 12 07 02 0A 96 0B E8 03                          // ........

    OperationRegion (ABNV, SystemMemory, 0x68EEC000, 0x0014)

 232E1: 5B 80 41 42 4E 56 00 0C 00 C0 EE 68 0B 14 00     // [.ABNV.....h...

    Field (ABNV, AnyAcc, Lock, Preserve)
    {
        ABMA,   64, 
        ABMS,   8, 
        ABIA,   16, 
        ABIL,   16, 
        ABRA,   32, 
        ABRS,   16, 
        ABFW,   8
    }


 232F0: 5B 81 2A 41 42 4E 56 10 41 42 4D 41 40 04 41 42  // [.*ABNV.ABMA@.AB
 23300: 4D 53 08 41 42 49 41 10 41 42 49 4C 10 41 42 52  // MS.ABIA.ABIL.ABR
 23310: 41 20 41 42 52 53 10 41 42 46 57 08              // A ABRS.ABFW.

    Device (_SB.TPM)
    {

 2331C: 5B 82 48 3A 2E 5F 53 42 5F 54 50 4D 5F           // [.H:._SB_TPM_

        Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
        {

 23329: 14 2F 5F 48 49 44 00                             // ./_HID.

            If (TCMF)
            {

 23330: A0 0B 54 43 4D 46                                // ..TCMF

                Return (0x01013469)
            }

 23336: A4 0C 69 34 01 01                                // ..i4..

            ElseIf
 2333C: A1 1C                                            // ..

 (LEqual (TTDP, Zero))
            {

 2333E: A0 0D 93 54 54 44 50 00                          // ...TTDP.

                Return (0x310CD041)
            }

 23346: A4 0C 41 D0 0C 31                                // ..A..1

            Else
            {

 2334C: A1 0C                                            // ..

                Return ("MSFT0101")
            }
        }


 2334E: A4 0D 4D 53 46 54 30 31 30 31 00                 // ..MSFT0101.

        Method (_STR, 0, NotSerialized)  // _STR: Description String
        {

 23359: 14 47 05 5F 53 54 52 00                          // .G._STR.

            If (LEqual (TTDP, Zero))
            {

 23361: A0 2A 93 54 54 44 50 00                          // .*.TTDP.

                Return (
 23369: A4                                               // .

Unicode ("TPM 1.2 Device"))
            }

 2336A: 11 21 0A 1E 54 00 50 00 4D 00 20 00 31 00 2E 00  // .!..T.P.M. .1...
 2337A: 32 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 2. .D.e.v.i.c.e.
 2338A: 00 00                                            // ..

            Else
            {

 2338C: A1 24                                            // .$

                Return (
 2338E: A4                                               // .

Unicode ("TPM 2.0 Device"))
            }
        }


 2338F: 11 21 0A 1E 54 00 50 00 4D 00 20 00 32 00 2E 00  // .!..T.P.M. .2...
 2339F: 30 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 0. .D.e.v.i.c.e.
 233AF: 00 00                                            // ..

        Name (_UID, One)  // _UID: Unique ID

 233B1: 08 5F 55 49 44 01                                // ._UID.

        Name (CRST, 
 233B7: 08 43 52 53 54                                   // .CRST

ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0x00000000,         // Address Base
                0x00001000,         // Address Length
                _Y33)
            Memory32Fixed (ReadOnly,
                0xFED70000,         // Address Base
                0x00001000,         // Address Length
                _Y34)
        })

 233BC: 11 1D 0A 1A 86 09 00 00 00 00 00 00 00 10 00 00  // ................
 233CC: 86 09 00 00 00 00 D7 FE 00 10 00 00 79 00        // ............y.

        Name (CRSD, 
 233DA: 08 43 52 53 44                                   // .CRSD

ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y35)
        })

 233DF: 11 11 0A 0E 86 09 00 01 00 00 D4 FE 00 50 00 00  // .............P..
 233EF: 79 00                                            // y.

        Name (CRSI, 
 233F1: 08 43 52 53 49                                   // .CRSI

ResourceTemplate ()
        {
            Memory32Fixed (ReadWrite,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y36)
        })

 233F6: 11 11 0A 0E 86 09 00 01 00 00 D4 FE 00 50 00 00  // .............P..
 23406: 79 00                                            // y.

        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {

 23408: 14 4C 10 5F 43 52 53 08                          // .L._CRS.

            If (LEqual (AMDT, One))
            {

 23410: A0 4B 05 93 41 4D 44 54 01                       // .K..AMDT.

                CreateDWordField (CRST, \_SB.TPM._Y33._BAS, MTFB)  // _BAS: Base Address

 23419: 8A 43 52 53 54 0A 04 4D 54 46 42                 // .CRST..MTFB

                CreateDWordField (CRST, \_SB.TPM._Y33._LEN, LTFB)  // _LEN: Length
                Store (TPMB, MTFB)
                Store (0x1000, LTFB)

 23424: 8A 43 52 53 54 0A 08 4C 54 46 42 70 54 50 4D 42  // .CRST..LTFBpTPMB
 23434: 4D 54 46 42 70 0B 00 10 4C 54 46 42              // MTFBp...LTFB

                CreateDWordField (CRST, \_SB.TPM._Y34._BAS, MTFC)  // _BAS: Base Address

 23440: 8A 43 52 53 54 0A 10 4D 54 46 43                 // .CRST..MTFC

                CreateDWordField (CRST, \_SB.TPM._Y34._LEN, LTFC)  // _LEN: Length
                Store (TPMC, MTFC)
                Store (0x1000, LTFC)

 2344B: 8A 43 52 53 54 0A 14 4C 54 46 43 70 54 50 4D 43  // .CRST..LTFCpTPMC
 2345B: 4D 54 46 43 70 0B 00 10 4C 54 46 43              // MTFCp...LTFC

                Return (CRST)
            }

 23467: A4 43 52 53 54                                   // .CRST

            Else
            {

 2346C: A1 43 0A                                         // .C.

                If (LEqual (DTPT, One))
                {

 2346F: A0 34 93 44 54 50 54 01                          // .4.DTPT.

                    CreateDWordField (CRSD, \_SB.TPM._Y35._BAS, MTFE)  // _BAS: Base Address

 23477: 8A 43 52 53 44 0A 04 4D 54 46 45                 // .CRSD..MTFE

                    CreateDWordField (CRSD, \_SB.TPM._Y35._LEN, LTFE)  // _LEN: Length
                    Store (0xFED40000, MTFE)
                    Store (0x5000, LTFE)

 23482: 8A 43 52 53 44 0A 08 4C 54 46 45 70 0C 00 00 D4  // .CRSD..LTFEp....
 23492: FE 4D 54 46 45 70 0B 00 50 4C 54 46 45           // .MTFEp..PLTFE

                    Return (CRSD)
                }

 2349F: A4 43 52 53 44                                   // .CRSD

                ElseIf
 234A4: A1 4A 05                                         // .J.

 (LEqual (TTPF, One))
                {

 234A7: A0 34 93 54 54 50 46 01                          // .4.TTPF.

                    CreateDWordField (CRSI, \_SB.TPM._Y36._BAS, MTFD)  // _BAS: Base Address

 234AF: 8A 43 52 53 49 0A 04 4D 54 46 44                 // .CRSI..MTFD

                    CreateDWordField (CRSI, \_SB.TPM._Y36._LEN, LTFD)  // _LEN: Length
                    Store (0xFED40000, MTFD)
                    Store (0x5000, LTFD)

 234BA: 8A 43 52 53 49 0A 08 4C 54 46 44 70 0C 00 00 D4  // .CRSI..LTFDp....
 234CA: FE 4D 54 46 44 70 0B 00 50 4C 54 46 44           // .MTFDp..PLTFD

                    Return (CRSI)
                }

 234D7: A4 43 52 53 49                                   // .CRSI

                ElseIf
 234DC: A1 22                                            // ."

 (LEqual (TTPF, Zero))
                {

 234DE: A0 20 93 54 54 50 46 00                          // . .TTPF.

                    CreateDWordField (CRSI, \_SB.TPM._Y36._BAS, MTFF)  // _BAS: Base Address
                    Store (TPMM, MTFF)

 234E6: 8A 43 52 53 49 0A 04 4D 54 46 46 70 54 50 4D 4D  // .CRSI..MTFFpTPMM
 234F6: 4D 54 46 46                                      // MTFF

                    Return (CRSI)
                }

                Store (Zero, MTFE)
                Store (Zero, LTFE)

 234FA: A4 43 52 53 49 70 00 4D 54 46 45 70 00 4C 54 46  // .CRSIp.MTFEp.LTF
 2350A: 45                                               // E

                Return (CRSI)
            }


 2350B: A4 43 52 53 49                                   // .CRSI

            Return (CRSI)
        }


 23510: A4 43 52 53 49                                   // .CRSI

        OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x5000)

 23515: 5B 80 54 4D 4D 42 00 0C 00 00 D4 FE 0B 00 50     // [.TMMB........P

        Field (TMMB, ByteAcc, Lock, Preserve)
        {
            Offset (0x04), 
            LCST,   32, 
            Offset (0x40), 
            CREQ,   32, 
            CSTS,   32, 
            Offset (0x4C), 
            SCMD,   32
        }


 23524: 5B 81 21 54 4D 4D 42 11 00 20 4C 43 53 54 20 00  // [.!TMMB.. LCST .
 23534: 40 1C 43 52 45 51 20 43 53 54 53 20 00 20 53 43  // @.CREQ CSTS . SC
 23544: 4D 44 20                                         // MD 

        OperationRegion (CRBD, SystemMemory, TPMM, 0x48)

 23547: 5B 80 43 52 42 44 00 54 50 4D 4D 0A 48           // [.CRBD.TPMM.H

        Field (CRBD, AnyAcc, NoLock, Preserve)
        {
            Offset (0x04), 
            HERR,   32, 
            Offset (0x40), 
            HCMD,   32, 
            HSTS,   32
        }


 23554: 5B 81 1A 43 52 42 44 00 00 20 48 45 52 52 20 00  // [..CRBD.. HERR .
 23564: 40 1C 48 43 4D 44 20 48 53 54 53 20              // @.HCMD HSTS 

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {

 23570: 14 30 5F 53 54 41 00                             // .0_STA.

            If (LEqual (TTDP, Zero))
            {

 23577: A0 12 93 54 54 44 50 00                          // ...TTDP.

                If (TPMF)
                {

 2357F: A0 08 54 50 4D 46                                // ..TPMF

                    Return (0x0F)
                }


 23585: A4 0A 0F                                         // ...

                Return (Zero)
            }

 23588: A4 00                                            // ..

            ElseIf
 2358A: A1 14                                            // ..

 (LEqual (TTDP, One))
            {

 2358C: A0 12 93 54 54 44 50 01                          // ...TTDP.

                If (TPMF)
                {

 23594: A0 08 54 50 4D 46                                // ..TPMF

                    Return (0x0F)
                }


 2359A: A4 0A 0F                                         // ...

                Return (Zero)
            }


 2359D: A4 00                                            // ..

            Return (Zero)
        }


 2359F: A4 00                                            // ..

        Method (STRT, 3, Serialized)
        {

 235A1: 14 44 0C 53 54 52 54 0B                          // .D.STRT.


 235A9: 08 5F 54 5F 30 00                                // ._T_0.

            OperationRegion (TPMR, SystemMemory, FTPM, 0x1000)

 235AF: 5B 80 54 50 4D 52 00 46 54 50 4D 0B 00 10        // [.TPMR.FTPM...

            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                FERR,   32, 
                Offset (0x0C), 
                BEGN,   32
            }


 235BD: 5B 81 14 54 50 4D 52 00 00 20 46 45 52 52 20 00  // [..TPMR.. FERR .
 235CD: 20 42 45 47 4E 20                                //  BEGN 

            Name (TIMR, Zero)

 235D3: 08 54 49 4D 52 00                                // .TIMR.

            If (
 235D9: A0 07                                            // ..


 235DB: 92                                               // .

LNotEqual (ToInteger (Arg0), Zero)){}

 235DC: 93 99 68 00 00                                   // ..h..

            Switch (ToInteger (Arg1))
            {

 235E1: A2 42 08 01 70 99 69 00 5F 54 5F 30              // .B..p.i._T_0

                Case (Zero)
                {

 235ED: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                    Return (
 235F5: A4                                               // .

Buffer (One)
                    {
                         0x03                                           
                    })
                }

 235F6: 11 03 01 03                                      // ....

                Case
 235FA: A1 48 06                                         // .H.

 (One)
                {
                    Store (Zero, TIMR)

 235FD: A0 45 06 93 5F 54 5F 30 01 70 00 54 49 4D 52     // .E.._T_0.p.TIMR

                    If (LEqual (AMDT, One))
                    {

 2360C: A0 28 93 41 4D 44 54 01                          // .(.AMDT.

                        While (LAnd (LEqual (BEGN, One), 
 23614: A2 20 90 93 42 45 47 4E 01                       // . ..BEGN.

LLess (TIMR, 0x0200)))
                        {

 2361D: 95 54 49 4D 52 0B 00 02                          // .TIMR...

                            If (LEqual (BEGN, One))
                            {
                                Sleep (One)

 23625: A0 0F 93 42 45 47 4E 01 5B 22 01                 // ...BEGN.[".

                                Increment (TIMR)
                            }
                        }
                    }

 23630: 75 54 49 4D 52                                   // uTIMR

                    ElseIf
 23635: A1 2B                                            // .+

 (LEqual (Or (And (HSTS, 0x02), And (HSTS, One)), 0x03))
                    {

 23637: A0 1B 93 7D 7B 48 53 54 53 0A 02 00 7B 48 53 54  // ...}{HSTS...{HST
 23647: 53 01 00 00 0A 03                                // S.....

                        Store (One, HCMD)
                    }

 2364D: 70 01 48 43 4D 44                                // p.HCMD

                    Else
                    {
                        Store (One, FERR)

 23653: A1 0D 70 01 46 45 52 52                          // ..p.FERR

                        Store (Zero, BEGN)
                    }


 2365B: 70 00 42 45 47 4E                                // p.BEGN

                    Return (Zero)
                }


 23661: A4 00                                            // ..

            }


 23663: A5                                               // .

            Return (One)
        }


 23664: A4 01                                            // ..

        Method (CRYF, 3, Serialized)
        {

 23666: 14 4F 05 43 52 59 46 0B                          // .O.CRYF.


 2366E: 08 5F 54 5F 30 00                                // ._T_0.

            If (
 23674: A0 07                                            // ..


 23676: 92                                               // .

LNotEqual (ToInteger (Arg0), One)){}

 23677: 93 99 68 00 01                                   // ..h..

            Switch (ToInteger (Arg1))
            {

 2367C: A2 44 04 01 70 99 69 00 5F 54 5F 30              // .D..p.i._T_0

                Case (Zero)
                {

 23688: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                    Return (
 23690: A4                                               // .

Buffer (One)
                    {
                         0x03                                           
                    })
                }

 23691: 11 03 01 03                                      // ....

                Case
 23695: A1 2A                                            // .*

 (One)
                {

 23697: A0 28 93 5F 54 5F 30 01                          // .(._T_0.

                    Name (TPMV, 
 2369F: 08 54 50 4D 56                                   // .TPMV

Package (0x02)
                    {
                        One, 

 236A4: 12 09 02 01                                      // ....

                        Package (0x02)
                        {
                            One, 
                            0x20
                        }
                    })

 236A8: 12 05 02 01 0A 20                                // ..... 

                    If (LEqual (_STA (), Zero))
                    {

 236AE: A0 0C 93 5F 53 54 41 00                          // ..._STA.

                        Return (
 236B6: A4                                               // .

Package (0x01)
                        {
                            Zero
                        })
                    }


 236B7: 12 03 01 00                                      // ....

                    Return (TPMV)
                }


 236BB: A4 54 50 4D 56                                   // .TPMV

            }


 236C0: A5                                               // .

            Return (
 236C1: A4                                               // .

Buffer (One)
            {
                 0x00                                           
            })
        }
    }


 236C2: 11 03 01 00                                      // ....

    Scope (_SB.TPM)
    {

 236C6: 10 47 34 2E 5F 53 42 5F 54 50 4D 5F              // .G4._SB_TPM_

        OperationRegion (TSMI, SystemIO, SMIA, 0x02)

 236D2: 5B 80 54 53 4D 49 01 53 4D 49 41 0A 02           // [.TSMI.SMIA..

        Field (TSMI, WordAcc, NoLock, Preserve)
        {
            SMI,    16
        }


 236DF: 5B 81 0B 54 53 4D 49 02 53 4D 49 5F 10           // [..TSMI.SMI_.

        OperationRegion (ATNV, SystemMemory, PPIM, PPIL)

 236EC: 5B 80 41 54 4E 56 00 50 50 49 4D 50 50 49 4C     // [.ATNV.PPIMPPIL

        Field (ATNV, AnyAcc, NoLock, Preserve)
        {
            RQST,   32, 
            RCNT,   32, 
            ERRO,   32, 
            FLAG,   32, 
            MISC,   32, 
            OPTN,   32, 
            SRSP,   32
        }


 236FB: 5B 81 29 41 54 4E 56 00 52 51 53 54 20 52 43 4E  // [.)ATNV.RQST RCN
 2370B: 54 20 45 52 52 4F 20 46 4C 41 47 20 4D 49 53 43  // T ERRO FLAG MISC
 2371B: 20 4F 50 54 4E 20 53 52 53 50 20                 //  OPTN SRSP 

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

 23726: 14 40 28 5F 44 53 4D 0C                          // .@(_DSM.


 2372E: 08 5F 54 5F 31 00                                // ._T_1.


 23734: 08 5F 54 5F 30 00                                // ._T_0.

            If (LEqual (Arg0, 
 2373A: A0 47 1B 93 68                                   // .G..h

ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {

 2373F: 11 13 0A 10 A6 FA DD 3D 1B 36 B4 4E A4 24 8D 10  // .......=.6.N.$..
 2374F: 08 9D 16 53                                      // ...S

                Switch (ToInteger (Arg2))
                {

 23753: A2 4E 19 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                    Case (Zero)
                    {

 2375F: A0 0E 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
 23767: A4                                               // .

Buffer (0x02)
                        {
                             0xFF, 0x01                                     
                        })
                    }

 23768: 11 05 0A 02 FF 01                                // ......

                    Case
 2376E: A1 42 18                                         // .B.

 (One)
                    {

 23771: A0 1D 93 5F 54 5F 30 01                          // ..._T_0.

                        If (LEqual (PPIV, Zero))
                        {

 23779: A0 0D 93 50 50 49 56 00                          // ...PPIV.

                            Return ("1.2")
                        }

 23781: A4 0D 31 2E 32 00                                // ..1.2.

                        Else
                        {

 23787: A1 07                                            // ..

                            Return ("1.3")
                        }
                    }

 23789: A4 0D 31 2E 33 00                                // ..1.3.

                    Case
 2378F: A1 41 16                                         // .A.

 (0x02)
                    {
                        Store (DerefOf (
 23792: A0 3C 93 5F 54 5F 30 0A 02 70 83                 // .<._T_0..p.

Index (Arg3, Zero)), RQST)
                        Store (Zero, SRSP)
                        Store (0x02, FLAG)
                        Store (OFST, TMF1)
                        Store (Zero, SRSP)
                        Store (TMF1, SMI)

 2379D: 88 6B 00 00 52 51 53 54 70 00 53 52 53 50 70 0A  // .k..RQSTp.SRSPp.
 237AD: 02 46 4C 41 47 70 4F 46 53 54 54 4D 46 31 70 00  // .FLAGpOFSTTMF1p.
 237BD: 53 52 53 50 70 54 4D 46 31 53 4D 49 5F           // SRSPpTMF1SMI_

                        Return (SRSP)
                    }

 237CA: A4 53 52 53 50                                   // .SRSP

                    Case
 237CF: A1 41 12                                         // .A.

 (0x03)
                    {

 237D2: A0 23 93 5F 54 5F 30 0A 03                       // .#._T_0..

                        Name (PPI1, 
 237DB: 08 50 50 49 31                                   // .PPI1

Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        Store (RQST, 
 237E0: 12 04 02 00 00 70 52 51 53 54                    // .....pRQST

Index (PPI1, One))

 237EA: 88 50 50 49 31 01 00                             // .PPI1..

                        Return (PPI1)
                    }

 237F1: A4 50 50 49 31                                   // .PPI1

                    Case
 237F6: A1 4A 0F                                         // .J.

 (0x04)
                    {

 237F9: A0 0D 93 5F 54 5F 30 0A 04                       // ..._T_0..

                        Return (TRST)
                    }

 23802: A4 54 52 53 54                                   // .TRST

                    Case
 23807: A1 49 0E                                         // .I.

 (0x05)
                    {

 2380A: A0 48 04 93 5F 54 5F 30 0A 05                    // .H.._T_0..

                        Name (PPI2, 
 23814: 08 50 50 49 32                                   // .PPI2

Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        Store (Zero, SRSP)
                        Store (0x05, FLAG)
                        Store (OFST, SMI)
                        Store (RCNT, 
 23819: 12 05 03 00 00 00 70 00 53 52 53 50 70 0A 05 46  // ......p.SRSPp..F
 23829: 4C 41 47 70 4F 46 53 54 53 4D 49 5F 70 52 43 4E  // LAGpOFSTSMI_pRCN
 23839: 54                                               // T

Index (PPI2, One))
                        Store (ERRO, 
 2383A: 88 50 50 49 32 01 00 70 45 52 52 4F              // .PPI2..pERRO

Index (PPI2, 0x02))

 23846: 88 50 50 49 32 0A 02 00                          // .PPI2...

                        Return (PPI2)
                    }

 2384E: A4 50 50 49 32                                   // .PPI2

                    Case
 23853: A1 4D 09                                         // .M.

 (0x06)
                    {

 23856: A0 0B 93 5F 54 5F 30 0A 06                       // ..._T_0..

                        Return (0x03)
                    }

 2385F: A4 0A 03                                         // ...

                    Case
 23862: A1 4E 08                                         // .N.

 (0x07)
                    {
                        Store (DerefOf (
 23865: A0 40 05 93 5F 54 5F 30 0A 07 70 83              // .@.._T_0..p.

Index (Arg3, Zero)), RQST)
                        Store (0x07, FLAG)
                        Store (Zero, OPTN)

 23871: 88 6B 00 00 52 51 53 54 70 0A 07 46 4C 41 47 70  // .k..RQSTp..FLAGp
 23881: 00 4F 50 54 4E                                   // .OPTN

                        If (LEqual (RQST, 0x17))
                        {

 23886: A0 12 93 52 51 53 54 0A 17                       // ...RQST..

                            ToInteger (DerefOf (
 2388F: 99 83                                            // ..

Index (Arg3, One)), OPTN)
                        }

                        Store (OFST, TMF1)
                        Store (Zero, SRSP)
                        Store (TMF1, SMI)

 23891: 88 6B 01 00 4F 50 54 4E 70 4F 46 53 54 54 4D 46  // .k..OPTNpOFSTTMF
 238A1: 31 70 00 53 52 53 50 70 54 4D 46 31 53 4D 49 5F  // 1p.SRSPpTMF1SMI_

                        Return (SRSP)
                    }

 238B1: A4 53 52 53 50                                   // .SRSP

                    Case
 238B6: A1 3A                                            // .:

 (0x08)
                    {
                        Store (DerefOf (
 238B8: A0 36 93 5F 54 5F 30 0A 08 70 83                 // .6._T_0..p.

Index (Arg3, Zero)), RQST)
                        Store (0x08, FLAG)
                        Store (OFST, TMF1)
                        Store (Zero, SRSP)
                        Store (TMF1, SMI)

 238C3: 88 6B 00 00 52 51 53 54 70 0A 08 46 4C 41 47 70  // .k..RQSTp..FLAGp
 238D3: 4F 46 53 54 54 4D 46 31 70 00 53 52 53 50 70 54  // OFSTTMF1p.SRSPpT
 238E3: 4D 46 31 53 4D 49 5F                             // MF1SMI_

                        Return (SRSP)
                    }

 238EA: A4 53 52 53 50                                   // .SRSP

                    Default
                    {
                    }


 238EF: A1 01                                            // ..

                }
            }

 238F1: A5                                               // .

            ElseIf
 238F2: A1 4F 06                                         // .O.

 (LEqual (Arg0, 
 238F5: A0 4C 06 93 68                                   // .L..h

ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d")))
            {

 238FA: 11 13 0A 10 ED 54 60 37 13 CC 75 46 90 1C 47 56  // .....T`7..uF..GV
 2390A: D7 F2 D4 5D                                      // ...]

                Switch (ToInteger (Arg2))
                {

 2390E: A2 43 05 01 70 99 6A 00 5F 54 5F 31              // .C..p.j._T_1

                    Case (Zero)
                    {

 2391A: A0 0C 93 5F 54 5F 31 00                          // ..._T_1.

                        Return (
 23922: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

 23923: 11 03 01 03                                      // ....

                    Case
 23927: A1 39                                            // .9

 (One)
                    {
                        Store (DerefOf (
 23929: A0 35 93 5F 54 5F 31 01 70 83                    // .5._T_1.p.

Index (Arg3, Zero)), RQST)
                        Store (0x09, FLAG)
                        Store (OFST, TMF1)
                        Store (Zero, SRSP)
                        Store (TMF1, SMI)

 23933: 88 6B 00 00 52 51 53 54 70 0A 09 46 4C 41 47 70  // .k..RQSTp..FLAGp
 23943: 4F 46 53 54 54 4D 46 31 70 00 53 52 53 50 70 54  // OFSTTMF1p.SRSPpT
 23953: 4D 46 31 53 4D 49 5F                             // MF1SMI_

                        Return (SRSP)
                    }

 2395A: A4 53 52 53 50                                   // .SRSP

                    Default
                    {
                    }


 2395F: A1 01                                            // ..

                }
            }


 23961: A5                                               // .

            If (LEqual (Arg0, 
 23962: A0 1F 93 68                                      // ...h

ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8")))
            {

 23966: 11 13 0A 10 A5 16 8E CF E8 C1 25 4E B7 12 4F 54  // ..........%N..OT
 23976: A9 67 02 C8                                      // .g..

                Return (CRYF (Arg1, Arg2, Arg3))
            }


 2397A: A4 43 52 59 46 69 6A 6B                          // .CRYFijk

            If (LEqual (Arg0, 
 23982: A0 1F 93 68                                      // ...h

ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4")))
            {

 23986: 11 13 0A 10 AB 6C BF 6B 63 54 14 47 B7 CD F0 20  // .....l.kcT.G... 
 23996: 3C 03 68 D4                                      // <.h.

                Return (STRT (Arg1, Arg2, Arg3))
            }


 2399A: A4 53 54 52 54 69 6A 6B                          // .STRTijk

            Return (
 239A2: A4                                               // .

Buffer (One)
            {
                 0x00                                           
            })
        }


 239A3: 11 03 01 00                                      // ....

        Method (TPTS, 1, Serialized)
        {

 239A7: 14 46 06 54 50 54 53 09                          // .F.TPTS.


 239AF: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (ToInteger (Arg0))
            {

 239B5: A2 48 05 01 70 99 68 00 5F 54 5F 30              // .H..p.h._T_0

                Case (0x04)
                {
                    Store (Zero, RQST)
                    Store (0x09, FLAG)
                    Store (Zero, SRSP)

 239C1: A0 24 93 5F 54 5F 30 0A 04 70 00 52 51 53 54 70  // .$._T_0..p.RQSTp
 239D1: 0A 09 46 4C 41 47 70 00 53 52 53 50              // ..FLAGp.SRSP

                    Store (OFST, SMI)
                }

 239DD: 70 4F 46 53 54 53 4D 49 5F                       // pOFSTSMI_

                Case
 239E6: A1 26                                            // .&

 (0x05)
                {
                    Store (Zero, RQST)
                    Store (0x09, FLAG)
                    Store (Zero, SRSP)

 239E8: A0 24 93 5F 54 5F 30 0A 05 70 00 52 51 53 54 70  // .$._T_0..p.RQSTp
 239F8: 0A 09 46 4C 41 47 70 00 53 52 53 50              // ..FLAGp.SRSP

                    Store (OFST, SMI)
                }


 23A04: 70 4F 46 53 54 53 4D 49 5F                       // pOFSTSMI_

            }
        }
    }


 23A0D: A5                                               // .

    Method (BCLR, 1, NotSerialized)
    {
        Store (Zero, Local0)

 23A0E: 14 18 42 43 4C 52 01 70 00 60                    // ..BCLR.p.`

        While (LLess (Local0, 
 23A18: A2 0E 95 60                                      // ...`

SizeOf (Arg0)))
        {
            BBWR (Arg0, Local0, Zero)

 23A1C: 87 68 42 42 57 52 68 60 00                       // .hBBWRh`.

            Increment (Local0)
        }
    }


 23A25: 75 60                                            // u`

    Method (BBWR, 3, NotSerialized)
    {

 23A27: 14 13 42 42 57 52 03                             // ..BBWR.

        CreateByteField (Arg0, Arg1, VAL)

 23A2E: 8C 68 69 56 41 4C 5F                             // .hiVAL_

        Store (Arg2, VAL)
    }


 23A35: 70 6A 56 41 4C 5F                                // pjVAL_

    Method (BBRD, 2, NotSerialized)
    {

 23A3B: 14 12 42 42 52 44 02                             // ..BBRD.

        CreateByteField (Arg0, Arg1, VAL)

 23A42: 8C 68 69 56 41 4C 5F                             // .hiVAL_

        Return (VAL)
    }


 23A49: A4 56 41 4C 5F                                   // .VAL_

    Method (BWWR, 3, NotSerialized)
    {

 23A4E: 14 13 42 57 57 52 03                             // ..BWWR.

        CreateWordField (Arg0, Arg1, VAL)

 23A55: 8B 68 69 56 41 4C 5F                             // .hiVAL_

        Store (Arg2, VAL)
    }


 23A5C: 70 6A 56 41 4C 5F                                // pjVAL_

    Method (BWRD, 2, NotSerialized)
    {

 23A62: 14 12 42 57 52 44 02                             // ..BWRD.

        CreateWordField (Arg0, Arg1, VAL)

 23A69: 8B 68 69 56 41 4C 5F                             // .hiVAL_

        Return (VAL)
    }


 23A70: A4 56 41 4C 5F                                   // .VAL_

    Method (BDWR, 3, NotSerialized)
    {

 23A75: 14 13 42 44 57 52 03                             // ..BDWR.

        CreateDWordField (Arg0, Arg1, VAL)

 23A7C: 8A 68 69 56 41 4C 5F                             // .hiVAL_

        Store (Arg2, VAL)
    }


 23A83: 70 6A 56 41 4C 5F                                // pjVAL_

    Method (BDRD, 2, NotSerialized)
    {

 23A89: 14 12 42 44 52 44 02                             // ..BDRD.

        CreateDWordField (Arg0, Arg1, VAL)

 23A90: 8A 68 69 56 41 4C 5F                             // .hiVAL_

        Return (VAL)
    }


 23A97: A4 56 41 4C 5F                                   // .VAL_

    Method (STRE, 2, NotSerialized)
    {

 23A9C: 14 40 05 53 54 52 45 02                          // .@.STRE.

        Name (STR1, 
 23AA4: 08 53 54 52 31                                   // .STR1

Buffer (0x50){})

 23AA9: 11 03 0A 50                                      // ...P

        Name (STR2, 
 23AAD: 08 53 54 52 32                                   // .STR2

Buffer (0x50){})
        Store (Arg0, STR1)
        Store (Arg1, STR2)
        Store (Zero, Local0)
        Store (One, Local1)

 23AB2: 11 03 0A 50 70 68 53 54 52 31 70 69 53 54 52 32  // ...PphSTR1piSTR2
 23AC2: 70 00 60 70 01 61                                // p.`p.a

        While (Local1)
        {
            Store (BBRD (STR1, Local0), Local1)
            Store (BBRD (STR2, Local0), Local2)

 23AC8: A2 22 61 70 42 42 52 44 53 54 52 31 60 61 70 42  // ."apBBRDSTR1`apB
 23AD8: 42 52 44 53 54 52 32 60 62                       // BRDSTR2`b

            If (
 23AE1: A0 07 92                                         // ...

LNotEqual (Local1, Local2))
            {

 23AE4: 93 61 62                                         // .ab

                Return (Zero)
            }


 23AE7: A4 00                                            // ..

            Increment (Local0)
        }


 23AE9: 75 60                                            // u`

        Return (One)
    }


 23AEB: A4 01                                            // ..

    Method (XPTB, 1, NotSerialized)
    {
        Store (SizeOf (Arg0), Local0)

 23AED: 14 38 58 50 54 42 01 70 87 68 60                 // .8XPTB.p.h`

        If (LEqual (ObjectType (Arg0), 0x02))
        {

 23AF8: A0 08 93 8E 68 0A 02                             // ....h..

            Increment (Local0)
        }


 23AFF: 75 60                                            // u`

        Name (OBUF, 
 23B01: 08 4F 42 55 46                                   // .OBUF

Buffer (Local0){})
        Store (Arg0, OBUF)

 23B06: 11 02 60 70 68 4F 42 55 46                       // ..`phOBUF

        If (LEqual (ObjectType (Arg0), 0x02))
        {
            Decrement (Local0)

 23B0F: A0 11 93 8E 68 0A 02 76 60                       // ....h..v`

            Store (Zero, 
 23B18: 70 00                                            // p.

Index (OBUF, Local0))
        }


 23B1A: 88 4F 42 55 46 60 00                             // .OBUF`.

        Return (OBUF)
    }


 23B21: A4 4F 42 55 46                                   // .OBUF

    Method (STDG, 3, NotSerialized)
    {
        Store (Arg0, Local0)

 23B26: 14 2E 53 54 44 47 03 70 68 60                    // ..STDG.ph`

        If (
 23B30: A0 15 92                                         // ...

LGreaterEqual (Arg0, 0x0A))
        {
            Divide (Arg0, 0x0A, Local0, Local1)

 23B33: 95 68 0A 0A 78 68 0A 0A 60 61                    // .h..xh..`a

            Store (STDG (Local1, Arg1, Arg2), Arg2)
        }

        Add (Local0, 0x30, Local0)
        Store (Local0, 
 23B3D: 70 53 54 44 47 61 69 6A 6A 72 60 0A 30 60 70 60  // pSTDGaijjr`.0`p`

Index (Arg1, Arg2))
        Increment (Arg2)

 23B4D: 88 69 6A 00 75 6A                                // .ij.uj

        Return (Arg2)
    }


 23B53: A4 6A                                            // .j

    Method (XPTS, 1, NotSerialized)
    {

 23B55: 14 3C 58 50 54 53 01                             // .<XPTS.

        Name (LBUF, 
 23B5C: 08 4C 42 55 46                                   // .LBUF

Buffer (0x20){})
        Store (STDG (Arg0, LBUF, Zero), Local0)
        Store (Zero, 
 23B61: 11 03 0A 20 70 53 54 44 47 68 4C 42 55 46 00 60  // ... pSTDGhLBUF.`
 23B71: 70 00                                            // p.

Index (LBUF, Local0))
        Increment (Local0)

 23B73: 88 4C 42 55 46 60 00 75 60                       // .LBUF`.u`

        Name (OBUF, 
 23B7C: 08 4F 42 55 46                                   // .OBUF

Buffer (Local0){})
        Store (LBUF, OBUF)

 23B81: 11 02 60 70 4C 42 55 46 4F 42 55 46              // ..`pLBUFOBUF

        Return (OBUF)
    }


 23B8D: A4 4F 42 55 46                                   // .OBUF

    Scope (\)
    {

 23B92: 10 44 24 5C 00                                   // .D$\.

        Mutex (SMIX, 0x01)

 23B97: 5B 01 53 4D 49 58 01                             // [.SMIX.

        Name (SMBA, 0x68EEB000)

 23B9E: 08 53 4D 42 41 0C 00 B0 EE 68                    // .SMBA....h

        Name (PSMI, 0x000000B2)

 23BA8: 08 50 53 4D 49 0C B2 00 00 00                    // .PSMI.....

        Method (SNVC, 1, NotSerialized)
        {

 23BB2: 14 26 53 4E 56 43 01                             // .&SNVC.

            OperationRegion (WWPR, SystemMemory, SMBA, 0x04)

 23BB9: 5B 80 57 57 50 52 00 53 4D 42 41 0A 04           // [.WWPR.SMBA..

            Field (WWPR, DWordAcc, Lock, Preserve)
            {
                SCDW,   32
            }


 23BC6: 5B 81 0B 57 57 50 52 13 53 43 44 57 20           // [..WWPR.SCDW 

            Store (Arg0, SCDW)
        }


 23BD3: 70 68 53 43 44 57                                // phSCDW

        Method (SNWB, 2, NotSerialized)
        {
            Store (SMBA, Local0)
            Add (Local0, Arg1, Local0)
            Add (Local0, 0x04, Local0)

 23BD9: 14 3B 53 4E 57 42 02 70 53 4D 42 41 60 72 60 69  // .;SNWB.pSMBA`r`i
 23BE9: 60 72 60 0A 04 60                                // `r`..`

            OperationRegion (WWPR, SystemMemory, Local0, One)

 23BEF: 5B 80 57 57 50 52 00 60 01                       // [.WWPR.`.

            Field (WWPR, ByteAcc, Lock, Preserve)
            {
                SBY0,   8
            }


 23BF8: 5B 81 0B 57 57 50 52 11 53 42 59 30 08           // [..WWPR.SBY0.

            CreateByteField (Arg0, Arg1, SVAL)

 23C05: 8C 68 69 53 56 41 4C                             // .hiSVAL

            Store (SVAL, SBY0)
        }


 23C0C: 70 53 56 41 4C 53 42 59 30                       // pSVALSBY0

        Method (SNRB, 2, NotSerialized)
        {
            Store (SMBA, Local0)
            Add (Local0, Arg1, Local0)
            Add (Local0, 0x04, Local0)

 23C15: 14 3E 53 4E 52 42 02 70 53 4D 42 41 60 72 60 69  // .>SNRB.pSMBA`r`i
 23C25: 60 72 60 0A 04 60                                // `r`..`

            OperationRegion (WWPR, SystemMemory, Local0, 0x04)

 23C2B: 5B 80 57 57 50 52 00 60 0A 04                    // [.WWPR.`..

            Field (WWPR, ByteAcc, Lock, Preserve)
            {
                SBY0,   8
            }


 23C35: 5B 81 0B 57 57 50 52 11 53 42 59 30 08           // [..WWPR.SBY0.

            CreateByteField (Arg0, Arg1, SVAL)
            Store (SBY0, SVAL)

 23C42: 8C 68 69 53 56 41 4C 70 53 42 59 30 53 56 41 4C  // .hiSVALpSBY0SVAL

            Return (Arg0)
        }


 23C52: A4 68                                            // .h

        Method (SNVP, 2, NotSerialized)
        {
            Store (SMBA, Local0)
            Add (Local0, Arg1, Local0)
            Add (Local0, 0x04, Local0)

 23C54: 14 3C 53 4E 56 50 02 70 53 4D 42 41 60 72 60 69  // .<SNVP.pSMBA`r`i
 23C64: 60 72 60 0A 04 60                                // `r`..`

            OperationRegion (WWPR, SystemMemory, Local0, 0x04)

 23C6A: 5B 80 57 57 50 52 00 60 0A 04                    // [.WWPR.`..

            Field (WWPR, ByteAcc, Lock, Preserve)
            {
                SDW0,   32
            }


 23C74: 5B 81 0B 57 57 50 52 11 53 44 57 30 20           // [..WWPR.SDW0 

            CreateDWordField (Arg0, Arg1, SVAL)

 23C81: 8A 68 69 53 56 41 4C                             // .hiSVAL

            Store (SVAL, SDW0)
        }


 23C88: 70 53 56 41 4C 53 44 57 30                       // pSVALSDW0

        Method (SNVG, 2, NotSerialized)
        {
            Store (SMBA, Local0)
            Add (Local0, Arg1, Local0)
            Add (Local0, 0x04, Local0)

 23C91: 14 3E 53 4E 56 47 02 70 53 4D 42 41 60 72 60 69  // .>SNVG.pSMBA`r`i
 23CA1: 60 72 60 0A 04 60                                // `r`..`

            OperationRegion (WWPR, SystemMemory, Local0, 0x04)

 23CA7: 5B 80 57 57 50 52 00 60 0A 04                    // [.WWPR.`..

            Field (WWPR, ByteAcc, Lock, Preserve)
            {
                SDW0,   32
            }


 23CB1: 5B 81 0B 57 57 50 52 11 53 44 57 30 20           // [..WWPR.SDW0 

            CreateDWordField (Arg0, Arg1, SVAL)
            Store (SDW0, SVAL)

 23CBE: 8A 68 69 53 56 41 4C 70 53 44 57 30 53 56 41 4C  // .hiSVALpSDW0SVAL

            Return (Arg0)
        }


 23CCE: A4 68                                            // .h

        Method (GENS, 3, NotSerialized)
        {
            Acquire (SMIX, 0xFFFF)
            Store (Arg1, Local0)

 23CD0: 14 37 47 45 4E 53 03 5B 23 53 4D 49 58 FF FF 70  // .7GENS.[#SMIX..p
 23CE0: 69 60                                            // i`

            If (LEqual (ObjectType (Arg1), One))
            {

 23CE2: A0 0D 93 8E 69 01                                // ....i.

                Store (SMBI (Arg0, Arg1), Local0)
            }


 23CE8: 70 53 4D 42 49 68 69 60                          // pSMBIhi`

            If (LEqual (ObjectType (Arg1), 0x03))
            {

 23CF0: A0 0F 93 8E 69 0A 03                             // ....i..

                Store (SMBF (Arg0, Arg1, Arg2), Local0)
            }

            Release (SMIX)

 23CF7: 70 53 4D 42 46 68 69 6A 60 5B 27 53 4D 49 58     // pSMBFhij`['SMIX

            Return (Local0)
        }


 23D06: A4 60                                            // .`

        Method (SMBI, 2, NotSerialized)
        {
            SNVC (Arg0)
            Add (SMBA, 0x04, Local0)

 23D08: 14 39 53 4D 42 49 02 53 4E 56 43 68 72 53 4D 42  // .9SMBI.SNVChrSMB
 23D18: 41 0A 04 60                                      // A..`

            OperationRegion (WWPR, SystemMemory, Local0, 0x04)

 23D1C: 5B 80 57 57 50 52 00 60 0A 04                    // [.WWPR.`..

            Field (WWPR, ByteAcc, Lock, Preserve)
            {
                SDW0,   32
            }

            Store (Arg1, SDW0)
            ASMI ()

 23D26: 5B 81 0B 57 57 50 52 11 53 44 57 30 20 70 69 53  // [..WWPR.SDW0 piS
 23D36: 44 57 30 41 53 4D 49                             // DW0ASMI

            Return (SDW0)
        }


 23D3D: A4 53 44 57 30                                   // .SDW0

        Method (SMBF, 3, NotSerialized)
        {

 23D42: 14 4D 06 53 4D 42 46 03                          // .M.SMBF.

            If (LGreater (Arg2, 0x1000))
            {

 23D4A: A0 08 94 6A 0B 00 10                             // ...j...

                Return (Arg1)
            }


 23D51: A4 69                                            // .i

            If (LLess (SizeOf (Arg1), Arg2))
            {

 23D53: A0 07 95 87 69 6A                                // ....ij

                Return (Arg1)
            }

            SNVC (Arg0)
            Divide (Arg2, 0x04, Local3, Local4)
            Store (Zero, Local0)

 23D59: A4 69 53 4E 56 43 68 78 6A 0A 04 63 64 70 00 60  // .iSNVChxj..cdp.`

            While (LLess (Local0, Local3))
            {
                SNWB (Arg1, Local0)

 23D69: A2 0C 95 60 63 53 4E 57 42 69 60                 // ...`cSNWBi`

                Increment (Local0)
            }


 23D74: 75 60                                            // u`

            While (LLess (Local0, Arg2))
            {
                SNVP (Arg1, Local0)

 23D76: A2 0F 95 60 6A 53 4E 56 50 69 60                 // ...`jSNVPi`

                Add (Local0, 0x04, Local0)
            }

            ASMI ()
            Store (Zero, Local0)

 23D81: 72 60 0A 04 60 41 53 4D 49 70 00 60              // r`..`ASMIp.`

            While (LLess (Local0, Local3))
            {
                Store (SNRB (Arg1, Local0), Arg1)

 23D8D: A2 0E 95 60 63 70 53 4E 52 42 69 60 69           // ...`cpSNRBi`i

                Increment (Local0)
            }


 23D9A: 75 60                                            // u`

            While (LLess (Local0, Arg2))
            {
                Store (SNVG (Arg1, Local0), Arg1)

 23D9C: A2 11 95 60 6A 70 53 4E 56 47 69 60 69           // ...`jpSNVGi`i

                Add (Local0, 0x04, Local0)
            }


 23DA9: 72 60 0A 04 60                                   // r`..`

            Return (Arg1)
        }


 23DAE: A4 69                                            // .i

        Method (ASMI, 0, NotSerialized)
        {

 23DB0: 14 26 41 53 4D 49 00                             // .&ASMI.

            OperationRegion (SMIR, SystemIO, PSMI, One)

 23DB7: 5B 80 53 4D 49 52 01 50 53 4D 49 01              // [.SMIR.PSMI.

            Field (SMIR, ByteAcc, Lock, Preserve)
            {
                SCMD,   8
            }


 23DC3: 5B 81 0B 53 4D 49 52 11 53 43 4D 44 08           // [..SMIR.SCMD.

            Store (0xE0, SCMD)
        }
    }


 23DD0: 70 0A E0 53 43 4D 44                             // p..SCMD

    Scope (_SB)
    {

 23DD7: 10 48 68 5F 53 42 5F                             // .Hh_SB_

        Device (AMW0)
        {

 23DDE: 5B 82 40 68 41 4D 57 30                          // [.@hAMW0

            Mutex (WMIX, 0x01)

 23DE6: 5B 01 57 4D 49 58 01                             // [.WMIX.

            Name (_HID, "PNP0C14")  // _HID: Hardware ID

 23DED: 08 5F 48 49 44 0D 50 4E 50 30 43 31 34 00        // ._HID.PNP0C14.

            Name (_UID, Zero)  // _UID: Unique ID

 23DFB: 08 5F 55 49 44 00                                // ._UID.

            Name (_WDG, 
 23E01: 08 5F 57 44 47                                   // ._WDG

Buffer (0x64)
            {
                /* 0000 */  0xBC, 0xDC, 0x9D, 0x8D, 0x97, 0xA9, 0xDA, 0x11,
                /* 0008 */  0xB0, 0x12, 0xB6, 0x22, 0xA1, 0xEF, 0x54, 0x92,
                /* 0010 */  0x41, 0x41, 0x01, 0x00, 0xCE, 0x93, 0x05, 0xA8,
                /* 0018 */  0x97, 0xA9, 0xDA, 0x11, 0xB0, 0x12, 0xB6, 0x22,
                /* 0020 */  0xA1, 0xEF, 0x54, 0x92, 0x42, 0x41, 0x01, 0x02,
                /* 0028 */  0x94, 0x59, 0xBB, 0x9D, 0x97, 0xA9, 0xDA, 0x11,
                /* 0030 */  0xB0, 0x12, 0xB6, 0x22, 0xA1, 0xEF, 0x54, 0x92,
                /* 0038 */  0xD0, 0x00, 0x01, 0x08, 0xE0, 0x6C, 0x77, 0xA3,
                /* 0040 */  0x88, 0x1E, 0xDB, 0x11, 0xA9, 0x8B, 0x08, 0x00,
                /* 0048 */  0x20, 0x0C, 0x9A, 0x66, 0x42, 0x43, 0x01, 0x00,
                /* 0050 */  0x21, 0x12, 0x90, 0x05, 0x66, 0xD5, 0xD1, 0x11,
                /* 0058 */  0xB2, 0xF0, 0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10,
                /* 0060 */  0x4D, 0x4F, 0x01, 0x00                         
            })

 23E06: 11 48 06 0A 64 BC DC 9D 8D 97 A9 DA 11 B0 12 B6  // .H..d...........
 23E16: 22 A1 EF 54 92 41 41 01 00 CE 93 05 A8 97 A9 DA  // "..T.AA.........
 23E26: 11 B0 12 B6 22 A1 EF 54 92 42 41 01 02 94 59 BB  // ...."..T.BA...Y.
 23E36: 9D 97 A9 DA 11 B0 12 B6 22 A1 EF 54 92 D0 00 01  // ........"..T....
 23E46: 08 E0 6C 77 A3 88 1E DB 11 A9 8B 08 00 20 0C 9A  // ..lw......... ..
 23E56: 66 42 43 01 00 21 12 90 05 66 D5 D1 11 B2 F0 00  // fBC..!...f......
 23E66: A0 C9 06 29 10 4D 4F 01 00                       // ...).MO..

            Name (INFO, 
 23E6F: 08 49 4E 46 4F                                   // .INFO

Buffer (0x80){})

 23E74: 11 03 0A 80                                      // ....

            Name (ECD0, Zero)

 23E78: 08 45 43 44 30 00                                // .ECD0.

            Method (WED0, 1, NotSerialized)
            {
                Store (Arg0, ECD0)

 23E7E: 14 0E 57 45 44 30 01 70 68 45 43 44 30           // ..WED0.phECD0

                Return (Zero)
            }


 23E8B: A4 00                                            // ..

            Method (WCAA, 1, NotSerialized)
            {

 23E8D: 14 08 57 43 41 41 01                             // ..WCAA.

                Return (Zero)
            }


 23E94: A4 00                                            // ..

            Method (WQAA, 1, NotSerialized)
            {
                Acquire (WMIX, 0xFFFF)
                BCLR (INFO)

 23E96: 14 44 07 57 51 41 41 01 5B 23 57 4D 49 58 FF FF  // .D.WQAA.[#WMIX..
 23EA6: 42 43 4C 52 49 4E 46 4F                          // BCLRINFO

                If (
 23EAE: A0 0B 92                                         // ...

LNotEqual (Arg0, Zero))
                {

 23EB1: 93 68 00                                         // .h.

                    Store (INFO, Local1)
                }

 23EB4: 70 49 4E 46 4F 61                                // pINFOa

                Else
                {
                    BDWR (INFO, Zero, 0x4C4C4544)
                    BDWR (INFO, 0x04, 0x494D5720)
                    BDWR (INFO, 0x08, One)
                    BDWR (INFO, 0x0C, 0x1000)
                    BDWR (INFO, 0x10, One)

 23EBA: A1 48 04 42 44 57 52 49 4E 46 4F 00 0C 44 45 4C  // .H.BDWRINFO..DEL
 23ECA: 4C 42 44 57 52 49 4E 46 4F 0A 04 0C 20 57 4D 49  // LBDWRINFO... WMI
 23EDA: 42 44 57 52 49 4E 46 4F 0A 08 01 42 44 57 52 49  // BDWRINFO...BDWRI
 23EEA: 4E 46 4F 0A 0C 0B 00 10 42 44 57 52 49 4E 46 4F  // NFO.....BDWRINFO
 23EFA: 0A 10 01                                         // ...

                    Store (INFO, Local1)
                }

                Release (WMIX)

 23EFD: 70 49 4E 46 4F 61 5B 27 57 4D 49 58              // pINFOa['WMIX

                Return (Local1)
            }


 23F09: A4 61                                            // .a

            Method (WSAA, 2, NotSerialized)
            {

 23F0B: 14 08 57 53 41 41 02                             // ..WSAA.

                Return (Arg1)
            }


 23F12: A4 69                                            // .i

            Method (WMBA, 3, NotSerialized)
            {

 23F14: 14 28 57 4D 42 41 03                             // .(WMBA.

                CreateDWordField (Arg2, 0x28, WBUF)
                Add (WBUF, 0x2C, Local1)

 23F1B: 8A 6A 0A 28 57 42 55 46 72 57 42 55 46 0A 2C 61  // .j.(WBUFrWBUF.,a

                If (
 23F2B: A0 0F 92                                         // ...

LLessEqual (Local1, 0x1000))
                {

 23F2E: 94 61 0B 00 10                                   // .a...

                    Store (WMI (Arg2, Local1), Local0)
                }


 23F33: 70 57 4D 49 5F 6A 61 60                          // pWMI_ja`

                Return (Local0)
            }


 23F3B: A4 60                                            // .`

            Method (WMI, 2, NotSerialized)
            {

 23F3D: 14 1A 57 4D 49 5F 02                             // ..WMI_.

                If (
 23F44: A0 11 92                                         // ...

LLessEqual (Arg1, 0x1000))
                {

 23F47: 94 69 0B 00 10                                   // .i...

                    Store (GENS (0x03, Arg0, Arg1), Arg0)
                }


 23F4C: 70 47 45 4E 53 0A 03 68 69 68                    // pGENS..hih

                Return (Arg0)
            }


 23F56: A4 68                                            // .h

            Name (WQMO, 
 23F58: 08 57 51 4D 4F                                   // .WQMO

Buffer (0x04FD)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,
                /* 0008 */  0xED, 0x04, 0x00, 0x00, 0xD8, 0x15, 0x00, 0x00,
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,
                /* 0018 */  0x28, 0xD5, 0x8A, 0x00, 0x01, 0x06, 0x18, 0x42,
                /* 0020 */  0x10, 0x0D, 0x10, 0x22, 0x21, 0x04, 0x12, 0x01,
                /* 0028 */  0xA1, 0xC8, 0x2C, 0x0C, 0x86, 0x10, 0x38, 0x2E,
                /* 0030 */  0x84, 0x1C, 0x40, 0x48, 0x1C, 0x14, 0x4A, 0x08,
                /* 0038 */  0x84, 0xFA, 0x13, 0xC8, 0xAF, 0x00, 0x84, 0x0E,
                /* 0040 */  0x05, 0xC8, 0x14, 0x60, 0x50, 0x80, 0x53, 0x04,
                /* 0048 */  0x11, 0xF4, 0x2A, 0xC0, 0xA6, 0x00, 0x93, 0x02,
                /* 0050 */  0x2C, 0x0A, 0xD0, 0x2E, 0xC0, 0xB2, 0x00, 0xDD,
                /* 0058 */  0x02, 0xA4, 0xC3, 0x12, 0x91, 0xE0, 0x28, 0x31,
                /* 0060 */  0xE0, 0x28, 0x9D, 0xD8, 0xC2, 0x0D, 0x1B, 0xBC,
                /* 0068 */  0x50, 0x14, 0xCD, 0x20, 0x4A, 0x82, 0xCA, 0x05,
                /* 0070 */  0xF8, 0x46, 0x10, 0x78, 0xB9, 0x02, 0x24, 0x4F,
                /* 0078 */  0x40, 0x9A, 0x05, 0x18, 0x16, 0x60, 0x5D, 0x80,
                /* 0080 */  0xEC, 0x21, 0x50, 0xA9, 0x43, 0x40, 0xC9, 0x19,
                /* 0088 */  0x02, 0x6A, 0x00, 0xAD, 0x4E, 0x40, 0xF8, 0x95,
                /* 0090 */  0x4E, 0x09, 0x49, 0x10, 0xCE, 0x58, 0xC5, 0xE3,
                /* 0098 */  0x6B, 0x16, 0x4D, 0xCF, 0x49, 0xCE, 0x31, 0xE4,
                /* 00A0 */  0x78, 0x5C, 0xE8, 0x41, 0xF0, 0x40, 0x0A, 0x40,
                /* 00A8 */  0x58, 0x78, 0x08, 0x45, 0x80, 0x41, 0x49, 0x18,
                /* 00B0 */  0x0B, 0x75, 0x31, 0x6A, 0xD4, 0x48, 0xD9, 0x80,
                /* 00B8 */  0x0C, 0x51, 0xDA, 0xA8, 0xD1, 0x03, 0x3A, 0xBF,
                /* 00C0 */  0x23, 0x39, 0xBB, 0xA3, 0x3B, 0x92, 0x04, 0x46,
                /* 00C8 */  0x3D, 0xA6, 0x63, 0x2C, 0x6C, 0x46, 0x42, 0x8D,
                /* 00D0 */  0xD1, 0x1C, 0x14, 0x81, 0xC6, 0x0D, 0xDA, 0x12,
                /* 00D8 */  0x61, 0x35, 0xAE, 0xD8, 0x67, 0x66, 0xE1, 0xC3,
                /* 00E0 */  0x12, 0xC6, 0x11, 0x1C, 0x58, 0x82, 0x46, 0xD1,
                /* 00E8 */  0x34, 0xC7, 0xB3, 0x0D, 0x91, 0xE0, 0x20, 0x42,
                /* 00F0 */  0x63, 0x64, 0x40, 0xC8, 0xF3, 0xB0, 0x05, 0x7A,
                /* 00F8 */  0xE4, 0x09, 0xEC, 0x1E, 0x51, 0x0A, 0x11, 0x34,
                /* 0100 */  0xDF, 0x13, 0xA9, 0x51, 0x80, 0x36, 0x0C, 0xD9,
                /* 0108 */  0x3A, 0x1B, 0x68, 0xA8, 0xB1, 0x1A, 0x43, 0x11,
                /* 0110 */  0x44, 0x84, 0xA0, 0x51, 0x0C, 0x16, 0x21, 0x54,
                /* 0118 */  0x88, 0xFF, 0x7F, 0x94, 0xA8, 0xA7, 0x14, 0x24,
                /* 0120 */  0x6A, 0x65, 0x20, 0x42, 0x0B, 0x66, 0x04, 0x66,
                /* 0128 */  0x7F, 0x10, 0x24, 0xC6, 0x99, 0x41, 0x87, 0x05,
                /* 0130 */  0xCB, 0x00, 0x91, 0x11, 0x41, 0xA3, 0x61, 0x67,
                /* 0138 */  0x01, 0x0F, 0xC7, 0x33, 0x69, 0x7E, 0x62, 0x1A,
                /* 0140 */  0x9C, 0x09, 0xC6, 0x3E, 0x3F, 0x50, 0x51, 0x07,
                /* 0148 */  0x07, 0x4A, 0x60, 0x29, 0x03, 0x27, 0xB6, 0xC7,
                /* 0150 */  0xA5, 0xF1, 0x9D, 0x71, 0xD4, 0x10, 0xA7, 0x7E,
                /* 0158 */  0x66, 0xFE, 0x47, 0x78, 0x0B, 0x3E, 0x02, 0xF0,
                /* 0160 */  0x31, 0x78, 0xB0, 0x87, 0x10, 0xF0, 0x08, 0xD9,
                /* 0168 */  0x19, 0xC0, 0x80, 0x78, 0xEF, 0x93, 0x26, 0x73,
                /* 0170 */  0xF1, 0x59, 0x00, 0xC6, 0xF0, 0xE1, 0x1A, 0x1F,
                /* 0178 */  0x85, 0xC6, 0xC3, 0xCE, 0x07, 0x6C, 0x5C, 0x1C,
                /* 0180 */  0xDE, 0x87, 0x82, 0x13, 0x2E, 0x16, 0x44, 0x01,
                /* 0188 */  0x20, 0x24, 0xEB, 0x7C, 0x80, 0x9E, 0xF5, 0xB1,
                /* 0190 */  0x05, 0x7C, 0x18, 0x68, 0xF6, 0x0E, 0x41, 0x08,
                /* 0198 */  0x5E, 0x04, 0x7C, 0x74, 0xF0, 0x71, 0xC3, 0xE3,
                /* 01A0 */  0x7E, 0xDE, 0x00, 0xC3, 0xE1, 0xC0, 0xC3, 0xF1,
                /* 01A8 */  0x69, 0x03, 0xB8, 0x8C, 0x80, 0x4B, 0x7B, 0x52,
                /* 01B0 */  0x98, 0x40, 0x92, 0x9F, 0x00, 0x12, 0x03, 0x83,
                /* 01B8 */  0x3A, 0x10, 0xF8, 0x60, 0x01, 0x57, 0x12, 0x1C,
                /* 01C0 */  0x6A, 0x78, 0x9E, 0xD8, 0x03, 0xC2, 0xFF, 0xFF,
                /* 01C8 */  0x28, 0x4F, 0xE4, 0xC5, 0xC0, 0xD3, 0x7F, 0x0C,
                /* 01D0 */  0x80, 0x71, 0x40, 0xF0, 0xB4, 0x4E, 0xCA, 0x37,
                /* 01D8 */  0x8F, 0x07, 0x09, 0x0F, 0x2A, 0x4C, 0x02, 0x9F,
                /* 01E0 */  0x12, 0x18, 0x1A, 0x3F, 0x6E, 0x80, 0x75, 0xD4,
                /* 01E8 */  0xF8, 0x03, 0x02, 0xBC, 0x93, 0xC4, 0xF9, 0xF5,
                /* 01F0 */  0x39, 0x00, 0x1D, 0x1A, 0x4E, 0x91, 0x81, 0xBC,
                /* 01F8 */  0x06, 0x9C, 0xF4, 0x29, 0x79, 0x7C, 0x09, 0x7C,
                /* 0200 */  0xE6, 0x80, 0x7D, 0x37, 0x38, 0x8C, 0x83, 0x09,
                /* 0208 */  0x11, 0xE1, 0x3D, 0xE0, 0xA9, 0xC3, 0x77, 0x8D,
                /* 0210 */  0x47, 0x81, 0x40, 0x11, 0x7A, 0x3B, 0x73, 0xD0,
                /* 0218 */  0x53, 0x88, 0x51, 0xA2, 0x9D, 0x55, 0x98, 0x07,
                /* 0220 */  0x8E, 0x28, 0x3E, 0x72, 0x18, 0xE1, 0xDD, 0xC3,
                /* 0228 */  0x77, 0x82, 0x07, 0x90, 0xD6, 0x26, 0x27, 0xDC,
                /* 0230 */  0x40, 0xCF, 0x1C, 0x2C, 0xDA, 0x99, 0x45, 0x16,
                /* 0238 */  0x40, 0x14, 0x69, 0x34, 0xA8, 0x33, 0x82, 0x4F,
                /* 0240 */  0x03, 0x9E, 0xD6, 0x53, 0x8C, 0x8F, 0x12, 0x06,
                /* 0248 */  0x39, 0xC3, 0x03, 0x7B, 0x4E, 0x78, 0x0C, 0xF0,
                /* 0250 */  0x80, 0xD9, 0xFD, 0xC0, 0xC7, 0x09, 0x9F, 0x0B,
                /* 0258 */  0xF0, 0xAE, 0x01, 0x35, 0x43, 0x1F, 0x36, 0xE0,
                /* 0260 */  0x1C, 0x3A, 0xF0, 0xA7, 0x09, 0xFC, 0xC1, 0x02,
                /* 0268 */  0x3F, 0x1E, 0x5F, 0x73, 0xD8, 0x84, 0x13, 0x58,
                /* 0270 */  0xFE, 0x20, 0x50, 0x23, 0x33, 0xB4, 0x67, 0x79,
                /* 0278 */  0x5A, 0xAF, 0x01, 0x3E, 0xED, 0x98, 0xC0, 0xE7,
                /* 0280 */  0x0D, 0xFF, 0xFF, 0xFF, 0x39, 0x1E, 0x0F, 0xF8,
                /* 0288 */  0x15, 0x9F, 0x2E, 0xC8, 0x5D, 0xC1, 0xF3, 0xF5,
                /* 0290 */  0xD9, 0x85, 0xD9, 0x18, 0x0F, 0x6A, 0x14, 0x3E,
                /* 0298 */  0xE0, 0xE0, 0xCE, 0x2E, 0x3E, 0x02, 0xF8, 0xEC,
                /* 02A0 */  0x02, 0x3C, 0x27, 0xF1, 0x2C, 0x01, 0xDE, 0x43,
                /* 02A8 */  0x80, 0x4F, 0x24, 0xF1, 0x1E, 0xB6, 0x60, 0x8C,
                /* 02B0 */  0x18, 0x0F, 0x79, 0xC6, 0x55, 0x0F, 0x43, 0x17,
                /* 02B8 */  0x01, 0xAB, 0xBB, 0xAF, 0xA0, 0x8E, 0x5E, 0x60,
                /* 02C0 */  0x82, 0x7A, 0xCD, 0xC0, 0x9D, 0x5E, 0x80, 0xCF,
                /* 02C8 */  0x29, 0x0B, 0xDE, 0xFF, 0xFF, 0x94, 0x05, 0xDC,
                /* 02D0 */  0xAF, 0x0A, 0xFC, 0x88, 0x02, 0x06, 0xC8, 0xCE,
                /* 02D8 */  0x4E, 0x27, 0x42, 0x78, 0x2F, 0x79, 0x0E, 0xF1,
                /* 02E0 */  0xED, 0xCA, 0x07, 0x93, 0x20, 0xCF, 0x01, 0x11,
                /* 02E8 */  0x9E, 0xB2, 0xF8, 0x7D, 0x20, 0x4A, 0xCC, 0x03,
                /* 02F0 */  0x8A, 0x14, 0xC5, 0x88, 0x41, 0x9E, 0xB0, 0x7C,
                /* 02F8 */  0x3D, 0x89, 0x61, 0xE8, 0x60, 0xE1, 0xC2, 0x47,
                /* 0300 */  0x78, 0xCA, 0x02, 0x2C, 0x5E, 0xB2, 0x30, 0xA7,
                /* 0308 */  0x2C, 0x98, 0x6F, 0x03, 0x9F, 0xB2, 0xC0, 0xF1,
                /* 0310 */  0xFF, 0x3F, 0x65, 0x81, 0x6B, 0xDC, 0x4F, 0x59,
                /* 0318 */  0xC0, 0x4C, 0xFA, 0x73, 0x92, 0x9C, 0x6A, 0xF4,
                /* 0320 */  0x04, 0x50, 0xF4, 0x83, 0x05, 0x85, 0xF1, 0x29,
                /* 0328 */  0x0B, 0x70, 0x25, 0xEF, 0x80, 0x00, 0x9A, 0xB3,
                /* 0330 */  0x93, 0x6F, 0x0B, 0x06, 0x3B, 0x66, 0x5F, 0x32,
                /* 0338 */  0x7C, 0x4A, 0x04, 0xC3, 0x21, 0xC3, 0x77, 0xAA,
                /* 0340 */  0x43, 0x79, 0xE4, 0x78, 0x0A, 0xF0, 0x11, 0x0B,
                /* 0348 */  0xEC, 0x71, 0x8E, 0x01, 0x3A, 0xAE, 0xF8, 0x88,
                /* 0350 */  0xE5, 0xFF, 0xFF, 0x11, 0x0B, 0xE0, 0xC6, 0x01,
                /* 0358 */  0x04, 0x7F, 0xEA, 0x80, 0x75, 0x0F, 0x08, 0xEB,
                /* 0360 */  0x43, 0x07, 0xF0, 0x90, 0xFD, 0x10, 0xD0, 0x19,
                /* 0368 */  0xC6, 0x92, 0x41, 0x64, 0xE3, 0x5C, 0x43, 0xC7,
                /* 0370 */  0x68, 0xF1, 0x0B, 0xD5, 0x4D, 0x21, 0xF6, 0xC1,
                /* 0378 */  0x70, 0xD9, 0x40, 0x02, 0xF5, 0x70, 0x2D, 0x98,
                /* 0380 */  0x42, 0xA2, 0x68, 0x34, 0x1A, 0x03, 0x13, 0x18,
                /* 0388 */  0xC1, 0x19, 0xC4, 0x80, 0xCE, 0x08, 0xA1, 0x43,
                /* 0390 */  0x19, 0x4E, 0xC5, 0x79, 0x08, 0xF5, 0xFF, 0x27,
                /* 0398 */  0x18, 0xEA, 0xC6, 0x44, 0x67, 0xE7, 0xF9, 0xF3,
                /* 03A0 */  0xDB, 0x88, 0x4F, 0x04, 0x06, 0xF6, 0x15, 0xE2,
                /* 03A8 */  0x2D, 0x03, 0x2C, 0xC3, 0xF2, 0xE2, 0x9E, 0x00,
                /* 03B0 */  0x8E, 0xF1, 0x24, 0x13, 0x54, 0x73, 0xAC, 0x41,
                /* 03B8 */  0xCD, 0xC1, 0x57, 0x81, 0x37, 0x32, 0x13, 0xF8,
                /* 03C0 */  0x0A, 0x06, 0xB6, 0xD3, 0x0C, 0x46, 0xDF, 0x9D,
                /* 03C8 */  0x00, 0x14, 0x40, 0x3E, 0x0A, 0xF8, 0xBE, 0xFC,
                /* 03D0 */  0x36, 0xC0, 0x66, 0xF1, 0xCA, 0x6C, 0x34, 0x9F,
                /* 03D8 */  0x3F, 0x11, 0x43, 0x47, 0x89, 0x19, 0x3A, 0x05,
                /* 03E0 */  0xF1, 0xD0, 0x1D, 0x74, 0xE8, 0xE8, 0xE3, 0x80,
                /* 03E8 */  0x4F, 0x56, 0xB8, 0x60, 0x87, 0x2F, 0x68, 0x93,
                /* 03F0 */  0x3B, 0xDA, 0x13, 0xF3, 0x2C, 0x3C, 0x4F, 0xDC,
                /* 03F8 */  0xDC, 0xC1, 0x74, 0x44, 0x82, 0x31, 0x78, 0xCC,
                /* 0400 */  0xE4, 0xC1, 0x2C, 0x70, 0xF2, 0xA0, 0xF8, 0xFF,
                /* 0408 */  0x4F, 0x1E, 0x26, 0x3C, 0x26, 0xEC, 0xE1, 0x90,
                /* 0410 */  0x1E, 0x3A, 0x3C, 0x32, 0x3E, 0x4E, 0x9F, 0x7E,
                /* 0418 */  0x18, 0xF6, 0xE9, 0x9C, 0x4B, 0xD1, 0x33, 0xD2,
                /* 0420 */  0x1D, 0xE3, 0x99, 0x0B, 0x03, 0xEB, 0x91, 0x73,
                /* 0428 */  0x58, 0xA3, 0x85, 0x3D, 0xE0, 0xE7, 0x10, 0xDF,
                /* 0430 */  0x61, 0x7C, 0xE0, 0x61, 0xB0, 0x3E, 0xBD, 0x80,
                /* 0438 */  0xE3, 0xF8, 0x05, 0xFF, 0x34, 0x00, 0x9E, 0x03,
                /* 0440 */  0x88, 0xC7, 0xF0, 0x02, 0xC2, 0x8F, 0x2F, 0x3A,
                /* 0448 */  0xFF, 0x52, 0xA1, 0x8B, 0x93, 0x3C, 0x18, 0xD4,
                /* 0450 */  0x69, 0x0A, 0x70, 0x75, 0x7A, 0x03, 0xCF, 0x55,
                /* 0458 */  0x1F, 0x77, 0x96, 0xC2, 0xFD, 0xFF, 0xCF, 0x52,
                /* 0460 */  0x30, 0x0E, 0xBF, 0xBE, 0xC0, 0xFB, 0x2E, 0x65,
                /* 0468 */  0x84, 0x03, 0x79, 0x96, 0x02, 0x7B, 0xEC, 0x67,
                /* 0470 */  0x88, 0x0E, 0x01, 0x3E, 0x4B, 0x01, 0xFC, 0x78,
                /* 0478 */  0x7D, 0xF8, 0x3C, 0x03, 0x37, 0xF0, 0xE9, 0x17,
                /* 0480 */  0x68, 0xFD, 0xFF, 0x4F, 0x21, 0xE0, 0x3F, 0x46,
                /* 0488 */  0xF8, 0x88, 0x83, 0x3B, 0xFA, 0x02, 0xB7, 0x83,
                /* 0490 */  0x31, 0x3F, 0x63, 0xE0, 0x8E, 0x63, 0xC0, 0xE3,
                /* 0498 */  0xE4, 0x8C, 0x3B, 0x4D, 0x78, 0x08, 0x7C, 0x00,
                /* 04A0 */  0xAD, 0x4E, 0x8F, 0x9C, 0x7A, 0x4E, 0x09, 0x77,
                /* 04A8 */  0x1C, 0xE0, 0x53, 0xC2, 0x0D, 0x00, 0xA3, 0xD0,
                /* 04B0 */  0xA6, 0x4F, 0x8D, 0x46, 0xAD, 0x1A, 0x94, 0xA9,
                /* 04B8 */  0x51, 0xA6, 0x41, 0xAD, 0x3E, 0x95, 0x1A, 0x33,
                /* 04C0 */  0xA6, 0x03, 0xCE, 0xAF, 0x03, 0x1D, 0x0F, 0x1C,
                /* 04C8 */  0xEA, 0x85, 0x20, 0x10, 0x4B, 0x7A, 0x75, 0x08,
                /* 04D0 */  0xC4, 0xA2, 0x3C, 0x80, 0xB0, 0xB8, 0x26, 0x40,
                /* 04D8 */  0x98, 0xF0, 0x37, 0x81, 0x40, 0x1C, 0x1B, 0x84,
                /* 04E0 */  0x8A, 0xA5, 0x97, 0x91, 0xF1, 0x19, 0x44, 0x40,
                /* 04E8 */  0x0E, 0xE1, 0x03, 0x88, 0x45, 0x02, 0x11, 0x38,
                /* 04F0 */  0x51, 0x02, 0x4A, 0x9D, 0x80, 0x30, 0xA1, 0xAF,
                /* 04F8 */  0x06, 0x81, 0xF8, 0xFF, 0x0F                   
            })
        }
    }


 23F5D: 11 42 50 0B FD 04 46 4F 4D 42 01 00 00 00 ED 04  // .BP...FOMB......
 23F6D: 00 00 D8 15 00 00 44 53 00 01 1A 7D DA 54 28 D5  // ......DS...}.T(.
 23F7D: 8A 00 01 06 18 42 10 0D 10 22 21 04 12 01 A1 C8  // .....B..."!.....
 23F8D: 2C 0C 86 10 38 2E 84 1C 40 48 1C 14 4A 08 84 FA  // ,...8...@H..J...
 23F9D: 13 C8 AF 00 84 0E 05 C8 14 60 50 80 53 04 11 F4  // .........`P.S...
 23FAD: 2A C0 A6 00 93 02 2C 0A D0 2E C0 B2 00 DD 02 A4  // *.....,.........
 23FBD: C3 12 91 E0 28 31 E0 28 9D D8 C2 0D 1B BC 50 14  // ....(1.(......P.
 23FCD: CD 20 4A 82 CA 05 F8 46 10 78 B9 02 24 4F 40 9A  // . J....F.x..$O@.
 23FDD: 05 18 16 60 5D 80 EC 21 50 A9 43 40 C9 19 02 6A  // ...`]..!P.C@...j
 23FED: 00 AD 4E 40 F8 95 4E 09 49 10 CE 58 C5 E3 6B 16  // ..N@..N.I..X..k.
 23FFD: 4D CF 49 CE 31 E4 78 5C E8 41 F0 40 0A 40 58 78  // M.I.1.x\.A.@.@Xx
 2400D: 08 45 80 41 49 18 0B 75 31 6A D4 48 D9 80 0C 51  // .E.AI..u1j.H...Q
 2401D: DA A8 D1 03 3A BF 23 39 BB A3 3B 92 04 46 3D A6  // ....:.#9..;..F=.
 2402D: 63 2C 6C 46 42 8D D1 1C 14 81 C6 0D DA 12 61 35  // c,lFB.........a5
 2403D: AE D8 67 66 E1 C3 12 C6 11 1C 58 82 46 D1 34 C7  // ..gf......X.F.4.
 2404D: B3 0D 91 E0 20 42 63 64 40 C8 F3 B0 05 7A E4 09  // .... Bcd@....z..
 2405D: EC 1E 51 0A 11 34 DF 13 A9 51 80 36 0C D9 3A 1B  // ..Q..4...Q.6..:.
 2406D: 68 A8 B1 1A 43 11 44 84 A0 51 0C 16 21 54 88 FF  // h...C.D..Q..!T..
 2407D: 7F 94 A8 A7 14 24 6A 65 20 42 0B 66 04 66 7F 10  // .....$je B.f.f..
 2408D: 24 C6 99 41 87 05 CB 00 91 11 41 A3 61 67 01 0F  // $..A......A.ag..
 2409D: C7 33 69 7E 62 1A 9C 09 C6 3E 3F 50 51 07 07 4A  // .3i~b....>?PQ..J
 240AD: 60 29 03 27 B6 C7 A5 F1 9D 71 D4 10 A7 7E 66 FE  // `).'.....q...~f.
 240BD: 47 78 0B 3E 02 F0 31 78 B0 87 10 F0 08 D9 19 C0  // Gx.>..1x........
 240CD: 80 78 EF 93 26 73 F1 59 00 C6 F0 E1 1A 1F 85 C6  // .x..&s.Y........
 240DD: C3 CE 07 6C 5C 1C DE 87 82 13 2E 16 44 01 20 24  // ...l\.......D. $
 240ED: EB 7C 80 9E F5 B1 05 7C 18 68 F6 0E 41 08 5E 04  // .|.....|.h..A.^.
 240FD: 7C 74 F0 71 C3 E3 7E DE 00 C3 E1 C0 C3 F1 69 03  // |t.q..~.......i.
 2410D: B8 8C 80 4B 7B 52 98 40 92 9F 00 12 03 83 3A 10  // ...K{R.@......:.
 2411D: F8 60 01 57 12 1C 6A 78 9E D8 03 C2 FF FF 28 4F  // .`.W..jx......(O
 2412D: E4 C5 C0 D3 7F 0C 80 71 40 F0 B4 4E CA 37 8F 07  // .......q@..N.7..
 2413D: 09 0F 2A 4C 02 9F 12 18 1A 3F 6E 80 75 D4 F8 03  // ..*L.....?n.u...
 2414D: 02 BC 93 C4 F9 F5 39 00 1D 1A 4E 91 81 BC 06 9C  // ......9...N.....
 2415D: F4 29 79 7C 09 7C E6 80 7D 37 38 8C 83 09 11 E1  // .)y|.|..}78.....
 2416D: 3D E0 A9 C3 77 8D 47 81 40 11 7A 3B 73 D0 53 88  // =...w.G.@.z;s.S.
 2417D: 51 A2 9D 55 98 07 8E 28 3E 72 18 E1 DD C3 77 82  // Q..U...(>r....w.
 2418D: 07 90 D6 26 27 DC 40 CF 1C 2C DA 99 45 16 40 14  // ...&'.@..,..E.@.
 2419D: 69 34 A8 33 82 4F 03 9E D6 53 8C 8F 12 06 39 C3  // i4.3.O...S....9.
 241AD: 03 7B 4E 78 0C F0 80 D9 FD C0 C7 09 9F 0B F0 AE  // .{Nx............
 241BD: 01 35 43 1F 36 E0 1C 3A F0 A7 09 FC C1 02 3F 1E  // .5C.6..:......?.
 241CD: 5F 73 D8 84 13 58 FE 20 50 23 33 B4 67 79 5A AF  // _s...X. P#3.gyZ.
 241DD: 01 3E ED 98 C0 E7 0D FF FF FF 39 1E 0F F8 15 9F  // .>........9.....
 241ED: 2E C8 5D C1 F3 F5 D9 85 D9 18 0F 6A 14 3E E0 E0  // ..]........j.>..
 241FD: CE 2E 3E 02 F8 EC 02 3C 27 F1 2C 01 DE 43 80 4F  // ..>....<'.,..C.O
 2420D: 24 F1 1E B6 60 8C 18 0F 79 C6 55 0F 43 17 01 AB  // $...`...y.U.C...
 2421D: BB AF A0 8E 5E 60 82 7A CD C0 9D 5E 80 CF 29 0B  // ....^`.z...^..).
 2422D: DE FF FF 94 05 DC AF 0A FC 88 02 06 C8 CE 4E 27  // ..............N'
 2423D: 42 78 2F 79 0E F1 ED CA 07 93 20 CF 01 11 9E B2  // Bx/y...... .....
 2424D: F8 7D 20 4A CC 03 8A 14 C5 88 41 9E B0 7C 3D 89  // .} J......A..|=.
 2425D: 61 E8 60 E1 C2 47 78 CA 02 2C 5E B2 30 A7 2C 98  // a.`..Gx..,^.0.,.
 2426D: 6F 03 9F B2 C0 F1 FF 3F 65 81 6B DC 4F 59 C0 4C  // o......?e.k.OY.L
 2427D: FA 73 92 9C 6A F4 04 50 F4 83 05 85 F1 29 0B 70  // .s..j..P.....).p
 2428D: 25 EF 80 00 9A B3 93 6F 0B 06 3B 66 5F 32 7C 4A  // %......o..;f_2|J
 2429D: 04 C3 21 C3 77 AA 43 79 E4 78 0A F0 11 0B EC 71  // ..!.w.Cy.x.....q
 242AD: 8E 01 3A AE F8 88 E5 FF FF 11 0B E0 C6 01 04 7F  // ..:.............
 242BD: EA 80 75 0F 08 EB 43 07 F0 90 FD 10 D0 19 C6 92  // ..u...C.........
 242CD: 41 64 E3 5C 43 C7 68 F1 0B D5 4D 21 F6 C1 70 D9  // Ad.\C.h...M!..p.
 242DD: 40 02 F5 70 2D 98 42 A2 68 34 1A 03 13 18 C1 19  // @..p-.B.h4......
 242ED: C4 80 CE 08 A1 43 19 4E C5 79 08 F5 FF 27 18 EA  // .....C.N.y...'..
 242FD: C6 44 67 E7 F9 F3 DB 88 4F 04 06 F6 15 E2 2D 03  // .Dg.....O.....-.
 2430D: 2C C3 F2 E2 9E 00 8E F1 24 13 54 73 AC 41 CD C1  // ,.......$.Ts.A..
 2431D: 57 81 37 32 13 F8 0A 06 B6 D3 0C 46 DF 9D 00 14  // W.72.......F....
 2432D: 40 3E 0A F8 BE FC 36 C0 66 F1 CA 6C 34 9F 3F 11  // @>....6.f..l4.?.
 2433D: 43 47 89 19 3A 05 F1 D0 1D 74 E8 E8 E3 80 4F 56  // CG..:....t....OV
 2434D: B8 60 87 2F 68 93 3B DA 13 F3 2C 3C 4F DC DC C1  // .`./h.;...,<O...
 2435D: 74 44 82 31 78 CC E4 C1 2C 70 F2 A0 F8 FF 4F 1E  // tD.1x...,p....O.
 2436D: 26 3C 26 EC E1 90 1E 3A 3C 32 3E 4E 9F 7E 18 F6  // &<&....:<2>N.~..
 2437D: E9 9C 4B D1 33 D2 1D E3 99 0B 03 EB 91 73 58 A3  // ..K.3........sX.
 2438D: 85 3D E0 E7 10 DF 61 7C E0 61 B0 3E BD 80 E3 F8  // .=....a|.a.>....
 2439D: 05 FF 34 00 9E 03 88 C7 F0 02 C2 8F 2F 3A FF 52  // ..4........./:.R
 243AD: A1 8B 93 3C 18 D4 69 0A 70 75 7A 03 CF 55 1F 77  // ...<..i.puz..U.w
 243BD: 96 C2 FD FF CF 52 30 0E BF BE C0 FB 2E 65 84 03  // .....R0......e..
 243CD: 79 96 02 7B EC 67 88 0E 01 3E 4B 01 FC 78 7D F8  // y..{.g...>K..x}.
 243DD: 3C 03 37 F0 E9 17 68 FD FF 4F 21 E0 3F 46 F8 88  // <.7...h..O!.?F..
 243ED: 83 3B FA 02 B7 83 31 3F 63 E0 8E 63 C0 E3 E4 8C  // .;....1?c..c....
 243FD: 3B 4D 78 08 7C 00 AD 4E 8F 9C 7A 4E 09 77 1C E0  // ;Mx.|..N..zN.w..
 2440D: 53 C2 0D 00 A3 D0 A6 4F 8D 46 AD 1A 94 A9 51 A6  // S......O.F....Q.
 2441D: 41 AD 3E 95 1A 33 A6 03 CE AF 03 1D 0F 1C EA 85  // A.>..3..........
 2442D: 20 10 4B 7A 75 08 C4 A2 3C 80 B0 B8 26 40 98 F0  //  .Kzu...<...&@..
 2443D: 37 81 40 1C 1B 84 8A A5 97 91 F1 19 44 40 0E E1  // 7.@.........D@..
 2444D: 03 88 45 02 11 38 51 02 4A 9D 80 30 A1 AF 06 81  // ..E..8Q.J..0....
 2445D: F8 FF 0F                                         // ...

    Scope (_SB)
    {

 24460: 10 25 5F 53 42 5F                                // .%_SB_

        Name (AMAC, 
 24466: 08 41 4D 41 43                                   // .AMAC

Buffer (0x17)
        {
            "                      "
        })
    }


 2446B: 11 1A 0A 17 20 20 20 20 20 20 20 20 20 20 20 20  // ....            
 2447B: 20 20 20 20 20 20 20 20 20 20 00                 //           .

    Scope (_SB.AMW0)
    {

 24486: 10 47 1E 2E 5F 53 42 5F 41 4D 57 30              // .G.._SB_AMW0

        Name (WMEV, Zero)

 24492: 08 57 4D 45 56 00                                // .WMEV.

        Name (WMBU, 
 24498: 08 57 4D 42 55                                   // .WMBU

Buffer (0x80){})

 2449D: 11 03 0A 80                                      // ....

        Name (WM, Zero)

 244A1: 08 57 4D 5F 5F 00                                // .WM__.

        Method (SWEV, 1, NotSerialized)
        {

 244A7: 14 10 53 57 45 56 01                             // ..SWEV.

            Or (WMEV, Arg0, WMEV)
        }


 244AE: 7D 57 4D 45 56 68 57 4D 45 56                    // }WMEVhWMEV

        Method (CWEV, 1, NotSerialized)
        {

 244B8: 14 12 43 57 45 56 01                             // ..CWEV.

            And (WMEV, Not (Arg0), WMEV)
        }


 244BF: 7B 57 4D 45 56 80 68 00 57 4D 45 56              // {WMEV.h.WMEV

        Method (WVSP, 0, NotSerialized)
        {
            Acquire (WMIX, 0xFFFF)
            Store (Zero, WM)
            BCLR (WMBU)
        }


 244CB: 14 1C 57 56 53 50 00 5B 23 57 4D 49 58 FF FF 70  // ..WVSP.[#WMIX..p
 244DB: 00 57 4D 5F 5F 42 43 4C 52 57 4D 42 55           // .WM__BCLRWMBU

        Method (WVCU, 0, NotSerialized)
        {
            Acquire (WMIX, 0xFFFF)

 244E8: 14 14 57 56 43 55 00 5B 23 57 4D 49 58 FF FF     // ..WVCU.[#WMIX..

            Store (Zero, WM)
        }


 244F7: 70 00 57 4D 5F 5F                                // p.WM__

        Method (WVPT, 1, NotSerialized)
        {
            Store (WM, Local0)
            Add (Local0, 0x02, Local0)

 244FD: 14 34 57 56 50 54 01 70 57 4D 5F 5F 60 72 60 0A  // .4WVPT.pWM__`r`.
 2450D: 02 60                                            // .`

            If (
 2450F: A0 22 92                                         // .".

LLessEqual (Local0, 
 24512: 94 60                                            // .`

SizeOf (WMBU)))
            {

 24514: 87 57 4D 42 55                                   // .WMBU

                CreateWordField (WMBU, WM, WMWD)
                Store (Arg0, WMWD)

 24519: 8B 57 4D 42 55 57 4D 5F 5F 57 4D 57 44 70 68 57  // .WMBUWM__WMWDphW
 24529: 4D 57 44                                         // MWD

                Store (Local0, WM)
            }
        }


 2452C: 70 60 57 4D 5F 5F                                // p`WM__

        Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event
        {
            WVSP ()

 24532: 14 4B 13 5F 57 45 44 01 57 56 53 50              // .K._WED.WVSP

            If (
 2453E: A0 0F 92                                         // ...

LNotEqual (Arg0, 0xD0))
            {
                WVCU ()

 24541: 93 68 0A D0 57 56 43 55                          // .h..WVCU

                Return (WMBU)
            }


 24549: A4 57 4D 42 55                                   // .WMBU

            If (LEqual (ECD0, Zero))
            {
                WVCU ()

 2454E: A0 10 93 45 43 44 30 00 57 56 43 55              // ...ECD0.WVCU

                Return (WMBU)
            }


 2455A: A4 57 4D 42 55                                   // .WMBU

            If (And (WMEV, 0x0200))
            {
                CWEV (0x0200)
                WVPT (0x02)
                WVPT (Zero)
                WVPT (0xE045)
            }

 2455F: A0 23 7B 57 4D 45 56 0B 00 02 00 43 57 45 56 0B  // .#{WMEV....CWEV.
 2456F: 00 02 57 56 50 54 0A 02 57 56 50 54 00 57 56 50  // ..WVPT..WVPT.WVP
 2457F: 54 0B 45 E0                                      // T.E.

            ElseIf
 24583: A1 41 0E                                         // .A.

 (And (WMEV, 0x0100))
            {
                CWEV (0x0100)

 24586: A0 3D 7B 57 4D 45 56 0B 00 01 00 43 57 45 56 0B  // .={WMEV....CWEV.
 24596: 00 01                                            // ..

                If (ECG4 ())
                {
                    WVPT (0x02)
                    WVPT (Zero)
                    WVPT (0xE043)
                }

 24598: A0 17 45 43 47 34 57 56 50 54 0A 02 57 56 50 54  // ..ECG4WVPT..WVPT
 245A8: 00 57 56 50 54 0B 43 E0                          // .WVPT.C.

                Else
                {
                    WVPT (0x02)
                    WVPT (Zero)
                    WVPT (0xE044)
                }
            }

 245B0: A1 13 57 56 50 54 0A 02 57 56 50 54 00 57 56 50  // ..WVPT..WVPT.WVP
 245C0: 54 0B 44 E0                                      // T.D.

            ElseIf
 245C4: A1 40 0A                                         // .@.

 (And (WMEV, 0x0800))
            {
                Store (EC0A (WMBU), WMBU)

 245C7: A0 4D 09 7B 57 4D 45 56 0B 00 08 00 70 45 43 30  // .M.{WMEV....pEC0
 245D7: 41 57 4D 42 55 57 4D 42 55                       // AWMBUWMBU

                CreateWordField (WMBU, Zero, WMI0)

 245E0: 8B 57 4D 42 55 00 57 4D 49 30                    // .WMBU.WMI0

                CreateWordField (WMBU, 0x02, WMI1)

 245EA: 8B 57 4D 42 55 0A 02 57 4D 49 31                 // .WMBU..WMI1

                CreateWordField (WMBU, 0x04, WMI2)

 245F5: 8B 57 4D 42 55 0A 04 57 4D 49 32                 // .WMBU..WMI2

                CreateWordField (WMBU, 0x06, WMI3)

 24600: 8B 57 4D 42 55 0A 06 57 4D 49 33                 // .WMBU..WMI3

                CreateWordField (WMBU, 0x08, WMI4)

 2460B: 8B 57 4D 42 55 0A 08 57 4D 49 34                 // .WMBU..WMI4

                CreateWordField (WMBU, 0x0A, WMI5)

 24616: 8B 57 4D 42 55 0A 0A 57 4D 49 35                 // .WMBU..WMI5

                CreateWordField (WMBU, 0x0C, WMI6)

 24621: 8B 57 4D 42 55 0A 0C 57 4D 49 36                 // .WMBU..WMI6

                If (LEqual (OSID (), 0x80))
                {

 2462C: A0 31 93 4F 53 49 44 0A 80                       // .1.OSID..

                    If (And (LEqual (WMI1, 0x10), LEqual (WMI2, 0xE035)))
                    {
                        Store (0x02, WMI0)
                        Store (0x12, WMI1)

 24635: A0 28 7B 93 57 4D 49 31 0A 10 93 57 4D 49 32 0B  // .({.WMI1...WMI2.
 24645: 35 E0 00 70 0A 02 57 4D 49 30 70 0A 12 57 4D 49  // 5..p..WMI0p..WMI
 24655: 31                                               // 1

                        Store (0xE035, WMI2)
                    }
                }

                CWEV (0x0800)
            }

            WVCU ()

 24656: 70 0B 35 E0 57 4D 49 32 43 57 45 56 0B 00 08 57  // p.5.WMI2CWEV...W
 24666: 56 43 55                                         // VCU

            Return (WMBU)
        }
    }


 24669: A4 57 4D 42 55                                   // .WMBU

    Scope (\)
    {

 2466E: 10 27 5C 00                                      // .'\.

        Method (WMNF, 2, NotSerialized)
        {
            \_SB.AMW0.SWEV (Arg0)

 24672: 14 23 57 4D 4E 46 02 5C 2F 03 5F 53 42 5F 41 4D  // .#WMNF.\/._SB_AM
 24682: 57 30 53 57 45 56 68                             // W0SWEVh

            Notify (\_SB.AMW0, 0xD0)
        }
    }


 24689: 86 5C 2E 5F 53 42 5F 41 4D 57 30 0A D0           // .\._SB_AMW0..

    Name (W98S, "Microsoft Windows")

 24696: 08 57 39 38 53 0D 4D 69 63 72 6F 73 6F 66 74 20  // .W98S.Microsoft 
 246A6: 57 69 6E 64 6F 77 73 00                          // Windows.

    Name (NT5S, "Microsoft Windows NT")

 246AE: 08 4E 54 35 53 0D 4D 69 63 72 6F 73 6F 66 74 20  // .NT5S.Microsoft 
 246BE: 57 69 6E 64 6F 77 73 20 4E 54 00                 // Windows NT.

    Name (WINM, "Microsoft WindowsME: Millennium Edition")

 246C9: 08 57 49 4E 4D 0D 4D 69 63 72 6F 73 6F 66 74 20  // .WINM.Microsoft 
 246D9: 57 69 6E 64 6F 77 73 4D 45 3A 20 4D 69 6C 6C 65  // WindowsME: Mille
 246E9: 6E 6E 69 75 6D 20 45 64 69 74 69 6F 6E 00        // nnium Edition.

    Name (WXP, "Windows 2001")

 246F7: 08 57 58 50 5F 0D 57 69 6E 64 6F 77 73 20 32 30  // .WXP_.Windows 20
 24707: 30 31 00                                         // 01.

    Name (WLG, "Windows 2006")

 2470A: 08 57 4C 47 5F 0D 57 69 6E 64 6F 77 73 20 32 30  // .WLG_.Windows 20
 2471A: 30 36 00                                         // 06.

    Name (WIN7, "Windows 2009")

 2471D: 08 57 49 4E 37 0D 57 69 6E 64 6F 77 73 20 32 30  // .WIN7.Windows 20
 2472D: 30 39 00                                         // 09.

    Name (WIN8, "Windows 2012")

 24730: 08 57 49 4E 38 0D 57 69 6E 64 6F 77 73 20 32 30  // .WIN8.Windows 20
 24740: 31 32 00                                         // 12.

    Name (WN81, "Windows 2013")

 24743: 08 57 4E 38 31 0D 57 69 6E 64 6F 77 73 20 32 30  // .WN81.Windows 20
 24753: 31 33 00                                         // 13.

    Name (LINX, "Linux")

 24756: 08 4C 49 4E 58 0D 4C 69 6E 75 78 00              // .LINX.Linux.

    Scope (_SB)
    {

 24762: 10 49 14 5F 53 42 5F                             // .I._SB_

        Name (ACOS, Zero)

 24769: 08 41 43 4F 53 00                                // .ACOS.

        Name (ACSE, Zero)

 2476F: 08 41 43 53 45 00                                // .ACSE.

        Method (OSID, 0, NotSerialized)
        {

 24775: 14 41 0E 4F 53 49 44 00                          // .A.OSID.

            If (LEqual (ACOS, Zero))
            {
                Store (One, ACOS)
                Store (Zero, ACSE)

 2477D: A0 44 0D 93 41 43 4F 53 00 70 01 41 43 4F 53 70  // .D..ACOS.p.ACOSp
 2478D: 00 41 43 53 45                                   // .ACSE

                If (CondRefOf (\_OSI, Local0))
                {

 24792: A0 4D 07 5B 12 5C 5F 4F 53 49 60                 // .M.[.\_OSI`

                    If (_OSI (WXP))
                    {

 2479D: A0 10 5F 4F 53 49 57 58 50 5F                    // .._OSIWXP_

                        Store (0x10, ACOS)
                    }


 247A7: 70 0A 10 41 43 4F 53                             // p..ACOS

                    If (_OSI (WLG))
                    {

 247AE: A0 10 5F 4F 53 49 57 4C 47 5F                    // .._OSIWLG_

                        Store (0x20, ACOS)
                    }


 247B8: 70 0A 20 41 43 4F 53                             // p. ACOS

                    If (_OSI (WIN7))
                    {

 247BF: A0 10 5F 4F 53 49 57 49 4E 37                    // .._OSIWIN7

                        Store (0x80, ACOS)
                    }


 247C9: 70 0A 80 41 43 4F 53                             // p..ACOS

                    If (_OSI (WIN8))
                    {
                        Store (0x80, ACOS)

 247D0: A0 16 5F 4F 53 49 57 49 4E 38 70 0A 80 41 43 4F  // .._OSIWIN8p..ACO
 247E0: 53                                               // S

                        Store (One, ACSE)
                    }


 247E1: 70 01 41 43 53 45                                // p.ACSE

                    If (_OSI (WN81))
                    {
                        Store (0x80, ACOS)

 247E7: A0 17 5F 4F 53 49 57 4E 38 31 70 0A 80 41 43 4F  // .._OSIWN81p..ACO
 247F7: 53                                               // S

                        Store (0x02, ACSE)
                    }


 247F8: 70 0A 02 41 43 53 45                             // p..ACSE

                    If (_OSI (LINX))
                    {

 247FF: A0 10 5F 4F 53 49 4C 49 4E 58                    // .._OSILINX

                        Store (0x40, ACOS)
                    }
                }

 24809: 70 0A 40 41 43 4F 53                             // p.@ACOS

                Else
                {

 24810: A1 41 04                                         // .A.

                    If (STRE (_OS, W98S))
                    {

 24813: A0 14 53 54 52 45 5F 4F 53 5F 57 39 38 53        // ..STRE_OS_W98S

                        Store (0x02, ACOS)
                    }


 24821: 70 0A 02 41 43 4F 53                             // p..ACOS

                    If (STRE (_OS, WINM))
                    {

 24828: A0 14 53 54 52 45 5F 4F 53 5F 57 49 4E 4D        // ..STRE_OS_WINM

                        Store (0x04, ACOS)
                    }


 24836: 70 0A 04 41 43 4F 53                             // p..ACOS

                    If (STRE (_OS, NT5S))
                    {

 2483D: A0 14 53 54 52 45 5F 4F 53 5F 4E 54 35 53        // ..STRE_OS_NT5S

                        Store (0x08, ACOS)
                    }
                }
            }


 2484B: 70 0A 08 41 43 4F 53                             // p..ACOS

            Return (ACOS)
        }


 24852: A4 41 43 4F 53                                   // .ACOS

        Method (OIDE, 0, NotSerialized)
        {
            OSID ()
            Store (ACSE, Local0)

 24857: 14 12 4F 49 44 45 00 4F 53 49 44 70 41 43 53 45  // ..OIDE.OSIDpACSE
 24867: 60                                               // `

            Return (Local0)
        }


 24868: A4 60                                            // .`

        Method (STOS, 0, NotSerialized)
        {
            OSID ()
            GENS (0x06, ACOS, Zero)
            GENS (0x2E, ACSE, Zero)
        }


 2486A: 14 20 53 54 4F 53 00 4F 53 49 44 47 45 4E 53 0A  // . STOS.OSIDGENS.
 2487A: 06 41 43 4F 53 00 47 45 4E 53 0A 2E 41 43 53 45  // .ACOS.GENS..ACSE
 2488A: 00                                               // .

        Method (SOS0, 2, NotSerialized)
        {
            STOS ()
        }


 2488B: 14 0A 53 4F 53 30 02 53 54 4F 53                 // ..SOS0.STOS

        Method (SOS4, 2, NotSerialized)
        {

 24896: 14 15 53 4F 53 34 02                             // ..SOS4.

            If (LOr (LEqual (Arg0, 0x04), 
 2489D: A0 0E 91 93 68 0A 04                             // ....h..

LEqual (Arg0, 0x03)))
            {
                STOS ()
            }
        }
    }


 248A4: 93 68 0A 03 53 54 4F 53                          // .h..STOS

    Scope (_SB.PCI0.RP05.PXSX)
    {

 248AC: 10 2F 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .//._SB_PCI0RP05
 248BC: 50 58 53 58                                      // PXSX

        Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
        {

 248C0: 14 1B 5F 50 53 57 01                             // .._PSW.

            If (Arg0)
            {
                GENS (0x1B, One, Zero)
            }

 248C7: A0 0A 68 47 45 4E 53 0A 1B 01 00                 // ..hGENS....

            Else
            {
                GENS (0x1B, Zero, Zero)
            }
        }
    }


 248D2: A1 09 47 45 4E 53 0A 1B 00 00                    // ..GENS....

    Scope (_SB.PCI0.GFX0)
    {

 248DC: 10 48 64 2F 03 5F 53 42 5F 50 43 49 30 47 46 58  // .Hd/._SB_PCI0GFX
 248EC: 30                                               // 0

        Name (IVD5, 
 248ED: 08 49 56 44 35                                   // .IVD5

Buffer (0x03){})

 248F2: 11 03 0A 03                                      // ....

        CreateByteField (IVD5, Zero, IVD6)

 248F6: 8C 49 56 44 35 00 49 56 44 36                    // .IVD5.IVD6

        CreateByteField (IVD5, One, IVD7)

 24900: 8C 49 56 44 35 01 49 56 44 37                    // .IVD5.IVD7

        CreateByteField (IVD5, 0x02, IVD8)

 2490A: 8C 49 56 44 35 0A 02 49 56 44 38                 // .IVD5..IVD8

        OperationRegion (PCS, PCI_Config, Zero, 0x0100)

 24915: 5B 80 50 43 53 5F 02 00 0B 00 01                 // [.PCS_.....

        Field (PCS, AnyAcc, NoLock, WriteAsZeros)
        {
            VVID,   16, 
            Offset (0x0A), 
            DCLS,   16
        }


 24920: 5B 81 13 50 43 53 5F 40 56 56 49 44 10 00 40 04  // [..PCS_@VVID..@.
 24930: 44 43 4C 53 10                                   // DCLS.

        Method (VINI, 2, NotSerialized)
        {

 24935: 14 36 56 49 4E 49 02                             // .6VINI.

            If (LEqual (Arg0, 0x02))
            {
                Store (Zero, IVD6)
                Store (DCLS, Local1)

 2493C: A0 2F 93 68 0A 02 70 00 49 56 44 36 70 44 43 4C  // ./.h..p.IVD6pDCL
 2494C: 53 61                                            // Sa

                If (LEqual (DCLS, 0x0300))
                {
                    Store (One, IVD6)

 2494E: A0 1D 93 44 43 4C 53 0B 00 03 70 01 49 56 44 36  // ...DCLS...p.IVD6

                    Store (^^^LID0._LID (), Local0)
                }
            }
        }


 2495E: 70 5E 5E 5E 2E 4C 49 44 30 5F 4C 49 44 60        // p^^^.LID0_LID`

        Name (VDP7, 
 2496C: 08 56 44 50 37                                   // .VDP7

Buffer (0x02)
        {
             0x00, 0x00                                     
        })

 24971: 11 05 0A 02 00 00                                // ......

        CreateByteField (VDP7, One, VDP8)

 24977: 8C 56 44 50 37 01 56 44 50 38                    // .VDP7.VDP8

        Method (DINI, 2, NotSerialized)
        {

 24981: 14 12 44 49 4E 49 02                             // ..DINI.

            If (LEqual (Arg0, 0x02))
            {

 24988: A0 0B 93 68 0A 02                                // ...h..

                Store (One, VDP8)
            }
        }


 2498E: 70 01 56 44 50 38                                // p.VDP8

        Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
        {
            Store (Arg0, VDP8)
            VDP1 (One, VDP8)
        }


 24994: 14 15 5F 44 4F 53 01 70 68 56 44 50 38 56 44 50  // .._DOS.phVDP8VDP
 249A4: 31 01 56 44 50 38                                // 1.VDP8

        Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
        {

 249AA: 14 49 04 5F 44 4F 44 00                          // .I._DOD.

            If (LEqual (ECGB (), One))
            {

 249B2: A0 23 93 45 43 47 42 01                          // .#.ECGB.

                Return (
 249BA: A4                                               // .

Package (0x08)
                {
                    0x0100, 
                    0x0400, 
                    0x0302, 
                    0x0303, 
                    0x0300, 
                    0x0301, 
                    0x0304, 
                    0x0305
                })
            }

 249BB: 12 1A 08 0B 00 01 0B 00 04 0B 02 03 0B 03 03 0B  // ................
 249CB: 00 03 0B 01 03 0B 04 03 0B 05 03                 // ...........

            Else
            {

 249D6: A1 1D                                            // ..

                Return (
 249D8: A4                                               // .

Package (0x08)
                {
                    0x0100, 
                    0x0400, 
                    0x0302, 
                    0x0303, 
                    0x0300, 
                    0x0301, 
                    0x0304, 
                    0x0305
                })
            }
        }


 249D9: 12 1A 08 0B 00 01 0B 00 04 0B 02 03 0B 03 03 0B  // ................
 249E9: 00 03 0B 01 03 0B 04 03 0B 05 03                 // ...........

        Device (CRT)
        {

 249F4: 5B 82 45 04 43 52 54 5F                          // [.E.CRT_

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 249FC: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0100)
            }


 24A03: A4 0B 00 01                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x02), Local0)

 24A07: 14 12 5F 44 43 53 00 70 56 44 50 31 0A 02 0A 02  // .._DCS.pVDP1....
 24A17: 60                                               // `

                Return (Local0)
            }


 24A18: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x02), Local0)

 24A1A: 14 12 5F 44 47 53 00 70 56 44 50 31 0A 03 0A 02  // .._DGS.pVDP1....
 24A2A: 60                                               // `

                Return (Local0)
            }


 24A2B: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x02, Arg0)
            }
        }


 24A2D: 14 0D 5F 44 53 53 01 56 44 50 32 0A 02 68        // .._DSS.VDP2..h

        Device (LCD)
        {

 24A3B: 5B 82 44 1F 4C 43 44 5F                          // [.D.LCD_

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24A43: 14 18 5F 41 44 52 00                             // .._ADR.

                If (LEqual (ECGB (), One))
                {

 24A4A: A0 0B 93 45 43 47 42 01                          // ...ECGB.

                    Return (0x0400)
                }

 24A52: A4 0B 00 04                                      // ....

                Else
                {

 24A56: A1 05                                            // ..

                    Return (0x0400)
                }
            }


 24A58: A4 0B 00 04                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, One), Local0)

 24A5C: 14 11 5F 44 43 53 00 70 56 44 50 31 0A 02 01 60  // .._DCS.pVDP1...`

                Return (Local0)
            }


 24A6C: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, One), Local0)

 24A6E: 14 11 5F 44 47 53 00 70 56 44 50 31 0A 03 01 60  // .._DGS.pVDP1...`

                Return (Local0)
            }


 24A7E: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (One, Arg0)
            }


 24A80: 14 0C 5F 44 53 53 01 56 44 50 32 01 68           // .._DSS.VDP2.h

            Name (BRT0, 0x64)

 24A8D: 08 42 52 54 30 0A 64                             // .BRT0.d

            Name (DBCL, 
 24A94: 08 44 42 43 4C                                   // .DBCL

Package (0x0D){})

 24A99: 12 02 0D                                         // ...

            Method (_BCL, 0, Serialized)  // _BCL: Brightness Control Levels
            {

 24A9C: 14 45 13 5F 42 43 4C 08                          // .E._BCL.

                If (
 24AA4: A0 4C 0D 92                                      // .L..

LGreaterEqual (OIDE (), One))
                {

 24AA8: 95 4F 49 44 45 01                                // .OIDE.

                    Return (
 24AAE: A4                                               // .

Package (0x67)
                    {
                        0x50, 
                        0x32, 
                        0x05, 
                        0x05, 
                        0x05, 
                        0x05, 
                        0x06, 
                        0x06, 
                        0x06, 
                        0x06, 
                        0x06, 
                        0x07, 
                        0x07, 
                        0x07, 
                        0x07, 
                        0x07, 
                        0x08, 
                        0x08, 
                        0x08, 
                        0x08, 
                        0x09, 
                        0x09, 
                        0x09, 
                        0x09, 
                        0x0A, 
                        0x0A, 
                        0x0A, 
                        0x0B, 
                        0x0B, 
                        0x0B, 
                        0x0C, 
                        0x0C, 
                        0x0C, 
                        0x0D, 
                        0x0D, 
                        0x0D, 
                        0x0E, 
                        0x0E, 
                        0x0F, 
                        0x0F, 
                        0x10, 
                        0x10, 
                        0x11, 
                        0x11, 
                        0x12, 
                        0x12, 
                        0x13, 
                        0x13, 
                        0x14, 
                        0x14, 
                        0x15, 
                        0x16, 
                        0x16, 
                        0x17, 
                        0x18, 
                        0x19, 
                        0x19, 
                        0x1A, 
                        0x1B, 
                        0x1C, 
                        0x1C, 
                        0x1D, 
                        0x1E, 
                        0x1F, 
                        0x20, 
                        0x21, 
                        0x22, 
                        0x23, 
                        0x24, 
                        0x25, 
                        0x26, 
                        0x28, 
                        0x29, 
                        0x2A, 
                        0x2B, 
                        0x2D, 
                        0x2E, 
                        0x2F, 
                        0x31, 
                        0x32, 
                        0x34, 
                        0x35, 
                        0x37, 
                        0x39, 
                        0x3B, 
                        0x3C, 
                        0x3E, 
                        0x40, 
                        0x42, 
                        0x44, 
                        0x46, 
                        0x48, 
                        0x4A, 
                        0x4D, 
                        0x4F, 
                        0x51, 
                        0x54, 
                        0x56, 
                        0x59, 
                        0x5C, 
                        0x5F, 
                        0x61, 
                        0x64
                    })
                }

 24AAF: 12 41 0D 67 0A 50 0A 32 0A 05 0A 05 0A 05 0A 05  // .A.g.P.2........
 24ABF: 0A 06 0A 06 0A 06 0A 06 0A 06 0A 07 0A 07 0A 07  // ................
 24ACF: 0A 07 0A 07 0A 08 0A 08 0A 08 0A 08 0A 09 0A 09  // ................
 24ADF: 0A 09 0A 09 0A 0A 0A 0A 0A 0A 0A 0B 0A 0B 0A 0B  // ................
 24AEF: 0A 0C 0A 0C 0A 0C 0A 0D 0A 0D 0A 0D 0A 0E 0A 0E  // ................
 24AFF: 0A 0F 0A 0F 0A 10 0A 10 0A 11 0A 11 0A 12 0A 12  // ................
 24B0F: 0A 13 0A 13 0A 14 0A 14 0A 15 0A 16 0A 16 0A 17  // ................
 24B1F: 0A 18 0A 19 0A 19 0A 1A 0A 1B 0A 1C 0A 1C 0A 1D  // ................
 24B2F: 0A 1E 0A 1F 0A 20 0A 21 0A 22 0A 23 0A 24 0A 25  // ..... .!.".#.$.%
 24B3F: 0A 26 0A 28 0A 29 0A 2A 0A 2B 0A 2D 0A 2E 0A 2F  // .&.(.).*.+.-.../
 24B4F: 0A 31 0A 32 0A 34 0A 35 0A 37 0A 39 0A 3B 0A 3C  // .1.2.4.5.7.9.;.<
 24B5F: 0A 3E 0A 40 0A 42 0A 44 0A 46 0A 48 0A 4A 0A 4D  // .>.@.B.D.F.H.J.M
 24B6F: 0A 4F 0A 51 0A 54 0A 56 0A 59 0A 5C 0A 5F 0A 61  // .O.Q.T.V.Y.\._.a
 24B7F: 0A 64                                            // .d

                Else
                {

 24B81: A1 40 05                                         // .@.

                    Name (BRT1, 
 24B84: 08 42 52 54 31                                   // .BRT1

Buffer (0x0D){})

 24B89: 11 03 0A 0D                                      // ....

                    CreateByteField (BRT1, Zero, BRT2)
                    Store (One, BRT2)
                    Store (GENS (0x09, BRT1, 
 24B8D: 8C 42 52 54 31 00 42 52 54 32 70 01 42 52 54 32  // .BRT1.BRT2p.BRT2
 24B9D: 70 47 45 4E 53 0A 09 42 52 54 31                 // pGENS..BRT1

SizeOf (BRT1)), Local2)
                    Store (Zero, Local0)
                    Store (0x0D, Local1)

 24BA8: 87 42 52 54 31 62 70 00 60 70 0A 0D 61           // .BRT1bp.`p..a

                    While (LLess (Local0, Local1))
                    {
                        Store (BBRD (Local2, Local0), Local3)
                        Store (Local3, 
 24BB5: A2 17 95 60 61 70 42 42 52 44 62 60 63 70 63     // ...`apBBRDb`cpc

Index (DBCL, Local0))

 24BC4: 88 44 42 43 4C 60 00                             // .DBCL`.

                        Increment (Local0)
                    }


 24BCB: 75 60                                            // u`

                    Return (DBCL)
                }
            }


 24BCD: A4 44 42 43 4C                                   // .DBCL

            Method (_BCM, 1, Serialized)  // _BCM: Brightness Control Method
            {

 24BD2: 14 4F 04 5F 42 43 4D 09                          // .O._BCM.

                If (
 24BDA: A0 08                                            // ..


 24BDC: 92                                               // .

LGreaterEqual (OIDE (), One)){}

 24BDD: 95 4F 49 44 45 01                                // .OIDE.

                Name (BRT3, 
 24BE3: 08 42 52 54 33                                   // .BRT3

Buffer (0x02){})

 24BE8: 11 03 0A 02                                      // ....

                CreateByteField (BRT3, Zero, BRT4)

 24BEC: 8C 42 52 54 33 00 42 52 54 34                    // .BRT3.BRT4

                CreateByteField (BRT3, One, BRT5)
                Store (0x02, BRT4)
                Store (Arg0, BRT5)
                Store (Arg0, BRT0)
                GENS (0x09, BRT3, 
 24BF6: 8C 42 52 54 33 01 42 52 54 35 70 0A 02 42 52 54  // .BRT3.BRT5p..BRT
 24C06: 34 70 68 42 52 54 35 70 68 42 52 54 30 47 45 4E  // 4phBRT5phBRT0GEN
 24C16: 53 0A 09 42 52 54 33                             // S..BRT3

SizeOf (BRT3))
            }


 24C1D: 87 42 52 54 33                                   // .BRT3

            Method (_BQC, 0, Serialized)  // _BQC: Brightness Query Current
            {
                Store (BRT0, Local0)

 24C22: 14 0E 5F 42 51 43 08 70 42 52 54 30 60           // .._BQC.pBRT0`

                Return (Local0)
            }
        }


 24C2F: A4 60                                            // .`

        Device (DVI)
        {

 24C31: 5B 82 45 04 44 56 49 5F                          // [.E.DVI_

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24C39: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0302)
            }


 24C40: A4 0B 02 03                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x08), Local0)

 24C44: 14 12 5F 44 43 53 00 70 56 44 50 31 0A 02 0A 08  // .._DCS.pVDP1....
 24C54: 60                                               // `

                Return (Local0)
            }


 24C55: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x08), Local0)

 24C57: 14 12 5F 44 47 53 00 70 56 44 50 31 0A 03 0A 08  // .._DGS.pVDP1....
 24C67: 60                                               // `

                Return (Local0)
            }


 24C68: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x08, Arg0)
            }
        }


 24C6A: 14 0D 5F 44 53 53 01 56 44 50 32 0A 08 68        // .._DSS.VDP2..h

        Device (DVI2)
        {

 24C78: 5B 82 45 04 44 56 49 32                          // [.E.DVI2

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24C80: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0303)
            }


 24C87: A4 0B 03 03                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x10), Local0)

 24C8B: 14 12 5F 44 43 53 00 70 56 44 50 31 0A 02 0A 10  // .._DCS.pVDP1....
 24C9B: 60                                               // `

                Return (Local0)
            }


 24C9C: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x10), Local0)

 24C9E: 14 12 5F 44 47 53 00 70 56 44 50 31 0A 03 0A 10  // .._DGS.pVDP1....
 24CAE: 60                                               // `

                Return (Local0)
            }


 24CAF: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x10, Arg0)
            }
        }


 24CB1: 14 0D 5F 44 53 53 01 56 44 50 32 0A 10 68        // .._DSS.VDP2..h

        Device (DVI3)
        {

 24CBF: 5B 82 45 04 44 56 49 33                          // [.E.DVI3

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24CC7: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0304)
            }


 24CCE: A4 0B 04 03                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x80), Local0)

 24CD2: 14 12 5F 44 43 53 00 70 56 44 50 31 0A 02 0A 80  // .._DCS.pVDP1....
 24CE2: 60                                               // `

                Return (Local0)
            }


 24CE3: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x80), Local0)

 24CE5: 14 12 5F 44 47 53 00 70 56 44 50 31 0A 03 0A 80  // .._DGS.pVDP1....
 24CF5: 60                                               // `

                Return (Local0)
            }


 24CF6: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x80, Arg0)
            }
        }


 24CF8: 14 0D 5F 44 53 53 01 56 44 50 32 0A 80 68        // .._DSS.VDP2..h

        Device (DP)
        {

 24D06: 5B 82 45 04 44 50 5F 5F                          // [.E.DP__

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24D0E: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0300)
            }


 24D15: A4 0B 00 03                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x20), Local0)

 24D19: 14 12 5F 44 43 53 00 70 56 44 50 31 0A 02 0A 20  // .._DCS.pVDP1... 
 24D29: 60                                               // `

                Return (Local0)
            }


 24D2A: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x20), Local0)

 24D2C: 14 12 5F 44 47 53 00 70 56 44 50 31 0A 03 0A 20  // .._DGS.pVDP1... 
 24D3C: 60                                               // `

                Return (Local0)
            }


 24D3D: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x20, Arg0)
            }
        }


 24D3F: 14 0D 5F 44 53 53 01 56 44 50 32 0A 20 68        // .._DSS.VDP2. h

        Device (DP2)
        {

 24D4D: 5B 82 45 04 44 50 32 5F                          // [.E.DP2_

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24D55: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0301)
            }


 24D5C: A4 0B 01 03                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x40), Local0)

 24D60: 14 12 5F 44 43 53 00 70 56 44 50 31 0A 02 0A 40  // .._DCS.pVDP1...@
 24D70: 60                                               // `

                Return (Local0)
            }


 24D71: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x40), Local0)

 24D73: 14 12 5F 44 47 53 00 70 56 44 50 31 0A 03 0A 40  // .._DGS.pVDP1...@
 24D83: 60                                               // `

                Return (Local0)
            }


 24D84: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x40, Arg0)
            }
        }


 24D86: 14 0D 5F 44 53 53 01 56 44 50 32 0A 40 68        // .._DSS.VDP2.@h

        Device (DP3)
        {

 24D94: 5B 82 44 05 44 50 33 5F                          // [.D.DP3_

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

 24D9C: 14 0A 5F 41 44 52 00                             // .._ADR.

                Return (0x0305)
            }


 24DA3: A4 0B 05 03                                      // ....

            Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
            {
                Store (VDP1 (0x02, 0x0100), Local0)
                And (Local0, 0xFFFF, Local0)

 24DA7: 14 19 5F 44 43 53 00 70 56 44 50 31 0A 02 0B 00  // .._DCS.pVDP1....
 24DB7: 01 60 7B 60 0B FF FF 60                          // .`{`...`

                Return (Local0)
            }


 24DBF: A4 60                                            // .`

            Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
            {
                Store (VDP1 (0x03, 0x0100), Local0)
                And (Local0, 0xFFFF, Local0)

 24DC1: 14 19 5F 44 47 53 00 70 56 44 50 31 0A 03 0B 00  // .._DGS.pVDP1....
 24DD1: 01 60 7B 60 0B FF FF 60                          // .`{`...`

                Return (Local0)
            }


 24DD9: A4 60                                            // .`

            Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
            {
                VDP2 (0x0100, Arg0)
            }
        }


 24DDB: 14 0E 5F 44 53 53 01 56 44 50 32 0B 00 01 68     // .._DSS.VDP2...h

        Method (BRT6, 2, NotSerialized)
        {

 24DEA: 14 20 42 52 54 36 02                             // . BRT6.

            If (LEqual (Arg0, One))
            {

 24DF1: A0 0B 93 68 01                                   // ...h.

                Notify (LCD, 0x86)
            }


 24DF6: 86 4C 43 44 5F 0A 86                             // .LCD_..

            If (And (Arg0, 0x02))
            {

 24DFD: A0 0D 7B 68 0A 02 00                             // ..{h...

                Notify (LCD, 0x87)
            }
        }


 24E04: 86 4C 43 44 5F 0A 87                             // .LCD_..

        Method (ILID, 0, NotSerialized)
        {

 24E0B: 14 3D 49 4C 49 44 00                             // .=ILID.

            If (LEqual (IVD6, One))
            {
                Store (^^^LID0._LID (), Local0)
                GLID (Local0)
                Notify (LID0, 0x80)
                Store (Zero, IVD8)
                Sleep (0x01F4)

 24E12: A0 2F 93 49 56 44 36 01 70 5E 5E 5E 2E 4C 49 44  // ./.IVD6.p^^^.LID
 24E22: 30 5F 4C 49 44 60 47 4C 49 44 60 86 4C 49 44 30  // 0_LID`GLID`.LID0
 24E32: 0A 80 70 00 49 56 44 38 5B 22 0B F4 01           // ..p.IVD8["...

                Store (One, Local0)
            }

 24E3F: 70 01 60                                         // p.`

            Else
            {

 24E42: A1 04                                            // ..

                Store (Zero, Local0)
            }


 24E44: 70 00 60                                         // p.`

            Return (Local0)
        }


 24E47: A4 60                                            // .`

        Method (ILDE, 2, NotSerialized)
        {

 24E49: 14 10 49 4C 44 45 02                             // ..ILDE.

            If (LEqual (Arg0, 0x03))
            {
                ILID ()
            }
        }


 24E50: A0 09 93 68 0A 03 49 4C 49 44                    // ...h..ILID

        Method (IVD1, 2, NotSerialized)
        {

 24E5A: 14 0E 49 56 44 31 02                             // ..IVD1.

            If (
 24E61: A0 07                                            // ..

LEqual (IVD6, One)){}
        }


 24E63: 93 49 56 44 36 01                                // .IVD6.

        Method (IVD2, 2, NotSerialized)
        {

 24E69: 14 45 05 49 56 44 32 02                          // .E.IVD2.

            If (LEqual (IVD6, One))
            {
                GDCK (CDCK)

 24E71: A0 4D 04 93 49 56 44 36 01 47 44 43 4B 43 44 43  // .M..IVD6.GDCKCDC
 24E81: 4B                                               // K

                If (LEqual (CDCK, One))
                {

 24E82: A0 3C 93 43 44 43 4B 01                          // .<.CDCK.

                    If (LEqual (CLID, Zero))
                    {
                        Sleep (0x07D0)
                        Store (One, IVD8)
                        GLID (One)
                        Notify (LID0, 0x80)
                        Sleep (0x02EE)
                        GLID (Zero)
                        Notify (LID0, 0x80)

 24E8A: A0 34 93 43 4C 49 44 00 5B 22 0B D0 07 70 01 49  // .4.CLID.["...p.I
 24E9A: 56 44 38 47 4C 49 44 01 86 4C 49 44 30 0A 80 5B  // VD8GLID..LID0..[
 24EAA: 22 0B EE 02 47 4C 49 44 00 86 4C 49 44 30 0A 80  // "...GLID..LID0..

                        Sleep (0x07D0)
                    }
                }
            }
        }


 24EBA: 5B 22 0B D0 07                                   // ["...

        Method (IVD4, 2, NotSerialized)
        {

 24EBF: 14 17 49 56 44 34 02                             // ..IVD4.

            Store (^^^LID0._LID (), IVD7)
        }


 24EC6: 70 5E 5E 5E 2E 4C 49 44 30 5F 4C 49 44 49 56 44  // p^^^.LID0_LIDIVD
 24ED6: 37                                               // 7

        Method (IVD3, 2, NotSerialized)
        {

 24ED7: 14 4D 04 49 56 44 33 02                          // .M.IVD3.

            If (LEqual (IVD6, One))
            {
                Store (^^^LID0._LID (), Local0)
                Store (Local0, CLID)

 24EDF: A0 45 04 93 49 56 44 36 01 70 5E 5E 5E 2E 4C 49  // .E..IVD6.p^^^.LI
 24EEF: 44 30 5F 4C 49 44 60 70 60 43 4C 49 44           // D0_LID`p`CLID

                If (LEqual (Arg0, 0x03))
                {

 24EFC: A0 28 93 68 0A 03                                // .(.h..

                    If (Or (
 24F02: A0 22 7D 92                                      // ."}.

LNotEqual (IVD7, Local0), LEqual (Local0, Zero)))
                    {

 24F06: 93 49 56 44 37 60 93 60 00 00                    // .IVD7`.`..

                        If (
 24F10: A0 0E 92                                         // ...

LGreaterEqual (OSID (), 0x20))
                        {
                            GLID (Local0)
                        }

 24F13: 95 4F 53 49 44 0A 20 47 4C 49 44 60              // .OSID. GLID`

                        Else
                        {
                            ILID ()
                        }
                    }
                }
            }
        }
    }


 24F1F: A1 05 49 4C 49 44                                // ..ILID

    Scope (\)
    {

 24F25: 10 45 07 5C 00                                   // .E.\.

        Method (VDP2, 2, NotSerialized)
        {

 24F2A: 14 41 05 56 44 50 32 02                          // .A.VDP2.

            Name (VDP3, 
 24F32: 08 56 44 50 33                                   // .VDP3

Buffer (0x10){})

 24F37: 11 03 0A 10                                      // ....

            CreateByteField (VDP3, Zero, VDP4)

 24F3B: 8C 56 44 50 33 00 56 44 50 34                    // .VDP3.VDP4

            CreateWordField (VDP3, One, VDP5)

 24F45: 8B 56 44 50 33 01 56 44 50 35                    // .VDP3.VDP5

            CreateDWordField (VDP3, 0x03, VDP6)
            Store (0x04, VDP4)
            Store (Arg0, VDP5)
            Store (Arg1, VDP6)
            GENS (0x05, VDP3, 
 24F4F: 8A 56 44 50 33 0A 03 56 44 50 36 70 0A 04 56 44  // .VDP3..VDP6p..VD
 24F5F: 50 34 70 68 56 44 50 35 70 69 56 44 50 36 47 45  // P4phVDP5piVDP6GE
 24F6F: 4E 53 0A 05 56 44 50 33                          // NS..VDP3

SizeOf (VDP3))
        }


 24F77: 87 56 44 50 33                                   // .VDP3

        Method (VDP1, 2, NotSerialized)
        {
            Store (Arg1, Local0)
            ShiftLeft (Local0, 0x08, Local0)
            Or (Local0, Arg0, Local0)
            Store (GENS (0x05, Local0, Zero), Local0)

 24F7C: 14 1E 56 44 50 31 02 70 69 60 79 60 0A 08 60 7D  // ..VDP1.pi`y`..`}
 24F8C: 60 68 60 70 47 45 4E 53 0A 05 60 00 60           // `h`pGENS..`.`

            Return (Local0)
        }
    }


 24F99: A4 60                                            // .`

    Scope (_SB.PCI0.PEG0.PEGP)
    {

 24F9B: 10 49 18 2F 04 5F 53 42 5F 50 43 49 30 50 45 47  // .I./._SB_PCI0PEG
 24FAB: 30 50 45 47 50                                   // 0PEGP

        Name (EVD4, 
 24FB0: 08 45 56 44 34                                   // .EVD4

Buffer (One){})

 24FB5: 11 02 01                                         // ...

        CreateByteField (EVD4, Zero, EVD5)

 24FB8: 8C 45 56 44 34 00 45 56 44 35                    // .EVD4.EVD5

        Name (VOTF, Zero)

 24FC2: 08 56 4F 54 46 00                                // .VOTF.

        Name (PLMT, Zero)

 24FC8: 08 50 4C 4D 54 00                                // .PLMT.

        Name (ECDX, Zero)

 24FCE: 08 45 43 44 58 00                                // .ECDX.

        Name (ECPD, Zero)

 24FD4: 08 45 43 50 44 00                                // .ECPD.

        Name (VIBF, 
 24FDA: 08 56 49 42 46                                   // .VIBF

Buffer (One){})

 24FDF: 11 02 01                                         // ...

        CreateByteField (VIBF, Zero, VIDR)

 24FE2: 8C 56 49 42 46 00 56 49 44 52                    // .VIBF.VIDR

        OperationRegion (PCS, PCI_Config, Zero, 0x40)

 24FEC: 5B 80 50 43 53 5F 02 00 0A 40                    // [.PCS_...@

        Field (PCS, AnyAcc, NoLock, WriteAsZeros)
        {
            VVID,   16, 
            VDID,   16, 
            Offset (0x0A), 
            DCLS,   16
        }


 24FF6: 5B 81 17 50 43 53 5F 40 56 56 49 44 10 56 44 49  // [..PCS_@VVID.VDI
 25006: 44 10 00 30 44 43 4C 53 10                       // D..0DCLS.

        Method (VINI, 2, NotSerialized)
        {

 2500F: 14 49 04 56 49 4E 49 02                          // .I.VINI.

            If (LEqual (Arg0, 0x02))
            {
                Store (Zero, EVD5)
                Store (DCLS, Local1)

 25017: A0 41 04 93 68 0A 02 70 00 45 56 44 35 70 44 43  // .A..h..p.EVD5pDC
 25027: 4C 53 61                                         // LSa

                If (LOr (LEqual (DCLS, 0x0300), 
 2502A: A0 2E 91 93 44 43 4C 53 0B 00 03                 // ....DCLS...

LEqual (DCLS, 0x0302)))
                {

 25035: 93 44 43 4C 53 0B 02 03                          // .DCLS...

                    If (LEqual (VVID, 0x10DE))
                    {

 2503D: A0 0F 93 56 56 49 44 0B DE 10                    // ...VVID...

                        Store (One, VIDR)
                    }

                    Store (VVID, Local1)

 25047: 70 01 56 49 44 52 70 56 56 49 44 61              // p.VIDRpVVIDa

                    Store (One, EVD5)
                }
            }
        }


 25053: 70 01 45 56 44 35                                // p.EVD5

        Method (EVD2, 2, NotSerialized)
        {

 25059: 14 35 45 56 44 32 02                             // .5EVD2.

            If (LEqual (EVD5, One))
            {

 25060: A0 2E 93 45 56 44 35 01                          // ...EVD5.

                If (LEqual (VIDR, One))
                {

 25068: A0 26 93 56 49 44 52 01                          // .&.VIDR.

                    If (
 25070: A0 1E 92                                         // ...

LNotEqual (VOTF, Zero))
                    {
                        Store (Arg1, ECDX)
                        Store (One, ECPD)
                        Sleep (0x32)

 25073: 93 56 4F 54 46 00 70 69 45 43 44 58 70 01 45 43  // .VOTF.piECDXp.EC
 25083: 50 44 5B 22 0A 32                                // PD[".2

                        Notify (PEGP, Arg1)
                    }
                }
            }
        }


 25089: 86 50 45 47 50 69                                // .PEGPi

        Method (HGPS, 1, Serialized)
        {

 2508F: 14 48 08 48 47 50 53 09                          // .H.HGPS.

            CreateByteField (Arg0, Zero, CBBF)

 25097: 8C 68 00 43 42 42 46                             // .h.CBBF

            If (And (CBBF, 0x04))
            {

 2509E: A0 49 07 7B 43 42 42 46 0A 04 00                 // .I.{CBBF...

                If (LEqual (VOTF, Zero))
                {
                    Store (One, VOTF)
                    ECWB (0x08, 0x02)
                }

 250A9: A0 15 93 56 4F 54 46 00 70 01 56 4F 54 46 45 43  // ...VOTF.p.VOTFEC
 250B9: 57 42 0A 08 0A 02                                // WB....

                ElseIf
 250BF: A1 48 05                                         // .H.

 (
 250C2: A0 45 05 92                                      // .E..

LNotEqual (ECDX, Zero))
                {
                    ShiftRight (CBBF, 0x04, Local0)

 250C6: 93 45 43 44 58 00 7A 43 42 42 46 0A 04 60        // .ECDX.zCBBF..`

                    If (LAnd (Not (And (PLMT, 0xD0)), ECPD))
                    {
                        Store (ECDX, PLMT)

 250D4: A0 1F 90 80 7B 50 4C 4D 54 0A D0 00 00 45 43 50  // ....{PLMT....ECP
 250E4: 44 70 45 43 44 58 50 4C 4D 54                    // DpECDXPLMT

                        Store (Zero, ECPD)
                    }


 250EE: 70 00 45 43 50 44                                // p.ECPD

                    If (And (PLMT, 0xD0))
                    {
                        Subtract (PLMT, 0xD1, Local1)

 250F4: A0 23 7B 50 4C 4D 54 0A D0 00 74 50 4C 4D 54 0A  // .#{PLMT...tPLMT.
 25104: D1 61                                            // .a

                        If (LEqual (Local0, Local1))
                        {
                            ECWB (0x08, One)

 25106: A0 11 93 60 61 45 43 57 42 0A 08 01              // ...`aECWB...

                            Store (Local0, PLMT)
                        }
                    }
                }
            }
        }


 25112: 70 60 50 4C 4D 54                                // p`PLMT

        Method (EVD7, 2, NotSerialized)
        {

 25118: 14 0C 45 56 44 37 02                             // ..EVD7.

            Store (Zero, VOTF)
        }
    }


 2511F: 70 00 56 4F 54 46                                // p.VOTF

    Scope (_PR)
    {

 25125: 10 46 09 5F 50 52 5F                             // .F._PR_

        Method (PPCE, 2, NotSerialized)
        {
            Store (GENS (0x15, Zero, Zero), Local0)
            Store (Local0, CPPC)
            Notify (PR00, 0x80)
            Sleep (0x64)

 2512C: 14 4F 08 50 50 43 45 02 70 47 45 4E 53 0A 15 00  // .O.PPCE.pGENS...
 2513C: 00 60 70 60 43 50 50 43 86 50 52 30 30 0A 80 5B  // .`p`CPPC.PR00..[
 2514C: 22 0A 64                                         // ".d

            If (
 2514F: A0 4C 06 92                                      // .L..

LGreaterEqual (TCNT, 0x02))
            {
                Notify (PR01, 0x80)
                Sleep (0x64)

 25153: 95 54 43 4E 54 0A 02 86 50 52 30 31 0A 80 5B 22  // .TCNT...PR01..["
 25163: 0A 64                                            // .d

                If (
 25165: A0 46 05 92                                      // .F..

LGreaterEqual (TCNT, 0x04))
                {
                    Notify (PR02, 0x80)
                    Sleep (0x64)
                    Notify (PR03, 0x80)
                    Sleep (0x64)

 25169: 95 54 43 4E 54 0A 04 86 50 52 30 32 0A 80 5B 22  // .TCNT...PR02..["
 25179: 0A 64 86 50 52 30 33 0A 80 5B 22 0A 64           // .d.PR03..[".d

                    If (
 25186: A0 35 92                                         // .5.

LGreaterEqual (TCNT, 0x08))
                    {
                        Notify (PR04, 0x80)
                        Sleep (0x64)
                        Notify (PR05, 0x80)
                        Sleep (0x64)
                        Notify (PR06, 0x80)
                        Sleep (0x64)
                        Notify (PR07, 0x80)

 25189: 95 54 43 4E 54 0A 08 86 50 52 30 34 0A 80 5B 22  // .TCNT...PR04..["
 25199: 0A 64 86 50 52 30 35 0A 80 5B 22 0A 64 86 50 52  // .d.PR05..[".d.PR
 251A9: 30 36 0A 80 5B 22 0A 64 86 50 52 30 37 0A 80     // 06..[".d.PR07..

                        Sleep (0x64)
                    }
                }
            }
        }
    }


 251B8: 5B 22 0A 64                                      // [".d

    Name (APRE, Zero)

 251BC: 08 41 50 52 45 00                                // .APRE.

    Scope (_SB.PCI0.LPCB)
    {

 251C2: 10 45 CC 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .E./._SB_PCI0LPC
 251D2: 42                                               // B

        Device (ECDV)
        {

 251D3: 5B 82 43 CB 45 43 44 56                          // [.C.ECDV

            Name (_HID, EisaId ("PNP0C09"))  // _HID: Hardware ID

 251DB: 08 5F 48 49 44 0C 41 D0 0C 09                    // ._HID.A...

            Name (_UID, Zero)  // _UID: Unique ID

 251E5: 08 5F 55 49 44 00                                // ._UID.

            Name (ECRS, 
 251EB: 08 45 43 52 53                                   // .ECRS

ResourceTemplate ()
            {
                IO (Decode16,
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    _Y37)
                IO (Decode16,
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    _Y38)
            })

 251F0: 11 15 0A 12 47 01 00 00 00 00 00 01 47 01 00 00  // ....G.......G...
 25200: 00 00 00 01 79 00                                // ....y.

            Method (_STA, 0, Serialized)  // _STA: Status
            {

 25206: 14 09 5F 53 54 41 08                             // .._STA.

                Return (0x0F)
            }


 2520D: A4 0A 0F                                         // ...

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

 25210: 14 4A 05 5F 43 52 53 00                          // .J._CRS.

                CreateWordField (ECRS, \_SB.PCI0.LPCB.ECDV._Y37._MIN, DMIN)  // _MIN: Minimum Base Address

 25218: 8B 45 43 52 53 0A 02 44 4D 49 4E                 // .ECRS..DMIN

                CreateWordField (ECRS, \_SB.PCI0.LPCB.ECDV._Y37._MAX, DMAX)  // _MAX: Maximum Base Address

 25223: 8B 45 43 52 53 0A 04 44 4D 41 58                 // .ECRS..DMAX

                CreateWordField (ECRS, \_SB.PCI0.LPCB.ECDV._Y38._MIN, CMIN)  // _MIN: Minimum Base Address

 2522E: 8B 45 43 52 53 0A 0A 43 4D 49 4E                 // .ECRS..CMIN

                CreateWordField (ECRS, \_SB.PCI0.LPCB.ECDV._Y38._MAX, CMAX)  // _MAX: Maximum Base Address
                Store (0x0930, Local0)
                Store (Local0, DMIN)
                Store (Local0, DMAX)
                Store (0x0934, Local0)
                Store (Local0, CMIN)
                Store (Local0, CMAX)

 25239: 8B 45 43 52 53 0A 0C 43 4D 41 58 70 0B 30 09 60  // .ECRS..CMAXp.0.`
 25249: 70 60 44 4D 49 4E 70 60 44 4D 41 58 70 0B 34 09  // p`DMINp`DMAXp.4.
 25259: 60 70 60 43 4D 49 4E 70 60 43 4D 41 58           // `p`CMINp`CMAX

                Return (ECRS)
            }


 25266: A4 45 43 52 53                                   // .ECRS

            Method (GGRP, 1, Serialized)
            {
                ShiftRight (And (Arg0, 0x00FF0000), 0x10, Local0)

 2526B: 14 14 47 47 52 50 09 7A 7B 68 0C 00 00 FF 00 00  // ..GGRP.z{h......
 2527B: 0A 10 60                                         // ..`

                Return (Local0)
            }


 2527E: A4 60                                            // .`

            Method (GNMB, 1, Serialized)
            {

 25280: 14 0D 47 4E 4D 42 09                             // ..GNMB.

                Return (
 25287: A4                                               // .

And (Arg0, 0xFFFF))
            }


 25288: 7B 68 0B FF FF 00                                // {h....

            Method (GGPE, 1, NotSerialized)
            {
                Store (GGRP (Arg0), Local0)
                Store (GNMB (Arg0), Local1)
                Store (And (ShiftRight (GPEM, Multiply (Local0, 0x02)), 0x03), Local2)

 2528E: 14 3B 47 47 50 45 01 70 47 47 52 50 68 60 70 47  // .;GGPE.pGGRPh`pG
 2529E: 4E 4D 42 68 61 70 7B 7A 47 50 45 4D 77 60 0A 02  // NMBhap{zGPEMw`..
 252AE: 00 00 0A 03 00 62                                // .....b

                If (LEqual (Local2, Zero))
                {

 252B4: A0 07 93 62 00                                   // ...b.

                    Return (0x6F)
                }

 252B9: A4 0A 6F                                         // ..o

                Else
                {

 252BC: A1 0D                                            // ..

                    Return (
 252BE: A4                                               // .

Add (Multiply (Subtract (Local2, One), 0x20), Local1))
                }
            }


 252BF: 72 77 74 62 01 00 0A 20 00 61 00                 // rwtb... .a.

            Method (_GPE, 0, NotSerialized)  // _GPE: General Purpose Events
            {

 252CA: 14 1F 5F 47 50 45 00                             // .._GPE.

                If (ESPI)
                {

 252D1: A0 09 45 53 50 49                                // ..ESPI

                    Store (0x6E, Local0)
                }

 252D7: 70 0A 6E 60                                      // p.n`

                Else
                {

 252DB: A1 0C                                            // ..

                    Store (GGPE (0x01010014), Local0)
                }


 252DD: 70 47 47 50 45 0C 14 00 01 01 60                 // pGGPE.....`

                Return (Local0)
            }


 252E8: A4 60                                            // .`

            Name (ECIB, 
 252EA: 08 45 43 49 42                                   // .ECIB

Buffer (0xFF){})

 252EF: 11 03 0A FF                                      // ....

            OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)

 252F3: 5B 80 45 43 4F 52 03 00 0A FF                    // [.ECOR....

            Field (ECOR, ByteAcc, Lock, Preserve)
            {
                EC00,   8, 
                EC01,   8, 
                EC02,   8, 
                EC03,   8, 
                EC04,   8, 
                EC05,   8, 
                EC06,   8, 
                EC07,   8, 
                EC08,   8, 
                EC09,   8, 
                EC10,   8, 
                EC11,   8, 
                EC12,   8, 
                EC13,   8, 
                EC14,   8, 
                EC15,   8, 
                EC16,   8, 
                EC17,   8, 
                EC18,   8, 
                EC19,   8, 
                EC20,   8, 
                EC21,   8, 
                EC22,   8, 
                EC23,   8, 
                EC24,   8, 
                EC25,   8, 
                EC26,   8, 
                EC27,   8, 
                EC28,   8, 
                EC29,   8, 
                EC30,   8, 
                EC31,   8, 
                EC32,   8, 
                EC33,   8, 
                EC34,   8, 
                EC35,   8, 
                EC36,   8, 
                EC37,   8, 
                EC38,   8, 
                EC39,   8, 
                EC40,   8, 
                EC41,   8, 
                EC42,   8, 
                EC43,   8, 
                EC44,   8, 
                EC45,   8, 
                EC46,   8, 
                EC47,   8, 
                EC48,   8, 
                EC49,   8, 
                EC50,   8, 
                EC51,   8, 
                EC52,   8, 
                EC53,   8, 
                EC54,   8, 
                EC55,   8, 
                EC56,   8, 
                Offset (0x80), 
                EC80,   8, 
                EC81,   8, 
                EC82,   8, 
                EC83,   8, 
                EC84,   8, 
                EC85,   8, 
                EC86,   8, 
                EC87,   8, 
                EC88,   8, 
                EC89,   8, 
                EC8A,   8, 
                EC8B,   8, 
                EC8C,   8, 
                EC8D,   8, 
                EC8E,   8, 
                EC8F,   8, 
                EC90,   8, 
                EC91,   8, 
                EC92,   8, 
                EC93,   8, 
                EC94,   8, 
                EC95,   8, 
                EC96,   8, 
                EC97,   8, 
                EC98,   8, 
                EC99,   8, 
                EC9A,   8, 
                EC9B,   8, 
                EC9C,   8, 
                EC9D,   8, 
                EC9E,   8, 
                EC9F,   8, 
                ECA0,   8, 
                ECA1,   8, 
                ECA2,   8, 
                ECA3,   8, 
                ECA4,   8, 
                ECA5,   8, 
                ECA6,   8, 
                ECA7,   8, 
                ECA8,   8, 
                ECA9,   8, 
                ECAA,   8, 
                ECAB,   8, 
                ECAC,   8, 
                ECAD,   8, 
                ECAE,   8, 
                ECAF,   8, 
                ECB0,   8
            }


 252FD: 5B 81 4C 21 45 43 4F 52 11 45 43 30 30 08 45 43  // [.L!ECOR.EC00.EC
 2530D: 30 31 08 45 43 30 32 08 45 43 30 33 08 45 43 30  // 01.EC02.EC03.EC0
 2531D: 34 08 45 43 30 35 08 45 43 30 36 08 45 43 30 37  // 4.EC05.EC06.EC07
 2532D: 08 45 43 30 38 08 45 43 30 39 08 45 43 31 30 08  // .EC08.EC09.EC10.
 2533D: 45 43 31 31 08 45 43 31 32 08 45 43 31 33 08 45  // EC11.EC12.EC13.E
 2534D: 43 31 34 08 45 43 31 35 08 45 43 31 36 08 45 43  // C14.EC15.EC16.EC
 2535D: 31 37 08 45 43 31 38 08 45 43 31 39 08 45 43 32  // 17.EC18.EC19.EC2
 2536D: 30 08 45 43 32 31 08 45 43 32 32 08 45 43 32 33  // 0.EC21.EC22.EC23
 2537D: 08 45 43 32 34 08 45 43 32 35 08 45 43 32 36 08  // .EC24.EC25.EC26.
 2538D: 45 43 32 37 08 45 43 32 38 08 45 43 32 39 08 45  // EC27.EC28.EC29.E
 2539D: 43 33 30 08 45 43 33 31 08 45 43 33 32 08 45 43  // C30.EC31.EC32.EC
 253AD: 33 33 08 45 43 33 34 08 45 43 33 35 08 45 43 33  // 33.EC34.EC35.EC3
 253BD: 36 08 45 43 33 37 08 45 43 33 38 08 45 43 33 39  // 6.EC37.EC38.EC39
 253CD: 08 45 43 34 30 08 45 43 34 31 08 45 43 34 32 08  // .EC40.EC41.EC42.
 253DD: 45 43 34 33 08 45 43 34 34 08 45 43 34 35 08 45  // EC43.EC44.EC45.E
 253ED: 43 34 36 08 45 43 34 37 08 45 43 34 38 08 45 43  // C46.EC47.EC48.EC
 253FD: 34 39 08 45 43 35 30 08 45 43 35 31 08 45 43 35  // 49.EC50.EC51.EC5
 2540D: 32 08 45 43 35 33 08 45 43 35 34 08 45 43 35 35  // 2.EC53.EC54.EC55
 2541D: 08 45 43 35 36 08 00 48 23 45 43 38 30 08 45 43  // .EC56..H#EC80.EC
 2542D: 38 31 08 45 43 38 32 08 45 43 38 33 08 45 43 38  // 81.EC82.EC83.EC8
 2543D: 34 08 45 43 38 35 08 45 43 38 36 08 45 43 38 37  // 4.EC85.EC86.EC87
 2544D: 08 45 43 38 38 08 45 43 38 39 08 45 43 38 41 08  // .EC88.EC89.EC8A.
 2545D: 45 43 38 42 08 45 43 38 43 08 45 43 38 44 08 45  // EC8B.EC8C.EC8D.E
 2546D: 43 38 45 08 45 43 38 46 08 45 43 39 30 08 45 43  // C8E.EC8F.EC90.EC
 2547D: 39 31 08 45 43 39 32 08 45 43 39 33 08 45 43 39  // 91.EC92.EC93.EC9
 2548D: 34 08 45 43 39 35 08 45 43 39 36 08 45 43 39 37  // 4.EC95.EC96.EC97
 2549D: 08 45 43 39 38 08 45 43 39 39 08 45 43 39 41 08  // .EC98.EC99.EC9A.
 254AD: 45 43 39 42 08 45 43 39 43 08 45 43 39 44 08 45  // EC9B.EC9C.EC9D.E
 254BD: 43 39 45 08 45 43 39 46 08 45 43 41 30 08 45 43  // C9E.EC9F.ECA0.EC
 254CD: 41 31 08 45 43 41 32 08 45 43 41 33 08 45 43 41  // A1.ECA2.ECA3.ECA
 254DD: 34 08 45 43 41 35 08 45 43 41 36 08 45 43 41 37  // 4.ECA5.ECA6.ECA7
 254ED: 08 45 43 41 38 08 45 43 41 39 08 45 43 41 41 08  // .ECA8.ECA9.ECAA.
 254FD: 45 43 41 42 08 45 43 41 43 08 45 43 41 44 08 45  // ECAB.ECAC.ECAD.E
 2550D: 43 41 45 08 45 43 41 46 08 45 43 42 30 08        // CAE.ECAF.ECB0.

            Method (ECIN, 0, NotSerialized)
            {
                Store (ECG3 (), LIDS)
                ECS3 ()
                ECS2 (ACOS, ACSE)

 2551B: 14 49 04 45 43 49 4E 00 70 45 43 47 33 4C 49 44  // .I.ECIN.pECG3LID
 2552B: 53 45 43 53 33 45 43 53 32 41 43 4F 53 41 43 53  // SECS3ECS2ACOSACS
 2553B: 45                                               // E

                If (ECG4 ())
                {
                    GENS (0x1C, One, Zero)
                }

 2553C: A0 0D 45 43 47 34 47 45 4E 53 0A 1C 01 00        // ..ECG4GENS....

                Else
                {
                    GENS (0x1C, Zero, Zero)
                }


 2554A: A1 09 47 45 4E 53 0A 1C 00 00                    // ..GENS....

                If (
 25554: A0 10 92                                         // ...

LGreaterEqual (OIDE (), One))
                {
                    GENS (0x2D, Zero, Zero)
                }
            }


 25557: 95 4F 49 44 45 01 47 45 4E 53 0A 2D 00 00        // .OIDE.GENS.-..

            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {

 25565: 14 2A 5F 52 45 47 02                             // .*_REG.

                If (LEqual (LEqual (Arg1, One), 
 2556C: A0 13 93 93 69 01                                // ....i.

LEqual (Arg0, 0x03)))
                {
                    Store (One, ECRD)
                    ECIN ()
                }


 25572: 93 68 0A 03 70 01 45 43 52 44 45 43 49 4E        // .h..p.ECRDECIN

                If (LAnd (LEqual (Arg1, Zero), 
 25580: A0 0F 90 93 69 00                                // ....i.

LEqual (Arg0, 0x03)))
                {

 25586: 93 68 0A 03                                      // .h..

                    Store (Zero, ECRD)
                }
            }


 2558A: 70 00 45 43 52 44                                // p.ECRD

            Method (ECM9, 2, NotSerialized)
            {
                ECIN ()
                ECS6 (Arg0)
                ECG7 ()
            }


 25590: 14 13 45 43 4D 39 02 45 43 49 4E 45 43 53 36 68  // ..ECM9.ECINECS6h
 255A0: 45 43 47 37                                      // ECG7

            Method (_Q66, 0, NotSerialized)  // _Qxx: EC Query
            {

 255A4: 14 17 5F 51 36 36 00                             // .._Q66.

                If (
 255AB: A0 0A 92                                         // ...

LNotEqual (ECRD, One))
                {

 255AE: 93 45 43 52 44 01                                // .ECRD.

                    Return (Zero)
                }

                NEVT ()

 255B4: A4 00 4E 45 56 54                                // ..NEVT

                Return (Zero)
            }


 255BA: A4 00                                            // ..

            Method (ECR1, 1, NotSerialized)
            {

 255BC: 14 40 53 45 43 52 31 01                          // .@SECR1.

                If (LEqual (ECRD, Zero))
                {
                    Store (EISC (0x80, Arg0, Zero), Local0)

 255C4: A0 13 93 45 43 52 44 00 70 45 49 53 43 0A 80 68  // ...ECRD.pEISC..h
 255D4: 00 60                                            // .`

                    Return (Local0)
                }

                Acquire (ECMX, 0xFFFF)
                Store (Zero, Local0)

 255D6: A4 60 5B 23 45 43 4D 58 FF FF 70 00 60           // .`[#ECMX..p.`

                If (LEqual (Arg0, Zero))
                {

 255E3: A0 0A 93 68 00                                   // ...h.

                    Store (EC00, Local0)
                }


 255E8: 70 45 43 30 30 60                                // pEC00`

                If (LEqual (Arg0, One))
                {

 255EE: A0 0A 93 68 01                                   // ...h.

                    Store (EC01, Local0)
                }


 255F3: 70 45 43 30 31 60                                // pEC01`

                If (LEqual (Arg0, 0x02))
                {

 255F9: A0 0B 93 68 0A 02                                // ...h..

                    Store (EC02, Local0)
                }


 255FF: 70 45 43 30 32 60                                // pEC02`

                If (LEqual (Arg0, 0x03))
                {

 25605: A0 0B 93 68 0A 03                                // ...h..

                    Store (EC03, Local0)
                }


 2560B: 70 45 43 30 33 60                                // pEC03`

                If (LEqual (Arg0, 0x04))
                {

 25611: A0 0B 93 68 0A 04                                // ...h..

                    Store (EC04, Local0)
                }


 25617: 70 45 43 30 34 60                                // pEC04`

                If (LEqual (Arg0, 0x05))
                {

 2561D: A0 0B 93 68 0A 05                                // ...h..

                    Store (EC05, Local0)
                }


 25623: 70 45 43 30 35 60                                // pEC05`

                If (LEqual (Arg0, 0x06))
                {

 25629: A0 0B 93 68 0A 06                                // ...h..

                    Store (EC06, Local0)
                }


 2562F: 70 45 43 30 36 60                                // pEC06`

                If (LEqual (Arg0, 0x07))
                {

 25635: A0 0B 93 68 0A 07                                // ...h..

                    Store (EC07, Local0)
                }


 2563B: 70 45 43 30 37 60                                // pEC07`

                If (LEqual (Arg0, 0x08))
                {

 25641: A0 0B 93 68 0A 08                                // ...h..

                    Store (EC08, Local0)
                }


 25647: 70 45 43 30 38 60                                // pEC08`

                If (LEqual (Arg0, 0x09))
                {

 2564D: A0 0B 93 68 0A 09                                // ...h..

                    Store (EC09, Local0)
                }


 25653: 70 45 43 30 39 60                                // pEC09`

                If (LEqual (Arg0, 0x0A))
                {

 25659: A0 0B 93 68 0A 0A                                // ...h..

                    Store (EC10, Local0)
                }


 2565F: 70 45 43 31 30 60                                // pEC10`

                If (LEqual (Arg0, 0x0B))
                {

 25665: A0 0B 93 68 0A 0B                                // ...h..

                    Store (EC11, Local0)
                }


 2566B: 70 45 43 31 31 60                                // pEC11`

                If (LEqual (Arg0, 0x0C))
                {

 25671: A0 0B 93 68 0A 0C                                // ...h..

                    Store (EC12, Local0)
                }


 25677: 70 45 43 31 32 60                                // pEC12`

                If (LEqual (Arg0, 0x0D))
                {

 2567D: A0 0B 93 68 0A 0D                                // ...h..

                    Store (EC13, Local0)
                }


 25683: 70 45 43 31 33 60                                // pEC13`

                If (LEqual (Arg0, 0x0E))
                {

 25689: A0 0B 93 68 0A 0E                                // ...h..

                    Store (EC14, Local0)
                }


 2568F: 70 45 43 31 34 60                                // pEC14`

                If (LEqual (Arg0, 0x0F))
                {

 25695: A0 0B 93 68 0A 0F                                // ...h..

                    Store (EC15, Local0)
                }


 2569B: 70 45 43 31 35 60                                // pEC15`

                If (LEqual (Arg0, 0x10))
                {

 256A1: A0 0B 93 68 0A 10                                // ...h..

                    Store (EC16, Local0)
                }


 256A7: 70 45 43 31 36 60                                // pEC16`

                If (LEqual (Arg0, 0x11))
                {

 256AD: A0 0B 93 68 0A 11                                // ...h..

                    Store (EC17, Local0)
                }


 256B3: 70 45 43 31 37 60                                // pEC17`

                If (LEqual (Arg0, 0x12))
                {

 256B9: A0 0B 93 68 0A 12                                // ...h..

                    Store (EC18, Local0)
                }


 256BF: 70 45 43 31 38 60                                // pEC18`

                If (LEqual (Arg0, 0x13))
                {

 256C5: A0 0B 93 68 0A 13                                // ...h..

                    Store (EC19, Local0)
                }


 256CB: 70 45 43 31 39 60                                // pEC19`

                If (LEqual (Arg0, 0x14))
                {

 256D1: A0 0B 93 68 0A 14                                // ...h..

                    Store (EC20, Local0)
                }


 256D7: 70 45 43 32 30 60                                // pEC20`

                If (LEqual (Arg0, 0x15))
                {

 256DD: A0 0B 93 68 0A 15                                // ...h..

                    Store (EC21, Local0)
                }


 256E3: 70 45 43 32 31 60                                // pEC21`

                If (LEqual (Arg0, 0x16))
                {

 256E9: A0 0B 93 68 0A 16                                // ...h..

                    Store (EC22, Local0)
                }


 256EF: 70 45 43 32 32 60                                // pEC22`

                If (LEqual (Arg0, 0x17))
                {

 256F5: A0 0B 93 68 0A 17                                // ...h..

                    Store (EC23, Local0)
                }


 256FB: 70 45 43 32 33 60                                // pEC23`

                If (LEqual (Arg0, 0x18))
                {

 25701: A0 0B 93 68 0A 18                                // ...h..

                    Store (EC24, Local0)
                }


 25707: 70 45 43 32 34 60                                // pEC24`

                If (LEqual (Arg0, 0x19))
                {

 2570D: A0 0B 93 68 0A 19                                // ...h..

                    Store (EC25, Local0)
                }


 25713: 70 45 43 32 35 60                                // pEC25`

                If (LEqual (Arg0, 0x1A))
                {

 25719: A0 0B 93 68 0A 1A                                // ...h..

                    Store (EC26, Local0)
                }


 2571F: 70 45 43 32 36 60                                // pEC26`

                If (LEqual (Arg0, 0x1B))
                {

 25725: A0 0B 93 68 0A 1B                                // ...h..

                    Store (EC27, Local0)
                }


 2572B: 70 45 43 32 37 60                                // pEC27`

                If (LEqual (Arg0, 0x1C))
                {

 25731: A0 0B 93 68 0A 1C                                // ...h..

                    Store (EC28, Local0)
                }


 25737: 70 45 43 32 38 60                                // pEC28`

                If (LEqual (Arg0, 0x1D))
                {

 2573D: A0 0B 93 68 0A 1D                                // ...h..

                    Store (EC29, Local0)
                }


 25743: 70 45 43 32 39 60                                // pEC29`

                If (LEqual (Arg0, 0x1E))
                {

 25749: A0 0B 93 68 0A 1E                                // ...h..

                    Store (EC30, Local0)
                }


 2574F: 70 45 43 33 30 60                                // pEC30`

                If (LEqual (Arg0, 0x1F))
                {

 25755: A0 0B 93 68 0A 1F                                // ...h..

                    Store (EC31, Local0)
                }


 2575B: 70 45 43 33 31 60                                // pEC31`

                If (LEqual (Arg0, 0x20))
                {

 25761: A0 0B 93 68 0A 20                                // ...h. 

                    Store (EC32, Local0)
                }


 25767: 70 45 43 33 32 60                                // pEC32`

                If (LEqual (Arg0, 0x21))
                {

 2576D: A0 0B 93 68 0A 21                                // ...h.!

                    Store (EC33, Local0)
                }


 25773: 70 45 43 33 33 60                                // pEC33`

                If (LEqual (Arg0, 0x22))
                {

 25779: A0 0B 93 68 0A 22                                // ...h."

                    Store (EC34, Local0)
                }


 2577F: 70 45 43 33 34 60                                // pEC34`

                If (LEqual (Arg0, 0x23))
                {

 25785: A0 0B 93 68 0A 23                                // ...h.#

                    Store (EC35, Local0)
                }


 2578B: 70 45 43 33 35 60                                // pEC35`

                If (LEqual (Arg0, 0x24))
                {

 25791: A0 0B 93 68 0A 24                                // ...h.$

                    Store (EC36, Local0)
                }


 25797: 70 45 43 33 36 60                                // pEC36`

                If (LEqual (Arg0, 0x25))
                {

 2579D: A0 0B 93 68 0A 25                                // ...h.%

                    Store (EC37, Local0)
                }


 257A3: 70 45 43 33 37 60                                // pEC37`

                If (LEqual (Arg0, 0x26))
                {

 257A9: A0 0B 93 68 0A 26                                // ...h.&

                    Store (EC38, Local0)
                }


 257AF: 70 45 43 33 38 60                                // pEC38`

                If (LEqual (Arg0, 0x27))
                {

 257B5: A0 0B 93 68 0A 27                                // ...h.'

                    Store (EC39, Local0)
                }


 257BB: 70 45 43 33 39 60                                // pEC39`

                If (LEqual (Arg0, 0x28))
                {

 257C1: A0 0B 93 68 0A 28                                // ...h.(

                    Store (EC40, Local0)
                }


 257C7: 70 45 43 34 30 60                                // pEC40`

                If (LEqual (Arg0, 0x29))
                {

 257CD: A0 0B 93 68 0A 29                                // ...h.)

                    Store (EC41, Local0)
                }


 257D3: 70 45 43 34 31 60                                // pEC41`

                If (LEqual (Arg0, 0x2A))
                {

 257D9: A0 0B 93 68 0A 2A                                // ...h.*

                    Store (EC42, Local0)
                }


 257DF: 70 45 43 34 32 60                                // pEC42`

                If (LEqual (Arg0, 0x2B))
                {

 257E5: A0 0B 93 68 0A 2B                                // ...h.+

                    Store (EC43, Local0)
                }


 257EB: 70 45 43 34 33 60                                // pEC43`

                If (LEqual (Arg0, 0x2C))
                {

 257F1: A0 0B 93 68 0A 2C                                // ...h.,

                    Store (EC44, Local0)
                }


 257F7: 70 45 43 34 34 60                                // pEC44`

                If (LEqual (Arg0, 0x2D))
                {

 257FD: A0 0B 93 68 0A 2D                                // ...h.-

                    Store (EC45, Local0)
                }


 25803: 70 45 43 34 35 60                                // pEC45`

                If (LEqual (Arg0, 0x2E))
                {

 25809: A0 0B 93 68 0A 2E                                // ...h..

                    Store (EC46, Local0)
                }


 2580F: 70 45 43 34 36 60                                // pEC46`

                If (LEqual (Arg0, 0x2F))
                {

 25815: A0 0B 93 68 0A 2F                                // ...h./

                    Store (EC47, Local0)
                }


 2581B: 70 45 43 34 37 60                                // pEC47`

                If (LEqual (Arg0, 0x30))
                {

 25821: A0 0B 93 68 0A 30                                // ...h.0

                    Store (EC48, Local0)
                }


 25827: 70 45 43 34 38 60                                // pEC48`

                If (LEqual (Arg0, 0x31))
                {

 2582D: A0 0B 93 68 0A 31                                // ...h.1

                    Store (EC49, Local0)
                }


 25833: 70 45 43 34 39 60                                // pEC49`

                If (LEqual (Arg0, 0x32))
                {

 25839: A0 0B 93 68 0A 32                                // ...h.2

                    Store (EC50, Local0)
                }


 2583F: 70 45 43 35 30 60                                // pEC50`

                If (LEqual (Arg0, 0x33))
                {

 25845: A0 0B 93 68 0A 33                                // ...h.3

                    Store (EC51, Local0)
                }


 2584B: 70 45 43 35 31 60                                // pEC51`

                If (LEqual (Arg0, 0x34))
                {

 25851: A0 0B 93 68 0A 34                                // ...h.4

                    Store (EC52, Local0)
                }


 25857: 70 45 43 35 32 60                                // pEC52`

                If (LEqual (Arg0, 0x35))
                {

 2585D: A0 0B 93 68 0A 35                                // ...h.5

                    Store (EC53, Local0)
                }


 25863: 70 45 43 35 33 60                                // pEC53`

                If (LEqual (Arg0, 0x36))
                {

 25869: A0 0B 93 68 0A 36                                // ...h.6

                    Store (EC54, Local0)
                }


 2586F: 70 45 43 35 34 60                                // pEC54`

                If (LEqual (Arg0, 0x37))
                {

 25875: A0 0B 93 68 0A 37                                // ...h.7

                    Store (EC55, Local0)
                }


 2587B: 70 45 43 35 35 60                                // pEC55`

                If (LEqual (Arg0, 0x38))
                {

 25881: A0 0B 93 68 0A 38                                // ...h.8

                    Store (EC56, Local0)
                }


 25887: 70 45 43 35 36 60                                // pEC56`

                If (LEqual (Arg0, 0x51))
                {

 2588D: A0 0B 93 68 0A 51                                // ...h.Q

                    Store (EC81, Local0)
                }


 25893: 70 45 43 38 31 60                                // pEC81`

                If (LEqual (Arg0, 0x80))
                {

 25899: A0 0B 93 68 0A 80                                // ...h..

                    Store (EC80, Local0)
                }


 2589F: 70 45 43 38 30 60                                // pEC80`

                If (LEqual (Arg0, 0x81))
                {

 258A5: A0 0B 93 68 0A 81                                // ...h..

                    Store (EC81, Local0)
                }


 258AB: 70 45 43 38 31 60                                // pEC81`

                If (LEqual (Arg0, 0x82))
                {

 258B1: A0 0B 93 68 0A 82                                // ...h..

                    Store (EC82, Local0)
                }


 258B7: 70 45 43 38 32 60                                // pEC82`

                If (LEqual (Arg0, 0x83))
                {

 258BD: A0 0B 93 68 0A 83                                // ...h..

                    Store (EC83, Local0)
                }


 258C3: 70 45 43 38 33 60                                // pEC83`

                If (LEqual (Arg0, 0x84))
                {

 258C9: A0 0B 93 68 0A 84                                // ...h..

                    Store (EC84, Local0)
                }


 258CF: 70 45 43 38 34 60                                // pEC84`

                If (LEqual (Arg0, 0x85))
                {

 258D5: A0 0B 93 68 0A 85                                // ...h..

                    Store (EC85, Local0)
                }


 258DB: 70 45 43 38 35 60                                // pEC85`

                If (LEqual (Arg0, 0x86))
                {

 258E1: A0 0B 93 68 0A 86                                // ...h..

                    Store (EC86, Local0)
                }


 258E7: 70 45 43 38 36 60                                // pEC86`

                If (LEqual (Arg0, 0x87))
                {

 258ED: A0 0B 93 68 0A 87                                // ...h..

                    Store (EC87, Local0)
                }


 258F3: 70 45 43 38 37 60                                // pEC87`

                If (LEqual (Arg0, 0x88))
                {

 258F9: A0 0B 93 68 0A 88                                // ...h..

                    Store (EC88, Local0)
                }


 258FF: 70 45 43 38 38 60                                // pEC88`

                If (LEqual (Arg0, 0x89))
                {

 25905: A0 0B 93 68 0A 89                                // ...h..

                    Store (EC89, Local0)
                }


 2590B: 70 45 43 38 39 60                                // pEC89`

                If (LEqual (Arg0, 0x8A))
                {

 25911: A0 0B 93 68 0A 8A                                // ...h..

                    Store (EC8A, Local0)
                }


 25917: 70 45 43 38 41 60                                // pEC8A`

                If (LEqual (Arg0, 0x8B))
                {

 2591D: A0 0B 93 68 0A 8B                                // ...h..

                    Store (EC8B, Local0)
                }


 25923: 70 45 43 38 42 60                                // pEC8B`

                If (LEqual (Arg0, 0x8C))
                {

 25929: A0 0B 93 68 0A 8C                                // ...h..

                    Store (EC8C, Local0)
                }


 2592F: 70 45 43 38 43 60                                // pEC8C`

                If (LEqual (Arg0, 0x8D))
                {

 25935: A0 0B 93 68 0A 8D                                // ...h..

                    Store (EC8D, Local0)
                }


 2593B: 70 45 43 38 44 60                                // pEC8D`

                If (LEqual (Arg0, 0x8E))
                {

 25941: A0 0B 93 68 0A 8E                                // ...h..

                    Store (EC8E, Local0)
                }


 25947: 70 45 43 38 45 60                                // pEC8E`

                If (LEqual (Arg0, 0x8F))
                {

 2594D: A0 0B 93 68 0A 8F                                // ...h..

                    Store (EC8F, Local0)
                }


 25953: 70 45 43 38 46 60                                // pEC8F`

                If (LEqual (Arg0, 0x90))
                {

 25959: A0 0B 93 68 0A 90                                // ...h..

                    Store (EC90, Local0)
                }


 2595F: 70 45 43 39 30 60                                // pEC90`

                If (LEqual (Arg0, 0x91))
                {

 25965: A0 0B 93 68 0A 91                                // ...h..

                    Store (EC91, Local0)
                }


 2596B: 70 45 43 39 31 60                                // pEC91`

                If (LEqual (Arg0, 0x92))
                {

 25971: A0 0B 93 68 0A 92                                // ...h..

                    Store (EC92, Local0)
                }


 25977: 70 45 43 39 32 60                                // pEC92`

                If (LEqual (Arg0, 0x93))
                {

 2597D: A0 0B 93 68 0A 93                                // ...h..

                    Store (EC93, Local0)
                }


 25983: 70 45 43 39 33 60                                // pEC93`

                If (LEqual (Arg0, 0x94))
                {

 25989: A0 0B 93 68 0A 94                                // ...h..

                    Store (EC94, Local0)
                }


 2598F: 70 45 43 39 34 60                                // pEC94`

                If (LEqual (Arg0, 0x95))
                {

 25995: A0 0B 93 68 0A 95                                // ...h..

                    Store (EC95, Local0)
                }


 2599B: 70 45 43 39 35 60                                // pEC95`

                If (LEqual (Arg0, 0x96))
                {

 259A1: A0 0B 93 68 0A 96                                // ...h..

                    Store (EC96, Local0)
                }


 259A7: 70 45 43 39 36 60                                // pEC96`

                If (LEqual (Arg0, 0x97))
                {

 259AD: A0 0B 93 68 0A 97                                // ...h..

                    Store (EC97, Local0)
                }


 259B3: 70 45 43 39 37 60                                // pEC97`

                If (LEqual (Arg0, 0x98))
                {

 259B9: A0 0B 93 68 0A 98                                // ...h..

                    Store (EC98, Local0)
                }


 259BF: 70 45 43 39 38 60                                // pEC98`

                If (LEqual (Arg0, 0x99))
                {

 259C5: A0 0B 93 68 0A 99                                // ...h..

                    Store (EC99, Local0)
                }


 259CB: 70 45 43 39 39 60                                // pEC99`

                If (LEqual (Arg0, 0x9A))
                {

 259D1: A0 0B 93 68 0A 9A                                // ...h..

                    Store (EC9A, Local0)
                }


 259D7: 70 45 43 39 41 60                                // pEC9A`

                If (LEqual (Arg0, 0x9B))
                {

 259DD: A0 0B 93 68 0A 9B                                // ...h..

                    Store (EC9B, Local0)
                }


 259E3: 70 45 43 39 42 60                                // pEC9B`

                If (LEqual (Arg0, 0x9C))
                {

 259E9: A0 0B 93 68 0A 9C                                // ...h..

                    Store (EC9C, Local0)
                }


 259EF: 70 45 43 39 43 60                                // pEC9C`

                If (LEqual (Arg0, 0x9D))
                {

 259F5: A0 0B 93 68 0A 9D                                // ...h..

                    Store (EC9D, Local0)
                }


 259FB: 70 45 43 39 44 60                                // pEC9D`

                If (LEqual (Arg0, 0x9E))
                {

 25A01: A0 0B 93 68 0A 9E                                // ...h..

                    Store (EC9E, Local0)
                }


 25A07: 70 45 43 39 45 60                                // pEC9E`

                If (LEqual (Arg0, 0x9F))
                {

 25A0D: A0 0B 93 68 0A 9F                                // ...h..

                    Store (EC9F, Local0)
                }


 25A13: 70 45 43 39 46 60                                // pEC9F`

                If (LEqual (Arg0, 0xA0))
                {

 25A19: A0 0B 93 68 0A A0                                // ...h..

                    Store (ECA0, Local0)
                }


 25A1F: 70 45 43 41 30 60                                // pECA0`

                If (LEqual (Arg0, 0xA1))
                {

 25A25: A0 0B 93 68 0A A1                                // ...h..

                    Store (ECA1, Local0)
                }


 25A2B: 70 45 43 41 31 60                                // pECA1`

                If (LEqual (Arg0, 0xA2))
                {

 25A31: A0 0B 93 68 0A A2                                // ...h..

                    Store (ECA2, Local0)
                }


 25A37: 70 45 43 41 32 60                                // pECA2`

                If (LEqual (Arg0, 0xA3))
                {

 25A3D: A0 0B 93 68 0A A3                                // ...h..

                    Store (ECA3, Local0)
                }


 25A43: 70 45 43 41 33 60                                // pECA3`

                If (LEqual (Arg0, 0xA4))
                {

 25A49: A0 0B 93 68 0A A4                                // ...h..

                    Store (ECA4, Local0)
                }


 25A4F: 70 45 43 41 34 60                                // pECA4`

                If (LEqual (Arg0, 0xA5))
                {

 25A55: A0 0B 93 68 0A A5                                // ...h..

                    Store (ECA5, Local0)
                }


 25A5B: 70 45 43 41 35 60                                // pECA5`

                If (LEqual (Arg0, 0xA6))
                {

 25A61: A0 0B 93 68 0A A6                                // ...h..

                    Store (ECA6, Local0)
                }


 25A67: 70 45 43 41 36 60                                // pECA6`

                If (LEqual (Arg0, 0xA7))
                {

 25A6D: A0 0B 93 68 0A A7                                // ...h..

                    Store (ECA7, Local0)
                }


 25A73: 70 45 43 41 37 60                                // pECA7`

                If (LEqual (Arg0, 0xA8))
                {

 25A79: A0 0B 93 68 0A A8                                // ...h..

                    Store (ECA8, Local0)
                }


 25A7F: 70 45 43 41 38 60                                // pECA8`

                If (LEqual (Arg0, 0xA9))
                {

 25A85: A0 0B 93 68 0A A9                                // ...h..

                    Store (ECA9, Local0)
                }


 25A8B: 70 45 43 41 39 60                                // pECA9`

                If (LEqual (Arg0, 0xAA))
                {

 25A91: A0 0B 93 68 0A AA                                // ...h..

                    Store (ECAA, Local0)
                }


 25A97: 70 45 43 41 41 60                                // pECAA`

                If (LEqual (Arg0, 0xAB))
                {

 25A9D: A0 0B 93 68 0A AB                                // ...h..

                    Store (ECAB, Local0)
                }


 25AA3: 70 45 43 41 42 60                                // pECAB`

                If (LEqual (Arg0, 0xAC))
                {

 25AA9: A0 0B 93 68 0A AC                                // ...h..

                    Store (ECAC, Local0)
                }


 25AAF: 70 45 43 41 43 60                                // pECAC`

                If (LEqual (Arg0, 0xAD))
                {

 25AB5: A0 0B 93 68 0A AD                                // ...h..

                    Store (ECAD, Local0)
                }


 25ABB: 70 45 43 41 44 60                                // pECAD`

                If (LEqual (Arg0, 0xAE))
                {

 25AC1: A0 0B 93 68 0A AE                                // ...h..

                    Store (ECAE, Local0)
                }


 25AC7: 70 45 43 41 45 60                                // pECAE`

                If (LEqual (Arg0, 0xAF))
                {

 25ACD: A0 0B 93 68 0A AF                                // ...h..

                    Store (ECAF, Local0)
                }


 25AD3: 70 45 43 41 46 60                                // pECAF`

                If (LEqual (Arg0, 0xB0))
                {

 25AD9: A0 0B 93 68 0A B0                                // ...h..

                    Store (ECB0, Local0)
                }

                Release (ECMX)

 25ADF: 70 45 43 42 30 60 5B 27 45 43 4D 58              // pECB0`['ECMX

                Return (Local0)
            }


 25AEB: A4 60                                            // .`

            Method (ECR2, 1, NotSerialized)
            {
                Store (ECR1 (Arg0), Local0)
                Increment (Arg0)
                ShiftLeft (ECR1 (Arg0), 0x08, Local1)
                Add (Local1, Local0, Local0)

 25AED: 14 1E 45 43 52 32 01 70 45 43 52 31 68 60 75 68  // ..ECR2.pECR1h`uh
 25AFD: 79 45 43 52 31 68 0A 08 61 72 61 60 60           // yECR1h..ara``

                Return (Local0)
            }


 25B0A: A4 60                                            // .`

            Method (ECW1, 2, NotSerialized)
            {

 25B0C: 14 4B 37 45 43 57 31 02                          // .K7ECW1.

                If (LEqual (ECRD, Zero))
                {
                    EISC (0x81, Arg0, Arg1)

 25B14: A0 11 93 45 43 52 44 00 45 49 53 43 0A 81 68 69  // ...ECRD.EISC..hi

                    Return (Zero)
                }

                Acquire (ECMX, 0xFFFF)

 25B24: A4 00 5B 23 45 43 4D 58 FF FF                    // ..[#ECMX..

                If (LEqual (Arg0, Zero))
                {

 25B2E: A0 0A 93 68 00                                   // ...h.

                    Store (Arg1, EC00)
                }


 25B33: 70 69 45 43 30 30                                // piEC00

                If (LEqual (Arg0, One))
                {

 25B39: A0 0A 93 68 01                                   // ...h.

                    Store (Arg1, EC01)
                }


 25B3E: 70 69 45 43 30 31                                // piEC01

                If (LEqual (Arg0, 0x02))
                {

 25B44: A0 0B 93 68 0A 02                                // ...h..

                    Store (Arg1, EC02)
                }


 25B4A: 70 69 45 43 30 32                                // piEC02

                If (LEqual (Arg0, 0x03))
                {

 25B50: A0 0B 93 68 0A 03                                // ...h..

                    Store (Arg1, EC03)
                }


 25B56: 70 69 45 43 30 33                                // piEC03

                If (LEqual (Arg0, 0x04))
                {

 25B5C: A0 0B 93 68 0A 04                                // ...h..

                    Store (Arg1, EC04)
                }


 25B62: 70 69 45 43 30 34                                // piEC04

                If (LEqual (Arg0, 0x05))
                {

 25B68: A0 0B 93 68 0A 05                                // ...h..

                    Store (Arg1, EC05)
                }


 25B6E: 70 69 45 43 30 35                                // piEC05

                If (LEqual (Arg0, 0x06))
                {

 25B74: A0 0B 93 68 0A 06                                // ...h..

                    Store (Arg1, EC06)
                }


 25B7A: 70 69 45 43 30 36                                // piEC06

                If (LEqual (Arg0, 0x07))
                {

 25B80: A0 0B 93 68 0A 07                                // ...h..

                    Store (Arg1, EC07)
                }


 25B86: 70 69 45 43 30 37                                // piEC07

                If (LEqual (Arg0, 0x08))
                {

 25B8C: A0 0B 93 68 0A 08                                // ...h..

                    Store (Arg1, EC08)
                }


 25B92: 70 69 45 43 30 38                                // piEC08

                If (LEqual (Arg0, 0x09))
                {

 25B98: A0 0B 93 68 0A 09                                // ...h..

                    Store (Arg1, EC09)
                }


 25B9E: 70 69 45 43 30 39                                // piEC09

                If (LEqual (Arg0, 0x0A))
                {

 25BA4: A0 0B 93 68 0A 0A                                // ...h..

                    Store (Arg1, EC10)
                }


 25BAA: 70 69 45 43 31 30                                // piEC10

                If (LEqual (Arg0, 0x0B))
                {

 25BB0: A0 0B 93 68 0A 0B                                // ...h..

                    Store (Arg1, EC11)
                }


 25BB6: 70 69 45 43 31 31                                // piEC11

                If (LEqual (Arg0, 0x0C))
                {

 25BBC: A0 0B 93 68 0A 0C                                // ...h..

                    Store (Arg1, EC12)
                }


 25BC2: 70 69 45 43 31 32                                // piEC12

                If (LEqual (Arg0, 0x10))
                {

 25BC8: A0 0B 93 68 0A 10                                // ...h..

                    Store (Arg1, EC16)
                }


 25BCE: 70 69 45 43 31 36                                // piEC16

                If (LEqual (Arg0, 0x11))
                {

 25BD4: A0 0B 93 68 0A 11                                // ...h..

                    Store (Arg1, EC17)
                }


 25BDA: 70 69 45 43 31 37                                // piEC17

                If (LEqual (Arg0, 0x32))
                {

 25BE0: A0 0B 93 68 0A 32                                // ...h.2

                    Store (Arg1, EC50)
                }


 25BE6: 70 69 45 43 35 30                                // piEC50

                If (LEqual (Arg0, 0x33))
                {

 25BEC: A0 0B 93 68 0A 33                                // ...h.3

                    Store (Arg1, EC51)
                }


 25BF2: 70 69 45 43 35 31                                // piEC51

                If (LEqual (Arg0, 0x34))
                {

 25BF8: A0 0B 93 68 0A 34                                // ...h.4

                    Store (Arg1, EC52)
                }


 25BFE: 70 69 45 43 35 32                                // piEC52

                If (LEqual (Arg0, 0x35))
                {

 25C04: A0 0B 93 68 0A 35                                // ...h.5

                    Store (Arg1, EC53)
                }


 25C0A: 70 69 45 43 35 33                                // piEC53

                If (LEqual (Arg0, 0x36))
                {

 25C10: A0 0B 93 68 0A 36                                // ...h.6

                    Store (Arg1, EC54)
                }


 25C16: 70 69 45 43 35 34                                // piEC54

                If (LEqual (Arg0, 0x37))
                {

 25C1C: A0 0B 93 68 0A 37                                // ...h.7

                    Store (Arg1, EC55)
                }


 25C22: 70 69 45 43 35 35                                // piEC55

                If (LEqual (Arg0, 0x38))
                {

 25C28: A0 0B 93 68 0A 38                                // ...h.8

                    Store (Arg1, EC56)
                }


 25C2E: 70 69 45 43 35 36                                // piEC56

                If (LEqual (Arg0, 0x80))
                {

 25C34: A0 0B 93 68 0A 80                                // ...h..

                    Store (Arg1, EC80)
                }


 25C3A: 70 69 45 43 38 30                                // piEC80

                If (LEqual (Arg0, 0x81))
                {

 25C40: A0 0B 93 68 0A 81                                // ...h..

                    Store (Arg1, EC81)
                }


 25C46: 70 69 45 43 38 31                                // piEC81

                If (LEqual (Arg0, 0x82))
                {

 25C4C: A0 0B 93 68 0A 82                                // ...h..

                    Store (Arg1, EC82)
                }


 25C52: 70 69 45 43 38 32                                // piEC82

                If (LEqual (Arg0, 0x83))
                {

 25C58: A0 0B 93 68 0A 83                                // ...h..

                    Store (Arg1, EC83)
                }


 25C5E: 70 69 45 43 38 33                                // piEC83

                If (LEqual (Arg0, 0x84))
                {

 25C64: A0 0B 93 68 0A 84                                // ...h..

                    Store (Arg1, EC84)
                }


 25C6A: 70 69 45 43 38 34                                // piEC84

                If (LEqual (Arg0, 0x85))
                {

 25C70: A0 0B 93 68 0A 85                                // ...h..

                    Store (Arg1, EC85)
                }


 25C76: 70 69 45 43 38 35                                // piEC85

                If (LEqual (Arg0, 0x86))
                {

 25C7C: A0 0B 93 68 0A 86                                // ...h..

                    Store (Arg1, EC86)
                }


 25C82: 70 69 45 43 38 36                                // piEC86

                If (LEqual (Arg0, 0x87))
                {

 25C88: A0 0B 93 68 0A 87                                // ...h..

                    Store (Arg1, EC87)
                }


 25C8E: 70 69 45 43 38 37                                // piEC87

                If (LEqual (Arg0, 0x88))
                {

 25C94: A0 0B 93 68 0A 88                                // ...h..

                    Store (Arg1, EC88)
                }


 25C9A: 70 69 45 43 38 38                                // piEC88

                If (LEqual (Arg0, 0x89))
                {

 25CA0: A0 0B 93 68 0A 89                                // ...h..

                    Store (Arg1, EC89)
                }


 25CA6: 70 69 45 43 38 39                                // piEC89

                If (LEqual (Arg0, 0x8A))
                {

 25CAC: A0 0B 93 68 0A 8A                                // ...h..

                    Store (Arg1, EC8A)
                }


 25CB2: 70 69 45 43 38 41                                // piEC8A

                If (LEqual (Arg0, 0x8B))
                {

 25CB8: A0 0B 93 68 0A 8B                                // ...h..

                    Store (Arg1, EC8B)
                }


 25CBE: 70 69 45 43 38 42                                // piEC8B

                If (LEqual (Arg0, 0x8C))
                {

 25CC4: A0 0B 93 68 0A 8C                                // ...h..

                    Store (Arg1, EC8C)
                }


 25CCA: 70 69 45 43 38 43                                // piEC8C

                If (LEqual (Arg0, 0x8D))
                {

 25CD0: A0 0B 93 68 0A 8D                                // ...h..

                    Store (Arg1, EC8D)
                }


 25CD6: 70 69 45 43 38 44                                // piEC8D

                If (LEqual (Arg0, 0x8E))
                {

 25CDC: A0 0B 93 68 0A 8E                                // ...h..

                    Store (Arg1, EC8E)
                }


 25CE2: 70 69 45 43 38 45                                // piEC8E

                If (LEqual (Arg0, 0x8F))
                {

 25CE8: A0 0B 93 68 0A 8F                                // ...h..

                    Store (Arg1, EC8F)
                }


 25CEE: 70 69 45 43 38 46                                // piEC8F

                If (LEqual (Arg0, 0x90))
                {

 25CF4: A0 0B 93 68 0A 90                                // ...h..

                    Store (Arg1, EC90)
                }


 25CFA: 70 69 45 43 39 30                                // piEC90

                If (LEqual (Arg0, 0x91))
                {

 25D00: A0 0B 93 68 0A 91                                // ...h..

                    Store (Arg1, EC91)
                }


 25D06: 70 69 45 43 39 31                                // piEC91

                If (LEqual (Arg0, 0x92))
                {

 25D0C: A0 0B 93 68 0A 92                                // ...h..

                    Store (Arg1, EC92)
                }


 25D12: 70 69 45 43 39 32                                // piEC92

                If (LEqual (Arg0, 0x93))
                {

 25D18: A0 0B 93 68 0A 93                                // ...h..

                    Store (Arg1, EC93)
                }


 25D1E: 70 69 45 43 39 33                                // piEC93

                If (LEqual (Arg0, 0x94))
                {

 25D24: A0 0B 93 68 0A 94                                // ...h..

                    Store (Arg1, EC94)
                }


 25D2A: 70 69 45 43 39 34                                // piEC94

                If (LEqual (Arg0, 0x95))
                {

 25D30: A0 0B 93 68 0A 95                                // ...h..

                    Store (Arg1, EC95)
                }


 25D36: 70 69 45 43 39 35                                // piEC95

                If (LEqual (Arg0, 0x96))
                {

 25D3C: A0 0B 93 68 0A 96                                // ...h..

                    Store (Arg1, EC96)
                }


 25D42: 70 69 45 43 39 36                                // piEC96

                If (LEqual (Arg0, 0x97))
                {

 25D48: A0 0B 93 68 0A 97                                // ...h..

                    Store (Arg1, EC97)
                }


 25D4E: 70 69 45 43 39 37                                // piEC97

                If (LEqual (Arg0, 0x98))
                {

 25D54: A0 0B 93 68 0A 98                                // ...h..

                    Store (Arg1, EC98)
                }


 25D5A: 70 69 45 43 39 38                                // piEC98

                If (LEqual (Arg0, 0x99))
                {

 25D60: A0 0B 93 68 0A 99                                // ...h..

                    Store (Arg1, EC99)
                }


 25D66: 70 69 45 43 39 39                                // piEC99

                If (LEqual (Arg0, 0x9A))
                {

 25D6C: A0 0B 93 68 0A 9A                                // ...h..

                    Store (Arg1, EC9A)
                }


 25D72: 70 69 45 43 39 41                                // piEC9A

                If (LEqual (Arg0, 0x9B))
                {

 25D78: A0 0B 93 68 0A 9B                                // ...h..

                    Store (Arg1, EC9B)
                }


 25D7E: 70 69 45 43 39 42                                // piEC9B

                If (LEqual (Arg0, 0x9C))
                {

 25D84: A0 0B 93 68 0A 9C                                // ...h..

                    Store (Arg1, EC9C)
                }


 25D8A: 70 69 45 43 39 43                                // piEC9C

                If (LEqual (Arg0, 0x9D))
                {

 25D90: A0 0B 93 68 0A 9D                                // ...h..

                    Store (Arg1, EC9D)
                }


 25D96: 70 69 45 43 39 44                                // piEC9D

                If (LEqual (Arg0, 0x9E))
                {

 25D9C: A0 0B 93 68 0A 9E                                // ...h..

                    Store (Arg1, EC9E)
                }


 25DA2: 70 69 45 43 39 45                                // piEC9E

                If (LEqual (Arg0, 0x9F))
                {

 25DA8: A0 0B 93 68 0A 9F                                // ...h..

                    Store (Arg1, EC9F)
                }


 25DAE: 70 69 45 43 39 46                                // piEC9F

                If (LEqual (Arg0, 0xA0))
                {

 25DB4: A0 0B 93 68 0A A0                                // ...h..

                    Store (Arg1, ECA0)
                }


 25DBA: 70 69 45 43 41 30                                // piECA0

                If (LEqual (Arg0, 0xA1))
                {

 25DC0: A0 0B 93 68 0A A1                                // ...h..

                    Store (Arg1, ECA1)
                }


 25DC6: 70 69 45 43 41 31                                // piECA1

                If (LEqual (Arg0, 0xA2))
                {

 25DCC: A0 0B 93 68 0A A2                                // ...h..

                    Store (Arg1, ECA2)
                }


 25DD2: 70 69 45 43 41 32                                // piECA2

                If (LEqual (Arg0, 0xA3))
                {

 25DD8: A0 0B 93 68 0A A3                                // ...h..

                    Store (Arg1, ECA3)
                }


 25DDE: 70 69 45 43 41 33                                // piECA3

                If (LEqual (Arg0, 0xA4))
                {

 25DE4: A0 0B 93 68 0A A4                                // ...h..

                    Store (Arg1, ECA4)
                }


 25DEA: 70 69 45 43 41 34                                // piECA4

                If (LEqual (Arg0, 0xA5))
                {

 25DF0: A0 0B 93 68 0A A5                                // ...h..

                    Store (Arg1, ECA5)
                }


 25DF6: 70 69 45 43 41 35                                // piECA5

                If (LEqual (Arg0, 0xA6))
                {

 25DFC: A0 0B 93 68 0A A6                                // ...h..

                    Store (Arg1, ECA6)
                }


 25E02: 70 69 45 43 41 36                                // piECA6

                If (LEqual (Arg0, 0xA7))
                {

 25E08: A0 0B 93 68 0A A7                                // ...h..

                    Store (Arg1, ECA7)
                }


 25E0E: 70 69 45 43 41 37                                // piECA7

                If (LEqual (Arg0, 0xA8))
                {

 25E14: A0 0B 93 68 0A A8                                // ...h..

                    Store (Arg1, ECA8)
                }


 25E1A: 70 69 45 43 41 38                                // piECA8

                If (LEqual (Arg0, 0xA9))
                {

 25E20: A0 0B 93 68 0A A9                                // ...h..

                    Store (Arg1, ECA9)
                }


 25E26: 70 69 45 43 41 39                                // piECA9

                If (LEqual (Arg0, 0xAA))
                {

 25E2C: A0 0B 93 68 0A AA                                // ...h..

                    Store (Arg1, ECAA)
                }


 25E32: 70 69 45 43 41 41                                // piECAA

                If (LEqual (Arg0, 0xAB))
                {

 25E38: A0 0B 93 68 0A AB                                // ...h..

                    Store (Arg1, ECAB)
                }


 25E3E: 70 69 45 43 41 42                                // piECAB

                If (LEqual (Arg0, 0xAC))
                {

 25E44: A0 0B 93 68 0A AC                                // ...h..

                    Store (Arg1, ECAC)
                }


 25E4A: 70 69 45 43 41 43                                // piECAC

                If (LEqual (Arg0, 0xAD))
                {

 25E50: A0 0B 93 68 0A AD                                // ...h..

                    Store (Arg1, ECAD)
                }


 25E56: 70 69 45 43 41 44                                // piECAD

                If (LEqual (Arg0, 0xAE))
                {

 25E5C: A0 0B 93 68 0A AE                                // ...h..

                    Store (Arg1, ECAE)
                }


 25E62: 70 69 45 43 41 45                                // piECAE

                If (LEqual (Arg0, 0xAF))
                {

 25E68: A0 0B 93 68 0A AF                                // ...h..

                    Store (Arg1, ECAF)
                }


 25E6E: 70 69 45 43 41 46                                // piECAF

                If (LEqual (Arg0, 0xB0))
                {

 25E74: A0 0B 93 68 0A B0                                // ...h..

                    Store (Arg1, ECB0)
                }

                Release (ECMX)

 25E7A: 70 69 45 43 42 30 5B 27 45 43 4D 58              // piECB0['ECMX

                Return (Zero)
            }
        }
    }


 25E86: A4 00                                            // ..

    Scope (\)
    {

 25E88: 10 4F 55 5C 00                                   // .OU\.

        Name (ECRD, Zero)

 25E8D: 08 45 43 52 44 00                                // .ECRD.

        Mutex (ECMX, 0x01)

 25E93: 5B 01 45 43 4D 58 01                             // [.ECMX.

        Mutex (ECSX, 0x01)

 25E9A: 5B 01 45 43 53 58 01                             // [.ECSX.

        Method (EISC, 3, NotSerialized)
        {
            Acquire (ECSX, 0xFFFF)

 25EA1: 14 4B 06 45 49 53 43 03 5B 23 45 43 53 58 FF FF  // .K.EISC.[#ECSX..

            Name (ECIB, 
 25EB1: 08 45 43 49 42                                   // .ECIB

Buffer (0x04){})

 25EB6: 11 03 0A 04                                      // ....

            CreateByteField (ECIB, Zero, ECIC)

 25EBA: 8C 45 43 49 42 00 45 43 49 43                    // .ECIB.ECIC

            CreateByteField (ECIB, One, ECP1)

 25EC4: 8C 45 43 49 42 01 45 43 50 31                    // .ECIB.ECP1

            CreateByteField (ECIB, 0x02, ECP2)
            Store (Arg0, ECIC)
            Store (Arg1, ECP1)
            Store (Arg2, ECP2)
            Store (GENS (0x08, ECIB, 
 25ECE: 8C 45 43 49 42 0A 02 45 43 50 32 70 68 45 43 49  // .ECIB..ECP2phECI
 25EDE: 43 70 69 45 43 50 31 70 6A 45 43 50 32 70 47 45  // CpiECP1pjECP2pGE
 25EEE: 4E 53 0A 08 45 43 49 42                          // NS..ECIB

SizeOf (ECIB)), ECIB)
            Store (ECIC, Local0)
            Release (ECSX)

 25EF6: 87 45 43 49 42 45 43 49 42 70 45 43 49 43 60 5B  // .ECIBECIBpECIC`[
 25F06: 27 45 43 53 58                                   // 'ECSX

            Return (Local0)
        }


 25F0B: A4 60                                            // .`

        Method (ECBT, 2, NotSerialized)
        {
            Store (\_SB.PCI0.LPCB.ECDV.ECR1 (Arg0), Local0)
            And (Local0, Arg1, Local0)

 25F0D: 14 2B 45 43 42 54 02 70 5C 2F 05 5F 53 42 5F 50  // .+ECBT.p\/._SB_P
 25F1D: 43 49 30 4C 50 43 42 45 43 44 56 45 43 52 31 68  // CI0LPCBECDVECR1h
 25F2D: 60 7B 60 69 60                                   // `{`i`

            If (Local0)
            {

 25F32: A0 04 60                                         // ..`

                Return (One)
            }


 25F35: A4 01                                            // ..

            Return (Zero)
        }


 25F37: A4 00                                            // ..

        Method (ECB1, 2, NotSerialized)
        {
            Store (ECBT (Arg0, Arg1), Local0)

 25F39: 14 15 45 43 42 31 02 70 45 43 42 54 68 69 60     // ..ECB1.pECBThi`

            If (Local0)
            {

 25F48: A0 04 60                                         // ..`

                Return (Zero)
            }


 25F4B: A4 00                                            // ..

            Return (One)
        }


 25F4D: A4 01                                            // ..

        Method (ECRB, 1, NotSerialized)
        {

 25F4F: 14 1F 45 43 52 42 01                             // ..ECRB.

            Return (\_SB.PCI0.LPCB.ECDV.ECR1 (Arg0))
        }


 25F56: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
 25F66: 45 43 44 56 45 43 52 31 68                       // ECDVECR1h

        Method (ECRW, 1, NotSerialized)
        {

 25F6F: 14 1F 45 43 52 57 01                             // ..ECRW.

            Return (\_SB.PCI0.LPCB.ECDV.ECR2 (Arg0))
        }


 25F76: A4 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
 25F86: 45 43 44 56 45 43 52 32 68                       // ECDVECR2h

        Method (ECWB, 2, NotSerialized)
        {
            \_SB.PCI0.LPCB.ECDV.ECW1 (Arg0, Arg1)
        }


 25F8F: 14 1F 45 43 57 42 02 5C 2F 05 5F 53 42 5F 50 43  // ..ECWB.\/._SB_PC
 25F9F: 49 30 4C 50 43 42 45 43 44 56 45 43 57 31 68 69  // I0LPCBECDVECW1hi

        Method (ECG1, 0, NotSerialized)
        {

 25FAF: 14 0D 45 43 47 31 00                             // ..ECG1.

            Return (ECRW (0x07))
        }


 25FB6: A4 45 43 52 57 0A 07                             // .ECRW..

        Method (ECGD, 0, NotSerialized)
        {

 25FBD: 14 0D 45 43 47 44 00                             // ..ECGD.

            Return (ECRW (0x0B))
        }


 25FC4: A4 45 43 52 57 0A 0B                             // .ECRW..

        Method (ECG2, 0, NotSerialized)
        {

 25FCB: 14 0D 45 43 47 32 00                             // ..ECG2.

            Return (ECBT (Zero, One))
        }


 25FD2: A4 45 43 42 54 00 01                             // .ECBT..

        Method (ECG3, 0, NotSerialized)
        {

 25FD9: 14 0E 45 43 47 33 00                             // ..ECG3.

            Return (ECBT (Zero, 0x10))
        }


 25FE0: A4 45 43 42 54 00 0A 10                          // .ECBT...

        Method (ECG4, 0, NotSerialized)
        {

 25FE8: 14 0F 45 43 47 34 00                             // ..ECG4.

            Return (ECBT (0x05, 0x04))
        }


 25FEF: A4 45 43 42 54 0A 05 0A 04                       // .ECBT....

        Method (ECGC, 0, NotSerialized)
        {

 25FF8: 14 0E 45 43 47 43 00                             // ..ECGC.

            Return (ECBT (0x05, One))
        }


 25FFF: A4 45 43 42 54 0A 05 01                          // .ECBT...

        Method (ECG5, 0, NotSerialized)
        {
            Store (ECRB (0x06), Local0)

 26007: 14 10 45 43 47 35 00 70 45 43 52 42 0A 06 60     // ..ECG5.pECRB..`

            Return (Local0)
        }


 26016: A4 60                                            // .`

        Method (ECG7, 0, NotSerialized)
        {
            Store (ECRB (0x09), Local0)

 26018: 14 10 45 43 47 37 00 70 45 43 52 42 0A 09 60     // ..ECG7.pECRB..`

            Return (Local0)
        }


 26027: A4 60                                            // .`

        Mutex (ECM1, 0x01)

 26029: 5B 01 45 43 4D 31 01                             // [.ECM1.

        Method (ECG6, 2, NotSerialized)
        {
            Acquire (ECM1, 0xFFFF)
            Store (ECG2 (), Local2)
            ECWB (0x03, Arg0)
            Store (ECRB (0x10), 
 26030: 14 4C 08 45 43 47 36 02 5B 23 45 43 4D 31 FF FF  // .L.ECG6.[#ECM1..
 26040: 70 45 43 47 32 62 45 43 57 42 0A 03 68 70 45 43  // pECG2bECWB..hpEC
 26050: 52 42 0A 10                                      // RB..

Index (Arg1, Zero))
            Store (ECRW (0x12), Local0)

 26054: 88 69 00 00 70 45 43 52 57 0A 12 60              // .i..pECRW..`

            If (LEqual (Local0, Zero))
            {

 26060: A0 06 93 60 00                                   // ...`.

                Increment (Local0)
            }

 26065: 75 60                                            // u`

            ElseIf
 26067: A1 2B                                            // .+

 (
 26069: A0 10 92                                         // ...

LNotEqual (Local2, Zero))
            {

 2606C: 93 62 00                                         // .b.

                If (And (Local0, 0x8000))
                {

 2606F: A0 0A 7B 60 0B 00 80 00                          // ..{`....

                    Store (Ones, Local0)
                }
            }

 26077: 70 FF 60                                         // p.`

            ElseIf
 2607A: A1 18                                            // ..

 (And (Local0, 0x8000))
            {
                Subtract (Zero, Local0, Local0)

 2607C: A0 11 7B 60 0B 00 80 00 74 00 60 60              // ..{`....t.``

                And (Local0, 0xFFFF, Local0)
            }

 26088: 7B 60 0B FF FF 60                                // {`...`

            Else
            {

 2608E: A1 04                                            // ..

                Store (Ones, Local0)
            }

            Store (Local0, 
 26090: 70 FF 60 70 60                                   // p.`p`

Index (Arg1, One))
            Store (ECRW (0x16), Local0)
            Store (Local0, 
 26095: 88 69 01 00 70 45 43 52 57 0A 16 60 70 60        // .i..pECRW..`p`

Index (Arg1, 0x02))
            Store (ECRW (0x14), Local0)
            Store (Local0, 
 260A3: 88 69 0A 02 00 70 45 43 52 57 0A 14 60 70 60     // .i...pECRW..`p`

Index (Arg1, 0x03))

 260B2: 88 69 0A 03 00                                   // .i...

            Release (ECM1)
        }


 260B7: 5B 27 45 43 4D 31                                // ['ECM1

        Method (ECM8, 1, NotSerialized)
        {
            ECWB (0x04, Arg0)

 260BD: 14 42 06 45 43 4D 38 01 45 43 57 42 0A 04 68     // .B.ECM8.ECWB..h

            Name (LBUF, 
 260CC: 08 4C 42 55 46                                   // .LBUF

Buffer (0x21){})
            Store (Zero, Local0)

 260D1: 11 03 0A 21 70 00 60                             // ...!p.`

            While (LLess (Local0, 0x20))
            {
                Store (ECRB (0x2A), Local1)
                Store (Local1, 
 260D8: A2 1E 95 60 0A 20 70 45 43 52 42 0A 2A 61 70 61  // ...`. pECRB.*apa

Index (LBUF, Local0))

 260E8: 88 4C 42 55 46 60 00                             // .LBUF`.

                If (LEqual (Local1, Zero))
                {

 260EF: A0 05 93 61 00                                   // ...a.

                    Break
                }


 260F4: A5                                               // .

                Increment (Local0)
            }


 260F5: 75 60                                            // u`

            If (
 260F7: A0 10 92                                         // ...

LNotEqual (Local1, Zero))
            {
                Store (Zero, 
 260FA: 93 61 00 70 00                                   // .a.p.

Index (LBUF, Local0))

 260FF: 88 4C 42 55 46 60 00                             // .LBUF`.

                Increment (Local0)
            }

            Increment (Local0)

 26106: 75 60 75 60                                      // u`u`

            Name (OBUF, 
 2610A: 08 4F 42 55 46                                   // .OBUF

Buffer (Local0){})
            Store (LBUF, OBUF)

 2610F: 11 02 60 70 4C 42 55 46 4F 42 55 46              // ..`pLBUFOBUF

            Return (OBUF)
        }


 2611B: A4 4F 42 55 46                                   // .OBUF

        Name (BS01, 
 26120: 08 42 53 30 31                                   // .BS01

Package (0x03)
        {
            One, 
            0xFF, 
            "Unknown"
        })

 26125: 12 0E 03 01 0A FF 0D 55 6E 6B 6E 6F 77 6E 00     // .......Unknown.

        Name (BS02, 
 26134: 08 42 53 30 32                                   // .BS02

Package (0x0F)
        {
            0x03, 
            0x02, 
            "Sony", 
            0x03, 
            "Sanyo", 
            0x04, 
            "Panasonic", 
            0x07, 
            "SMP", 
            0x08, 
            "Motorola", 
            0x06, 
            "Samsung SDI", 
            0xFF, 
            "Unknown"
        })

 26139: 12 40 05 0F 0A 03 0A 02 0D 53 6F 6E 79 00 0A 03  // .@.......Sony...
 26149: 0D 53 61 6E 79 6F 00 0A 04 0D 50 61 6E 61 73 6F  // .Sanyo....Panaso
 26159: 6E 69 63 00 0A 07 0D 53 4D 50 00 0A 08 0D 4D 6F  // nic....SMP....Mo
 26169: 74 6F 72 6F 6C 61 00 0A 06 0D 53 61 6D 73 75 6E  // torola....Samsun
 26179: 67 20 53 44 49 00 0A FF 0D 55 6E 6B 6E 6F 77 6E  // g SDI....Unknown
 26189: 00                                               // .

        Name (BS03, 
 2618A: 08 42 53 30 33                                   // .BS03

Package (0x13)
        {
            0x02, 
            One, 
            "PbAc", 
            0x02, 
            "LION", 
            0x03, 
            "NiCd", 
            0x04, 
            "NiMH", 
            0x05, 
            "NiZn", 
            0x06, 
            "RAM", 
            0x07, 
            "ZnAR", 
            0x08, 
            "LiP", 
            0xFF, 
            "Unknown"
        })

 2618F: 12 4D 04 13 0A 02 01 0D 50 62 41 63 00 0A 02 0D  // .M......PbAc....
 2619F: 4C 49 4F 4E 00 0A 03 0D 4E 69 43 64 00 0A 04 0D  // LION....NiCd....
 261AF: 4E 69 4D 48 00 0A 05 0D 4E 69 5A 6E 00 0A 06 0D  // NiMH....NiZn....
 261BF: 52 41 4D 00 0A 07 0D 5A 6E 41 52 00 0A 08 0D 4C  // RAM....ZnAR....L
 261CF: 69 50 00 0A FF 0D 55 6E 6B 6E 6F 77 6E 00        // iP....Unknown.

        Method (ECU0, 2, NotSerialized)
        {
            Store (One, Local0)
            Store (Zero, Local1)

 261DD: 14 47 04 45 43 55 30 02 70 01 60 70 00 61        // .G.ECU0.p.`p.a

            While (
 261EB: A2 29 92                                         // .).

LNotEqual (Local1, 0xFF))
            {
                Store (DerefOf (
 261EE: 93 61 0A FF 70 83                                // .a..p.

Index (Arg0, Local0)), Local1)

 261F4: 88 68 60 00 61                                   // .h`.a

                If (LEqual (Arg1, Local1))
                {
                    Increment (Local0)
                    Store (DerefOf (
 261F9: A0 16 93 69 61 75 60 70 83                       // ...iau`p.

Index (Arg0, Local0)), Local2)
                    Store (XPTB (Local2), Local2)

 26202: 88 68 60 00 62 70 58 50 54 42 62 62              // .h`.bpXPTBbb

                    Return (Local2)
                }


 2620E: A4 62                                            // .b

                Add (Local0, 0x02, Local0)
            }

            Store (DerefOf (
 26210: 72 60 0A 02 60 70 83                             // r`..`p.

Index (Arg0, Zero)), Local2)
            Store (ECM8 (Local2), Local2)

 26217: 88 68 00 00 62 70 45 43 4D 38 62 62              // .h..bpECM8bb

            Return (Local2)
        }


 26223: A4 62                                            // .b

        Method (ECG9, 2, NotSerialized)
        {
            Acquire (ECM1, 0xFFFF)
            ECWB (0x03, Arg0)
            Store (One, 
 26225: 14 4F 0D 45 43 47 39 02 5B 23 45 43 4D 31 FF FF  // .O.ECG9.[#ECM1..
 26235: 45 43 57 42 0A 03 68 70 01                       // ECWB..hp.

Index (Arg1, Zero))
            Store (ECRW (0x20), Local0)
            Store (Local0, 
 2623E: 88 69 00 00 70 45 43 52 57 0A 20 60 70 60        // .i..pECRW. `p`

Index (Arg1, One))
            Store (ECRW (0x1E), Local1)
            Store (Local1, 
 2624C: 88 69 01 00 70 45 43 52 57 0A 1E 61 70 61        // .i..pECRW..apa

Index (Arg1, 0x02))
            Store (One, 
 2625A: 88 69 0A 02 00 70 01                             // .i...p.

Index (Arg1, 0x03))
            Store (ECRW (0x22), Local2)
            Store (Local2, 
 26261: 88 69 0A 03 00 70 45 43 52 57 0A 22 62 70 62     // .i...pECRW."bpb

Index (Arg1, 0x04))
            Divide (Local0, 0x0A, Local5, Local3)
            Store (Local3, 
 26270: 88 69 0A 04 00 78 60 0A 0A 65 63 70 63           // .i...x`..ecpc

Index (Arg1, 0x05))
            Divide (Local0, 0x21, Local5, Local3)
            Store (Local3, 
 2627D: 88 69 0A 05 00 78 60 0A 21 65 63 70 63           // .i...x`.!ecpc

Index (Arg1, 0x06))
            Divide (Local0, 0x64, Local5, Local3)
            Store (Local3, 
 2628A: 88 69 0A 06 00 78 60 0A 64 65 63 70 63           // .i...x`.decpc

Index (Arg1, 0x07))
            Store (Local3, 
 26297: 88 69 0A 07 00 70 63                             // .i...pc

Index (Arg1, 0x08))
            Store (ECU0 (BS01, Zero), Local3)
            Store (Local3, 
 2629E: 88 69 0A 08 00 70 45 43 55 30 42 53 30 31 00 63  // .i...pECU0BS01.c
 262AE: 70 63                                            // pc

Index (Arg1, 0x09))
            Store (ECRW (0x26), Local3)
            Store (XPTS (Local3), Local3)
            Store (Local3, 
 262B0: 88 69 0A 09 00 70 45 43 52 57 0A 26 63 70 58 50  // .i...pECRW.&cpXP
 262C0: 54 53 63 63 70 63                                // TSccpc

Index (Arg1, 0x0A))
            Store (ECRB (0x29), Local3)
            Store (ECU0 (BS03, Local3), Local3)
            Store (Local3, 
 262C6: 88 69 0A 0A 00 70 45 43 52 42 0A 29 63 70 45 43  // .i...pECRB.)cpEC
 262D6: 55 30 42 53 30 33 63 63 70 63                    // U0BS03ccpc

Index (Arg1, 0x0B))
            Store (ECRB (0x28), Local3)
            Store (ECU0 (BS02, Local3), Local3)
            Store (Local3, 
 262E0: 88 69 0A 0B 00 70 45 43 52 42 0A 28 63 70 45 43  // .i...pECRB.(cpEC
 262F0: 55 30 42 53 30 32 63 63 70 63                    // U0BS02ccpc

Index (Arg1, 0x0C))

 262FA: 88 69 0A 0C 00                                   // .i...

            Release (ECM1)
        }


 262FF: 5B 27 45 43 4D 31                                // ['ECM1

        Method (ECGA, 0, NotSerialized)
        {
            Store (ECRB (0x2F), Local0)

 26305: 14 10 45 43 47 41 00 70 45 43 52 42 0A 2F 60     // ..ECGA.pECRB./`

            Return (Local0)
        }


 26314: A4 60                                            // .`

        Method (ECGB, 0, NotSerialized)
        {
            Store (ECRB (0x31), Local0)

 26316: 14 10 45 43 47 42 00 70 45 43 52 42 0A 31 60     // ..ECGB.pECRB.1`

            Return (Local0)
        }


 26325: A4 60                                            // .`

        Method (ECS1, 2, NotSerialized)
        {
            \_SB.SGOV (0x0103000A, Zero)
            \_SB.SGOV (0x0103000C, Zero)
            ECWB (0x02, Arg0)
        }


 26327: 14 2D 45 43 53 31 02 5C 2E 5F 53 42 5F 53 47 4F  // .-ECS1.\._SB_SGO
 26337: 56 0C 0A 00 03 01 00 5C 2E 5F 53 42 5F 53 47 4F  // V......\._SB_SGO
 26347: 56 0C 0C 00 03 01 00 45 43 57 42 0A 02 68        // V......ECWB..h

        Method (ECS2, 2, NotSerialized)
        {
            ECWB (One, Arg0)
            EISC (0x81, 0x16, Arg1)
        }


 26355: 14 15 45 43 53 32 02 45 43 57 42 01 68 45 49 53  // ..ECS2.ECWB.hEIS
 26365: 43 0A 81 0A 16 69                                // C....i

        Method (ECS6, 1, NotSerialized)
        {
            ECWB (0x06, Arg0)
        }


 2636B: 14 0D 45 43 53 36 01 45 43 57 42 0A 06 68        // ..ECS6.ECWB..h

        Method (ECS3, 0, NotSerialized)
        {
            ECWB (0x05, One)
        }


 26379: 14 0D 45 43 53 33 00 45 43 57 42 0A 05 01        // ..ECS3.ECWB...

        Mutex (QSEV, 0x01)

 26387: 5B 01 51 53 45 56 01                             // [.QSEV.

        Method (EC0A, 1, NotSerialized)
        {
            Acquire (QSEV, 0xFFFF)
            Store (ECRB (0x2B), Local1)
            Store (Zero, Local0)

 2638E: 14 3D 45 43 30 41 01 5B 23 51 53 45 56 FF FF 70  // .=EC0A.[#QSEV..p
 2639E: 45 43 52 42 0A 2B 61 70 00 60                    // ECRB.+ap.`

            While (LLess (Local0, Local1))
            {
                Store (ECRB (0x2C), Local2)

 263A8: A2 1B 95 60 61 70 45 43 52 42 0A 2C 62           // ...`apECRB.,b

                If (LLess (Local0, 
 263B5: A0 0C 95 60                                      // ...`

SizeOf (Arg0)))
                {
                    BBWR (Arg0, Local0, Local2)
                }


 263B9: 87 68 42 42 57 52 68 60 62                       // .hBBWRh`b

                Increment (Local0)
            }

            Release (QSEV)

 263C2: 75 60 5B 27 51 53 45 56                          // u`['QSEV

            Return (Arg0)
        }


 263CA: A4 68                                            // .h

        Method (ECS4, 1, NotSerialized)
        {
            ECWB (0x11, Arg0)
        }


 263CC: 14 0D 45 43 53 34 01 45 43 57 42 0A 11 68        // ..ECS4.ECWB..h

        Method (ECS5, 1, NotSerialized)
        {
            ECWB (0x10, Arg0)
        }
    }


 263DA: 14 0D 45 43 53 35 01 45 43 57 42 0A 10 68        // ..ECS5.ECWB..h

    Method (NEVT, 0, NotSerialized)
    {
        Store (ECG1 (), Local0)
        Store (ECGD (), Local1)
        Store (Add (ShiftLeft (Local1, 0x10), Local0), Local2)

 263E8: 14 45 35 4E 45 56 54 00 70 45 43 47 31 60 70 45  // .E5NEVT.pECG1`pE
 263F8: 43 47 44 61 70 72 79 61 0A 10 00 60 00 62        // CGDaprya...`.b

        If (And (Local1, 0x10))
        {

 26406: A0 42 04 7B 61 0A 10 00                          // .B.{a...

            If (LEqual (DDDR, One))
            {

 2640E: A0 3A 93 44 44 44 52 01                          // .:.DDDR.

                If (CondRefOf (\_SB.PCI0.LPCB.ECDV.DPNT))
                {
                    \_SB.PCI0.LPCB.ECDV.DPNT ()
                }
            }
        }


 26416: A0 32 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .2[.\/._SB_PCI0L
 26426: 50 43 42 45 43 44 56 44 50 4E 54 00 5C 2F 05 5F  // PCBECDVDPNT.\/._
 26436: 53 42 5F 50 43 49 30 4C 50 43 42 45 43 44 56 44  // SB_PCI0LPCBECDVD
 26446: 50 4E 54                                         // PNT

        If (And (Local1, One))
        {
            EV11 (Zero, Zero)
        }


 26449: A0 0B 7B 61 01 00 45 56 31 31 00 00              // ..{a..EV11..

        If (And (Local0, One))
        {
            EV6 (One, Zero)
        }


 26455: A0 0B 7B 60 01 00 45 56 36 5F 01 00              // ..{`..EV6_..

        If (And (Local0, 0x40))
        {
            EV6 (0x02, Zero)
        }


 26461: A0 0D 7B 60 0A 40 00 45 56 36 5F 0A 02 00        // ..{`.@.EV6_...

        If (And (Local0, 0x04))
        {
            Store (ECG3 (), Local3)

 2646F: A0 44 04 7B 60 0A 04 00 70 45 43 47 33 63        // .D.{`...pECG3c

            OperationRegion (PDW0, SystemMemory, 0xFDAE05B8, 0x04)

 2647D: 5B 80 50 44 57 30 00 0C B8 05 AE FD 0A 04        // [.PDW0........

            Field (PDW0, AnyAcc, NoLock, Preserve)
            {
                TEMP,   1, 
                Offset (0x04)
            }


 2648B: 5B 81 0D 50 44 57 30 00 54 45 4D 50 01 00 1F     // [..PDW0.TEMP...

            If (LEqual (Local3, One))
            {

 2649A: A0 0A 93 63 01                                   // ...c.

                Store (One, TEMP)
            }

 2649F: 70 01 54 45 4D 50                                // p.TEMP

            Else
            {

 264A5: A1 07                                            // ..

                Store (Zero, TEMP)
            }

            EV6 (0x03, Local3)
        }


 264A7: 70 00 54 45 4D 50 45 56 36 5F 0A 03 63           // p.TEMPEV6_..c

        If (And (Local0, 0x10))
        {
            Store (ECBT (Zero, 0x80), Local3)
            Store (ECRB (0x2D), Local4)
            EV12 (Local3, Local4)
        }


 264B4: A0 1D 7B 60 0A 10 00 70 45 43 42 54 00 0A 80 63  // ..{`...pECBT...c
 264C4: 70 45 43 52 42 0A 2D 64 45 56 31 32 63 64        // pECRB.-dEV12cd

        If (And (Local2, 0x00080000))
        {

 264D2: A0 4E 10 7B 62 0C 00 00 08 00 00                 // .N.{b......

            Name (HIDR, Zero)
            Store (Zero, HIDR)

 264DD: 08 48 49 44 52 00 70 00 48 49 44 52              // .HIDR.p.HIDR

            If (
 264E9: A0 35 92                                         // .5.

LGreaterEqual (OSYS, 0x07DF))
            {

 264EC: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                If (CondRefOf (\_SB.HIDD.BTLD))
                {

 264F4: A0 2A 5B 12 5C 2F 03 5F 53 42 5F 48 49 44 44 42  // .*[.\/._SB_HIDDB
 26504: 54 4C 44 00                                      // TLD.

                    If (\_SB.HIDD.BTLD)
                    {

 26508: A0 16 5C 2F 03 5F 53 42 5F 48 49 44 44 42 54 4C  // ..\/._SB_HIDDBTL
 26518: 44                                               // D

                        Store (One, HIDR)
                    }
                }
            }

            Store (ECBT (One, 0x04), Local3)

 26519: 70 01 48 49 44 52 70 45 43 42 54 01 0A 04 63     // p.HIDRpECBT...c

            If (Local3)
            {

 26528: A0 4C 05 63                                      // .L.c

                If (LAnd (CondRefOf (\_SB.HIDD), HIDR))
                {

 2652C: A0 20 90 5B 12 5C 2E 5F 53 42 5F 48 49 44 44 00  // . .[.\._SB_HIDD.
 2653C: 48 49 44 52                                      // HIDR

                    Notify (\_SB.HIDD, 0xCE)
                }

 26540: 86 5C 2E 5F 53 42 5F 48 49 44 44 0A CE           // .\._SB_HIDD..

                ElseIf
 2654D: A1 37                                            // .7

 (CondRefOf (\_SB.PCI0.LPCB.ECDV.VGBI))
                {

 2654F: A0 35 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .5[.\/._SB_PCI0L
 2655F: 50 43 42 45 43 44 56 56 47 42 49 00              // PCBECDVVGBI.

                    Notify (\_SB.PCI0.LPCB.ECDV.VGBI, 0xC0)
                }
            }

 2656B: 86 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
 2657B: 45 43 44 56 56 47 42 49 0A C0                    // ECDVVGBI..

            ElseIf
 26585: A1 4B 05                                         // .K.

 (LAnd (CondRefOf (\_SB.HIDD), HIDR))
            {

 26588: A0 20 90 5B 12 5C 2E 5F 53 42 5F 48 49 44 44 00  // . .[.\._SB_HIDD.
 26598: 48 49 44 52                                      // HIDR

                Notify (\_SB.HIDD, 0xCF)
            }

 2659C: 86 5C 2E 5F 53 42 5F 48 49 44 44 0A CF           // .\._SB_HIDD..

            ElseIf
 265A9: A1 37                                            // .7

 (CondRefOf (\_SB.PCI0.LPCB.ECDV.VGBI))
            {

 265AB: A0 35 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .5[.\/._SB_PCI0L
 265BB: 50 43 42 45 43 44 56 56 47 42 49 00              // PCBECDVVGBI.

                Notify (\_SB.PCI0.LPCB.ECDV.VGBI, 0xC1)
            }
        }


 265C7: 86 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .\/._SB_PCI0LPCB
 265D7: 45 43 44 56 56 47 42 49 0A C1                    // ECDVVGBI..

        If (And (Local0, 0x0100))
        {
            EV4 (0x0100, Zero)

 265E1: A0 27 7B 60 0B 00 01 00 45 56 34 5F 0B 00 01 00  // .'{`....EV4_....

            If (ECG4 ())
            {
                GENS (0x1C, One, Zero)
            }

 265F1: A0 0D 45 43 47 34 47 45 4E 53 0A 1C 01 00        // ..ECG4GENS....

            Else
            {
                GENS (0x1C, Zero, Zero)
            }
        }


 265FF: A1 09 47 45 4E 53 0A 1C 00 00                    // ..GENS....

        If (And (Local0, 0x0200))
        {
            EV4 (0x0200, Zero)
        }


 26609: A0 0F 7B 60 0B 00 02 00 45 56 34 5F 0B 00 02 00  // ..{`....EV4_....

        If (And (Local0, 0x0400))
        {
            EV4 (0x0400, Zero)
        }


 26619: A0 0F 7B 60 0B 00 04 00 45 56 34 5F 0B 00 04 00  // ..{`....EV4_....

        If (And (Local0, 0x0800))
        {
            EV4 (0x0800, Zero)
        }


 26629: A0 0F 7B 60 0B 00 08 00 45 56 34 5F 0B 00 08 00  // ..{`....EV4_....

        If (And (Local0, 0x4000))
        {
            Store (ECRB (0x30), Local3)

 26639: A0 1A 7B 60 0B 00 40 00 70 45 43 52 42 0A 30 63  // ..{`..@.pECRB.0c

            If (Local3)
            {
                EV13 (0x4000, Zero)
            }
        }


 26649: A0 0A 63 45 56 31 33 0B 00 40 00                 // ..cEV13..@.

        If (And (Local0, 0x8000))
        {
            Store (ECRB (0x2E), Local3)

 26654: A0 48 0A 7B 60 0B 00 80 00 70 45 43 52 42 0A 2E  // .H.{`....pECRB..
 26664: 63                                               // c

            If (LEqual (Local3, 0xD2))
            {

 26665: A0 1B 93 63 0A D2                                // ...c..

                Notify (\_SB.PCI0.PEG0.PEGP, 0xD2)
            }

 2666B: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 2667B: 50 45 47 50 0A D2                                // PEGP..

            ElseIf
 26681: A1 43 07                                         // .C.

 (LEqual (Local3, 0xD3))
            {

 26684: A0 1B 93 63 0A D3                                // ...c..

                Notify (\_SB.PCI0.PEG0.PEGP, 0xD3)
            }

 2668A: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 2669A: 50 45 47 50 0A D3                                // PEGP..

            ElseIf
 266A0: A1 44 05                                         // .D.

 (LEqual (Local3, 0xD4))
            {

 266A3: A0 1B 93 63 0A D4                                // ...c..

                Notify (\_SB.PCI0.PEG0.PEGP, 0xD4)
            }

 266A9: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 266B9: 50 45 47 50 0A D4                                // PEGP..

            ElseIf
 266BF: A1 35                                            // .5

 (LEqual (Local3, 0xD5))
            {

 266C1: A0 1B 93 63 0A D5                                // ...c..

                Notify (\_SB.PCI0.PEG0.PEGP, 0xD5)
            }

 266C7: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 266D7: 50 45 47 50 0A D5                                // PEGP..

            Else
            {

 266DD: A1 17                                            // ..

                Notify (\_SB.PCI0.PEG0.PEGP, 0xD1)
            }

            EV9 (0x8000, Local3)
        }


 266DF: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
 266EF: 50 45 47 50 0A D1 45 56 39 5F 0B 00 80 63        // PEGP..EV9_...c

        If (And (Local1, 0x0800))
        {
            Store (ECRB (0x51), Local2)

 266FD: A0 2A 7B 61 0B 00 08 00 70 45 43 52 42 0A 51 62  // .*{a....pECRB.Qb

            If (LEqual (Local2, One))
            {

 2670D: A0 1A 93 62 01                                   // ...b.

                Notify (\_SB.PCI0.GFX0.LCD, 0x88)
            }
        }


 26712: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
 26722: 4C 43 44 5F 0A 88                                // LCD_..

        If (And (Local0, 0x08))
        {
            PWCH ()
        }


 26728: A0 0A 7B 60 0A 08 00 50 57 43 48                 // ..{`...PWCH

        If (And (Local0, 0x80))
        {
            SMIE ()
        }
    }


 26733: A0 0A 7B 60 0A 80 00 53 4D 49 45                 // ..{`...SMIE

    Method (PWCH, 0, NotSerialized)
    {
        Store (ECG5 (), Local0)
        XOr (Local0, APRE, Local1)
        And (Local0, 0x2B, APRE)

 2673E: 14 41 0C 50 57 43 48 00 70 45 43 47 35 60 7F 60  // .A.PWCH.pECG5`.`
 2674E: 41 50 52 45 61 7B 60 0A 2B 41 50 52 45           // APREa{`.+APRE

        If (And (Local1, One))
        {
            EV14 (Zero, Zero)
        }

        And (APRE, 0x02, Local2)

 2675B: A0 0B 7B 61 01 00 45 56 31 34 00 00 7B 41 50 52  // ..{a..EV14..{APR
 2676B: 45 0A 02 62                                      // E..b

        If (And (Local1, 0x02))
        {

 2676F: A0 18 7B 61 0A 02 00                             // ..{a...

            If (Local2)
            {
                EV15 (One, Zero)
            }

 26776: A0 08 62 45 56 31 35 01 00                       // ..bEV15..

            Else
            {
                EV15 (0x02, Zero)
            }
        }


 2677F: A1 08 45 56 31 35 0A 02 00                       // ..EV15...

        If (And (Local1, 0x04))
        {

 26788: A0 10 7B 61 0A 04 00                             // ..{a...

            If (Local2)
            {
                EV15 (0x03, Zero)
            }
        }

        And (APRE, 0x08, Local2)

 2678F: A0 09 62 45 56 31 35 0A 03 00 7B 41 50 52 45 0A  // ..bEV15...{APRE.
 2679F: 08 62                                            // .b

        If (And (Local1, 0x08))
        {

 267A1: A0 18 7B 61 0A 08 00                             // ..{a...

            If (Local2)
            {
                EV15 (One, One)
            }

 267A8: A0 08 62 45 56 31 35 01 01                       // ..bEV15..

            Else
            {
                EV15 (0x02, One)
            }
        }


 267B1: A1 08 45 56 31 35 0A 02 01                       // ..EV15...

        If (And (Local1, 0x10))
        {

 267BA: A0 10 7B 61 0A 10 00                             // ..{a...

            If (Local2)
            {
                EV15 (0x03, One)
            }
        }

        And (APRE, 0x20, Local2)

 267C1: A0 09 62 45 56 31 35 0A 03 01 7B 41 50 52 45 0A  // ..bEV15...{APRE.
 267D1: 20 62                                            //  b

        If (And (Local1, 0x20))
        {

 267D3: A0 1A 7B 61 0A 20 00                             // ..{a. .

            If (Local2)
            {
                EV15 (One, 0x02)
            }

 267DA: A0 09 62 45 56 31 35 01 0A 02                    // ..bEV15...

            Else
            {
                EV15 (0x02, 0x02)
            }
        }


 267E4: A1 09 45 56 31 35 0A 02 0A 02                    // ..EV15....

        If (And (Local1, 0x40))
        {

 267EE: A0 11 7B 61 0A 40 00                             // ..{a.@.

            If (Local2)
            {
                EV15 (0x03, 0x02)
            }
        }
    }


 267F5: A0 0A 62 45 56 31 35 0A 03 0A 02                 // ..bEV15....

    Method (SMEE, 1, NotSerialized)
    {
        Store (Arg0, Local0)
        Store (GENS (0x11, Zero, Zero), Local0)

 26800: 14 46 05 53 4D 45 45 01 70 68 60 70 47 45 4E 53  // .F.SMEE.ph`pGENS
 26810: 0A 11 00 00 60                                   // ....`

        If (
 26815: A0 2A 92                                         // .*.

LGreaterEqual (\_SB.OSID (), 0x20))
        {

 26818: 95 5C 2E 5F 53 42 5F 4F 53 49 44 0A 20           // .\._SB_OSID. 

            If (And (Local0, 0x04))
            {
                EV5 (One, Zero)
            }


 26825: A0 0C 7B 60 0A 04 00 45 56 35 5F 01 00           // ..{`...EV5_..

            If (And (Local0, 0x02))
            {
                EV5 (0x02, Zero)
            }
        }


 26832: A0 0D 7B 60 0A 02 00 45 56 35 5F 0A 02 00        // ..{`...EV5_...

        If (And (Local0, 0x08))
        {
            Store (GENS (0x1D, Zero, Zero), Local0)
            EV16 (Local0, Zero)
        }
    }


 26840: A0 16 7B 60 0A 08 00 70 47 45 4E 53 0A 1D 00 00  // ..{`...pGENS....
 26850: 60 45 56 31 36 60 00                             // `EV16`.

    Method (SMIE, 0, NotSerialized)
    {
        Store (GENS (0x10, Zero, Zero), Local0)

 26857: 14 42 05 53 4D 49 45 00 70 47 45 4E 53 0A 10 00  // .B.SMIE.pGENS...
 26867: 00 60                                            // .`

        If (And (Local0, 0x04))
        {
            SMEE (Local0)
        }


 26869: A0 0B 7B 60 0A 04 00 53 4D 45 45 60              // ..{`...SMEE`

        If (And (Local0, 0x02))
        {
            EV7 (Zero, Zero)
        }


 26875: A0 0C 7B 60 0A 02 00 45 56 37 5F 00 00           // ..{`...EV7_..

        If (And (Local0, 0x08))
        {
            EV10 (Zero, Zero)
        }


 26882: A0 0C 7B 60 0A 08 00 45 56 31 30 00 00           // ..{`...EV10..

        If (And (Local0, 0x40))
        {
            EV8 (Zero, Zero)
        }


 2688F: A0 0C 7B 60 0A 40 00 45 56 38 5F 00 00           // ..{`.@.EV8_..

        If (
 2689C: A0 06                                            // ..

And (Local0, 0x80)){}

 2689E: 7B 60 0A 80 00                                   // {`...

        If (
 268A3: A0 06                                            // ..

And (Local0, 0x10)){}
    }


 268A5: 7B 60 0A 10 00                                   // {`...

    Scope (_SB.PCI0.LPCB)
    {

 268AA: 10 30 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43 42  // .0/._SB_PCI0LPCB

        Method (EINI, 2, NotSerialized)
        {

 268BA: 14 20 45 49 4E 49 02                             // . EINI.

            If (LEqual (Arg0, 0x02))
            {
                Store (ECG5 (), APRE)

 268C1: A0 19 93 68 0A 02 70 45 43 47 35 41 50 52 45     // ...h..pECG5APRE

                And (APRE, 0x2B, APRE)
            }
        }
    }


 268D0: 7B 41 50 52 45 0A 2B 41 50 52 45                 // {APRE.+APRE

    Scope (_GPE)
    {

 268DB: 10 47 05 5F 47 50 45                             // .G._GPE

        Method (_L09, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Store (ECG7 (), Local0)

 268E2: 14 40 05 5F 4C 30 39 00 70 45 43 47 37 60        // .@._L09.pECG7`

            If (And (Local0, 0x02))
            {
                Store (ECG3 (), Local1)
                EV6 (0x03, Local1)
            }

            Store (Zero, Local1)

 268F0: A0 13 7B 60 0A 02 00 70 45 43 47 33 61 45 56 36  // ..{`...pECG3aEV6
 26900: 5F 0A 03 61 70 00 61                             // _..ap.a

            If (LEqual (Local0, Zero))
            {

 26907: A0 07 93 60 00                                   // ...`.

                Store (One, Local1)
            }


 2690C: 70 01 61                                         // p.a

            If (And (Local0, One))
            {

 2690F: A0 08 7B 60 01 00                                // ..{`..

                Store (One, Local1)
            }


 26915: 70 01 61                                         // p.a

            If (LEqual (Local0, 0x04))
            {

 26918: A0 08 93 60 0A 04                                // ...`..

                Store (One, Local1)
            }


 2691E: 70 01 61                                         // p.a

            If (LEqual (Local0, 0x08))
            {

 26921: A0 08 93 60 0A 08                                // ...`..

                Store (One, Local1)
            }


 26927: 70 01 61                                         // p.a

            If (Local1)
            {
                EV6 (One, One)
            }
        }
    }


 2692A: A0 08 61 45 56 36 5F 01 01                       // ..aEV6_..

    Scope (_SB.PCI0.LPCB)
    {

 26933: 10 48 12 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .H./._SB_PCI0LPC
 26943: 42                                               // B

        Device (H_EC)
        {

 26944: 5B 82 46 11 48 5F 45 43                          // [.F.H_EC

            Name (_HID, EisaId ("PNP0C09"))  // _HID: Hardware ID

 2694C: 08 5F 48 49 44 0C 41 D0 0C 09                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

 26956: 08 5F 55 49 44 01                                // ._UID.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 2695C: 14 08 5F 53 54 41 00                             // .._STA.

                Return (Zero)
            }


 26963: A4 00                                            // ..

            Name (B1CC, Zero)

 26965: 08 42 31 43 43 00                                // .B1CC.

            Name (B1ST, Zero)

 2696B: 08 42 31 53 54 00                                // .B1ST.

            Name (B2CC, Zero)

 26971: 08 42 32 43 43 00                                // .B2CC.

            Name (B2ST, Zero)

 26977: 08 42 32 53 54 00                                // .B2ST.

            Name (CFAN, Zero)

 2697D: 08 43 46 41 4E 00                                // .CFAN.

            Name (CMDR, Zero)

 26983: 08 43 4D 44 52 00                                // .CMDR.

            Name (DOCK, Zero)

 26989: 08 44 4F 43 4B 00                                // .DOCK.

            Name (EJET, Zero)

 2698F: 08 45 4A 45 54 00                                // .EJET.

            Name (MCAP, Zero)

 26995: 08 4D 43 41 50 00                                // .MCAP.

            Name (PLMX, Zero)

 2699B: 08 50 4C 4D 58 00                                // .PLMX.

            Name (PECH, Zero)

 269A1: 08 50 45 43 48 00                                // .PECH.

            Name (PECL, Zero)

 269A7: 08 50 45 43 4C 00                                // .PECL.

            Name (PENV, Zero)

 269AD: 08 50 45 4E 56 00                                // .PENV.

            Name (PINV, Zero)

 269B3: 08 50 49 4E 56 00                                // .PINV.

            Name (PPSH, Zero)

 269B9: 08 50 50 53 48 00                                // .PPSH.

            Name (PPSL, Zero)

 269BF: 08 50 50 53 4C 00                                // .PPSL.

            Name (PSTP, Zero)

 269C5: 08 50 53 54 50 00                                // .PSTP.

            Name (RPWR, Zero)

 269CB: 08 52 50 57 52 00                                // .RPWR.

            Name (LIDS, Zero)

 269D1: 08 4C 49 44 53 00                                // .LIDS.

            Name (LSTE, Zero)

 269D7: 08 4C 53 54 45 00                                // .LSTE.

            Name (SLPC, Zero)

 269DD: 08 53 4C 50 43 00                                // .SLPC.

            Name (VPWR, Zero)

 269E3: 08 56 50 57 52 00                                // .VPWR.

            Name (WTMS, Zero)

 269E9: 08 57 54 4D 53 00                                // .WTMS.

            Name (AWT2, Zero)

 269EF: 08 41 57 54 32 00                                // .AWT2.

            Name (AWT1, Zero)

 269F5: 08 41 57 54 31 00                                // .AWT1.

            Name (AWT0, Zero)

 269FB: 08 41 57 54 30 00                                // .AWT0.

            Name (DLED, Zero)

 26A01: 08 44 4C 45 44 00                                // .DLED.

            Name (IBT1, Zero)

 26A07: 08 49 42 54 31 00                                // .IBT1.

            Name (ECAV, Zero)

 26A0D: 08 45 43 41 56 00                                // .ECAV.

            Name (SPT2, Zero)

 26A13: 08 53 50 54 32 00                                // .SPT2.

            Name (PB10, Zero)

 26A19: 08 50 42 31 30 00                                // .PB10.

            Name (IWCW, Zero)

 26A1F: 08 49 57 43 57 00                                // .IWCW.

            Name (IWCR, Zero)

 26A25: 08 49 57 43 52 00                                // .IWCR.

            Method (ECMD, 1, Serialized)
            {

 26A2B: 14 1C 45 43 4D 44 09                             // ..ECMD.

                If (ECON)
                {

 26A32: A0 15 45 43 4F 4E                                // ..ECON

                    While (CMDR)
                    {

 26A38: A2 09 43 4D 44 52                                // ..CMDR

                        Stall (0x14)
                    }


 26A3E: 5B 21 0A 14                                      // [!..

                    Store (Arg0, CMDR)
                }
            }


 26A42: 70 68 43 4D 44 52                                // phCMDR

            Method (ECRD, 1, Serialized)
            {

 26A48: 14 09 45 43 52 44 09                             // ..ECRD.

                Return (
 26A4F: A4                                               // .

DerefOf (Arg0))
            }


 26A50: 83 68                                            // .h

            Method (ECWT, 2, Serialized)
            {

 26A52: 14 09 45 43 57 54 0A                             // ..ECWT.

                Store (Arg0, Arg1)
            }
        }
    }


 26A59: 70 68 69                                         // phi

    Scope (_SB)
    {

 26A5C: 10 4B 37 5F 53 42 5F                             // .K7_SB_

        Mutex (ECAX, 0x01)

 26A63: 5B 01 45 43 41 58 01                             // [.ECAX.

        Method (EEAC, 2, Serialized)
        {
            Acquire (ECAX, 0xFFFF)

 26A6A: 14 4B 05 45 45 41 43 0A 5B 23 45 43 41 58 FF FF  // .K.EEAC.[#ECAX..

            Name (EABF, 
 26A7A: 08 45 41 42 46                                   // .EABF

Buffer (0x08){})

 26A7F: 11 03 0A 08                                      // ....

            CreateDWordField (EABF, Zero, ECST)

 26A83: 8A 45 41 42 46 00 45 43 53 54                    // .EABF.ECST

            CreateDWordField (EABF, 0x04, ECPA)
            Store (Arg0, ECST)
            Store (Arg1, ECPA)
            Store (GENS (0x07, EABF, 
 26A8D: 8A 45 41 42 46 0A 04 45 43 50 41 70 68 45 43 53  // .EABF..ECPAphECS
 26A9D: 54 70 69 45 43 50 41 70 47 45 4E 53 0A 07 45 41  // TpiECPApGENS..EA
 26AAD: 42 46                                            // BF

SizeOf (EABF)), EABF)
            Store (ECST, Local0)
            Release (ECAX)

 26AAF: 87 45 41 42 46 45 41 42 46 70 45 43 53 54 60 5B  // .EABFEABFpECST`[
 26ABF: 27 45 43 41 58                                   // 'ECAX

            Return (Local0)
        }


 26AC4: A4 60                                            // .`

        Scope (\_SB)
        {

 26AC6: 10 4E 0F 5C 5F 53 42 5F                          // .N.\_SB_

            Method (PPRW, 0, Serialized)
            {

 26ACE: 14 28 50 50 52 57 08                             // .(PPRW.

                Name (EPRW, 
 26AD5: 08 45 50 52 57                                   // .EPRW

Package (0x02)
                {
                    Zero, 
                    0x03
                })
                Store (EEAC (0x03, Zero), Local0)
                Store (Local0, 
 26ADA: 12 05 02 00 0A 03 70 45 45 41 43 0A 03 00 60 70  // ......pEEAC...`p
 26AEA: 60                                               // `

Index (EPRW, Zero))

 26AEB: 88 45 50 52 57 00 00                             // .EPRW..

                Return (EPRW)
            }


 26AF2: A4 45 50 52 57                                   // .EPRW

            Device (LID0)
            {

 26AF7: 5B 82 38 4C 49 44 30                             // [.8LID0

                Name (_HID, EisaId ("PNP0C0D"))  // _HID: Hardware ID

 26AFE: 08 5F 48 49 44 0C 41 D0 0C 0D                    // ._HID.A...

                Method (_LID, 0, NotSerialized)  // _LID: Lid Status
                {
                    Store (ECG3 (), Local0)

 26B08: 14 0E 5F 4C 49 44 00 70 45 43 47 33 60           // .._LID.pECG3`

                    Return (Local0)
                }


 26B15: A4 60                                            // .`

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

 26B17: 14 0B 5F 50 52 57 00                             // .._PRW.

                    Return (PPRW ())
                }


 26B1E: A4 50 50 52 57                                   // .PPRW

                Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                {
                    EEAC (0x02, Arg0)
                }
            }


 26B23: 14 0D 5F 50 53 57 01 45 45 41 43 0A 02 68        // .._PSW.EEAC..h

            Device (PBTN)
            {

 26B31: 5B 82 43 04 50 42 54 4E                          // [.C.PBTN

                Name (_HID, EisaId ("PNP0C0C"))  // _HID: Hardware ID

 26B39: 08 5F 48 49 44 0C 41 D0 0C 0C                    // ._HID.A...

                Name (PBST, One)

 26B43: 08 50 42 53 54 01                                // .PBST.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

 26B49: 14 13 5F 53 54 41 00                             // .._STA.

                    If (LEqual (PBST, One))
                    {

 26B50: A0 0A 93 50 42 53 54 01                          // ...PBST.

                        Return (0x0F)
                    }


 26B58: A4 0A 0F                                         // ...

                    Return (Zero)
                }


 26B5B: A4 00                                            // ..

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

 26B5D: 14 0B 5F 50 52 57 00                             // .._PRW.

                    Return (PPRW ())
                }


 26B64: A4 50 50 52 57                                   // .PPRW

                Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
                {
                    EEAC (One, Arg0)
                }
            }


 26B69: 14 0C 5F 50 53 57 01 45 45 41 43 01 68           // .._PSW.EEAC.h

            Device (SBTN)
            {

 26B76: 5B 82 0F 53 42 54 4E                             // [..SBTN

                Name (_HID, EisaId ("PNP0C0E"))  // _HID: Hardware ID
            }


 26B7D: 08 5F 48 49 44 0C 41 D0 0C 0E                    // ._HID.A...

            Method (BTNV, 2, NotSerialized)
            {

 26B87: 14 3D 42 54 4E 56 02                             // .=BTNV.

                If (LEqual (Arg0, One))
                {

 26B8E: A0 1C 93 68 01                                   // ...h.

                    If (LEqual (Arg1, Zero))
                    {

 26B93: A0 0B 93 69 00                                   // ...i.

                        Notify (PBTN, 0x80)
                    }


 26B98: 86 50 42 54 4E 0A 80                             // .PBTN..

                    If (LEqual (Arg1, One))
                    {

 26B9F: A0 0B 93 69 01                                   // ...i.

                        Notify (PBTN, 0x02)
                    }
                }


 26BA4: 86 50 42 54 4E 0A 02                             // .PBTN..

                If (LEqual (Arg0, 0x02))
                {

 26BAB: A0 0C 93 68 0A 02                                // ...h..

                    Notify (SBTN, 0x80)
                }


 26BB1: 86 53 42 54 4E 0A 80                             // .SBTN..

                If (LEqual (Arg0, 0x03))
                {

 26BB8: A0 0C 93 68 0A 03                                // ...h..

                    Notify (LID0, 0x80)
                }
            }
        }


 26BBE: 86 4C 49 44 30 0A 80                             // .LID0..

        Scope (\_SB)
        {

 26BC5: 10 43 07 5C 5F 53 42 5F                          // .C.\_SB_

            Device (AC)
            {

 26BCD: 5B 82 4C 05 41 43 5F 5F                          // [.L.AC__

                Name (_HID, "ACPI0003")  // _HID: Hardware ID

 26BD5: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 33 00     // ._HID.ACPI0003.

                Method (_PCL, 0, NotSerialized)  // _PCL: Power Consumer List
                {

 26BE4: 14 16 5F 50 43 4C 00                             // .._PCL.

                    Return (
 26BEB: A4                                               // .

Package (0x03)
                    {
                        _SB, 
                        BAT0, 
                        BAT1
                    })
                }


 26BEC: 12 0E 03 5F 53 42 5F 42 41 54 30 42 41 54 31     // ..._SB_BAT0BAT1

                Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
                {
                    Store (ECG5 (), Local0)
                    And (Local0, One, Local0)

 26BFB: 14 25 5F 50 53 52 00 70 45 43 47 35 60 7B 60 01  // .%_PSR.pECG5`{`.
 26C0B: 60                                               // `

                    If (
 26C0C: A0 12 92                                         // ...

LNotEqual (Local0, PWRS))
                    {
                        Store (Local0, PWRS)
                        PNOT ()
                    }


 26C0F: 93 60 50 57 52 53 70 60 50 57 52 53 50 4E 4F 54  // .`PWRSp`PWRSPNOT

                    Return (Local0)
                }


 26C1F: A4 60                                            // .`

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

 26C21: 14 09 5F 53 54 41 00                             // .._STA.

                    Return (0x0F)
                }
            }


 26C28: A4 0A 0F                                         // ...

            Method (ACEV, 2, NotSerialized)
            {

 26C2B: 14 0D 41 43 45 56 02                             // ..ACEV.

                Notify (AC, 0x80)
            }
        }


 26C32: 86 41 43 5F 5F 0A 80                             // .AC__..

        Scope (\_SB)
        {

 26C39: 10 4E 19 5C 5F 53 42 5F                          // .N.\_SB_

            Device (BAT0)
            {

 26C41: 5B 82 47 07 42 41 54 30                          // [.G.BAT0

                Name (_HID, EisaId ("PNP0C0A"))  // _HID: Hardware ID

 26C49: 08 5F 48 49 44 0C 41 D0 0C 0A                    // ._HID.A...

                Name (_UID, One)  // _UID: Unique ID

 26C53: 08 5F 55 49 44 01                                // ._UID.

                Name (_PCL, 
 26C59: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
                {
                    _SB
                })

 26C5E: 12 06 01 5F 53 42 5F                             // ..._SB_

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Store (ECG5 (), Local0)
                    And (Local0, 0x02, Local0)

 26C65: 14 1A 5F 53 54 41 00 70 45 43 47 35 60 7B 60 0A  // .._STA.pECG5`{`.
 26C75: 02 60                                            // .`

                    If (Local0)
                    {

 26C77: A0 05 60                                         // ..`

                        Return (0x1F)
                    }


 26C7A: A4 0A 1F                                         // ...

                    Return (0x0F)
                }


 26C7D: A4 0A 0F                                         // ...

                Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
                {

 26C80: 14 1C 5F 42 49 46 00                             // .._BIF.

                    Name (BIF0, 
 26C87: 08 42 49 46 30                                   // .BIF0

Package (0x0D){})
                    ECG9 (One, BIF0)

 26C8C: 12 02 0D 45 43 47 39 01 42 49 46 30              // ...ECG9.BIF0

                    Return (BIF0)
                }


 26C98: A4 42 49 46 30                                   // .BIF0

                Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                {

 26C9D: 14 1C 5F 42 53 54 00                             // .._BST.

                    Name (BST0, 
 26CA4: 08 42 53 54 30                                   // .BST0

Package (0x04){})
                    ECG6 (One, BST0)

 26CA9: 12 02 04 45 43 47 36 01 42 53 54 30              // ...ECG6.BST0

                    Return (BST0)
                }
            }


 26CB5: A4 42 53 54 30                                   // .BST0

            Device (BAT1)
            {

 26CBA: 5B 82 4A 08 42 41 54 31                          // [.J.BAT1

                Name (_HID, EisaId ("PNP0C0A"))  // _HID: Hardware ID

 26CC2: 08 5F 48 49 44 0C 41 D0 0C 0A                    // ._HID.A...

                Name (_UID, 0x02)  // _UID: Unique ID

 26CCC: 08 5F 55 49 44 0A 02                             // ._UID..

                Name (_PCL, 
 26CD3: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
                {
                    _SB
                })

 26CD8: 12 06 01 5F 53 42 5F                             // ..._SB_

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {
                    Store (EEAC (0x05, Zero), Local0)

 26CDF: 14 2A 5F 53 54 41 00 70 45 45 41 43 0A 05 00 60  // .*_STA.pEEAC...`

                    If (LLess (Local0, 0x02))
                    {

 26CEF: A0 07 95 60 0A 02                                // ...`..

                        Return (Zero)
                    }

                    Store (ECG5 (), Local0)
                    And (Local0, 0x08, Local0)

 26CF5: A4 00 70 45 43 47 35 60 7B 60 0A 08 60           // ..pECG5`{`..`

                    If (Local0)
                    {

 26D02: A0 05 60                                         // ..`

                        Return (0x1F)
                    }


 26D05: A4 0A 1F                                         // ...

                    Return (Zero)
                }


 26D08: A4 00                                            // ..

                Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
                {

 26D0A: 14 1D 5F 42 49 46 00                             // .._BIF.

                    Name (BIF1, 
 26D11: 08 42 49 46 31                                   // .BIF1

Package (0x0D){})
                    ECG9 (0x02, BIF1)

 26D16: 12 02 0D 45 43 47 39 0A 02 42 49 46 31           // ...ECG9..BIF1

                    Return (BIF1)
                }


 26D23: A4 42 49 46 31                                   // .BIF1

                Method (_BST, 0, NotSerialized)  // _BST: Battery Status
                {

 26D28: 14 1D 5F 42 53 54 00                             // .._BST.

                    Name (BST1, 
 26D2F: 08 42 53 54 31                                   // .BST1

Package (0x04){})
                    ECG6 (0x02, BST1)

 26D34: 12 02 04 45 43 47 36 0A 02 42 53 54 31           // ...ECG6..BST1

                    Return (BST1)
                }
            }


 26D41: A4 42 53 54 31                                   // .BST1

            Method (BTEV, 2, NotSerialized)
            {

 26D46: 14 4E 06 42 54 45 56 02                          // .N.BTEV.

                If (LEqual (Arg0, One))
                {

 26D4E: A0 1C 93 68 01                                   // ...h.

                    If (LEqual (Arg1, Zero))
                    {

 26D53: A0 0B 93 69 00                                   // ...i.

                        Notify (BAT0, 0x81)
                    }


 26D58: 86 42 41 54 30 0A 81                             // .BAT0..

                    If (LEqual (Arg1, One))
                    {

 26D5F: A0 0B 93 69 01                                   // ...i.

                        Notify (BAT1, 0x81)
                    }
                }


 26D64: 86 42 41 54 31 0A 81                             // .BAT1..

                If (LEqual (Arg0, 0x02))
                {

 26D6B: A0 2B 93 68 0A 02                                // .+.h..

                    If (LEqual (Arg1, Zero))
                    {
                        Notify (BAT0, 0x80)

 26D71: A0 12 93 69 00 86 42 41 54 30 0A 80              // ...i..BAT0..

                        Notify (BAT0, 0x81)
                    }


 26D7D: 86 42 41 54 30 0A 81                             // .BAT0..

                    If (LEqual (Arg1, One))
                    {
                        Notify (BAT1, 0x80)

 26D84: A0 12 93 69 01 86 42 41 54 31 0A 80              // ...i..BAT1..

                        Notify (BAT1, 0x81)
                    }
                }


 26D90: 86 42 41 54 31 0A 81                             // .BAT1..

                If (LEqual (Arg0, 0x03))
                {

 26D97: A0 1D 93 68 0A 03                                // ...h..

                    If (LEqual (Arg1, Zero))
                    {

 26D9D: A0 0B 93 69 00                                   // ...i.

                        Notify (BAT0, 0x80)
                    }


 26DA2: 86 42 41 54 30 0A 80                             // .BAT0..

                    If (LEqual (Arg1, One))
                    {

 26DA9: A0 0B 93 69 01                                   // ...i.

                        Notify (BAT1, 0x80)
                    }
                }
            }


 26DAE: 86 42 41 54 31 0A 80                             // .BAT1..

            Method (CBAT, 2, NotSerialized)
            {
                Notify (BAT0, 0x81)
                Notify (BAT1, 0x81)
                Store (ECG5 (), Local0)

 26DB5: 14 22 43 42 41 54 02 86 42 41 54 30 0A 81 86 42  // ."CBAT..BAT0...B
 26DC5: 41 54 31 0A 81 70 45 43 47 35 60                 // AT1..pECG5`

                And (Local0, 0x2B, APRE)
            }
        }
    }


 26DD0: 7B 60 0A 2B 41 50 52 45                          // {`.+APRE

    Scope (_SB)
    {

 26DD8: 10 40 33 5F 53 42 5F                             // .@3_SB_

        Device (HIDD)
        {

 26DDF: 5B 82 48 32 48 49 44 44                          // [.H2HIDD

            Name (_HID, "INT33D5")  // _HID: Hardware ID

 26DE7: 08 5F 48 49 44 0D 49 4E 54 33 33 44 35 00        // ._HID.INT33D5.

            Name (HBSY, Zero)

 26DF5: 08 48 42 53 59 00                                // .HBSY.

            Name (HIDX, Zero)

 26DFB: 08 48 49 44 58 00                                // .HIDX.

            Name (HMDE, Zero)

 26E01: 08 48 4D 44 45 00                                // .HMDE.

            Name (HRDY, Zero)

 26E07: 08 48 52 44 59 00                                // .HRDY.

            Name (BTLD, Zero)

 26E0D: 08 42 54 4C 44 00                                // .BTLD.

            Name (BTS1, Zero)

 26E13: 08 42 54 53 31 00                                // .BTS1.

            Method (_STA, 0, Serialized)  // _STA: Status
            {

 26E19: 14 16 5F 53 54 41 08                             // .._STA.

                If (
 26E20: A0 0B 92                                         // ...

LGreaterEqual (OIDE (), One))
                {

 26E23: 95 4F 49 44 45 01                                // .OIDE.

                    Return (0x0F)
                }

 26E29: A4 0A 0F                                         // ...

                Else
                {

 26E2C: A1 03                                            // ..

                    Return (Zero)
                }
            }


 26E2E: A4 00                                            // ..

            Method (HDDM, 0, Serialized)
            {

 26E30: 14 27 48 44 44 4D 08                             // .'HDDM.

                Name (DPKG, 
 26E37: 08 44 50 4B 47                                   // .DPKG

Package (0x04)
                {
                    0x11111111, 
                    0x22222222, 
                    0x33333333, 
                    0x44444444
                })

 26E3C: 12 16 04 0C 11 11 11 11 0C 22 22 22 22 0C 33 33  // ........."""".33
 26E4C: 33 33 0C 44 44 44 44                             // 33.DDDD

                Return (DPKG)
            }


 26E53: A4 44 50 4B 47                                   // .DPKG

            Method (HDEM, 0, Serialized)
            {
                Store (Zero, HBSY)

 26E58: 14 1E 48 44 45 4D 08 70 00 48 42 53 59           // ..HDEM.p.HBSY

                If (LEqual (HMDE, Zero))
                {

 26E65: A0 0C 93 48 4D 44 45 00                          // ...HMDE.

                    Return (HIDX)
                }


 26E6D: A4 48 49 44 58                                   // .HIDX

                Return (HMDE)
            }


 26E72: A4 48 4D 44 45                                   // .HMDE

            Method (HDMM, 0, Serialized)
            {

 26E77: 14 0B 48 44 4D 4D 08                             // ..HDMM.

                Return (HMDE)
            }


 26E7E: A4 48 4D 44 45                                   // .HMDE

            Method (HDSM, 1, Serialized)
            {

 26E83: 14 0C 48 44 53 4D 09                             // ..HDSM.

                Store (Arg0, HRDY)
            }


 26E8A: 70 68 48 52 44 59                                // phHRDY

            Method (HPEM, 1, Serialized)
            {
                Store (One, HBSY)

 26E90: 14 48 05 48 50 45 4D 09 70 01 48 42 53 59        // .H.HPEM.p.HBSY

                If (LEqual (HMDE, Zero))
                {

 26E9E: A0 0D 93 48 4D 44 45 00                          // ...HMDE.

                    Store (Arg0, HIDX)
                }

 26EA6: 70 68 48 49 44 58                                // phHIDX

                Else
                {

 26EAC: A1 07                                            // ..

                    Store (Arg0, HIDX)
                }

                Notify (HIDD, 0xC0)
                Store (Zero, Local0)

 26EAE: 70 68 48 49 44 58 86 48 49 44 44 0A C0 70 00 60  // phHIDX.HIDD..p.`

                While (LAnd (LLess (Local0, 0xFA), HBSY))
                {
                    Sleep (0x04)

 26EBE: A2 10 90 95 60 0A FA 48 42 53 59 5B 22 0A 04     // ....`..HBSY["..

                    Increment (Local0)
                }


 26ECD: 75 60                                            // u`

                If (LEqual (HBSY, One))
                {
                    Store (Zero, HBSY)
                    Store (Zero, HIDX)

 26ECF: A0 15 93 48 42 53 59 01 70 00 48 42 53 59 70 00  // ...HBSY.p.HBSYp.
 26EDF: 48 49 44 58                                      // HIDX

                    Return (One)
                }

 26EE3: A4 01                                            // ..

                Else
                {

 26EE5: A1 03                                            // ..

                    Return (Zero)
                }
            }


 26EE7: A4 00                                            // ..

            Method (BTNL, 0, Serialized)
            {

 26EE9: 14 44 06 42 54 4E 4C 08                          // .D.BTNL.

                If (CondRefOf (\_SB.PBTN.PBST))
                {

 26EF1: A0 2E 5B 12 5C 2F 03 5F 53 42 5F 50 42 54 4E 50  // ..[.\/._SB_PBTNP
 26F01: 42 53 54 00                                      // BST.

                    If (LEqual (S0ID, One))
                    {
                        Store (Zero, ^^PBTN.PBST)

 26F05: A0 1A 93 53 30 49 44 01 70 00 5E 5E 2E 50 42 54  // ...S0ID.p.^^.PBT
 26F15: 4E 50 42 53 54                                   // NPBST

                        Notify (PBTN, One)
                    }
                }

                Store (One, BTLD)

 26F1A: 86 50 42 54 4E 01 70 01 42 54 4C 44              // .PBTN.p.BTLD

                If (LEqual (AEAB, One))
                {

 26F26: A0 1F 93 41 45 41 42 01                          // ...AEAB.

                    If (LEqual (PBSD, One))
                    {

 26F2E: A0 0E 93 50 42 53 44 01                          // ...PBSD.

                        Store (0x1E, BTS1)
                    }

 26F36: 70 0A 1E 42 54 53 31                             // p..BTS1

                    Else
                    {

 26F3D: A1 08                                            // ..

                        Store (0x1F, BTS1)
                    }
                }

 26F3F: 70 0A 1F 42 54 53 31                             // p..BTS1

                Else
                {

 26F46: A1 07                                            // ..

                    Store (Zero, BTS1)
                }
            }


 26F48: 70 00 42 54 53 31                                // p.BTS1

            Method (BTNE, 1, Serialized)
            {

 26F4E: 14 2F 42 54 4E 45 09                             // ./BTNE.

                If (LEqual (AEAB, One))
                {

 26F55: A0 28 93 41 45 41 42 01                          // .(.AEAB.

                    If (LEqual (PBSD, One))
                    {

 26F5D: A0 11 93 50 42 53 44 01                          // ...PBSD.

                        Store (And (Arg0, 0x1E), BTS1)
                    }

 26F65: 70 7B 68 0A 1E 00 42 54 53 31                    // p{h...BTS1

                    Else
                    {

 26F6F: A1 0E                                            // ..

                        Store (Or (And (Arg0, 0x1E), One), BTS1)
                    }
                }
            }


 26F71: 70 7D 7B 68 0A 1E 00 01 00 42 54 53 31           // p}{h.....BTS1

            Method (BTNS, 0, Serialized)
            {

 26F7E: 14 1D 42 54 4E 53 08                             // ..BTNS.

                If (
 26F85: A0 07                                            // ..

LEqual (AEAB, One)){}
                Or (BTS1, One, BTS1)

 26F87: 93 41 45 41 42 01 7D 42 54 53 31 01 42 54 53 31  // .AEAB.}BTS1.BTS1

                Return (BTS1)
            }


 26F97: A4 42 54 53 31                                   // .BTS1

            Method (BTNC, 0, Serialized)
            {

 26F9C: 14 15 42 54 4E 43 08                             // ..BTNC.

                If (LEqual (AEAB, One))
                {

 26FA3: A0 0A 93 41 45 41 42 01                          // ...AEAB.

                    Return (0x1F)
                }

 26FAB: A4 0A 1F                                         // ...

                Else
                {

 26FAE: A1 03                                            // ..

                    Return (One)
                }
            }


 26FB0: A4 01                                            // ..

            Name (HEB2, Zero)

 26FB2: 08 48 45 42 32 00                                // .HEB2.

            Method (HEEC, 0, Serialized)
            {

 26FB8: 14 17 48 45 45 43 08                             // ..HEEC.

                If (LEqual (AHDB, One))
                {

 26FBF: A0 0C 93 41 48 44 42 01                          // ...AHDB.

                    Return (HEB2)
                }

 26FC7: A4 48 45 42 32                                   // .HEB2

                Else
                {

 26FCC: A1 03                                            // ..

                    Return (Zero)
                }
            }


 26FCE: A4 00                                            // ..

            Method (NRBT, 2, NotSerialized)
            {

 26FD0: 14 25 4E 52 42 54 02                             // .%NRBT.

                If (
 26FD7: A0 1E 92                                         // ...

LGreaterEqual (OIDE (), One))
                {

 26FDA: 95 4F 49 44 45 01                                // .OIDE.

                    If (LEqual (HRDY, One))
                    {
                        Store (0x08, HIDX)

 26FE0: A0 15 93 48 52 44 59 01 70 0A 08 48 49 44 58     // ...HRDY.p..HIDX

                        Notify (HIDD, 0xC0)
                    }
                }
            }


 26FEF: 86 48 49 44 44 0A C0                             // .HIDD..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

 26FF6: 14 42 11 5F 44 53 4D 0C                          // .B._DSM.


 26FFE: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
 27004: A0 4F 0F 93 68                                   // .O..h

ToUUID ("eeec56b3-4442-408f-a792-4edd4d758054")))
                {

 27009: 11 13 0A 10 B3 56 EC EE 42 44 8F 40 A7 92 4E DD  // .....V..BD.@..N.
 27019: 4D 75 80 54                                      // Mu.T

                    If (LEqual (One, 
 2701D: A0 46 0E 93 01                                   // .F...

ToInteger (Arg1)))
                    {

 27022: 99 69 00                                         // .i.

                        Switch (ToInteger (Arg2))
                        {

 27025: A2 4E 0D 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                            Case (Zero)
                            {

 27031: A0 0E 93 5F 54 5F 30 00                          // ..._T_0.

                                Return (
 27039: A4                                               // .

Buffer (0x02)
                                {
                                     0xFF, 0x03                                     
                                })
                            }

 2703A: 11 05 0A 02 FF 03                                // ......

                            Case
 27040: A1 42 0C                                         // .B.

 (One)
                            {
                                BTNL ()
                            }

 27043: A0 0B 93 5F 54 5F 30 01 42 54 4E 4C              // ..._T_0.BTNL

                            Case
 2704F: A1 43 0B                                         // .C.

 (0x02)
                            {

 27052: A0 0D 93 5F 54 5F 30 0A 02                       // ..._T_0..

                                Return (HDMM ())
                            }

 2705B: A4 48 44 4D 4D                                   // .HDMM

                            Case
 27060: A1 42 0A                                         // .B.

 (0x03)
                            {
                                HDSM (
 27063: A0 11 93 5F 54 5F 30 0A 03 48 44 53 4D           // ..._T_0..HDSM

DerefOf (
 27070: 83                                               // .

Index (Arg3, Zero)))
                            }

 27071: 88 6B 00 00                                      // .k..

                            Case
 27075: A1 4D 08                                         // .M.

 (0x04)
                            {

 27078: A0 0D 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                Return (HDEM ())
                            }

 27081: A4 48 44 45 4D                                   // .HDEM

                            Case
 27086: A1 4C 07                                         // .L.

 (0x05)
                            {

 27089: A0 0D 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                Return (BTNS ())
                            }

 27092: A4 42 54 4E 53                                   // .BTNS

                            Case
 27097: A1 4B 06                                         // .K.

 (0x06)
                            {
                                BTNE (
 2709A: A0 11 93 5F 54 5F 30 0A 06 42 54 4E 45           // ..._T_0..BTNE

DerefOf (
 270A7: 83                                               // .

Index (Arg3, Zero)))
                            }

 270A8: 88 6B 00 00                                      // .k..

                            Case
 270AC: A1 46 05                                         // .F.

 (0x07)
                            {
                                Store (0x0002AAA2, HEB1)

 270AF: A0 28 93 5F 54 5F 30 0A 07 70 0C A2 AA 02 00 48  // .(._T_0..p.....H
 270BF: 45 42 31                                         // EB1

                                If (LEqual (AHDB, One))
                                {

 270C2: A0 0D 93 41 48 44 42 01                          // ...AHDB.

                                    Return (0x00020002)
                                }

 270CA: A4 0C 02 00 02 00                                // ......

                                Else
                                {

 270D0: A1 07                                            // ..

                                    Return (0x00020000)
                                }
                            }

 270D2: A4 0C 00 00 02 00                                // ......

                            Case
 270D8: A1 2A                                            // .*

 (0x09)
                            {
                                Store (0x0004AAA2, HEB1)

 270DA: A0 28 93 5F 54 5F 30 0A 09 70 0C A2 AA 04 00 48  // .(._T_0..p.....H
 270EA: 45 42 31                                         // EB1

                                If (LEqual (AHDB, One))
                                {

 270ED: A0 0D 93 41 48 44 42 01                          // ...AHDB.

                                    Return (0x00040002)
                                }

 270F5: A4 0C 02 00 04 00                                // ......

                                Else
                                {

 270FB: A1 07                                            // ..

                                    Return (0x00020000)
                                }
                            }


 270FD: A4 0C 00 00 02 00                                // ......

                        }
                    }
                }


 27103: A5                                               // .

                Return (
 27104: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


 27105: 11 03 01 00                                      // ....

    Scope (_SB.PCI0.LPCB)
    {

 27109: 10 4D 10 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .M./._SB_PCI0LPC
 27119: 42                                               // B

        Name (P2KN, "DLLK0802")

 2711A: 08 50 32 4B 4E 0D 44 4C 4C 4B 30 38 30 32 00     // .P2KN.DLLK0802.

        Device (PS2K)
        {

 27129: 5B 82 4E 05 50 53 32 4B                          // [.N.PS2K

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

 27131: 14 0B 5F 48 49 44 00                             // .._HID.

                Return (P2KN)
            }


 27138: A4 50 32 4B 4E                                   // .P2KN

            Name (_CID, EisaId ("PNP0303"))  // _CID: Compatible ID

 2713D: 08 5F 43 49 44 0C 41 D0 03 03                    // ._CID.A...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 27147: 14 09 5F 53 54 41 00                             // .._STA.

                Return (0x0F)
            }


 2714E: A4 0A 0F                                         // ...

            Name (_CRS, 
 27151: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0060,             // Range Minimum
                    0x0060,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0064,             // Range Minimum
                    0x0064,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {1}
            })

 27156: 11 19 0A 16 47 01 60 00 60 00 00 01 47 01 64 00  // ....G.`.`...G.d.
 27166: 64 00 00 01 23 02 00 01 79 00                    // d...#...y.

            Name (_PRS, 
 27170: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                StartDependentFn (0x00, 0x00)
                {
                    FixedIO (
                        0x0060,             // Address
                        0x01,               // Length
                        )
                    FixedIO (
                        0x0064,             // Address
                        0x01,               // Length
                        )
                    IRQNoFlags ()
                        {1}
                }
                EndDependentFn ()
            })
        }


 27175: 11 13 0A 10 31 00 4B 60 00 01 4B 64 00 01 22 02  // ....1.K`..Kd..".
 27185: 00 38 79 00                                      // .8y.

        Name (P2MN, "DLL0802")

 27189: 08 50 32 4D 4E 0D 44 4C 4C 30 38 30 32 00        // .P2MN.DLL0802.

        Device (PS2M)
        {

 27197: 5B 82 4E 07 50 53 32 4D                          // [.N.PS2M

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

 2719F: 14 4D 04 5F 48 49 44 00                          // .M._HID.

                If (LEqual (IPFI, One))
                {

 271A7: A0 0D 93 49 50 46 49 01                          // ...IPFI.

                    Return (0xFA078C11)
                }

 271AF: A4 0C 11 8C 07 FA                                // ......

                ElseIf
 271B5: A1 32                                            // .2

 (LEqual (IPFI, 0x02))
                {

 271B7: A0 0E 93 49 50 46 49 0A 02                       // ...IPFI..

                    Return (0xFB078C11)
                }

 271C0: A4 0C 11 8C 07 FB                                // ......

                ElseIf
 271C6: A1 21                                            // .!

 (LEqual (IPFI, 0x03))
                {

 271C8: A0 0E 93 49 50 46 49 0A 03                       // ...IPFI..

                    Return (0x02088C11)
                }

 271D1: A4 0C 11 8C 08 02                                // ......

                ElseIf
 271D7: A1 10                                            // ..

 (LEqual (IPFI, 0x04))
                {

 271D9: A0 0E 93 49 50 46 49 0A 04                       // ...IPFI..

                    Return (0x03088C11)
                }


 271E2: A4 0C 11 8C 08 03                                // ......

                Return (P2MN)
            }


 271E8: A4 50 32 4D 4E                                   // .P2MN

            Name (_CID, EisaId ("PNP0F13"))  // _CID: Compatible ID

 271ED: 08 5F 43 49 44 0C 41 D0 0F 13                    // ._CID.A...

            Name (_CRS, 
 271F7: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {12}
            })

 271FC: 11 09 0A 06 23 00 10 01 79 00                    // ....#...y.

            Name (_PRS, 
 27206: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                StartDependentFn (0x00, 0x00)
                {
                    IRQNoFlags ()
                        {12}
                }
                EndDependentFn ()
            })
        }
    }


 2720B: 11 0B 0A 08 31 00 22 00 10 38 79 00              // ....1."..8y.

    Scope (_TZ)
    {

 27217: 10 44 04 5F 54 5A 5F                             // .D._TZ_

        ThermalZone (THM)
        {

 2721E: 5B 85 3C 54 48 4D 5F                             // [.<THM_

            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {
                Store (0x6B, Local0)
                Multiply (Local0, 0x0A, Local0)
                Add (Local0, 0x0AAC, Local0)

 27225: 14 17 5F 43 52 54 00 70 0A 6B 60 77 60 0A 0A 60  // .._CRT.p.k`w`..`
 27235: 72 60 0B AC 0A 60                                // r`...`

                Return (Local0)
            }


 2723B: A4 60                                            // .`

            Method (_TMP, 0, NotSerialized)  // _TMP: Temperature
            {
                Store (GENS (0x16, Zero, Zero), Local0)

 2723D: 14 1E 5F 54 4D 50 00 70 47 45 4E 53 0A 16 00 00  // .._TMP.pGENS....
 2724D: 60                                               // `

                If (LLess (Local0, 0x0BA6))
                {

 2724E: A0 0B 95 60 0B A6 0B                             // ...`...

                    Store (0x0BA6, Local0)
                }


 27255: 70 0B A6 0B 60                                   // p...`

                Return (Local0)
            }
        }
    }


 2725A: A4 60                                            // .`

    Scope (_SB)
    {
    }


 2725C: 10 05 5F 53 42 5F                                // .._SB_

    Scope (_SB)
    {

 27262: 10 0C 5F 53 42 5F                                // .._SB_

        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
        }
    }


 27268: 14 06 5F 49 4E 49 00                             // .._INI.

    Scope (_SB.PCI0)
    {

 2726F: 10 48 08 2E 5F 53 42 5F 50 43 49 30              // .H.._SB_PCI0

        Device (A_CC)
        {

 2727B: 5B 82 4B 07 41 5F 43 43                          // [.K.A_CC

            Name (_HID, "SMO8810")  // _HID: Hardware ID

 27283: 08 5F 48 49 44 0D 53 4D 4F 38 38 31 30 00        // ._HID.SMO8810.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

 27291: 14 1B 5F 53 54 41 00                             // .._STA.

                If (LOr (LEqual (IPFI, One), 
 27298: A0 11 91 93 49 50 46 49 01                       // ....IPFI.

LEqual (IPFI, 0x03)))
                {

 272A1: 93 49 50 46 49 0A 03                             // .IPFI..

                    Return (Zero)
                }


 272A8: A4 00                                            // ..

                Return (0x0F)
            }


 272AA: A4 0A 0F                                         // ...

            Name (_UID, One)  // _UID: Unique ID

 272AD: 08 5F 55 49 44 01                                // ._UID.

            Name (BUF2, 
 272B3: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, _Y39)
                {
                    0x00000000,
                }
            })

 272B8: 11 0E 0A 0B 89 06 00 03 01 00 00 00 00 79 00     // .............y.

            CreateDWordField (BUF2, \_SB.PCI0.A_CC._Y39._INT, INT1)  // _INT: Interrupts

 272C7: 8A 42 55 46 32 0A 05 49 4E 54 31                 // .BUF2..INT1

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

 272D2: 14 0D 5F 49 4E 49 00                             // .._INI.

                Store (0x43, INT1)
            }


 272D9: 70 0A 43 49 4E 54 31                             // p.CINT1

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

 272E0: 14 0B 5F 43 52 53 08                             // .._CRS.

                Return (BUF2)
            }


 272E7: A4 42 55 46 32                                   // .BUF2

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

 272EC: 14 0B 5F 53 52 53 09                             // .._SRS.

                Return (BUF2)
            }
        }
    }


 272F3: A4 42 55 46 32                                   // .BUF2

    Scope (_GPE)
    {
    }


 272F8: 10 05 5F 47 50 45                                // .._GPE

    Scope (_SB.PCI0)
    {

 272FE: 10 1D 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

        Method (UPRW, 0, NotSerialized)
        {
            Store (GENS (0x18, One, Zero), Local0)

 27309: 14 12 55 50 52 57 00 70 47 45 4E 53 0A 18 01 00  // ..UPRW.pGENS....
 27319: 60                                               // `

            Return (Local0)
        }
    }


 2731A: A4 60                                            // .`

    Scope (_SB.PCI0.XHC)
    {

 2731C: 10 3D 2F 03 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .=/._SB_PCI0XHC_

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {
            Store (UPRW (), Local0)

 2732C: 14 2D 5F 50 52 57 00 70 55 50 52 57 60           // .-_PRW.pUPRW`

            If (LEqual (Local0, 0x03))
            {

 27339: A0 0D 93 60 0A 03                                // ...`..

                Return (
 2733F: A4                                               // .

Package (0x02)
                {
                    0x6D, 
                    0x03
                })
            }


 27340: 12 06 02 0A 6D 0A 03                             // ....m..

            If (LEqual (Local0, One))
            {

 27347: A0 0B 93 60 01                                   // ...`.

                Return (
 2734C: A4                                               // .

Package (0x02)
                {
                    0x6D, 
                    One
                })
            }


 2734D: 12 05 02 0A 6D 01                                // ....m.

            Return (
 27353: A4                                               // .

Package (0x02)
            {
                0x6D, 
                Zero
            })
        }
    }


 27354: 12 05 02 0A 6D 00                                // ....m.

    Scope (_SB.PCI0.SAT0.PRT1)
    {
    }


 2735A: 10 13 2F 04 5F 53 42 5F 50 43 49 30 53 41 54 30  // ../._SB_PCI0SAT0
 2736A: 50 52 54 31                                      // PRT1

    Scope (_SB.PCI0.LPCB.ECDV)
    {

 2736E: 10 46 12 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // .F./._SB_PCI0LPC
 2737E: 42 45 43 44 56                                   // BECDV

        Method (CMFC, 4, Serialized)
        {

 27383: 14 41 11 43 4D 46 43 0C                          // .A.CMFC.


 2738B: 08 5F 54 5F 32 00                                // ._T_2.


 27391: 08 5F 54 5F 31 00                                // ._T_1.


 27397: 08 5F 54 5F 30 00                                // ._T_0.

            Name (RTVL, 
 2739D: 08 52 54 56 4C                                   // .RTVL

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

 273A2: 12 06 04 00 00 00 00                             // .......

            Switch (ToInteger (Arg0))
            {

 273A9: A2 46 0E 01 70 99 68 00 5F 54 5F 30              // .F..p.h._T_0

                Case (0xFE00)
                {

 273B5: A0 4C 0C 93 5F 54 5F 30 0B 00 FE                 // .L.._T_0...

                    Switch (ToInteger (Arg1))
                    {

 273C0: A2 41 0C 01 70 99 69 00 5F 54 5F 31              // .A..p.i._T_1

                        Case (One)
                        {

 273CC: A0 47 0A 93 5F 54 5F 31 01                       // .G.._T_1.

                            Switch (ToInteger (Arg2))
                            {

 273D5: A2 4E 09 01 70 99 6A 00 5F 54 5F 32              // .N..p.j._T_2

                                Case (Zero)
                                {

 273E1: A0 3E 93 5F 54 5F 32 00                          // .>._T_2.

                                    If (
 273E9: A0 12 92                                         // ...

LNotEqual (ToInteger (Arg3), Zero))
                                    {

 273EC: 93 99 6B 00 00                                   // ..k..

                                        Store (0x8300, 
 273F1: 70 0B 00 83                                      // p...

Index (RTVL, Zero))
                                    }

 273F5: 88 52 54 56 4C 00 00                             // .RTVL..

                                    Else
                                    {
                                        Store (Zero, 
 273FC: A1 23 70 00                                      // .#p.

Index (RTVL, Zero))
                                        Store (IDMN, 
 27400: 88 52 54 56 4C 00 00 70 49 44 4D 4E              // .RTVL..pIDMN

Index (RTVL, One))

 2740C: 88 52 54 56 4C 01 00                             // .RTVL..

                                        Store (IDPC, 
 27413: 70 49 44 50 43                                   // pIDPC

Index (RTVL, 0x02))
                                    }
                                }

 27418: 88 52 54 56 4C 0A 02 00                          // .RTVL...

                                Case
 27420: A1 42 05                                         // .B.

 (0x02)
                                {
                                    Store (Zero, 
 27423: A0 42 04 93 5F 54 5F 32 0A 02 70 00              // .B.._T_2..p.

Index (RTVL, Zero))
                                    Store (ShiftRight (DLPN, 0x08), 
 2742F: 88 52 54 56 4C 00 00 70 7A 44 4C 50 4E 0A 08 00  // .RTVL..pzDLPN...

Index (RTVL, One))
                                    Store (And (DLPN, 0xFF), 
 2743F: 88 52 54 56 4C 01 00 70 7B 44 4C 50 4E 0A FF 00  // .RTVL..p{DLPN...

Index (RTVL, 0x02))
                                    Store (Zero, 
 2744F: 88 52 54 56 4C 0A 02 00 70 00                    // .RTVL...p.

Index (RTVL, 0x03))

 27459: 88 52 54 56 4C 0A 03 00                          // .RTVL...

                                    Return (RTVL)
                                }

 27461: A4 52 54 56 4C                                   // .RTVL

                                Default
                                {

 27466: A1 0C                                            // ..

                                    Store (0x8300, 
 27468: 70 0B 00 83                                      // p...

Index (RTVL, Zero))
                                }


 2746C: 88 52 54 56 4C 00 00                             // .RTVL..

                            }
                        }

 27473: A5                                               // .

                        Default
                        {

 27474: A1 0C                                            // ..

                            Store (0x8000, 
 27476: 70 0B 00 80                                      // p...

Index (RTVL, Zero))
                        }


 2747A: 88 52 54 56 4C 00 00                             // .RTVL..

                    }
                }

 27481: A5                                               // .

                Default
                {

 27482: A1 0C                                            // ..

                    Store (0x8000, 
 27484: 70 0B 00 80                                      // p...

Index (RTVL, Zero))
                }


 27488: 88 52 54 56 4C 00 00                             // .RTVL..

            }


 2748F: A5                                               // .

            Return (RTVL)
        }
    }


 27490: A4 52 54 56 4C                                   // .RTVL

    Scope (_SB.PCI0.LPCB.ECDV)
    {
    }


 27495: 10 13 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43 42  // ../._SB_PCI0LPCB
 274A5: 45 43 44 56                                      // ECDV

    Scope (_SB)
    {

 274A9: 10 0C 5F 53 42 5F                                // .._SB_

        Method (OSJG, 2, NotSerialized)
        {
        }
    }


 274AF: 14 06 4F 53 4A 47 02                             // ..OSJG.

    Method (PTS, 1, NotSerialized)
    {
    }


 274B6: 14 06 50 54 53 5F 01                             // ..PTS_.

    Method (WAK, 1, NotSerialized)
    {
        GENS (0x1A, One, Zero)
    }


 274BD: 14 0E 57 41 4B 5F 01 47 45 4E 53 0A 1A 01 00     // ..WAK_.GENS....

    Scope (_SB.PCI0.LPCB.ECDV)
    {

 274CC: 10 45 09 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // .E./._SB_PCI0LPC
 274DC: 42 45 43 44 56                                   // BECDV

        Method (DPNT, 0, NotSerialized)
        {

 274E1: 14 40 08 44 50 4E 54 00                          // .@.DPNT.

            If (LEqual (DPRT (), One))
            {
                Store (DSRQ (), Local0)

 274E9: A0 48 07 93 44 50 52 54 01 70 44 53 52 51 60     // .H..DPRT.pDSRQ`

                While (Local0)
                {
                    DSSQ (0xFF)

 274F8: A2 49 06 60 44 53 53 51 0A FF                    // .I.`DSSQ..

                    If (
 27502: A0 06                                            // ..

And (Local0, 0x80, Local1)){}

 27504: 7B 60 0A 80 61                                   // {`..a

                    If (
 27509: A0 06                                            // ..

And (Local0, 0x40, Local1)){}

 2750B: 7B 60 0A 40 61                                   // {`.@a

                    If (
 27510: A0 06                                            // ..

And (Local0, 0x20, Local1)){}

 27512: 7B 60 0A 20 61                                   // {`. a

                    If (And (Local0, 0x10, Local1))
                    {

 27517: A0 0D 7B 60 0A 10 61                             // ..{`..a

                        Notify (SEN3, 0x90)
                    }


 2751E: 86 53 45 4E 33 0A 90                             // .SEN3..

                    If (And (Local0, 0x08, Local1))
                    {

 27525: A0 0D 7B 60 0A 08 61                             // ..{`..a

                        Notify (SEN2, 0x90)
                    }


 2752C: 86 53 45 4E 32 0A 90                             // .SEN2..

                    If (And (Local0, 0x04, Local1))
                    {

 27533: A0 0D 7B 60 0A 04 61                             // ..{`..a

                        Notify (TMEM, 0x90)
                    }


 2753A: 86 54 4D 45 4D 0A 90                             // .TMEM..

                    If (And (Local0, 0x02, Local1))
                    {

 27541: A0 0D 7B 60 0A 02 61                             // ..{`..a

                        Notify (SEN1, 0x90)
                    }


 27548: 86 53 45 4E 31 0A 90                             // .SEN1..

                    If (And (Local0, One, Local1))
                    {

 2754F: A0 0C 7B 60 01 61                                // ..{`.a

                        Notify (B0D4, 0x90)
                    }


 27555: 86 42 30 44 34 0A 90                             // .B0D4..

                    Store (DSRQ (), Local0)
                }
            }
        }
    }


 2755C: 70 44 53 52 51 60                                // pDSRQ`

    Method (EV11, 2, NotSerialized)
    {
        \_SB.HIDD.NRBT (Arg0, Arg1)
    }


 27562: 14 17 45 56 31 31 02 5C 2F 03 5F 53 42 5F 48 49  // ..EV11.\/._SB_HI
 27572: 44 44 4E 52 42 54 68 69                          // DDNRBThi

    Method (EV16, 2, NotSerialized)
    {
    }


 2757A: 14 06 45 56 31 36 02                             // ..EV16.

    Method (EV9, 2, NotSerialized)
    {
        \_SB.PCI0.PEG0.PEGP.EVD2 (Arg0, Arg1)
    }


 27581: 14 1F 45 56 39 5F 02 5C 2F 05 5F 53 42 5F 50 43  // ..EV9_.\/._SB_PC
 27591: 49 30 50 45 47 30 50 45 47 50 45 56 44 32 68 69  // I0PEG0PEGPEVD2hi

    Method (EV5, 2, NotSerialized)
    {
        \_SB.PCI0.GFX0.BRT6 (Arg0, Arg1)
    }


 275A1: 14 1B 45 56 35 5F 02 5C 2F 04 5F 53 42 5F 50 43  // ..EV5_.\/._SB_PC
 275B1: 49 30 47 46 58 30 42 52 54 36 68 69              // I0GFX0BRT6hi

    Method (EV8, 2, NotSerialized)
    {
        \_SB.PCI0.GFX0.IVD2 (Arg0, Arg1)
    }


 275BD: 14 1B 45 56 38 5F 02 5C 2F 04 5F 53 42 5F 50 43  // ..EV8_.\/._SB_PC
 275CD: 49 30 47 46 58 30 49 56 44 32 68 69              // I0GFX0IVD2hi

    Method (EV7, 2, NotSerialized)
    {
        \_SB.PCI0.GFX0.IVD1 (Arg0, Arg1)
    }


 275D9: 14 1B 45 56 37 5F 02 5C 2F 04 5F 53 42 5F 50 43  // ..EV7_.\/._SB_PC
 275E9: 49 30 47 46 58 30 49 56 44 31 68 69              // I0GFX0IVD1hi

    Method (EV4, 2, NotSerialized)
    {
        WMNF (Arg0, Arg1)
    }


 275F5: 14 0C 45 56 34 5F 02 57 4D 4E 46 68 69           // ..EV4_.WMNFhi

    Method (EV3, 2, NotSerialized)
    {
        \_SB.OSJG (Arg0, Arg1)
        \_SB.PCI0.GFX0.DINI (Arg0, Arg1)
        \_SB.PCI0.GFX0.VINI (Arg0, Arg1)
        \_SB.PCI0.LPCB.EINI (Arg0, Arg1)
        \_SB.PCI0.PEG0.PEGP.VINI (Arg0, Arg1)
        \_SB.SOS0 (Arg0, Arg1)
    }


 27602: 14 47 07 45 56 33 5F 02 5C 2E 5F 53 42 5F 4F 53  // .G.EV3_.\._SB_OS
 27612: 4A 47 68 69 5C 2F 04 5F 53 42 5F 50 43 49 30 47  // JGhi\/._SB_PCI0G
 27622: 46 58 30 44 49 4E 49 68 69 5C 2F 04 5F 53 42 5F  // FX0DINIhi\/._SB_
 27632: 50 43 49 30 47 46 58 30 56 49 4E 49 68 69 5C 2F  // PCI0GFX0VINIhi\/
 27642: 04 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 49 4E  // ._SB_PCI0LPCBEIN
 27652: 49 68 69 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45  // Ihi\/._SB_PCI0PE
 27662: 47 30 50 45 47 50 56 49 4E 49 68 69 5C 2E 5F 53  // G0PEGPVINIhi\._S
 27672: 42 5F 53 4F 53 30 68 69                          // B_SOS0hi

    Method (EV10, 2, NotSerialized)
    {
        \_PR.PPCE (Arg0, Arg1)
    }


 2767A: 14 12 45 56 31 30 02 5C 2E 5F 50 52 5F 50 50 43  // ..EV10.\._PR_PPC
 2768A: 45 68 69                                         // Ehi

    Method (EV15, 2, NotSerialized)
    {
        \_SB.BTEV (Arg0, Arg1)
    }


 2768D: 14 12 45 56 31 35 02 5C 2E 5F 53 42 5F 42 54 45  // ..EV15.\._SB_BTE
 2769D: 56 68 69                                         // Vhi

    Method (EV1, 2, NotSerialized)
    {
        ECS1 (Arg0, Arg1)
        \_SB.PCI0.GFX0.IVD4 (Arg0, Arg1)
        \_SB.PCI0.PEG0.PEGP.EVD7 (Arg0, Arg1)
    }


 276A0: 14 3A 45 56 31 5F 02 45 43 53 31 68 69 5C 2F 04  // .:EV1_.ECS1hi\/.
 276B0: 5F 53 42 5F 50 43 49 30 47 46 58 30 49 56 44 34  // _SB_PCI0GFX0IVD4
 276C0: 68 69 5C 2F 05 5F 53 42 5F 50 43 49 30 50 45 47  // hi\/._SB_PCI0PEG
 276D0: 30 50 45 47 50 45 56 44 37 68 69                 // 0PEGPEVD7hi

    Method (EV12, 2, NotSerialized)
    {
    }


 276DB: 14 06 45 56 31 32 02                             // ..EV12.

    Method (EV13, 2, NotSerialized)
    {
    }


 276E2: 14 06 45 56 31 33 02                             // ..EV13.

    Method (EV6, 2, NotSerialized)
    {
        \_SB.BTNV (Arg0, Arg1)
        \_SB.PCI0.GFX0.ILDE (Arg0, Arg1)
    }


 276E9: 14 27 45 56 36 5F 02 5C 2E 5F 53 42 5F 42 54 4E  // .'EV6_.\._SB_BTN
 276F9: 56 68 69 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // Vhi\/._SB_PCI0GF
 27709: 58 30 49 4C 44 45 68 69                          // X0ILDEhi

    Method (EV14, 2, NotSerialized)
    {
        \_SB.ACEV (Arg0, Arg1)
    }


 27711: 14 12 45 56 31 34 02 5C 2E 5F 53 42 5F 41 43 45  // ..EV14.\._SB_ACE
 27721: 56 68 69                                         // Vhi

    Method (EV2, 2, NotSerialized)
    {
        \_SB.CBAT (Arg0, Arg1)
        \_SB.HIDD.NRBT (Arg0, Arg1)
        \_SB.OSJG (Arg0, Arg1)
        \_SB.PCI0.GFX0.IVD3 (Arg0, Arg1)
        \_SB.PCI0.LPCB.ECDV.ECM9 (Arg0, Arg1)
        \_SB.SOS4 (Arg0, Arg1)
    }
}



Table Header:
Table Body (Length 0x2778F)
